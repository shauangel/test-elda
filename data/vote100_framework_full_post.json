[{"link": "https://stackoverflow.com/questions/713847/recommendations-of-python-rest-web-services-framework", "question": {"id": "713847", "title": "Recommendations of Python REST (web services) framework?", "content": "<p>Is there a list somewhere of recommendations of different Python-based REST frameworks for use on the serverside to write your own RESTful APIs? Preferably with pros and cons.</p>\n<p>Please feel free to add recommendations here. :)</p>\n", "abstract": "Is there a list somewhere of recommendations of different Python-based REST frameworks for use on the serverside to write your own RESTful APIs? Preferably with pros and cons. Please feel free to add recommendations here. :)"}, "answers": [{"id": 920181, "score": 192, "vote": 0, "content": "<p>Something to be careful about when designing a RESTful API is the conflation of GET and POST, as if they were the same thing. It's easy to make this mistake with <a href=\"http://www.djangoproject.com/\" rel=\"noreferrer\">Django</a>'s <a href=\"https://docs.djangoproject.com/en/dev/topics/http/views/\" rel=\"noreferrer\">function-based views</a> and <a href=\"http://www.cherrypy.org/\" rel=\"noreferrer\">CherryPy</a>'s default dispatcher, although both frameworks now provide a way around this problem (<a href=\"https://docs.djangoproject.com/en/dev/topics/class-based-views/\" rel=\"noreferrer\">class-based views</a> and <a href=\"http://docs.cherrypy.org/dev/refman/_cpdispatch.html#cherrypy._cpdispatch.MethodDispatcher\" rel=\"noreferrer\">MethodDispatcher</a>, respectively).</p>\n<p><a href=\"http://en.wikipedia.org/wiki/Representational_State_Transfer#RESTful_web_services\" rel=\"noreferrer\">HTTP-verbs are very important</a> in REST, and unless you're very careful about this, you'll end up falling into a <a href=\"http://www.infoq.com/articles/rest-anti-patterns\" rel=\"noreferrer\">REST anti-pattern</a>.</p>\n<p>Some frameworks that get it right are <a href=\"http://webpy.org/\" rel=\"noreferrer\">web.py</a>, <a href=\"http://flask.pocoo.org\" rel=\"noreferrer\">Flask</a> and <a href=\"http://bottlepy.org\" rel=\"noreferrer\">Bottle</a>. When combined with the <a href=\"https://github.com/martinblech/mimerender\" rel=\"noreferrer\">mimerender</a> library (full disclosure: I wrote it), they allow you to write nice RESTful webservices:</p>\n<pre><code class=\"python\">import web\nimport json\nfrom mimerender import mimerender\n\nrender_xml = lambda message: '&lt;message&gt;%s&lt;/message&gt;'%message\nrender_json = lambda **args: json.dumps(args)\nrender_html = lambda message: '&lt;html&gt;&lt;body&gt;%s&lt;/body&gt;&lt;/html&gt;'%message\nrender_txt = lambda message: message\n\nurls = (\n    '/(.*)', 'greet'\n)\napp = web.application(urls, globals())\n\nclass greet:\n    @mimerender(\n        default = 'html',\n        html = render_html,\n        xml  = render_xml,\n        json = render_json,\n        txt  = render_txt\n    )\n    def GET(self, name):\n        if not name: \n            name = 'world'\n        return {'message': 'Hello, ' + name + '!'}\n\nif __name__ == \"__main__\":\n    app.run()\n</code></pre>\n<p>The service's logic is implemented only once, and the correct representation selection (Accept header) + dispatch to the proper render function (or template) is done in a tidy, transparent way.</p>\n<pre><code class=\"python\">$ curl localhost:8080/x\n&lt;html&gt;&lt;body&gt;Hello, x!&lt;/body&gt;&lt;/html&gt;\n\n$ curl -H \"Accept: application/html\" localhost:8080/x\n&lt;html&gt;&lt;body&gt;Hello, x!&lt;/body&gt;&lt;/html&gt;\n\n$ curl -H \"Accept: application/xml\" localhost:8080/x\n&lt;message&gt;Hello, x!&lt;/message&gt;\n\n$ curl -H \"Accept: application/json\" localhost:8080/x\n{'message':'Hello, x!'}\n\n$ curl -H \"Accept: text/plain\" localhost:8080/x\nHello, x!\n</code></pre>\n<p><strong>Update (April 2012)</strong>: added information about Django's class-based views, CherryPy's MethodDispatcher and Flask and Bottle frameworks. Neither existed back when the question was asked.</p>\n", "abstract": "Something to be careful about when designing a RESTful API is the conflation of GET and POST, as if they were the same thing. It's easy to make this mistake with Django's function-based views and CherryPy's default dispatcher, although both frameworks now provide a way around this problem (class-based views and MethodDispatcher, respectively). HTTP-verbs are very important in REST, and unless you're very careful about this, you'll end up falling into a REST anti-pattern. Some frameworks that get it right are web.py, Flask and Bottle. When combined with the mimerender library (full disclosure: I wrote it), they allow you to write nice RESTful webservices: The service's logic is implemented only once, and the correct representation selection (Accept header) + dispatch to the proper render function (or template) is done in a tidy, transparent way. Update (April 2012): added information about Django's class-based views, CherryPy's MethodDispatcher and Flask and Bottle frameworks. Neither existed back when the question was asked."}, {"id": 4632784, "score": 70, "vote": 0, "content": "<p>Surprised no one mentioned <a href=\"http://flask.pocoo.org/\" rel=\"noreferrer\">flask</a>.</p>\n<pre><code class=\"python\">from flask import Flask\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello World!\"\n\nif __name__ == \"__main__\":\n    app.run()\n</code></pre>\n", "abstract": "Surprised no one mentioned flask."}, {"id": 713911, "score": 23, "vote": 0, "content": "<p>We're using <a href=\"http://www.djangoproject.com/\" rel=\"noreferrer\">Django</a> for RESTful web services.</p>\n<p>Note that -- out of the box -- Django did not have fine-grained enough authentication for our needs.  We used the <a href=\"http://code.google.com/p/django-rest-interface/\" rel=\"noreferrer\">Django-REST interface</a>, which helped a lot.  [We've since rolled our own because we'd made so many extensions that it had become a maintenance nightmare.]</p>\n<p>We have two kinds of URL's: \"html\" URL's which implement the human-oriented HTML pages, and \"json\" URL's which implement the web-services oriented processing.  Our view functions often look like this.</p>\n<pre><code class=\"python\">def someUsefulThing( request, object_id ):\n    # do some processing\n    return { a dictionary with results }\n\ndef htmlView( request, object_id ):\n    d = someUsefulThing( request, object_id )\n    render_to_response( 'template.html', d, ... )\n\ndef jsonView( request, object_id ):\n    d = someUsefulThing( request, object_id )\n    data = serializers.serialize( 'json', d['object'], fields=EXPOSED_FIELDS )\n    response = HttpResponse( data, status=200, content_type='application/json' )\n    response['Location']= reverse( 'some.path.to.this.view', kwargs={...} )\n    return response\n</code></pre>\n<p>The point being that the useful functionality is factored out of the two presentations.  The JSON presentation is usually just one object that was requested.  The HTML presentation often includes all kinds of navigation aids and other contextual clues that help people be productive.</p>\n<p>The <code>jsonView</code> functions are all very similar, which can be a bit annoying.  But it's Python, so make them part of a callable class or write decorators if it helps.</p>\n", "abstract": "We're using Django for RESTful web services. Note that -- out of the box -- Django did not have fine-grained enough authentication for our needs.  We used the Django-REST interface, which helped a lot.  [We've since rolled our own because we'd made so many extensions that it had become a maintenance nightmare.] We have two kinds of URL's: \"html\" URL's which implement the human-oriented HTML pages, and \"json\" URL's which implement the web-services oriented processing.  Our view functions often look like this. The point being that the useful functionality is factored out of the two presentations.  The JSON presentation is usually just one object that was requested.  The HTML presentation often includes all kinds of navigation aids and other contextual clues that help people be productive. The jsonView functions are all very similar, which can be a bit annoying.  But it's Python, so make them part of a callable class or write decorators if it helps."}, {"id": 713892, "score": 11, "vote": 0, "content": "<p>See <a href=\"http://wiki.python.org/moin/WebFrameworks\" rel=\"noreferrer\">Python Web Frameworks</a> wiki.</p>\n<p>You probably do not need the <em>full stack</em> frameworks, but the remaining list is still quite long.</p>\n", "abstract": "See Python Web Frameworks wiki. You probably do not need the full stack frameworks, but the remaining list is still quite long."}, {"id": 713950, "score": 8, "vote": 0, "content": "<p>I really like <a href=\"http://cherrypy.org/\" rel=\"noreferrer\">CherryPy</a>.  Here's an example of a restful web service:</p>\n<pre><code class=\"python\">import cherrypy\nfrom cherrypy import expose\n\nclass Converter:\n    @expose\n    def index(self):\n        return \"Hello World!\"\n\n    @expose\n    def fahr_to_celc(self, degrees):\n        temp = (float(degrees) - 32) * 5 / 9\n        return \"%.01f\" % temp\n\n    @expose\n    def celc_to_fahr(self, degrees):\n        temp = float(degrees) * 9 / 5 + 32\n        return \"%.01f\" % temp\n\ncherrypy.quickstart(Converter())\n</code></pre>\n<p>This emphasizes what I really like about CherryPy; this is a completely working example that's very understandable even to someone who doesn't know the framework.  If you run this code, then you can immediately see the results in your web browser; e.g. visiting <a href=\"http://localhost:8080/celc_to_fahr?degrees=50\" rel=\"noreferrer\">http://localhost:8080/celc_to_fahr?degrees=50</a> will display <code>122.0</code> in your web browser.</p>\n", "abstract": "I really like CherryPy.  Here's an example of a restful web service: This emphasizes what I really like about CherryPy; this is a completely working example that's very understandable even to someone who doesn't know the framework.  If you run this code, then you can immediately see the results in your web browser; e.g. visiting http://localhost:8080/celc_to_fahr?degrees=50 will display 122.0 in your web browser."}, {"id": 1257920, "score": 8, "vote": 0, "content": "<p>Take a look at</p>\n<ul>\n<li><a href=\"http://github.com/toastdriven/itty/tree\" rel=\"noreferrer\" title=\"Itty\">Itty</a> (<a href=\"http://www.toastdriven.com/fresh/itty-sinatra-inspired-micro-framework/\" rel=\"noreferrer\">blog post</a>)</li>\n<li><a href=\"http://github.com/defnull/bottle/tree\" rel=\"noreferrer\" title=\"Bottle\">Bottle</a></li>\n<li><a href=\"http://webpy.org/\" rel=\"noreferrer\">web.py</a></li>\n<li><a href=\"http://brianreily.com/project/juno/\" rel=\"noreferrer\">juno</a></li>\n</ul>\n", "abstract": "Take a look at"}, {"id": 6897383, "score": 8, "vote": 0, "content": "<p>I don't see any reason to use Django just to expose a REST api, there are lighter and more flexible solutions. Django carries a lot of other things to the table, that are not always needed. For sure not needed if you only want to expose some code as a REST service. </p>\n<p>My personal experience, fwiw, is that once you have a one-size-fits-all framework, you'll start to use its ORM, its plugins, etc. just because it's easy, and in no time you end up having a dependency that is very hard to get rid of.</p>\n<p>Choosing a web framework is a tough decision, and I would avoid picking a full stack solution just to expose a REST api. </p>\n<p>Now, if you really need/want to use Django, then Piston is a nice REST framework for django apps.</p>\n<p>That being said, CherryPy looks really nice too, but seems more RPC than REST.</p>\n<p>Looking at the samples (I never used it), probably web.py is the best and cleanest if you only need REST.</p>\n", "abstract": "I don't see any reason to use Django just to expose a REST api, there are lighter and more flexible solutions. Django carries a lot of other things to the table, that are not always needed. For sure not needed if you only want to expose some code as a REST service.  My personal experience, fwiw, is that once you have a one-size-fits-all framework, you'll start to use its ORM, its plugins, etc. just because it's easy, and in no time you end up having a dependency that is very hard to get rid of. Choosing a web framework is a tough decision, and I would avoid picking a full stack solution just to expose a REST api.  Now, if you really need/want to use Django, then Piston is a nice REST framework for django apps. That being said, CherryPy looks really nice too, but seems more RPC than REST. Looking at the samples (I never used it), probably web.py is the best and cleanest if you only need REST."}, {"id": 3862753, "score": 6, "vote": 0, "content": "<p>Here is a discussion in CherryPy docs on REST: <a href=\"http://docs.cherrypy.org/dev/progguide/REST.html\" rel=\"noreferrer\">http://docs.cherrypy.org/dev/progguide/REST.html</a></p>\n<p>In particular it mentions a built in CherryPy dispatcher called MethodDispatcher, which invokes methods based on their HTTP-verb identifiers (GET, POST, etc...).</p>\n", "abstract": "Here is a discussion in CherryPy docs on REST: http://docs.cherrypy.org/dev/progguide/REST.html In particular it mentions a built in CherryPy dispatcher called MethodDispatcher, which invokes methods based on their HTTP-verb identifiers (GET, POST, etc...)."}, {"id": 5461908, "score": 6, "vote": 0, "content": "<p>In 2010, the Pylons and repoze.bfg communities \"joined forces\" to create <a href=\"http://pylonsproject.org/\" rel=\"noreferrer\">Pyramid</a>, a web framework based most heavily on repoze.bfg. It retains the philosophies of its parent frameworks, and can be used for <a href=\"http://zhuoqiang.me/a/restful-pyramid\" rel=\"noreferrer\">RESTful services</a>.  It's worth a look.</p>\n", "abstract": "In 2010, the Pylons and repoze.bfg communities \"joined forces\" to create Pyramid, a web framework based most heavily on repoze.bfg. It retains the philosophies of its parent frameworks, and can be used for RESTful services.  It's worth a look."}, {"id": 4354998, "score": 5, "vote": 0, "content": "<p><a href=\"http://bitbucket.org/jespern/django-piston/wiki/Home\" rel=\"noreferrer\">Piston</a> is very flexible framework for wirting RESTful APIs for Django applications.</p>\n", "abstract": "Piston is very flexible framework for wirting RESTful APIs for Django applications."}, {"id": 9444396, "score": 5, "vote": 0, "content": "<p>Seems all kinds of python web frameworks can implement RESTful interfaces now.</p>\n<p>For Django, besides tastypie and piston, django-rest-framework is a promising one worth to mention. I've already migrated one of my project on it smoothly.</p>\n<blockquote>\n<p>Django REST framework is a lightweight REST framework for Django, that\n  aims to make it easy to build well-connected, self-describing RESTful\n  Web APIs.</p>\n</blockquote>\n<p>Quick example:</p>\n<pre><code class=\"python\">from django.conf.urls.defaults import patterns, url\nfrom djangorestframework.resources import ModelResource\nfrom djangorestframework.views import ListOrCreateModelView, InstanceModelView\nfrom myapp.models import MyModel\n\nclass MyResource(ModelResource):\n    model = MyModel\n\nurlpatterns = patterns('',\n    url(r'^$', ListOrCreateModelView.as_view(resource=MyResource)),\n    url(r'^(?P&lt;pk&gt;[^/]+)/$', InstanceModelView.as_view(resource=MyResource)),\n)\n</code></pre>\n<p>Take the example from official site, all above codes provide api, self explained document(like soap based webservice) and even sandbox to test a bit. Very convenience.</p>\n<p>Links:\n<a href=\"http://django-rest-framework.org/\" rel=\"nofollow\">http://django-rest-framework.org/</a> </p>\n", "abstract": "Seems all kinds of python web frameworks can implement RESTful interfaces now. For Django, besides tastypie and piston, django-rest-framework is a promising one worth to mention. I've already migrated one of my project on it smoothly. Django REST framework is a lightweight REST framework for Django, that\n  aims to make it easy to build well-connected, self-describing RESTful\n  Web APIs. Quick example: Take the example from official site, all above codes provide api, self explained document(like soap based webservice) and even sandbox to test a bit. Very convenience. Links:\nhttp://django-rest-framework.org/ "}, {"id": 713858, "score": 3, "vote": 0, "content": "<p>I am not an expert on the python world but I have been using <a href=\"http://www.djangoproject.com/\" rel=\"nofollow noreferrer\">django</a> which is an excellent web framework and can be used to create a restful framework.</p>\n", "abstract": "I am not an expert on the python world but I have been using django which is an excellent web framework and can be used to create a restful framework."}, {"id": 5460433, "score": 3, "vote": 0, "content": "<p><a href=\"http://www.web2py.com\" rel=\"nofollow\">web2py</a> includes support for easily building RESTful API's, described <a href=\"http://web2py.com/books/default/chapter/29/10#Restful-Web-Services\" rel=\"nofollow\">here</a> and <a href=\"http://vimeo.com/21133657\" rel=\"nofollow\">here</a> (video). In particular, look at <a href=\"http://web2py.com/books/default/chapter/29/10#parse_as_rest-%28experimental%29\" rel=\"nofollow\"><code>parse_as_rest</code></a>, which lets you define URL patterns that map request args to database queries; and <a href=\"http://web2py.com/books/default/chapter/29/10#smart_query-%28experimental%29\" rel=\"nofollow\"><code>smart_query</code></a>, which enables you to pass arbitrary natural language queries in the URL.</p>\n", "abstract": "web2py includes support for easily building RESTful API's, described here and here (video). In particular, look at parse_as_rest, which lets you define URL patterns that map request args to database queries; and smart_query, which enables you to pass arbitrary natural language queries in the URL."}, {"id": 9224424, "score": 2, "vote": 0, "content": "<p>I you are using Django then you can consider <a href=\"https://github.com/toastdriven/django-tastypie\" rel=\"nofollow\">django-tastypie</a> as an alternative to <a href=\"https://bitbucket.org/jespern/django-piston/wiki/Home\" rel=\"nofollow\">django-piston</a>. It is easier to tune to non-ORM data sources than piston, and has great <a href=\"http://tastypieapi.org/\" rel=\"nofollow\">documentation</a>.</p>\n", "abstract": "I you are using Django then you can consider django-tastypie as an alternative to django-piston. It is easier to tune to non-ORM data sources than piston, and has great documentation."}, {"id": 1722910, "score": 0, "vote": 0, "content": "<p>I strongly recommend TurboGears or Bottle:</p>\n<p>TurboGears:</p>\n<ul>\n<li>less verbose than django</li>\n<li>more flexible, less HTML-oriented </li>\n<li>but: less famous</li>\n</ul>\n<p>Bottle:</p>\n<ul>\n<li>very fast</li>\n<li>very easy to learn</li>\n<li>but: minimalistic and not mature</li>\n</ul>\n", "abstract": "I strongly recommend TurboGears or Bottle: TurboGears: Bottle:"}, {"id": 8220601, "score": 0, "vote": 0, "content": "<p>We are working on a framework for strict REST services, check out <a href=\"http://prestans.googlecode.com\" rel=\"nofollow\">http://prestans.googlecode.com</a> </p>\n<p>Its in early Alpha at the moment, we are testing against mod_wsgi and Google's AppEngine.</p>\n<p>Looking for testers and feedback. Thanks.</p>\n", "abstract": "We are working on a framework for strict REST services, check out http://prestans.googlecode.com  Its in early Alpha at the moment, we are testing against mod_wsgi and Google's AppEngine. Looking for testers and feedback. Thanks."}]}, {"link": "https://stackoverflow.com/questions/31678827/what-is-a-pythonic-way-for-dependency-injection", "question": {"id": "31678827", "title": "What is a Pythonic way for Dependency Injection?", "content": "<h1>Introduction</h1>\n<p>For Java, Dependency Injection works as pure OOP, i.e. you provide an interface to be implemented and in your framework code accept an instance of a class that implements the defined interface.</p>\n<p>Now for Python, you are able to do the same way, but I think that method was too much overhead right in case of Python. So then how would you implement it in the Pythonic way?</p>\n<h1>Use Case</h1>\n<p>Say this is the framework code:</p>\n<pre><code class=\"python\">class FrameworkClass():\n    def __init__(self, ...):\n        ...\n\n    def do_the_job(self, ...):\n        # some stuff\n        # depending on some external function\n</code></pre>\n<h1>The Basic Approach</h1>\n<p>The most naive (and maybe the best?) way is to require the external function to be supplied into the <code>FrameworkClass</code> constructor, and then be invoked from the <code>do_the_job</code> method.</p>\n<p><strong><em>Framework Code:</em></strong></p>\n<pre><code class=\"python\">class FrameworkClass():\n    def __init__(self, func):\n        self.func = func\n\n    def do_the_job(self, ...):\n        # some stuff\n        self.func(...)\n</code></pre>\n<p><strong><em>Client Code:</em></strong></p>\n<pre><code class=\"python\">def my_func():\n    # my implementation\n\nframework_instance = FrameworkClass(my_func)\nframework_instance.do_the_job(...)\n</code></pre>\n<h1>Question</h1>\n<p>The question is short. Is there any better commonly used Pythonic way to do this? Or maybe any libraries supporting such functionality?</p>\n<h1>UPDATE: Concrete Situation</h1>\n<p>Imagine I develop a micro web framework, which handles authentication using tokens. This framework needs a function to supply some <code>ID</code> obtained from the token and get the user corresponding to that <code>ID</code>.</p>\n<p>Obviously, the framework does not know anything about users or any other application specific logic, so the client code must inject the user getter functionality into the framework to make the authentication work.</p>\n", "abstract": "For Java, Dependency Injection works as pure OOP, i.e. you provide an interface to be implemented and in your framework code accept an instance of a class that implements the defined interface. Now for Python, you are able to do the same way, but I think that method was too much overhead right in case of Python. So then how would you implement it in the Pythonic way? Say this is the framework code: The most naive (and maybe the best?) way is to require the external function to be supplied into the FrameworkClass constructor, and then be invoked from the do_the_job method. Framework Code: Client Code: The question is short. Is there any better commonly used Pythonic way to do this? Or maybe any libraries supporting such functionality? Imagine I develop a micro web framework, which handles authentication using tokens. This framework needs a function to supply some ID obtained from the token and get the user corresponding to that ID. Obviously, the framework does not know anything about users or any other application specific logic, so the client code must inject the user getter functionality into the framework to make the authentication work."}, "answers": [{"id": 31909086, "score": 78, "vote": 0, "content": "<p>See <a href=\"https://www.youtube.com/watch?v=EiOglTERPEo\">Raymond Hettinger - Super considered super! - PyCon 2015</a> for an argument about how to use super and multiple inheritance instead of DI. If you don't have time to watch the whole video, jump to minute 15 (but I'd recommend watching all of it). </p>\n<p>Here is an example of how to apply what's described in this video to your example:</p>\n<p><strong><em>Framework Code:</em></strong></p>\n<pre><code class=\"python\">class TokenInterface():\n    def getUserFromToken(self, token):\n        raise NotImplementedError\n\nclass FrameworkClass(TokenInterface):\n    def do_the_job(self, ...):\n        # some stuff\n        self.user = super().getUserFromToken(...)\n</code></pre>\n<p><strong><em>Client Code:</em></strong></p>\n<pre><code class=\"python\">class SQLUserFromToken(TokenInterface):\n    def getUserFromToken(self, token):      \n        # load the user from the database\n        return user\n\nclass ClientFrameworkClass(FrameworkClass, SQLUserFromToken):\n    pass\n\nframework_instance = ClientFrameworkClass()\nframework_instance.do_the_job(...)\n</code></pre>\n<p>This will work because the Python MRO will guarantee that the getUserFromToken client method is called (if super() is used). The code will have to change if you're on Python 2.x.</p>\n<p>One added benefit here is that this will raise an exception if the client does not provide a implementation.</p>\n<p>Of course, this is not really dependency injection, it's multiple inheritance and mixins, but it is a Pythonic way to solve your problem.</p>\n", "abstract": "See Raymond Hettinger - Super considered super! - PyCon 2015 for an argument about how to use super and multiple inheritance instead of DI. If you don't have time to watch the whole video, jump to minute 15 (but I'd recommend watching all of it).  Here is an example of how to apply what's described in this video to your example: Framework Code: Client Code: This will work because the Python MRO will guarantee that the getUserFromToken client method is called (if super() is used). The code will have to change if you're on Python 2.x. One added benefit here is that this will raise an exception if the client does not provide a implementation. Of course, this is not really dependency injection, it's multiple inheritance and mixins, but it is a Pythonic way to solve your problem."}, {"id": 31813464, "score": 21, "vote": 0, "content": "<p>The way we do dependency injection in our project is by using the <a href=\"https://pypi.python.org/pypi/Inject/3.1.1\">inject</a> lib. Check out the <a href=\"https://pypi.python.org/pypi/Inject/3.1.1\">documentation</a>. I highly recommend using it for DI. It kinda makes no sense with just one function but starts making lots of sense when you have to manage multiple data sources etc, etc.</p>\n<p>Following your example it could be something similar to:</p>\n<pre><code class=\"python\"># framework.py\nclass FrameworkClass():\n    def __init__(self, func):\n        self.func = func\n\n    def do_the_job(self):\n        # some stuff\n        self.func()\n</code></pre>\n<p>Your custom function:</p>\n<pre><code class=\"python\"># my_stuff.py\ndef my_func():\n    print('aww yiss')\n</code></pre>\n<p>Somewhere in the application you want to create a bootstrap file that keeps track of all the defined dependencies:</p>\n<pre><code class=\"python\"># bootstrap.py\nimport inject\nfrom .my_stuff import my_func\n\ndef configure_injection(binder):\n    binder.bind(FrameworkClass, FrameworkClass(my_func))\n\ninject.configure(configure_injection)\n</code></pre>\n<p>And then you could consume the code this way:</p>\n<pre><code class=\"python\"># some_module.py (has to be loaded with bootstrap.py already loaded somewhere in your app)\nimport inject\nfrom .framework import FrameworkClass\n\nframework_instance = inject.instance(FrameworkClass)\nframework_instance.do_the_job()\n</code></pre>\n<p>I'm afraid this is as pythonic as it can get (the module has some python sweetness like decorators to inject by parameter etc - check the docs), as python does not have fancy stuff like interfaces or type hinting.</p>\n<p>So to <strong>answer your question</strong> directly would be very hard. I think the true question is: does python have some native support for DI? And the answer is, sadly: no.</p>\n", "abstract": "The way we do dependency injection in our project is by using the inject lib. Check out the documentation. I highly recommend using it for DI. It kinda makes no sense with just one function but starts making lots of sense when you have to manage multiple data sources etc, etc. Following your example it could be something similar to: Your custom function: Somewhere in the application you want to create a bootstrap file that keeps track of all the defined dependencies: And then you could consume the code this way: I'm afraid this is as pythonic as it can get (the module has some python sweetness like decorators to inject by parameter etc - check the docs), as python does not have fancy stuff like interfaces or type hinting. So to answer your question directly would be very hard. I think the true question is: does python have some native support for DI? And the answer is, sadly: no."}, {"id": 35650664, "score": 17, "vote": 0, "content": "<p>Some time ago I wrote dependency injection microframework with a ambition to make it Pythonic - <a href=\"https://github.com/ets-labs/python-dependency-injector\" rel=\"noreferrer\">Dependency Injector</a>. That's how your code can look like in case of its usage:</p>\n<pre><code class=\"python\">\"\"\"Example of dependency injection in Python.\"\"\"\n\nimport logging\nimport sqlite3\n\nimport boto.s3.connection\n\nimport example.main\nimport example.services\n\nimport dependency_injector.containers as containers\nimport dependency_injector.providers as providers\n\n\nclass Platform(containers.DeclarativeContainer):\n    \"\"\"IoC container of platform service providers.\"\"\"\n\n    logger = providers.Singleton(logging.Logger, name='example')\n\n    database = providers.Singleton(sqlite3.connect, ':memory:')\n\n    s3 = providers.Singleton(boto.s3.connection.S3Connection,\n                             aws_access_key_id='KEY',\n                             aws_secret_access_key='SECRET')\n\n\nclass Services(containers.DeclarativeContainer):\n    \"\"\"IoC container of business service providers.\"\"\"\n\n    users = providers.Factory(example.services.UsersService,\n                              logger=Platform.logger,\n                              db=Platform.database)\n\n    auth = providers.Factory(example.services.AuthService,\n                             logger=Platform.logger,\n                             db=Platform.database,\n                             token_ttl=3600)\n\n    photos = providers.Factory(example.services.PhotosService,\n                               logger=Platform.logger,\n                               db=Platform.database,\n                               s3=Platform.s3)\n\n\nclass Application(containers.DeclarativeContainer):\n    \"\"\"IoC container of application component providers.\"\"\"\n\n    main = providers.Callable(example.main.main,\n                              users_service=Services.users,\n                              auth_service=Services.auth,\n                              photos_service=Services.photos)\n</code></pre>\n<p>Here is a link to more extensive description of this example - <a href=\"http://python-dependency-injector.ets-labs.org/examples/services_miniapp.html\" rel=\"noreferrer\">http://python-dependency-injector.ets-labs.org/examples/services_miniapp.html</a></p>\n<p>Hope it can help a bit. For more information please visit:</p>\n<ul>\n<li>GitHub <a href=\"https://github.com/ets-labs/python-dependency-injector\" rel=\"noreferrer\">https://github.com/ets-labs/python-dependency-injector</a></li>\n<li>Docs <a href=\"http://python-dependency-injector.ets-labs.org/\" rel=\"noreferrer\">http://python-dependency-injector.ets-labs.org/</a></li>\n</ul>\n", "abstract": "Some time ago I wrote dependency injection microframework with a ambition to make it Pythonic - Dependency Injector. That's how your code can look like in case of its usage: Here is a link to more extensive description of this example - http://python-dependency-injector.ets-labs.org/examples/services_miniapp.html Hope it can help a bit. For more information please visit:"}, {"id": 62272476, "score": 8, "vote": 0, "content": "<p>Dependency injection is a simple technique that Python supports directly. No additional libraries are required. Using <a href=\"https://docs.python.org/3/library/typing.html\" rel=\"noreferrer\">type hints</a> can improve clarity and readability.</p>\n<h3>Framework Code:</h3>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">class UserStore():\n    \"\"\"\n    The base class for accessing a user's information.\n    The client must extend this class and implement its methods.\n    \"\"\"\n    def get_name(self, token):\n        raise NotImplementedError\n\nclass WebFramework():\n    def __init__(self, user_store: UserStore):\n        self.user_store = user_store\n\n    def greet_user(self, token):\n        user_name = self.user_store.get_name(token)\n        print(f'Good day to you, {user_name}!')\n</code></pre>\n<h3>Client Code:</h3>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">class AlwaysMaryUser(UserStore):\n    def get_name(self, token):      \n        return 'Mary'\n\nclass SQLUserStore(UserStore):\n    def __init__(self, db_params):\n        self.db_params = db_params\n\n    def get_name(self, token):\n        # TODO: Implement the database lookup\n        raise NotImplementedError\n\nclient = WebFramework(AlwaysMaryUser())\nclient.greet_user('user_token')\n</code></pre>\n<p>The <code>UserStore</code> class and type hinting are not required for implementing dependency injection. Their primary purpose is to provide guidance to the client developer. If you remove the <code>UserStore</code> class and all references to it, the code still works.</p>\n", "abstract": "Dependency injection is a simple technique that Python supports directly. No additional libraries are required. Using type hints can improve clarity and readability. The UserStore class and type hinting are not required for implementing dependency injection. Their primary purpose is to provide guidance to the client developer. If you remove the UserStore class and all references to it, the code still works."}, {"id": 31928216, "score": 2, "vote": 0, "content": "<p>I think that DI and possibly AOP are not generally considered Pythonic because of typical Python developers preferences, rather that language features.</p>\n<p>As a matter of fact you can implement <a href=\"https://github.com/soulrebel/diy/blob/master/diy.py\" rel=\"nofollow\">a basic DI framework in &lt;100 lines</a>, using metaclasses and class decorators.</p>\n<p>For a less invasive solution, these constructs can be used to plug-in custom implementations into a generic framework.</p>\n", "abstract": "I think that DI and possibly AOP are not generally considered Pythonic because of typical Python developers preferences, rather that language features. As a matter of fact you can implement a basic DI framework in <100 lines, using metaclasses and class decorators. For a less invasive solution, these constructs can be used to plug-in custom implementations into a generic framework."}, {"id": 57168315, "score": 2, "vote": 0, "content": "<p>There is also Pinject, an open source python dependency injector by Google.</p>\n<p>Here is an example </p>\n<pre><code class=\"python\">&gt;&gt;&gt; class OuterClass(object):\n...     def __init__(self, inner_class):\n...         self.inner_class = inner_class\n...\n&gt;&gt;&gt; class InnerClass(object):\n...     def __init__(self):\n...         self.forty_two = 42\n...\n&gt;&gt;&gt; obj_graph = pinject.new_object_graph()\n&gt;&gt;&gt; outer_class = obj_graph.provide(OuterClass)\n&gt;&gt;&gt; print outer_class.inner_class.forty_two\n42\n</code></pre>\n<p>And <a href=\"https://github.com/google/pinject\" rel=\"nofollow noreferrer\">here is the source code</a></p>\n", "abstract": "There is also Pinject, an open source python dependency injector by Google. Here is an example  And here is the source code"}, {"id": 63929935, "score": 2, "vote": 0, "content": "<p>After playing around with some of the DI frameworks in python, I've found they have felt a bit clunky to use when comparing how simple it is in other realms such as with .NET Core. This is mostly due to the joining via things like decorators that clutter the code and make it hard to simply add it into or remove it from a project, or joining based on variable names.</p>\n<p>I've recently been working on a dependency injection framework that instead uses typing annotations to do the injection called Simple-Injection. Below is a simple example</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">from simple_injection import ServiceCollection\n\n\nclass Dependency:\n    def hello(self):\n        print(\"Hello from Dependency!\")\n\nclass Service:\n    def __init__(self, dependency: Dependency):\n        self._dependency = dependency\n\n    def hello(self):\n        self._dependency.hello()\n\ncollection = ServiceCollection()\ncollection.add_transient(Dependency)\ncollection.add_transient(Service)\n\ncollection.resolve(Service).hello()\n# Outputs: Hello from Dependency!\n</code></pre>\n<p>This library supports service lifetimes and binding services to implementations.</p>\n<p>One of the goals of this library is that it is also easy to add it to an existing application and see how you like it before committing to it as all it requires is your application to have appropriate typings, and then you build the dependency graph at the entry point and run it.</p>\n<p>Hope this helps. For more information, please see</p>\n<ul>\n<li>github: <a href=\"https://github.com/BradLewis/simple-injection\" rel=\"nofollow noreferrer\">https://github.com/BradLewis/simple-injection</a></li>\n<li>docs: <a href=\"https://simple-injection.readthedocs.io/en/latest/\" rel=\"nofollow noreferrer\">https://simple-injection.readthedocs.io/en/latest/</a></li>\n<li>pypi: <a href=\"https://pypi.org/project/simple-injection/\" rel=\"nofollow noreferrer\">https://pypi.org/project/simple-injection/</a></li>\n</ul>\n", "abstract": "After playing around with some of the DI frameworks in python, I've found they have felt a bit clunky to use when comparing how simple it is in other realms such as with .NET Core. This is mostly due to the joining via things like decorators that clutter the code and make it hard to simply add it into or remove it from a project, or joining based on variable names. I've recently been working on a dependency injection framework that instead uses typing annotations to do the injection called Simple-Injection. Below is a simple example This library supports service lifetimes and binding services to implementations. One of the goals of this library is that it is also easy to add it to an existing application and see how you like it before committing to it as all it requires is your application to have appropriate typings, and then you build the dependency graph at the entry point and run it. Hope this helps. For more information, please see"}, {"id": 51523816, "score": 1, "vote": 0, "content": "<p>Due to Python OOP implementation, IoC and dependency injection are not standard practices in the Python world. But the approach seems promising even for Python.</p>\n<ul>\n<li>To use dependencies as arguments is a non-pythonic approach. Python is an OOP language with beautiful and elegant OOP model, that provides more straightforward ways to maintain dependencies.</li>\n<li>To define classes full of abstract methods just to imitate interface type is weird too.</li>\n<li>Huge wrapper-on-wrapper workarounds create code overhead.</li>\n<li>I also don't like to use libraries when all I need is a small pattern.</li>\n</ul>\n<p>So my <a href=\"https://gist.github.com/I159/59c9b5358825bb3fdd0d2bec5db3a814\" rel=\"nofollow noreferrer\">solution</a> is:</p>\n<pre><code class=\"python\"># Framework internal\ndef MetaIoC(name, bases, namespace):\n    cls = type(\"IoC{}\".format(name), tuple(), namespace)\n    return type(name, bases + (cls,), {})\n\n\n# Entities level                                        \nclass Entity:\n    def _lower_level_meth(self):\n        raise NotImplementedError\n\n    @property\n    def entity_prop(self):\n        return super(Entity, self)._lower_level_meth()\n\n\n# Adapters level\nclass ImplementedEntity(Entity, metaclass=MetaIoC):          \n    __private = 'private attribute value'                    \n\n    def __init__(self, pub_attr):                            \n        self.pub_attr = pub_attr                             \n\n    def _lower_level_meth(self):                             \n        print('{}\\n{}'.format(self.pub_attr, self.__private))\n\n\n# Infrastructure level                                       \nif __name__ == '__main__':                                   \n    ENTITY = ImplementedEntity('public attribute value')     \n    ENTITY.entity_prop         \n</code></pre>\n<h3>EDIT:</h3>\n<p>Be careful with the pattern. I used it in a real project and it showed itself a not that good way. <a href=\"https://medium.com/@pekelny/inversion-of-control-python-anti-pattern-eff3943f64f\" rel=\"nofollow noreferrer\">My post on Medium about my experience with the pattern.</a></p>\n", "abstract": "Due to Python OOP implementation, IoC and dependency injection are not standard practices in the Python world. But the approach seems promising even for Python. So my solution is: Be careful with the pattern. I used it in a real project and it showed itself a not that good way. My post on Medium about my experience with the pattern."}, {"id": 61155318, "score": 1, "vote": 0, "content": "<p>A very easy and Pythonic way to do dependency injection is importlib.   </p>\n<p>You could define a small utility function</p>\n<pre><code class=\"python\">def inject_method_from_module(modulename, methodname):\n    \"\"\"\n    injects dynamically a method in a module\n    \"\"\"\n    mod = importlib.import_module(modulename)\n    return getattr(mod, methodname, None)\n</code></pre>\n<p>And then you can use it:</p>\n<pre><code class=\"python\">myfunction = inject_method_from_module(\"mypackage.mymodule\", \"myfunction\")\nmyfunction(\"a\")\n</code></pre>\n<p>In mypackage/mymodule.py  you define myfunction</p>\n<pre><code class=\"python\">def myfunction(s):\n    print(\"myfunction in mypackage.mymodule called with parameter:\", s)\n</code></pre>\n<p>You could of course also use a class MyClass iso. the function myfunction. If you define the values of methodname in a settings.py file you can load different versions of the methodname depending on the value of the settings file.  Django is using such a scheme to define its database connection.</p>\n", "abstract": "A very easy and Pythonic way to do dependency injection is importlib.    You could define a small utility function And then you can use it: In mypackage/mymodule.py  you define myfunction You could of course also use a class MyClass iso. the function myfunction. If you define the values of methodname in a settings.py file you can load different versions of the methodname depending on the value of the settings file.  Django is using such a scheme to define its database connection."}]}, {"link": "https://stackoverflow.com/questions/32158738/python-on-electron-framework", "question": {"id": "32158738", "title": "Python on Electron framework", "content": "<p>I am trying to write a cross-platform desktop app using web technologies (HTML5, CSS, and JS). I took a look at some frameworks and decided to use the Electron framework. </p>\n<p>I've already done the app in Python, so I want to know if is possible to write cross-platform desktop applications using Python on the Electron framework?</p>\n", "abstract": "I am trying to write a cross-platform desktop app using web technologies (HTML5, CSS, and JS). I took a look at some frameworks and decided to use the Electron framework.  I've already done the app in Python, so I want to know if is possible to write cross-platform desktop applications using Python on the Electron framework?"}, "answers": [{"id": 39110428, "score": 50, "vote": 0, "content": "<p>It is possible to work with Electron but if you are looking for \"webbish\" UI capabilities, you can check <a href=\"https://github.com/zoofIO/flexx\" rel=\"noreferrer\">Flexx</a> - it allows you to code in pure Python but still use the styling and UI flexibility of web development tools.</p>\n<p>If you insist on going on Electron you should follow the idea of this <a href=\"https://www.fyears.org/2015/06/electron-as-gui-of-python-apps.html\" rel=\"noreferrer\">post</a>.</p>\n<p>First make sure you have everything installed:</p>\n<pre><code class=\"python\">pip install Flask\nnpm install electron-prebuilt -\nnpm install request-promise -g\n</code></pre>\n<p>Now create the directory where you want all the magic to happen and include following files</p>\n<p>Create your <code>hello.py</code>:</p>\n<pre><code class=\"python\">from __future__ import print_function\nimport time\nfrom flask import Flask\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello World! This is powered by Python backend.\"\n\nif __name__ == \"__main__\":\n   print('oh hello')\n    #time.sleep(5)\n    app.run(host='127.0.0.1', port=5000)\n</code></pre>\n<p>Create your basic <code>package.json</code>:</p>\n<pre><code class=\"python\">{\n  \"name\"    : \"your-app\",\n  \"version\" : \"0.1.0\",\n  \"main\"    : \"main.js\",\n  \"dependencies\": {\n    \"request-promise\": \"*\",\n    \"electron-prebuilt\": \"*\"\n  }\n}\n</code></pre>\n<p>Finally create your <code>main.js</code>:</p>\n<pre><code class=\"python\">const electron = require('electron');\nconst app = electron.app;\nconst BrowserWindow = electron.BrowserWindow;\nelectron.crashReporter.start();\n\nvar mainWindow = null;\n\napp.on('window-all-closed', function() {\n  //if (process.platform != 'darwin') {\n    app.quit();\n  //}\n});\n\napp.on('ready', function() {\n  // call python?\n  var subpy = require('child_process').spawn('python', ['./hello.py']);\n  //var subpy = require('child_process').spawn('./dist/hello.exe');\n  var rq = require('request-promise');\n  var mainAddr = 'http://localhost:5000';\n\n  var openWindow = function(){\n    mainWindow = new BrowserWindow({width: 800, height: 600});\n    // mainWindow.loadURL('file://' + __dirname + '/index.html');\n    mainWindow.loadURL('http://localhost:5000');\n    mainWindow.webContents.openDevTools();\n    mainWindow.on('closed', function() {\n      mainWindow = null;\n      subpy.kill('SIGINT');\n    });\n  };\n\n  var startUp = function(){\n    rq(mainAddr)\n      .then(function(htmlString){\n        console.log('server started!');\n        openWindow();\n      })\n      .catch(function(err){\n        //console.log('waiting for the server start...');\n        startUp();\n      });\n  };\n\n  // fire!\n  startUp();\n});\n</code></pre>\n<p>Taken from the post itself - are the following notes</p>\n<blockquote>\n<p>Notice that in main.js, we spawn a child process for a Python application. Then we check whether the server has been up or not using unlimited loop (well, bad practice! we should actually check the time required and break the loop after some seconds). After the server has been up, we build an actual electron window pointing to the new local website index page.</p>\n</blockquote>\n", "abstract": "It is possible to work with Electron but if you are looking for \"webbish\" UI capabilities, you can check Flexx - it allows you to code in pure Python but still use the styling and UI flexibility of web development tools. If you insist on going on Electron you should follow the idea of this post. First make sure you have everything installed: Now create the directory where you want all the magic to happen and include following files Create your hello.py: Create your basic package.json: Finally create your main.js: Taken from the post itself - are the following notes Notice that in main.js, we spawn a child process for a Python application. Then we check whether the server has been up or not using unlimited loop (well, bad practice! we should actually check the time required and break the loop after some seconds). After the server has been up, we build an actual electron window pointing to the new local website index page."}, {"id": 59569772, "score": 9, "vote": 0, "content": "<p>This is an update to the answer by @bluesummers that works for me on Jan 2, 2020.</p>\n<ol>\n<li><p>Install Node (<a href=\"https://nodejs.org/en/download/\" rel=\"noreferrer\">https://nodejs.org/en/download/</a>) and python 3.</p></li>\n<li><p>Install dependencies: </p></li>\n</ol>\n<pre><code class=\"python\">    pip install Flask\n    npm install electron\n    npm install request\n    npm install request-promise\n</code></pre>\n<ol start=\"3\">\n<li>Create a directory for your project and create the following files in that directory:</li>\n</ol>\n<p><strong><code>main.js</code></strong></p>\n<pre><code class=\"python\">const electron = require( \"electron\" );\nconst app = electron.app;\nconst BrowserWindow = electron.BrowserWindow;\nelectron.crashReporter.start( { companyName: \"my company\", submitURL: \"https://mycompany.com\" } );\n\nvar mainWindow = null;\n\napp.on(\n    \"window-all-closed\",\n    function()\n    {\n        // if ( process.platform != \"darwin\" )\n        {\n            app.quit();\n        }\n    }\n);\n\napp.on(\n    \"ready\",\n    function()\n    {\n        var subpy = require( \"child_process\" ).spawn( \"python\", [ \"./hello.py\" ] );\n        // var subpy = require( \"child_process\" ).spawn( \"./dist/hello.exe\" );\n        var rp = require( \"request-promise\" );\n        var mainAddr = \"http://localhost:5000\";\n\n        var OpenWindow = function()\n        {\n            mainWindow = new BrowserWindow( { width: 800, height: 600 } );\n            // mainWindow.loadURL( \"file://\" + __dirname + \"/index.html\" );\n            mainWindow.loadURL( \"http://localhost:5000\" );\n            mainWindow.webContents.openDevTools();\n            mainWindow.on(\n                \"closed\",\n                function()\n                {\n                    mainWindow = null;\n                    subpy.kill( \"SIGINT\" );\n                }\n            );\n        };\n\n        var StartUp = function()\n        {\n            rp( mainAddr )\n            .then(\n                function( htmlString )\n                {\n                    console.log( \"server started!\" );\n                    OpenWindow();\n                }\n            )\n            .catch(\n                function( err )\n                {\n                    console.log( \"waiting for the server start...\" );\n                    // without tail call optimization this is a potential stack overflow\n                    StartUp();\n                }\n            );\n        };\n\n        // fire!\n        StartUp();\n});\n</code></pre>\n<p><strong><code>package.json</code></strong></p>\n<pre><code class=\"python\">{\n    \"name\": \"your-app\",\n    \"version\": \"0.1.0\",\n    \"main\": \"main.js\",\n    \"scripts\":\n    {\n        \"start\": \"electron .\"\n    },\n    \"dependencies\":\n    {\n        \"electron\": \"*\",\n        \"request\": \"^2.88.0\",\n        \"request-promise\": \"^4.2.5\"\n    }\n}\n</code></pre>\n<p><strong><code>hello.py</code></strong></p>\n<pre><code class=\"python\">from __future__ import print_function\n# import time\nfrom flask import Flask\n\napp = Flask( __name__ )\n\n@app.route( \"/\" )\ndef hello():\n    return \"Hello World! This is powered by a Python backend.\"\n\nif __name__ == \"__main__\":\n    print( \"oh hello\" )\n    #time.sleep(5)\n    app.run( host = \"127.0.0.1\", port = 5000 )\n</code></pre>\n<ol start=\"4\">\n<li>From within the project directory, run:</li>\n</ol>\n<pre><code class=\"python\">    npm start\n</code></pre>\n", "abstract": "This is an update to the answer by @bluesummers that works for me on Jan 2, 2020. Install Node (https://nodejs.org/en/download/) and python 3. Install dependencies:  main.js package.json hello.py"}, {"id": 53883914, "score": 5, "vote": 0, "content": "<p>You can use python-shell to communicate between Python and Node.js/Electron. </p>\n<p>python-shell provides an easy way to run Python scripts from Node.js with basic and efficient inter-process communication and better error handling.</p>\n<p>Using python-shell, you can:</p>\n<ul>\n<li>spawn Python scripts in a child process;</li>\n<li>switch between text, JSON and binary modes;</li>\n<li>use custom parsers and formatters;</li>\n<li>perform data transfers through stdin and stdout streams;</li>\n<li>get stack traces when an error is thrown.</li>\n</ul>\n<p>In your terminal, make sure you are inside the root folder of your project and run the following command to install python-shell from npm:</p>\n<pre><code class=\"python\">npm install --save python-shell \n</code></pre>\n<p>You can then simply run a Python shell using:</p>\n<pre><code class=\"python\">var pyshell =  require('python-shell');\n\npyshell.run('hello.py',  function  (err, results)  {\n if  (err)  throw err;\n console.log('hello.py finished.');\n console.log('results', results);\n});\n</code></pre>\n<p>See more information from this <a href=\"https://www.techiediaries.com/python-electron-tutorial/\" rel=\"noreferrer\">tutorial</a></p>\n", "abstract": "You can use python-shell to communicate between Python and Node.js/Electron.  python-shell provides an easy way to run Python scripts from Node.js with basic and efficient inter-process communication and better error handling. Using python-shell, you can: In your terminal, make sure you are inside the root folder of your project and run the following command to install python-shell from npm: You can then simply run a Python shell using: See more information from this tutorial"}, {"id": 62152039, "score": 3, "vote": 0, "content": "<p>With electron-django app I am developing I used pyinstaller to get my django app compiled, then just spawn its child process and it works, please notice pyinstaller may not recognize all modules or dist folder. there are plenty examples online on how to get a workaround for that filling the .specs file and amending the dist folder adding the files you may need.\npyinstaller usually tells you what went wrong in the terminal. hope it helps </p>\n", "abstract": "With electron-django app I am developing I used pyinstaller to get my django app compiled, then just spawn its child process and it works, please notice pyinstaller may not recognize all modules or dist folder. there are plenty examples online on how to get a workaround for that filling the .specs file and amending the dist folder adding the files you may need.\npyinstaller usually tells you what went wrong in the terminal. hope it helps "}]}, {"link": "https://stackoverflow.com/questions/1444543/differences-between-framework-and-non-framework-builds-of-python-on-mac-os-x", "question": {"id": "1444543", "title": "Differences between Framework and non-Framework builds of Python on Mac OS X", "content": "<h3>Question</h3>\n<p>What are the differences between a Framework build and a non-Framework build (i.e., standard UNIX build) of Python on Mac OS X? Also, what are the advantages and disadvantages of each?</p>\n<h3>Preliminary Research</h3>\n<p>Here is the information that I found prior to posting this question:</p>\n<ul>\n<li><a href=\"http://www.mail-archive.com/pythonmac-sig@python.org/msg08954.html\" rel=\"noreferrer\">[Pythonmac-SIG] Why is Framework build of Python needed</a>\n<ul>\n<li>B. Grainger: \"I seem to recall that a Framework build of Python is needed if you want to do anything with the native Mac GUI. Is my understanding correct?\"</li>\n<li>C. Barker: \"Pretty much -- to access the Mac GUI, an app needs to be in a proper Mac application bundle. The Framework build supplies that.\"</li>\n</ul></li>\n<li><a href=\"http://developer.apple.com/mac/library/documentation/General/Conceptual/DevPedia-CocoaCore/Framework.html\" rel=\"noreferrer\">Apple Developer Connection: Framework Definition</a>\n<ul>\n<li>\"A framework is a bundle (a structured directory) that contains a dynamic shared library along with associated resources, such as nib files, image files, and header files. When you develop an application, your project links to one or more frameworks. For example, iPhone application projects link by default to the Foundation, UIKit, and Core Graphics frameworks. Your code accesses the capabilities of a framework through the application programming interface (API), which is published by the framework through its header files. Because the library is dynamically shared, multiple applications can access the framework code and resources simultaneously. The system loads the code and resources of a framework into memory, as needed, and shares the one copy of a resource among all applications.\"</li>\n</ul></li>\n<li><a href=\"http://developer.apple.com/mac/library/documentation/MacOSX/Conceptual/BPFrameworks/Concepts/WhatAreFrameworks.html#//apple_ref/doc/uid/20002303\" rel=\"noreferrer\">Framework Programming Guide: What are Frameworks?</a>\n<ul>\n<li>\"Frameworks offer the following advantages over static-linked libraries and other types of dynamic shared libraries:\n\n<ul>\n<li>Frameworks group related, but separate, resources together. This grouping makes it easier to install, uninstall, and locate those resources.</li>\n<li>Frameworks can include a wider variety of resource types than libraries. For example, a framework can include any relevant header files and documentation.\nMultiple versions of a framework can be included in the same bundle. This makes it possible to be backward compatible with older programs.</li>\n<li>Only one copy of a framework\u2019s read-only resources reside physically in-memory at any given time, regardless of how many processes are using those resources. This sharing of resources reduces the memory footprint of the system and helps improve performance.\"</li>\n</ul></li>\n</ul></li>\n</ul>\n<h3>Background</h3>\n<p>Prior to Mac OS X 10.6 Snow Leopard, I hadn't thought much about this, as I simply would download and install the <a href=\"http://www.python.org/download/\" rel=\"noreferrer\">Python 2.6.2 Mac Installer Disk Image</a>, which is a framework build, and go about my business using virtualenv, pip, etc. However, with the changes in Snow Leopard to 64-bit, gcc, etc., I've noticed some issues that have made me want to build/compile Python 2.6.2+ myself from source, which leads me to my question of the differences and advantages/disadvantages of building Python as a MacOSX|Darwin framework.</p>\n", "abstract": "What are the differences between a Framework build and a non-Framework build (i.e., standard UNIX build) of Python on Mac OS X? Also, what are the advantages and disadvantages of each? Here is the information that I found prior to posting this question: Prior to Mac OS X 10.6 Snow Leopard, I hadn't thought much about this, as I simply would download and install the Python 2.6.2 Mac Installer Disk Image, which is a framework build, and go about my business using virtualenv, pip, etc. However, with the changes in Snow Leopard to 64-bit, gcc, etc., I've noticed some issues that have made me want to build/compile Python 2.6.2+ myself from source, which leads me to my question of the differences and advantages/disadvantages of building Python as a MacOSX|Darwin framework."}, "answers": [{"id": 1445711, "score": 13, "vote": 0, "content": "<p>You've already listed all important advantages of making a framework (congratulations for excellent research and reporting thereof!); the only flip side is that it's harder to arrange to build one properly, but if you take your clues from the examples in the installer you quote, it should be doable.</p>\n<p>BTW, what's wrong with the system Python that comes with Snow Leopard? I haven't upgraded from Leopard yet (long story... I do have the \"family license\" upgrade DVD, but need Snow Leopard to fix some things before I can upgrade), so I have no first-hand experience with that yet, but I do know it's a 2.6 build and it comes in both 32-bit and 64-bit versions... so why do you need to build your own framework?</p>\n", "abstract": "You've already listed all important advantages of making a framework (congratulations for excellent research and reporting thereof!); the only flip side is that it's harder to arrange to build one properly, but if you take your clues from the examples in the installer you quote, it should be doable. BTW, what's wrong with the system Python that comes with Snow Leopard? I haven't upgraded from Leopard yet (long story... I do have the \"family license\" upgrade DVD, but need Snow Leopard to fix some things before I can upgrade), so I have no first-hand experience with that yet, but I do know it's a 2.6 build and it comes in both 32-bit and 64-bit versions... so why do you need to build your own framework?"}, {"id": 13324455, "score": 4, "vote": 0, "content": "<p>There is another difference: typically the Framework installation provided by the installer from python.org has several architectures.</p>\n<blockquote>\n<p><code>$ file libpython2.7.dylib</code></p>\n<p><code>libpython2.7.dylib: Mach-O universal binary with 2 architectures</code>\n<code>libpython2.7.dylib (for architecture i386):  Mach-O dynamically linked shared library i386</code>\n<code>libpython2.7.dylib (for architecture x86_64):    Mach-O 64-bit dynamically linked shared library x86_64</code></p>\n</blockquote>\n<p>If you install from source and you do not deliberately change this, your libpython has only one architecture.\nI have had cases where the two architectures actually resulted in problems (at least I believe that this was the reason), namely when installing the HDF5 python bindings (h5py).</p>\n<p>And there is yet another difference: some tools require the framework installation. For instance PyQt, and in particular sip. While it is possible to install sip and PyQt even for the non-framework version of python, it is much more complicated.</p>\n<p>As for the decision what to prefer, I still do not know. At the moment, I went for the non-framework option, but I must say, that it also caused me some headache.</p>\n", "abstract": "There is another difference: typically the Framework installation provided by the installer from python.org has several architectures. $ file libpython2.7.dylib libpython2.7.dylib: Mach-O universal binary with 2 architectures\nlibpython2.7.dylib (for architecture i386):  Mach-O dynamically linked shared library i386\nlibpython2.7.dylib (for architecture x86_64):    Mach-O 64-bit dynamically linked shared library x86_64 If you install from source and you do not deliberately change this, your libpython has only one architecture.\nI have had cases where the two architectures actually resulted in problems (at least I believe that this was the reason), namely when installing the HDF5 python bindings (h5py). And there is yet another difference: some tools require the framework installation. For instance PyQt, and in particular sip. While it is possible to install sip and PyQt even for the non-framework version of python, it is much more complicated. As for the decision what to prefer, I still do not know. At the moment, I went for the non-framework option, but I must say, that it also caused me some headache."}, {"id": 1493981, "score": 1, "vote": 0, "content": "<p>If you are going to ship your code (have it running on another machine), you'd better use the system version of python otherwise your program behavior will be undefined on the other machines.</p>\n", "abstract": "If you are going to ship your code (have it running on another machine), you'd better use the system version of python otherwise your program behavior will be undefined on the other machines."}, {"id": 1493606, "score": 0, "vote": 0, "content": "<p>I use <a href=\"http://www.macports.org/install.php\" rel=\"nofollow noreferrer\" title=\"Macports\">Macports</a> on 10.6, which makes it very simple to install multiple versions of python and switch between them and Apple's version:</p>\n<pre><code class=\"python\">sudo port install python26\nsudo port install python_select\nsudo python_select -l\n</code></pre>\n<p>The most recent version of python26 is 2.6.2, and compiles and runs fine on 10.6.1:\ntrac.macports.org/browser/trunk/dports/lang/python26/Portfile</p>\n", "abstract": "I use Macports on 10.6, which makes it very simple to install multiple versions of python and switch between them and Apple's version: The most recent version of python26 is 2.6.2, and compiles and runs fine on 10.6.1:\ntrac.macports.org/browser/trunk/dports/lang/python26/Portfile"}, {"id": 1494311, "score": 0, "vote": 0, "content": "<p>Framework builds are owned by the 'root' account when installed. A source build will be owned by the account installing it. The advantage (and disadvantage) of having ownership of the Python installation is that you don't need to change accounts to modify it.</p>\n<p>A small difference is that Framework builds are built against the EditLine library. Source builds are usually compiled against the Readline library. Depending upon which library Python is compiled against, the readline module in the standard library works slightly differently. See 'man python' on Mac OS X for more details on this.</p>\n<p>There is a nice buildout for automating the compile of Python 2.4, 2.5 and 2.6 from source on Mac OS X, which is <a href=\"http://reinout.vanrees.org/weblog/2009/09/28/python-snowleopard-rescue.html\" rel=\"nofollow noreferrer\">explained here</a>. This will compile against a custom build of readline. However, the usefulness of scripting the source install is that you can make additional tweaks to your custom Python builds, e.g. installing essential distributions such as virtualenv, or harder to install distributions such as PIL.</p>\n", "abstract": "Framework builds are owned by the 'root' account when installed. A source build will be owned by the account installing it. The advantage (and disadvantage) of having ownership of the Python installation is that you don't need to change accounts to modify it. A small difference is that Framework builds are built against the EditLine library. Source builds are usually compiled against the Readline library. Depending upon which library Python is compiled against, the readline module in the standard library works slightly differently. See 'man python' on Mac OS X for more details on this. There is a nice buildout for automating the compile of Python 2.4, 2.5 and 2.6 from source on Mac OS X, which is explained here. This will compile against a custom build of readline. However, the usefulness of scripting the source install is that you can make additional tweaks to your custom Python builds, e.g. installing essential distributions such as virtualenv, or harder to install distributions such as PIL."}]}, {"link": "https://stackoverflow.com/questions/43709/pros-and-cons-of-different-approaches-to-web-programming-in-python", "question": {"id": "43709", "title": "Pros and Cons of different approaches to web programming in Python", "content": "<p>I'd like to do some server-side scripting using Python. But I'm kind of lost with the number of ways to do that.</p>\n<p>It starts with the do-it-yourself CGI approach and it seems to end with some pretty robust frameworks that would basically do all the job themselves. And a huge lot of stuff in between, like <a href=\"http://webpy.org/\" rel=\"nofollow noreferrer\">web.py</a>, <a href=\"http://pyroxide.org/\" rel=\"nofollow noreferrer\">Pyroxide</a> and <a href=\"http://wiki.python.org/moin/Django\" rel=\"nofollow noreferrer\">Django</a>.</p>\n<ul>\n<li>What are the <strong>pros</strong> and <strong>cons</strong> of the frameworks or approaches that <em>you've worked on</em>?</li>\n<li>What <strong>trade-offs</strong> are there?</li>\n<li>For <strong>what kind of projects</strong> they do well and for what they don't?</li>\n</ul>\n<p>Edit: I haven't got much experience with web programing yet.</p>\n<p>I would like to avoid the basic and tedious things like parsing the URL for parameters, etc.<br/>\nOn the other hand, while the video of <a href=\"http://www.rubyonrails.org/screencasts\" rel=\"nofollow noreferrer\">blog created in 15 minutes</a> with <a href=\"http://www.rubyonrails.org/\" rel=\"nofollow noreferrer\">Ruby on Rails</a> left me impressed, I realized that there were hundreds of things hidden from me - which is cool if you need to write a working <code>webapp</code> in no time, but not that great for really understanding the magic - and that's what I seek now.</p>\n", "abstract": "I'd like to do some server-side scripting using Python. But I'm kind of lost with the number of ways to do that. It starts with the do-it-yourself CGI approach and it seems to end with some pretty robust frameworks that would basically do all the job themselves. And a huge lot of stuff in between, like web.py, Pyroxide and Django. Edit: I haven't got much experience with web programing yet. I would like to avoid the basic and tedious things like parsing the URL for parameters, etc.\nOn the other hand, while the video of blog created in 15 minutes with Ruby on Rails left me impressed, I realized that there were hundreds of things hidden from me - which is cool if you need to write a working webapp in no time, but not that great for really understanding the magic - and that's what I seek now."}, "answers": [{"id": 43773, "score": 17, "vote": 0, "content": "<p>CGI is great for low-traffic websites, but it has some performance problems for anything else.  This is because every time a request comes in, the server starts the CGI application in its own process.  This is bad for two reasons:  1)  Starting and stopping a process can take time and 2) you can't cache anything in memory.  You can go with FastCGI, but I would argue that you'd be better off just writing a straight <a href=\"http://www.python.org/dev/peps/pep-0333/\" rel=\"noreferrer\">WSGI</a> app if you're going to go that route (the way WSGI works really isn't a whole heck of a lot different from CGI).</p>\n<p>Other than that, your choices are for the most part how much you want the framework to do.  You can go with an all singing, all dancing framework like Django or Pylons.  Or you can go with a mix-and-match approach (use something like CherryPy for the HTTP stuff, SQLAlchemy for the database stuff, paste for deployment, etc).  I should also point out that most frameworks will also let you switch different components out for others, so these two approaches aren't necessarily mutually exclusive.</p>\n<p>Personally, I dislike frameworks that do too much magic for me and prefer the mix-and-match technique, but I've been told that I'm also completely insane.  :)</p>\n<p>How much web programming experience do you have?  If you're a beginner, I say go with Django.  If you're more experienced, I say to play around with the different approaches and techniques until you find the right one.</p>\n", "abstract": "CGI is great for low-traffic websites, but it has some performance problems for anything else.  This is because every time a request comes in, the server starts the CGI application in its own process.  This is bad for two reasons:  1)  Starting and stopping a process can take time and 2) you can't cache anything in memory.  You can go with FastCGI, but I would argue that you'd be better off just writing a straight WSGI app if you're going to go that route (the way WSGI works really isn't a whole heck of a lot different from CGI). Other than that, your choices are for the most part how much you want the framework to do.  You can go with an all singing, all dancing framework like Django or Pylons.  Or you can go with a mix-and-match approach (use something like CherryPy for the HTTP stuff, SQLAlchemy for the database stuff, paste for deployment, etc).  I should also point out that most frameworks will also let you switch different components out for others, so these two approaches aren't necessarily mutually exclusive. Personally, I dislike frameworks that do too much magic for me and prefer the mix-and-match technique, but I've been told that I'm also completely insane.  :) How much web programming experience do you have?  If you're a beginner, I say go with Django.  If you're more experienced, I say to play around with the different approaches and techniques until you find the right one."}, {"id": 43835, "score": 12, "vote": 0, "content": "<p>The simplest web program is a CGI script, which is basically just a program whose standard output is redirected to the web browser making the request.  In this approach, every page has its own executable file, which must be loaded and parsed on every request.  This makes it really simple to get something up and running, but scales badly both in terms of performance and organization.  So when I need a very dynamic page very quickly that won't grow into a larger system, I use a CGI script.</p>\n<p>One step up from this is embedding your Python code in your HTML code, such as with PSP.  I don't think many people use this nowadays, since modern template systems have made this pretty obsolete.  I worked with PSP for awhile and found that it had basically the same organizational limits as CGI scripts (every page has its own file) plus some whitespace-related annoyances from trying to mix whitespace-ignorant HTML with whitespace-sensitive Python.</p>\n<p>The next step up is very simple web frameworks such as web.py, which I've also used.  Like CGI scripts, it's very simple to get something up and running, and you don't need any complex configuration or automatically generated code.  Your own code will be pretty simple to understand, so you can see what's happening.  However, it's not as feature-rich as other web frameworks; last time I used it, there was no session tracking, so I had to roll my own.  It also has \"too much magic behavior\" to quote Guido (\"upvars(), bah\").</p>\n<p>Finally, you have feature-rich web frameworks such as Django.  These will require a bit of work to get simple Hello World programs working, but every major one has a great, well-written tutorial (especially Django) to walk you through it.  I highly recommend using one of these web frameworks for any real project because of the convenience and features and documentation, etc.</p>\n<p>Ultimately you'll have to decide what you prefer.  For example, frameworks all use template languages (special code/tags) to generate HTML files.  Some of them such as Cheetah templates let you write arbitrary Python code so that you can do anything in a template.  Others such as Django templates are more restrictive and force you to separate your presentation code from your program logic.  It's all about what you personally prefer.</p>\n<p>Another example is URL handling; some frameworks such as Django have you define the URLs in your application through regular expressions.  Others such as CherryPy automatically map your functions to urls by your function names.  Again, this is a personal preference.</p>\n<p>I personally use a mix of web frameworks by using CherryPy for my web server stuff (form parameters, session handling, url mapping, etc) and Django for my object-relational mapping and templates.  My recommendation is to start with a high level web framework, work your way through its tutorial, then start on a small personal project.  I've done this with all of the technologies I've mentioned and it's been really beneficial.  Eventually you'll get a feel for what you prefer and become a better web programmer (and a better programmer in general) in the process.</p>\n", "abstract": "The simplest web program is a CGI script, which is basically just a program whose standard output is redirected to the web browser making the request.  In this approach, every page has its own executable file, which must be loaded and parsed on every request.  This makes it really simple to get something up and running, but scales badly both in terms of performance and organization.  So when I need a very dynamic page very quickly that won't grow into a larger system, I use a CGI script. One step up from this is embedding your Python code in your HTML code, such as with PSP.  I don't think many people use this nowadays, since modern template systems have made this pretty obsolete.  I worked with PSP for awhile and found that it had basically the same organizational limits as CGI scripts (every page has its own file) plus some whitespace-related annoyances from trying to mix whitespace-ignorant HTML with whitespace-sensitive Python. The next step up is very simple web frameworks such as web.py, which I've also used.  Like CGI scripts, it's very simple to get something up and running, and you don't need any complex configuration or automatically generated code.  Your own code will be pretty simple to understand, so you can see what's happening.  However, it's not as feature-rich as other web frameworks; last time I used it, there was no session tracking, so I had to roll my own.  It also has \"too much magic behavior\" to quote Guido (\"upvars(), bah\"). Finally, you have feature-rich web frameworks such as Django.  These will require a bit of work to get simple Hello World programs working, but every major one has a great, well-written tutorial (especially Django) to walk you through it.  I highly recommend using one of these web frameworks for any real project because of the convenience and features and documentation, etc. Ultimately you'll have to decide what you prefer.  For example, frameworks all use template languages (special code/tags) to generate HTML files.  Some of them such as Cheetah templates let you write arbitrary Python code so that you can do anything in a template.  Others such as Django templates are more restrictive and force you to separate your presentation code from your program logic.  It's all about what you personally prefer. Another example is URL handling; some frameworks such as Django have you define the URLs in your application through regular expressions.  Others such as CherryPy automatically map your functions to urls by your function names.  Again, this is a personal preference. I personally use a mix of web frameworks by using CherryPy for my web server stuff (form parameters, session handling, url mapping, etc) and Django for my object-relational mapping and templates.  My recommendation is to start with a high level web framework, work your way through its tutorial, then start on a small personal project.  I've done this with all of the technologies I've mentioned and it's been really beneficial.  Eventually you'll get a feel for what you prefer and become a better web programmer (and a better programmer in general) in the process."}, {"id": 43753, "score": 7, "vote": 0, "content": "<p>If you decide to go with a framework that is WSGI-based (for instance <a href=\"http://www.turbogears.org/2.0\" rel=\"nofollow noreferrer\">TurboGears</a>), I would recommend you go through the excellent article <a href=\"http://pythonpaste.org/webob/do-it-yourself.html\" rel=\"nofollow noreferrer\">Another Do-It-Yourself Framework</a> by Ian Bicking.</p>\n<p>In the article, he builds a simple web application framework from scratch.</p>\n<p>Also, check out the video <a href=\"http://www.vimeo.com/3258566\" rel=\"nofollow noreferrer\">Creating a web framework with WSGI</a> by Kevin Dangoor. Dangoor is the founder of the TurboGears project.</p>\n", "abstract": "If you decide to go with a framework that is WSGI-based (for instance TurboGears), I would recommend you go through the excellent article Another Do-It-Yourself Framework by Ian Bicking. In the article, he builds a simple web application framework from scratch. Also, check out the video Creating a web framework with WSGI by Kevin Dangoor. Dangoor is the founder of the TurboGears project."}, {"id": 87048, "score": 4, "vote": 0, "content": "<p>If you want to go big, choose Django and you are set. But if you want just to learn, roll your own framework using already mentioned <a href=\"http://pythonpaste.org/webob/\" rel=\"nofollow noreferrer\">WebOb</a> - this can be really fun and I am sure you'll learn much more (plus you can use components you like: template system, url dispatcher, database layer, sessions, et caetera).</p>\n<p>In last 2 years I built few large sites using Django and all I can say, Django will fill 80% of your needs in 20% of time. Remaining 20% of work will take 80% of the time, no matter which framework you'd use.</p>\n", "abstract": "If you want to go big, choose Django and you are set. But if you want just to learn, roll your own framework using already mentioned WebOb - this can be really fun and I am sure you'll learn much more (plus you can use components you like: template system, url dispatcher, database layer, sessions, et caetera). In last 2 years I built few large sites using Django and all I can say, Django will fill 80% of your needs in 20% of time. Remaining 20% of work will take 80% of the time, no matter which framework you'd use."}, {"id": 222159, "score": 3, "vote": 0, "content": "<p>It's always worth doing something the hard way - once - as a learning exercise. Once you understand how it works, pick a framework that suits your application, and use that. You don't need to reinvent the wheel once you understand angular velocity. :-)</p>\n<p>It's also worth making sure that you have a fairly robust understanding of the programming language behind the framework <em>before</em> you jump in -- trying to learn both Django and Python at the same time (or Ruby and Rails, or X and Y), can lead to even more confusion. Write some code in the language first, then add the framework.</p>\n<p>We learn to develop, not by using tools, but by solving problems. Run into a few walls, climb over, and find some higher walls!</p>\n", "abstract": "It's always worth doing something the hard way - once - as a learning exercise. Once you understand how it works, pick a framework that suits your application, and use that. You don't need to reinvent the wheel once you understand angular velocity. :-) It's also worth making sure that you have a fairly robust understanding of the programming language behind the framework before you jump in -- trying to learn both Django and Python at the same time (or Ruby and Rails, or X and Y), can lead to even more confusion. Write some code in the language first, then add the framework. We learn to develop, not by using tools, but by solving problems. Run into a few walls, climb over, and find some higher walls!"}, {"id": 43736, "score": 2, "vote": 0, "content": "<p>If you've never done any CGI programming before I think it would be worth doing one project - perhaps just a sample play site just for yourself - using the DIY approach.  You'll learn a lot more about how all the various parts work than you would by using a framework.  This will help in you design and debug and so on all your future web applications however you write them.</p>\n<p>Personally I now use <a href=\"http://www.djangoproject.com/\" rel=\"nofollow noreferrer\">Django</a>.  The real benefit is very fast application deployment.  The object relational mapping gets things moving fast and the template library is a joy to use.  Also the admin interface gives you basic CRUD screens for all your objects so you don't need to write any of the \"boring\" stuff.</p>\n<p>The downside of using an ORM based solution is that if you do want to handcraft some SQL, say for performance reasons, it much harder than it would have been otherwise, although still very possible. </p>\n", "abstract": "If you've never done any CGI programming before I think it would be worth doing one project - perhaps just a sample play site just for yourself - using the DIY approach.  You'll learn a lot more about how all the various parts work than you would by using a framework.  This will help in you design and debug and so on all your future web applications however you write them. Personally I now use Django.  The real benefit is very fast application deployment.  The object relational mapping gets things moving fast and the template library is a joy to use.  Also the admin interface gives you basic CRUD screens for all your objects so you don't need to write any of the \"boring\" stuff. The downside of using an ORM based solution is that if you do want to handcraft some SQL, say for performance reasons, it much harder than it would have been otherwise, although still very possible. "}, {"id": 1209580, "score": 2, "vote": 0, "content": "<p>If you are using Python you should <em>not</em> start with CGI, instead start with WSGI (and you can use <a href=\"http://docs.python.org/library/wsgiref.html#wsgiref.handlers.CGIHandler\" rel=\"nofollow noreferrer\">wsgiref.handlers.CGIHandler</a> to run your WSGI script as a CGI script.  The result is something that is basically as low-level as CGI (which might be useful in an educational sense, but will also be somewhat annoying), but without having to write to an entirely outdated interface (and binding your application to a single process model).</p>\n<p>If you want a less annoying, but similarly low-level interface, using <a href=\"http://pythonpaste.org/webob/\" rel=\"nofollow noreferrer\">WebOb</a> would provide that.  You would be implementing <em>all</em> the logic, and there will be few dark corners that you won't understand, but you won't have to spend time figuring out how to parse HTTP dates (they are weird!) or parse POST bodies.  I write applications this way (without any other framework) and it is entirely workable.  As a beginner, I'd advise this if you were interested in understanding what frameworks do, because it is inevitable you will be writing your own mini framework.  OTOH, a real framework will probably teach you good practices of application design and structure.  To be a really good web programmer, I believe you need to try both seriously; you should understand everything a framework does and not be afraid of its internals, but you should also spend time in a thoughtful environment someone else designed (i.e., an existing framework) and understand how that structure helps you.</p>\n", "abstract": "If you are using Python you should not start with CGI, instead start with WSGI (and you can use wsgiref.handlers.CGIHandler to run your WSGI script as a CGI script.  The result is something that is basically as low-level as CGI (which might be useful in an educational sense, but will also be somewhat annoying), but without having to write to an entirely outdated interface (and binding your application to a single process model). If you want a less annoying, but similarly low-level interface, using WebOb would provide that.  You would be implementing all the logic, and there will be few dark corners that you won't understand, but you won't have to spend time figuring out how to parse HTTP dates (they are weird!) or parse POST bodies.  I write applications this way (without any other framework) and it is entirely workable.  As a beginner, I'd advise this if you were interested in understanding what frameworks do, because it is inevitable you will be writing your own mini framework.  OTOH, a real framework will probably teach you good practices of application design and structure.  To be a really good web programmer, I believe you need to try both seriously; you should understand everything a framework does and not be afraid of its internals, but you should also spend time in a thoughtful environment someone else designed (i.e., an existing framework) and understand how that structure helps you."}, {"id": 44638, "score": 1, "vote": 0, "content": "<p>OK, rails is actually pretty good, but there is just a little bit too much magic going on in there (from the Ruby world I would much prefer merb to rails). I personally use Pylons, and am pretty darn happy. I'd say (compared to django), that pylons allows you to interchange ints internal parts easier than django does. The downside is that you will have to write more stuff all by youself (like the basic CRUD). </p>\n<p>Pros of using a framework:</p>\n<ol>\n<li>get stuff done quickly (and I mean lighning fast once you know the framework)</li>\n<li>everything is compying to standards (which is probably not that easy to achieve when rolling your own)</li>\n<li>easier to get something working (lots of tutorials) without reading gazillion articles and docs</li>\n</ol>\n<p>Cons:</p>\n<ol>\n<li>you learn less</li>\n<li>harder to replace parts (not that much of an issue in pylons, more so with django)</li>\n<li>harder to tweak some low-level stuff (like the above mentioned SQLs)</li>\n</ol>\n<p>From that you can probably devise what they are good for :-) Since you get all the code it is possible to tweak it to fit even the most bizzare situations (pylons supposedly work on the Google app engine now...).</p>\n", "abstract": "OK, rails is actually pretty good, but there is just a little bit too much magic going on in there (from the Ruby world I would much prefer merb to rails). I personally use Pylons, and am pretty darn happy. I'd say (compared to django), that pylons allows you to interchange ints internal parts easier than django does. The downside is that you will have to write more stuff all by youself (like the basic CRUD).  Pros of using a framework: Cons: From that you can probably devise what they are good for :-) Since you get all the code it is possible to tweak it to fit even the most bizzare situations (pylons supposedly work on the Google app engine now...)."}, {"id": 1873745, "score": 1, "vote": 0, "content": "<p>For smaller projects, rolling your own is fairly easy. Especially as you can simply import a templating engine like <a href=\"http://genshi.edgewall.org/\" rel=\"nofollow noreferrer\">Genshi</a> and get alot happening quite quickly and easily. Sometimes it's just quicker to use a screwdriver than to go looking for the power drill.</p>\n<p>Full blown frameworks provide alot more power, but do have to be installed and setup first before you can leverage that power. For larger projects, this is a negligible concern, but for smaller projects this might wind up taking most of your time - especially if the framework is unfamiliar.</p>\n", "abstract": "For smaller projects, rolling your own is fairly easy. Especially as you can simply import a templating engine like Genshi and get alot happening quite quickly and easily. Sometimes it's just quicker to use a screwdriver than to go looking for the power drill. Full blown frameworks provide alot more power, but do have to be installed and setup first before you can leverage that power. For larger projects, this is a negligible concern, but for smaller projects this might wind up taking most of your time - especially if the framework is unfamiliar."}]}, {"link": "https://stackoverflow.com/questions/11488838/multiple-applications-with-django", "question": {"id": "11488838", "title": "Multiple applications with django", "content": "<p>I am studying the Django framework, reading the documentation, but have not found references on how to create more than one application on the same project, where each application has multiple apps. For example, the application Blog, with apps Users, Comments, Posts, ..., implementation and Tasks with the apps Clients, Users, Attachments ... How should I do?</p>\n<pre><code class=\"python\">localhost\nlocalhost/blog/ (posts, user, comment, ...)\nlocalhost/tasks/ (task, user, attachment, ...)\n\n&lt;my project&gt;\n-- manage.py\n-- &lt;project name&gt;\n-- -- blog\n-- -- -- posts\n-- -- -- -- views.py\n-- -- -- -- urls.py\n-- -- -- -- models.py\n...\n-- -- tasks\n-- -- -- attachments\n-- -- -- -- views.py\n-- -- -- -- urls.py\n-- -- -- -- models.py\n...\n</code></pre>\n", "abstract": "I am studying the Django framework, reading the documentation, but have not found references on how to create more than one application on the same project, where each application has multiple apps. For example, the application Blog, with apps Users, Comments, Posts, ..., implementation and Tasks with the apps Clients, Users, Attachments ... How should I do?"}, "answers": [{"id": 11491940, "score": 25, "vote": 0, "content": "<p>Each app will have these in their folder:</p>\n<ul>\n<li>views.py</li>\n<li>models.py</li>\n<li>others optionals (admin.py...)</li>\n</ul>\n<p>So, you have :</p>\n<pre><code class=\"python\">Project\n-- manage.py\n-- Project\n-- -- views.py\n-- -- models.py\n-- -- others\n-- -- APP1\n-- -- -- views.py\n-- -- -- models.py\n-- -- -- others\n-- -- APP2\n-- -- -- views.py\n-- -- -- models.py\n-- -- -- others\n-- -- APPX\n-- -- -- views.py\n-- -- -- models.py\n-- -- -- others\n</code></pre>\n<p>The utility is the distinction between functionalities (call Notification.models.notification if you have a Notification app and a notification model in it).</p>\n<p>A model is the architecture of an object. So you will call for example User.username or Task.name. Django creates automaticaly in the database the table.</p>\n<p>Another tool of Django : you can use admin view (wich can edit, create, edit, objects that use your models) or change this interface (look <a href=\"https://docs.djangoproject.com/en/4.0/howto/overriding-templates/\" rel=\"nofollow noreferrer\">that page</a>)</p>\n<p>If you want you can make an identification system, and create forms, you can use your own admin system.</p>\n<p>WITH YOUR EXAMPLE:</p>\n<pre><code class=\"python\">&lt;my project&gt;\n-- manage.py\n-- &lt;project name&gt;\n-- -- urls.py\n-- -- models.py &lt;--- User model exists in Django and here you can add informations to the defaut model it is in this file because I suppose it will be used in all your project.\n-- -- views.py\n\n-- -- blog    &lt;--- It's an app.\n-- -- -- -- views.py \n-- -- -- -- urls.py\n-- -- -- -- models.py &lt;--- Posts, Comments are models for the blog, so you explain them here.\n\n-- -- tasks   &lt;--- Another app.\n-- -- -- attachments\n-- -- -- -- views.py\n-- -- -- -- urls.py\n-- -- -- -- models.py  &lt;--- Task model for exemple\n</code></pre>\n", "abstract": "Each app will have these in their folder: So, you have : The utility is the distinction between functionalities (call Notification.models.notification if you have a Notification app and a notification model in it). A model is the architecture of an object. So you will call for example User.username or Task.name. Django creates automaticaly in the database the table. Another tool of Django : you can use admin view (wich can edit, create, edit, objects that use your models) or change this interface (look that page) If you want you can make an identification system, and create forms, you can use your own admin system. WITH YOUR EXAMPLE:"}, {"id": 11490762, "score": 18, "vote": 0, "content": "<p>Things you should understand about django:</p>\n<ol>\n<li><p>URL map has no bearing on the file system or the application code. This means that your URLs do not have a 1-to-1 relationship with your code. You can have multiple URLs pointing to same piece of code (pointing to the same view). This is different than PHP for example, where URLs map to the file system.</p></li>\n<li><p>Applications are not \"widgets\" or \"portlets\". Application is just a python module with some files already included (<code>views.py</code>, <code>models.py</code> and <code>__init__.py</code>); and you can have as many apps as you want.  You can also have applications that are not accessible using a URL - they are just there to support other applications; and your applications do not have to have the same name as the URLs either.</p></li>\n</ol>\n<p>So keeping that in mind ... you can create one application, call it <code>www</code>, and inside its <code>views.py</code>, define these very creatively named methods:</p>\n<pre><code class=\"python\">def blog(request):\n   pass\n\ndef tasks(request):\n   pass\n</code></pre>\n<p>Now in your <code>urls.py</code>, you can have:</p>\n<pre><code class=\"python\">url(r'^blog/$','www.views.blog',name='blog-index'),\nurl(r'^blog/posts/$','www.views.blog',name='blog-posts',kwargs={'view_posts': True}),\nurl(r'^tasks/$','www.views.tasks',name='task-index'),\nurl(r'^tasks/attachments/$','www.views.tasks',name='task-attachments'),\n</code></pre>\n", "abstract": "Things you should understand about django: URL map has no bearing on the file system or the application code. This means that your URLs do not have a 1-to-1 relationship with your code. You can have multiple URLs pointing to same piece of code (pointing to the same view). This is different than PHP for example, where URLs map to the file system. Applications are not \"widgets\" or \"portlets\". Application is just a python module with some files already included (views.py, models.py and __init__.py); and you can have as many apps as you want.  You can also have applications that are not accessible using a URL - they are just there to support other applications; and your applications do not have to have the same name as the URLs either. So keeping that in mind ... you can create one application, call it www, and inside its views.py, define these very creatively named methods: Now in your urls.py, you can have:"}, {"id": 11489036, "score": 4, "vote": 0, "content": "<p>You are confused about what an app is. An app is just a collection of related functionality, usually (but not necessarily) including models, views and templates. </p>\n<p>\"Users\" is not an app - it's a model, but you would usually use the built-in django.contrib.auth app to provide user functionality. Any app can use any other app's code, including models. And you can have as many models as you like in a single app.</p>\n", "abstract": "You are confused about what an app is. An app is just a collection of related functionality, usually (but not necessarily) including models, views and templates.  \"Users\" is not an app - it's a model, but you would usually use the built-in django.contrib.auth app to provide user functionality. Any app can use any other app's code, including models. And you can have as many models as you like in a single app."}]}, {"link": "https://stackoverflow.com/questions/3070469/what-python-equivalent-of-sinatra-would-you-recommend", "question": {"id": "3070469", "title": "What python equivalent of Sinatra would you recommend?", "content": "<p>I like the <a href=\"http://www.sinatrarb.com/\" rel=\"noreferrer\">sinatra</a> framework, but might have to work in python. A quick web search has uncovered a few python equivalents including <a href=\"http://toastdriven.com/fresh/itty-sinatra-inspired-micro-framework/\" rel=\"noreferrer\">itty</a>, <a href=\"http://flask.pocoo.org/\" rel=\"noreferrer\">flask</a> and <a href=\"http://github.com/breily/juno\" rel=\"noreferrer\">juno</a>.</p>\n<p>I'd like to know people's experience of these, or other sinatra equivalents. Which would you recommend?</p>\n", "abstract": "I like the sinatra framework, but might have to work in python. A quick web search has uncovered a few python equivalents including itty, flask and juno. I'd like to know people's experience of these, or other sinatra equivalents. Which would you recommend?"}, "answers": [{"id": 3084827, "score": 38, "vote": 0, "content": "<p>Okay. So I'm biased because I'm the author of Flask, but here something to help you make the pick:</p>\n<ul>\n<li>itty - very minimal framework, Bottle is probably a more stable alternative if you want a single file installation.</li>\n<li>Flask - new and actively developed, shaped similar to Sinatra but also differs in a few points. Large number of extensions for SQLAlchemy, CouchDB and more.</li>\n<li>Juno - not updated for a year. Usually not the best sign.</li>\n</ul>\n<p>Besides the ones you mentioned there is also Bottle which is similar to Flask but more minimalistic.  Unlike Flask it also re-implements everything from ground up instead of building on an independent foundation like Werkzeug.</p>\n<p>Other alternatives is web.py, one of the first microframeworks ever.  Same rule as bottle: re-implements everything from the ground up.</p>\n", "abstract": "Okay. So I'm biased because I'm the author of Flask, but here something to help you make the pick: Besides the ones you mentioned there is also Bottle which is similar to Flask but more minimalistic.  Unlike Flask it also re-implements everything from ground up instead of building on an independent foundation like Werkzeug. Other alternatives is web.py, one of the first microframeworks ever.  Same rule as bottle: re-implements everything from the ground up."}]}, {"link": "https://stackoverflow.com/questions/75798/django-vs-grails-vs", "question": {"id": "75798", "title": "Django -vs- Grails -vs-?", "content": "<p>I'm wondering if there's such a thing as Django-like ease of web app development combined with good deployment, debugging and other tools? </p>\n<p>Django is a very productive framework for building content-heavy sites; the best I've tried and a breath of fresh air compared to some of the Java monstrosities out there. However it's written in Python which means there's little real support in the way of deployment/packaging, debugging, profilers and other tools that make building and maintaining applications much easier. </p>\n<p>Ruby has similar issues and although I do like Ruby <strong>much</strong> better than I like Python, I get the impression that Rails is roughly in the same boat at Django when it comes to managing/supporting the app. </p>\n<p>Has anyone here tried both Django and Grails (or other web frameworks) for non-trivial projects? How did they compare?</p>\n", "abstract": "I'm wondering if there's such a thing as Django-like ease of web app development combined with good deployment, debugging and other tools?  Django is a very productive framework for building content-heavy sites; the best I've tried and a breath of fresh air compared to some of the Java monstrosities out there. However it's written in Python which means there's little real support in the way of deployment/packaging, debugging, profilers and other tools that make building and maintaining applications much easier.  Ruby has similar issues and although I do like Ruby much better than I like Python, I get the impression that Rails is roughly in the same boat at Django when it comes to managing/supporting the app.  Has anyone here tried both Django and Grails (or other web frameworks) for non-trivial projects? How did they compare?"}, "answers": [{"id": 1955727, "score": 32, "vote": 0, "content": "<p>You asked for someone who used both Grails and Django. I've done work on both for big projects. Here's my Thoughts:</p>\n<p><strong>IDE's:</strong>\nDjango works really well in Eclipse, Grails works really well in IntelliJ Idea.</p>\n<p><strong>Debugging:</strong>\nPractically the same (assuming you use IntelliJ for Grails, and Eclipse for Python). Step debugging, inspecting variables, etc... never need a print statement for either. Sometimes django error messages can be useless but Grails error messages are usually pretty lengthy and hard to parse through.</p>\n<p><strong>Time to run a unit test:</strong>\ndjango: 2 seconds.\nGrails: 20 seconds (the tests themselves both run in a fraction of a second, it's the part about loading the framework to run them that takes the rest... as you can see, Grails is frustratingly slow to load).</p>\n<p><strong>Deployment:</strong>\nDjango: copy &amp; paste one file into an apache config, and to redeploy, just change the code and reload apache.\nGrails: create a .war file, deploy it on tomcat, rinse and repeat to redeploy.</p>\n<p><strong>Programming languages:</strong>\nGroovy is TOTALLY awesome. I love it, more so than Python. But I certainly have no complaints. </p>\n<p><strong>Plugins:</strong>\nGrails: lots of broken plugins (and can use every java lib ever).\nDjango: a few stable plugins, but enough to do most of what you need.</p>\n<p><strong>Database:</strong>\nDjango: schema migrations using South, and generally intuitive relations.\nGrails: no schema migrations, and by default it deletes the database on startup... WTF</p>\n<p><strong>Usage:</strong>\nDjango: startups (especially in the Gov 2.0 space), independent web dev shops.\nGrails: enterprise</p>\n<p>Hope that helps!</p>\n", "abstract": "You asked for someone who used both Grails and Django. I've done work on both for big projects. Here's my Thoughts: IDE's:\nDjango works really well in Eclipse, Grails works really well in IntelliJ Idea. Debugging:\nPractically the same (assuming you use IntelliJ for Grails, and Eclipse for Python). Step debugging, inspecting variables, etc... never need a print statement for either. Sometimes django error messages can be useless but Grails error messages are usually pretty lengthy and hard to parse through. Time to run a unit test:\ndjango: 2 seconds.\nGrails: 20 seconds (the tests themselves both run in a fraction of a second, it's the part about loading the framework to run them that takes the rest... as you can see, Grails is frustratingly slow to load). Deployment:\nDjango: copy & paste one file into an apache config, and to redeploy, just change the code and reload apache.\nGrails: create a .war file, deploy it on tomcat, rinse and repeat to redeploy. Programming languages:\nGroovy is TOTALLY awesome. I love it, more so than Python. But I certainly have no complaints.  Plugins:\nGrails: lots of broken plugins (and can use every java lib ever).\nDjango: a few stable plugins, but enough to do most of what you need. Database:\nDjango: schema migrations using South, and generally intuitive relations.\nGrails: no schema migrations, and by default it deletes the database on startup... WTF Usage:\nDjango: startups (especially in the Gov 2.0 space), independent web dev shops.\nGrails: enterprise Hope that helps!"}, {"id": 77693, "score": 10, "vote": 0, "content": "<blockquote>\n<p>However it's written in Python which\n  means there's little real support in\n  the way of deployment/packaging,\n  debugging, profilers and other tools\n  that make building and maintaining\n  applications much easier.</p>\n</blockquote>\n<p>Python has:</p>\n<ol>\n<li>a <a href=\"http://docs.python.org/lib/module-pdb.html\" rel=\"noreferrer\">great interactive debugger</a>, which makes very good use of Python <a href=\"http://en.wikipedia.org/wiki/REPL\" rel=\"noreferrer\">REPL</a>. </li>\n<li><a href=\"http://peak.telecommunity.com/DevCenter/EasyInstall\" rel=\"noreferrer\">easy_install</a> anv <a href=\"http://pypi.python.org/pypi/virtualenv\" rel=\"noreferrer\">virtualenv</a> for dependency management, packaging and deployment.</li>\n<li><a href=\"http://docs.python.org/lib/profile.html\" rel=\"noreferrer\">profiling features</a> comparable to other languages</li>\n</ol>\n<p>So IMHO you shouldn't worry about this things, use Python and Django and live happily :-)</p>\n<p>Lucky for you, newest version of <a href=\"http://blog.leosoto.com/2008/08/django-on-jython-its-here.html\" rel=\"noreferrer\">Django runs on Jython</a>, so you don't need to leave your whole Java ecosystem behind.</p>\n<p>Speaking of frameworks, I evaluated this year:</p>\n<ol>\n<li><a href=\"http://pylonshq.com/\" rel=\"noreferrer\">Pylons</a> (Python)</li>\n<li><a href=\"http://webpy.org/\" rel=\"noreferrer\">webpy</a> (Python)</li>\n<li><a href=\"http://www.symfony-project.org/\" rel=\"noreferrer\">Symfony</a> (PHP)</li>\n<li><a href=\"http://www.cakephp.org/\" rel=\"noreferrer\">CakePHP</a> (PHP)</li>\n</ol>\n<p>None of this frameworks comes close to the power of Django or Ruby on Rails. Based on my collegue opinion I could recommend you <a href=\"http://www.kohanaphp.com/home\" rel=\"noreferrer\">kohana</a> framework. The downside is, it's written in PHP and, as far as I know, PHP doesn't have superb tools for debugging, profiling and packaging of apps.</p>\n<p><strong>Edit:</strong> Here is a very good <a href=\"http://bud.ca/blog/pony\" rel=\"noreferrer\">article about packaging and deployment of Python apps</a> (specifically Django apps). It's a hot topic in Django community now.</p>\n", "abstract": "However it's written in Python which\n  means there's little real support in\n  the way of deployment/packaging,\n  debugging, profilers and other tools\n  that make building and maintaining\n  applications much easier. Python has: So IMHO you shouldn't worry about this things, use Python and Django and live happily :-) Lucky for you, newest version of Django runs on Jython, so you don't need to leave your whole Java ecosystem behind. Speaking of frameworks, I evaluated this year: None of this frameworks comes close to the power of Django or Ruby on Rails. Based on my collegue opinion I could recommend you kohana framework. The downside is, it's written in PHP and, as far as I know, PHP doesn't have superb tools for debugging, profiling and packaging of apps. Edit: Here is a very good article about packaging and deployment of Python apps (specifically Django apps). It's a hot topic in Django community now."}, {"id": 460360, "score": 10, "vote": 0, "content": "<p>Grails.</p>\n<p>Grails  just looks like Rails (Ruby),but it uses groovy which is simpler than java. It uses java technology and you can use any java lib without any trouble.</p>\n<p>I also choose Grails over simplicity and there are lots of java lib (such as jasper report, jawr etc) and I am glad that now they join with SpringSource which makes their base solid.</p>\n", "abstract": "Grails. Grails  just looks like Rails (Ruby),but it uses groovy which is simpler than java. It uses java technology and you can use any java lib without any trouble. I also choose Grails over simplicity and there are lots of java lib (such as jasper report, jawr etc) and I am glad that now they join with SpringSource which makes their base solid."}, {"id": 1997668, "score": 10, "vote": 0, "content": "<p>The statement that <em>grails deletes the database on start-up</em> is completely wrong.  It's behavior on start-up is completely configurable and easy to configure.  I generally use create-drop when running an app in dev mode.  I use update when I run in test and production.</p>\n<p>I also love the bootstrap processing that lets me pre-configure test users, data, etc by environment in Grails.  </p>\n<p>I'd love to see someone who has really built and deployed some commercial projects comment on the pros / cons.  Be a really interesting read.</p>\n", "abstract": "The statement that grails deletes the database on start-up is completely wrong.  It's behavior on start-up is completely configurable and easy to configure.  I generally use create-drop when running an app in dev mode.  I use update when I run in test and production. I also love the bootstrap processing that lets me pre-configure test users, data, etc by environment in Grails.   I'd love to see someone who has really built and deployed some commercial projects comment on the pros / cons.  Be a really interesting read."}, {"id": 78424, "score": 3, "vote": 0, "content": "<p>I have two friends who originally started writing an application using Ruby on Rails, but ran into a number of issues and limitations.  After about 8 weeks of working on it, they decided to investigate other alternatives.</p>\n<p>They settled on the <a href=\"http://www.catalystframework.org\" rel=\"nofollow noreferrer\">Catalyst Framework</a>, and Perl.  That was about 4 months ago now, and they've repeatedly talked about how much better the application is going, and how much more flexibility they have.</p>\n<p>With Perl, you have all of CPAN available to you, along with the large quantity of tools included.  I'd suggest taking a look at it, at least.</p>\n", "abstract": "I have two friends who originally started writing an application using Ruby on Rails, but ran into a number of issues and limitations.  After about 8 weeks of working on it, they decided to investigate other alternatives. They settled on the Catalyst Framework, and Perl.  That was about 4 months ago now, and they've repeatedly talked about how much better the application is going, and how much more flexibility they have. With Perl, you have all of CPAN available to you, along with the large quantity of tools included.  I'd suggest taking a look at it, at least."}, {"id": 97778, "score": 3, "vote": 0, "content": "<p>The \"good deployment\" issue -- for Python -- doesn't have the Deep Significance that it has for Java.</p>\n<p>Python deployment for Django is basically \"move the files\".  You can run straight out of the subversion trunk directory if you want to.</p>\n<p>You can, without breaking much of a sweat, using the Python <a href=\"http://docs.python.org/dist/dist.html\" rel=\"nofollow noreferrer\">distutils</a> and build yourself a distribution kit that puts your Django apps into Python's site-packages.  I'm not a big fan of it, but it's really easy to do.  </p>\n<p>Since my stuff runs in Linux, I have simple \"install.py\" scripts that move stuff out of the Subversion directories into <code>/opt/this</code> and <code>/opt/that</code> directories.  I use an explicit path settings in my Apache configuration to name those directories where the applications live.</p>\n<p>Patching can be done by editing the files in place.  (A bad policy.)  I prefer to edit in the SVN location and rerun my little install to be sure I actually have all the files under control.</p>\n", "abstract": "The \"good deployment\" issue -- for Python -- doesn't have the Deep Significance that it has for Java. Python deployment for Django is basically \"move the files\".  You can run straight out of the subversion trunk directory if you want to. You can, without breaking much of a sweat, using the Python distutils and build yourself a distribution kit that puts your Django apps into Python's site-packages.  I'm not a big fan of it, but it's really easy to do.   Since my stuff runs in Linux, I have simple \"install.py\" scripts that move stuff out of the Subversion directories into /opt/this and /opt/that directories.  I use an explicit path settings in my Apache configuration to name those directories where the applications live. Patching can be done by editing the files in place.  (A bad policy.)  I prefer to edit in the SVN location and rerun my little install to be sure I actually have all the files under control."}, {"id": 76198, "score": 1, "vote": 0, "content": "<p>cakephp.org</p>\n<p>Cakephp is really good, really close to ruby on rails (1.2).  It is in php, works very well on shared hosts and is easy to implement. </p>\n<p>The only downside is that the documentation is somewhat lacking, but you quickly get it and quickly start doing cool stuff.</p>\n<p>I totally recommend cakephp.</p>\n", "abstract": "cakephp.org Cakephp is really good, really close to ruby on rails (1.2).  It is in php, works very well on shared hosts and is easy to implement.  The only downside is that the documentation is somewhat lacking, but you quickly get it and quickly start doing cool stuff. I totally recommend cakephp."}, {"id": 81699, "score": 1, "vote": 0, "content": "<p>Personally I made some rather big projects with Django, but I can compare only with said \"montrosities\" (Spring, EJB) and really low-level stuff like Twisted.</p>\n<p>Web frameworks using interpreted languages are mostly in its infancy and all of them (actively maintained, that is) are getting better with every day.</p>\n", "abstract": "Personally I made some rather big projects with Django, but I can compare only with said \"montrosities\" (Spring, EJB) and really low-level stuff like Twisted. Web frameworks using interpreted languages are mostly in its infancy and all of them (actively maintained, that is) are getting better with every day."}, {"id": 83075, "score": 1, "vote": 0, "content": "<p>By \"good deployment\" are you comparing it with Java's EAR files, which allow you to deploy web applications by uploading a single file to a J2EE server? (And, to a lesser extent, WAR files; EAR files can have WAR files for dependent projects)</p>\n<p>I don't think Django or Rails have gotten quite to that point yet, but I could be wrong...  zuber pointed out an article with more details on the Python side.</p>\n<p><a href=\"http://www.capify.org/\" rel=\"nofollow noreferrer\">Capistrano</a> may help out on the Ruby side.</p>\n<p>Unfortunately, I haven't really worked with either Python or Ruby that much, so I can't help out on profilers or debuggers.</p>\n", "abstract": "By \"good deployment\" are you comparing it with Java's EAR files, which allow you to deploy web applications by uploading a single file to a J2EE server? (And, to a lesser extent, WAR files; EAR files can have WAR files for dependent projects) I don't think Django or Rails have gotten quite to that point yet, but I could be wrong...  zuber pointed out an article with more details on the Python side. Capistrano may help out on the Ruby side. Unfortunately, I haven't really worked with either Python or Ruby that much, so I can't help out on profilers or debuggers."}]}, {"link": "https://stackoverflow.com/questions/3143115/architecting-from-scratch-in-python-what-to-use", "question": {"id": "3143115", "title": "Architecting from scratch in Python: what to use?", "content": "<p>I'm lucky enough to have full control over the architecture of my company's app, and I've decided to scrap our prototype written in Ruby/Rails and start afresh in Python. This is for a few reasons: I want to learn Python, I prefer the syntax and I've basically said \"F**k it, let's do it.\"</p>\n<p>So, baring in mind this is going to be a pretty intensive app, I'd like to hear your opinions on the following:</p>\n<ul>\n<li>Generic web frameworks</li>\n<li>ORM/Database Layer (perhaps to work with MongoDB)</li>\n<li>RESTful API w/ oAuth/xAuth authentication</li>\n<li>Testing/BDD support</li>\n<li>Message queue (I'd like to keep this in Python if possible)</li>\n</ul>\n<p>The API is going to need to interface with a Clojure app to handle some internal data stuff, and interface with the message queue, so if it's not Python it'd be great to have some libraries to it.</p>\n<p>TDD/BDD is very important to me, so the more tested, the better!</p>\n<p>It'll be really interesting to read your thoughts on this. Much appreciated.</p>\n<p>My best,</p>\n<p>Jamie</p>\n", "abstract": "I'm lucky enough to have full control over the architecture of my company's app, and I've decided to scrap our prototype written in Ruby/Rails and start afresh in Python. This is for a few reasons: I want to learn Python, I prefer the syntax and I've basically said \"F**k it, let's do it.\" So, baring in mind this is going to be a pretty intensive app, I'd like to hear your opinions on the following: The API is going to need to interface with a Clojure app to handle some internal data stuff, and interface with the message queue, so if it's not Python it'd be great to have some libraries to it. TDD/BDD is very important to me, so the more tested, the better! It'll be really interesting to read your thoughts on this. Much appreciated. My best, Jamie"}, "answers": [{"id": 3144382, "score": 29, "vote": 0, "content": "<p><strong>Frameworks</strong></p>\n<p>OK, so I'm a little biased here as I currently make extensive use of Django and organise the Django User Group in London so bear that in mind when reading the following.</p>\n<p>Start with Django because it's a great gateway drug. Lots of documentation and literature, a very active community of people to talk to and lots of example code around the web. </p>\n<p>That's a completely non-technical reason. Pylons is probably purer in terms of Python philosophy (being much more a collection of discrete bits and pieces) but lots of the technical stuff is personal preference, at least until you get into Python more. Compare the very active Django tag on Stack Overflow with that of pylons or turbogears though and I'd argue getting started is simply easier with Django irrespective of anything to do with code.</p>\n<p>Personally I default to Django, but find that an increasing amount of time I actually opt for writing using simpler micro frameworks (think Sinatra rather than Rails). Lots of things to choose from (good list here, <a href=\"http://fewagainstmany.com/blog/python-micro-frameworks-are-all-the-rage\" rel=\"noreferrer\">http://fewagainstmany.com/blog/python-micro-frameworks-are-all-the-rage</a>). I tend to use MNML (because I wrote parts of it and it's tiny) but others are actively developed. I tend to do this for small, stupid web services which are then strung together with a Django project in the middle serving people.</p>\n<p>Worth noting here is appengine. You have to work within it's limitations and it's not designed for everything but it's a great way to just play with Python and get something up and working quickly. It makes a great testbed for learning and experimentation.</p>\n<p><strong>Mongo/ORM</strong></p>\n<p>On the MongoDB front you'll likely want to look at the basic python mongo library ( <a href=\"http://api.mongodb.org/python/\" rel=\"noreferrer\">http://api.mongodb.org/python/</a> ) first to see if it has everything you need. If you really do want something a little more ORM like then mongoengine (<a href=\"http://hmarr.com/mongoengine/\" rel=\"noreferrer\">http://hmarr.com/mongoengine/</a>) might be what you're looking for. A bunch of folks are also working on making Django specifically integrate more seamlessly with nosql backends. Some of that is for future Django releases, but django-norel ( <a href=\"http://www.allbuttonspressed.com/projects/django-nonrel\" rel=\"noreferrer\">http://www.allbuttonspressed.com/projects/django-nonrel</a>) has code now.</p>\n<p>For relational data SQLAlchemy ( <a href=\"http://www.sqlalchemy.org/\" rel=\"noreferrer\">http://www.sqlalchemy.org/</a>) is good if you want something standalone. Django's ORM is also excellent if you're using Django.</p>\n<p><strong>API</strong></p>\n<p>The most official Oauth library is python-oauth2 ( <a href=\"http://github.com/simplegeo/python-oauth2\" rel=\"noreferrer\">http://github.com/simplegeo/python-oauth2</a>), which handily has a Django example as part of it's docs.</p>\n<p>Piston ( <a href=\"http://bitbucket.org/jespern/django-piston/wiki/Home\" rel=\"noreferrer\">http://bitbucket.org/jespern/django-piston/wiki/Home</a>) is a Django app which provides lots of tools for building APIs. It has the advantage of being pretty active and well maintained and in production all over the place. Other projects exist too, including Dagny ( <a href=\"http://zacharyvoase.github.com/dagny/\" rel=\"noreferrer\">http://zacharyvoase.github.com/dagny/</a>) which is an early attempt to create something akin to RESTful resources in Rails.</p>\n<p>In reality any Python framework (or even just raw WSGI code) should be reasonably good for this sort of task.</p>\n<p><strong>Testing</strong></p>\n<p>Python has unittest as part of it's standard library, and unittest2 is in python 2.7 (but backported to previous versions too <a href=\"http://pypi.python.org/pypi/unittest2/0.1.4\" rel=\"noreferrer\">http://pypi.python.org/pypi/unittest2/0.1.4</a>). Some people also like Nose ( <a href=\"http://code.google.com/p/python-nose/\" rel=\"noreferrer\">http://code.google.com/p/python-nose/</a>), which is an alternative test runner with some additional features. Twill ( <a href=\"http://twill.idyll.org/\" rel=\"noreferrer\">http://twill.idyll.org/</a>) is also nice, it's a \"a simple scripting language for Web browsing\", so handy for some functional testing. Freshen ( <a href=\"http://github.com/rlisagor/freshen\" rel=\"noreferrer\">http://github.com/rlisagor/freshen</a>) is a port of cucumber to Python. I haven't yet gotten round to using this in anger, but a quick look now suggests it's much better than when I last looked.</p>\n<p>I actually also use Ruby for high level testing of Python apps and apis because I love the combination of celerity and cucumber. But I'm weird and get funny looks from other Python people for this.</p>\n<p><strong>Message Queues</strong></p>\n<p>For a message queue, whatever language I'm using, I now always use RabbitMQ. I've had some success with stompserver in the past but Rabbit is awesome. Don't worry that it's not itself written in Python, neither is PostgresSQL, Nginx or MongoDB - all for good reason. What you care about are the libraries available. What you're looking for here is py-amqplib ( <a href=\"http://barryp.org/software/py-amqplib/\" rel=\"noreferrer\">http://barryp.org/software/py-amqplib/</a>) which is a low level library for talking amqp (the protocol for talking to rabbit as well as other message queues). I've also used Carrot ( <a href=\"http://github.com/ask/carrot/\" rel=\"noreferrer\">http://github.com/ask/carrot/</a>), which is easier to get started with and provides a nicer API. Think bunny in Ruby if you're familiar with that.</p>\n<p><strong>Environment</strong></p>\n<p>Whatever bits and pieces you decide to use from the Python ecosystem I'd recommend getting to who pip and virtualenv ( <a href=\"http://clemesha.org/blog/2009/jul/05/modern-python-hacker-tools-virtualenv-fabric-pip/\" rel=\"noreferrer\">http://clemesha.org/blog/2009/jul/05/modern-python-hacker-tools-virtualenv-fabric-pip/</a> - note that fabric is also cool, but not essential and these docs are out of date on that tool). Think about using Ruby without gem, bundler or rvm and you'll be in the right direction.</p>\n", "abstract": "Frameworks OK, so I'm a little biased here as I currently make extensive use of Django and organise the Django User Group in London so bear that in mind when reading the following. Start with Django because it's a great gateway drug. Lots of documentation and literature, a very active community of people to talk to and lots of example code around the web.  That's a completely non-technical reason. Pylons is probably purer in terms of Python philosophy (being much more a collection of discrete bits and pieces) but lots of the technical stuff is personal preference, at least until you get into Python more. Compare the very active Django tag on Stack Overflow with that of pylons or turbogears though and I'd argue getting started is simply easier with Django irrespective of anything to do with code. Personally I default to Django, but find that an increasing amount of time I actually opt for writing using simpler micro frameworks (think Sinatra rather than Rails). Lots of things to choose from (good list here, http://fewagainstmany.com/blog/python-micro-frameworks-are-all-the-rage). I tend to use MNML (because I wrote parts of it and it's tiny) but others are actively developed. I tend to do this for small, stupid web services which are then strung together with a Django project in the middle serving people. Worth noting here is appengine. You have to work within it's limitations and it's not designed for everything but it's a great way to just play with Python and get something up and working quickly. It makes a great testbed for learning and experimentation. Mongo/ORM On the MongoDB front you'll likely want to look at the basic python mongo library ( http://api.mongodb.org/python/ ) first to see if it has everything you need. If you really do want something a little more ORM like then mongoengine (http://hmarr.com/mongoengine/) might be what you're looking for. A bunch of folks are also working on making Django specifically integrate more seamlessly with nosql backends. Some of that is for future Django releases, but django-norel ( http://www.allbuttonspressed.com/projects/django-nonrel) has code now. For relational data SQLAlchemy ( http://www.sqlalchemy.org/) is good if you want something standalone. Django's ORM is also excellent if you're using Django. API The most official Oauth library is python-oauth2 ( http://github.com/simplegeo/python-oauth2), which handily has a Django example as part of it's docs. Piston ( http://bitbucket.org/jespern/django-piston/wiki/Home) is a Django app which provides lots of tools for building APIs. It has the advantage of being pretty active and well maintained and in production all over the place. Other projects exist too, including Dagny ( http://zacharyvoase.github.com/dagny/) which is an early attempt to create something akin to RESTful resources in Rails. In reality any Python framework (or even just raw WSGI code) should be reasonably good for this sort of task. Testing Python has unittest as part of it's standard library, and unittest2 is in python 2.7 (but backported to previous versions too http://pypi.python.org/pypi/unittest2/0.1.4). Some people also like Nose ( http://code.google.com/p/python-nose/), which is an alternative test runner with some additional features. Twill ( http://twill.idyll.org/) is also nice, it's a \"a simple scripting language for Web browsing\", so handy for some functional testing. Freshen ( http://github.com/rlisagor/freshen) is a port of cucumber to Python. I haven't yet gotten round to using this in anger, but a quick look now suggests it's much better than when I last looked. I actually also use Ruby for high level testing of Python apps and apis because I love the combination of celerity and cucumber. But I'm weird and get funny looks from other Python people for this. Message Queues For a message queue, whatever language I'm using, I now always use RabbitMQ. I've had some success with stompserver in the past but Rabbit is awesome. Don't worry that it's not itself written in Python, neither is PostgresSQL, Nginx or MongoDB - all for good reason. What you care about are the libraries available. What you're looking for here is py-amqplib ( http://barryp.org/software/py-amqplib/) which is a low level library for talking amqp (the protocol for talking to rabbit as well as other message queues). I've also used Carrot ( http://github.com/ask/carrot/), which is easier to get started with and provides a nicer API. Think bunny in Ruby if you're familiar with that. Environment Whatever bits and pieces you decide to use from the Python ecosystem I'd recommend getting to who pip and virtualenv ( http://clemesha.org/blog/2009/jul/05/modern-python-hacker-tools-virtualenv-fabric-pip/ - note that fabric is also cool, but not essential and these docs are out of date on that tool). Think about using Ruby without gem, bundler or rvm and you'll be in the right direction."}, {"id": 3340005, "score": 14, "vote": 0, "content": "<p>Ok, you might be making a mistake, the same one I made when I started with python.</p>\n<p>Before you decide on a thing like django, which is an excellent, yet <em>atypical</em> python web framework, spend an night cuddled up with:</p>\n<p><a href=\"http://bitworking.org/news/Why_so_many_Python_web_frameworks\" rel=\"noreferrer\">This</a>, is a good start.  Make sure you do <a href=\"http://werkzeug.pocoo.org/wiki30/files/wiki30.mp4\" rel=\"noreferrer\">A little Werkzeug watching</a> , Then check out \n some classic <a href=\"http://pythonpaste.org/webob/do-it-yourself.html\" rel=\"noreferrer\">WebOb</a>.  Maybe, if you feel  the fire in the blood, and you might, wsgi is a bit flawed, but only to the gods, check out <a href=\"http://flask.pocoo.org/\" rel=\"noreferrer\">Flask</a></p>\n<p>I'm not saying use it, Django is beautiful too, but if you don't know python, and you go through django, you run the risk of learning a framework.  </p>\n<p>WSGI is super straightforward.  You'll find out about Paste, and Pastescript, and Pylons.</p>\n<p>Then, make your decision. It'll be  much easier learning stuff doing bare bones wsgi or Flask, stuff like variable assignment, using the interpreter, style concerns, testing, on 3 files for a couple of nights, instead of django.  Take 2 nights.  Then you'll see the great similarity between python web frameworks, instead of the differences.  Hell, you might even roll with Flask. </p>\n<p>Just some advice, I did the same thing with ruby, going in through Rails, and... well, strong words were said.  </p>\n<p>Language, then basic wsgi and testing, then pick your framework and roll</p>\n", "abstract": "Ok, you might be making a mistake, the same one I made when I started with python. Before you decide on a thing like django, which is an excellent, yet atypical python web framework, spend an night cuddled up with: This, is a good start.  Make sure you do A little Werkzeug watching , Then check out \n some classic WebOb.  Maybe, if you feel  the fire in the blood, and you might, wsgi is a bit flawed, but only to the gods, check out Flask I'm not saying use it, Django is beautiful too, but if you don't know python, and you go through django, you run the risk of learning a framework.   WSGI is super straightforward.  You'll find out about Paste, and Pastescript, and Pylons. Then, make your decision. It'll be  much easier learning stuff doing bare bones wsgi or Flask, stuff like variable assignment, using the interpreter, style concerns, testing, on 3 files for a couple of nights, instead of django.  Take 2 nights.  Then you'll see the great similarity between python web frameworks, instead of the differences.  Hell, you might even roll with Flask.  Just some advice, I did the same thing with ruby, going in through Rails, and... well, strong words were said.   Language, then basic wsgi and testing, then pick your framework and roll"}, {"id": 3143591, "score": 4, "vote": 0, "content": "<p>I'm new to python myself, and plan to get more in depth with it this year. I've had a few false starts at this, but always professional needs bring me back to PHP. The few times I've done some development, I've had really good experiences with <strong>web2py</strong> as a python framework. It's quite well done, and complete in features, while still being extremely lightweight. The database layer seems to be very flexible and mature. </p>\n<p>As for TDD/BDD and the rest of your questions, I don't have any experience with python options, but would be interested to hear what others say. </p>\n", "abstract": "I'm new to python myself, and plan to get more in depth with it this year. I've had a few false starts at this, but always professional needs bring me back to PHP. The few times I've done some development, I've had really good experiences with web2py as a python framework. It's quite well done, and complete in features, while still being extremely lightweight. The database layer seems to be very flexible and mature.  As for TDD/BDD and the rest of your questions, I don't have any experience with python options, but would be interested to hear what others say. "}, {"id": 3148795, "score": 0, "vote": 0, "content": "<p>I am using <a href=\"http://www.twistedmatrix.com\" rel=\"nofollow noreferrer\">Twisted Framework</a> based Nevow library for python based web app.</p>\n<p>All your criteria fit into this single framework.</p>\n", "abstract": "I am using Twisted Framework based Nevow library for python based web app. All your criteria fit into this single framework."}]}, {"link": "https://stackoverflow.com/questions/3646002/django-turbo-gears-web2py-which-is-better-for-what", "question": {"id": "3646002", "title": "Django, Turbo Gears, Web2Py, which is better for what?", "content": "<p>I got a project in mind that makes it worth to finally take the plunge into programming.</p>\n<p>After reading a lot of stuff, here and elsewhere, I'm set on making Python the one I learn for now, over C# or java.  What convinced me the most was actually Paul Graham's excursions on programming languages and Lisp, though Arc is in the experimental stage, which wouldn't help me do this web app right now.</p>\n<p>As for web app fast, I've checked out Django, Turbo Gears and Py2Web. In spite of spending a lot of time reading, I still have no clue which one I should use.</p>\n<p><strong>1)  Django</strong> certainly has the nicest online presence, and a nicely done onsite tutorial, they sure know how to show off their thing.</p>\n<p><strong>2)  Web2Py</strong> attracted me with its no-install-needed and the claim of making Django look complicated. But when you dig around on their website, you quickly find content that hasn't been updated in years with broken external links...  There's ghosts on that website that make someone not intimately familiar with the project worry if it might be flatlining.</p>\n<p><strong>3)  Turbo Gears</strong>  ...I guess its modular too. People who wrote about it loved it...  I couldn't find anything specific that might make it special over Django.  </p>\n<p>I haven't decided on an IDE yet, though I read all the answers to the Intellisense code completion post here. Showing extra code snippets would be cool too for noobs like me, but I suppose I should choose my web frame work first and then pick an editor that will work well with it.</p>\n<p>Since probably no framework is hands down the best at everything, I will give some specifics on the app I want to build:</p>\n<p>It will use MySQL, it needs register/sign-in, and there will be a load of simple math operations on data from input and SQL queries.  I've completed a functional prototype in Excel, so I know exactly what I want to build, which I hope will help me overcome my noobness.  I'll be a small app, nothing big.</p>\n<p>And I don't want to see any HTML while building it ;-) </p>\n<p>PS: thanks to the people running Stackoverflow, found this place just at the right moment too!</p>\n", "abstract": "I got a project in mind that makes it worth to finally take the plunge into programming. After reading a lot of stuff, here and elsewhere, I'm set on making Python the one I learn for now, over C# or java.  What convinced me the most was actually Paul Graham's excursions on programming languages and Lisp, though Arc is in the experimental stage, which wouldn't help me do this web app right now. As for web app fast, I've checked out Django, Turbo Gears and Py2Web. In spite of spending a lot of time reading, I still have no clue which one I should use. 1)  Django certainly has the nicest online presence, and a nicely done onsite tutorial, they sure know how to show off their thing. 2)  Web2Py attracted me with its no-install-needed and the claim of making Django look complicated. But when you dig around on their website, you quickly find content that hasn't been updated in years with broken external links...  There's ghosts on that website that make someone not intimately familiar with the project worry if it might be flatlining. 3)  Turbo Gears  ...I guess its modular too. People who wrote about it loved it...  I couldn't find anything specific that might make it special over Django.   I haven't decided on an IDE yet, though I read all the answers to the Intellisense code completion post here. Showing extra code snippets would be cool too for noobs like me, but I suppose I should choose my web frame work first and then pick an editor that will work well with it. Since probably no framework is hands down the best at everything, I will give some specifics on the app I want to build: It will use MySQL, it needs register/sign-in, and there will be a load of simple math operations on data from input and SQL queries.  I've completed a functional prototype in Excel, so I know exactly what I want to build, which I hope will help me overcome my noobness.  I'll be a small app, nothing big. And I don't want to see any HTML while building it ;-)  PS: thanks to the people running Stackoverflow, found this place just at the right moment too!"}, "answers": [{"id": 3648273, "score": 19, "vote": 0, "content": "<p>You should look at the web2py online documentation (<a href=\"http://web2py.com/book\" rel=\"nofollow noreferrer\">http://web2py.com/book</a>). It comes with a Role Based Access Control (the most general access control mechanism) and it is very granular, you can grant access for specific operation on specific records. It comes with a web based IDE but you can use <a href=\"http://www.wingware.com/\" rel=\"nofollow noreferrer\">WingIDE</a>, <a href=\"https://www.eclipse.org/\" rel=\"nofollow noreferrer\">Eclipse</a> and <a href=\"http://www.jetbrains.com/pycharm/\" rel=\"nofollow noreferrer\">PyCharm</a> too. It comes with  helper system that allows you to generate HTML without using HTML. Here is an example of a complete app that requires users to register/login/post messages:</p>\n<pre><code class=\"python\">db.define_table('message',Field('body'),Field('author',db.auth_user))\n@auth.requires_login()\ndef index():\n    db.message.author.default=auth.user.id\n    db.message.author.writable=False\n    return dict(form=crud.create(db.message),\n                messages=db(db.message.id&gt;0).select())\n</code></pre>\n<p>The web2py project is very active as you can see from the list of changes <a href=\"http://code.google.com/p/web2py/source/list\" rel=\"nofollow noreferrer\">http://code.google.com/p/web2py/source/list</a></p>\n<p>If you have web2py related questions I strongly suggest you join the web2py mailing list:\n<a href=\"http://groups.google.com/group/web2py/topics\" rel=\"nofollow noreferrer\">http://groups.google.com/group/web2py/topics</a></p>\n<p>We are very active and your questions will be answered very quickly.</p>\n", "abstract": "You should look at the web2py online documentation (http://web2py.com/book). It comes with a Role Based Access Control (the most general access control mechanism) and it is very granular, you can grant access for specific operation on specific records. It comes with a web based IDE but you can use WingIDE, Eclipse and PyCharm too. It comes with  helper system that allows you to generate HTML without using HTML. Here is an example of a complete app that requires users to register/login/post messages: The web2py project is very active as you can see from the list of changes http://code.google.com/p/web2py/source/list If you have web2py related questions I strongly suggest you join the web2py mailing list:\nhttp://groups.google.com/group/web2py/topics We are very active and your questions will be answered very quickly."}, {"id": 4338367, "score": 6, "vote": 0, "content": "<p>I have to say as not particularly skilled developer, the speed at which I have been able to create using web2py has blown my mind. In large part due to the amazing community and the core value Massimo has of making the framework accessible.</p>\n<p>When I started I had written 0 lines of code in Python\nNever heard of web2py</p>\n<p>I've been at it seriously for about a month and have progressed (in my usual fashion) from asking questions that no one could answer (because they didn't make any sense) to coding for hours at a time without picking up a book or asking a question.</p>\n<p>I'm really impressed.</p>\n", "abstract": "I have to say as not particularly skilled developer, the speed at which I have been able to create using web2py has blown my mind. In large part due to the amazing community and the core value Massimo has of making the framework accessible. When I started I had written 0 lines of code in Python\nNever heard of web2py I've been at it seriously for about a month and have progressed (in my usual fashion) from asking questions that no one could answer (because they didn't make any sense) to coding for hours at a time without picking up a book or asking a question. I'm really impressed."}, {"id": 3646066, "score": 4, "vote": 0, "content": "<p>I've had positive experiences with Django.</p>\n<ul>\n<li>Built-In Authentication and easy to use extensions for <a href=\"http://bitbucket.org/ubernostrum/django-registration/overview\" rel=\"nofollow noreferrer\"><code>registration</code></a></li>\n<li>Very good documentation</li>\n<li>You probable write your HTML templates mostly in <code>base.html</code>, then just use template inheritance (Note: You'll need to write at least a little bit of HTML)</li>\n<li>In contrast to Turbogears, Django is more 'out-of-the-box'</li>\n<li>I don't have any experience with web2py, but from my impression, it tries to do a little to much 'out-of-the-box'</li>\n</ul>\n", "abstract": "I've had positive experiences with Django."}, {"id": 3647482, "score": 2, "vote": 0, "content": "<p>If you decide to go with Django, make sure that you use its Generic Views. They will save you from writing lots of code, both Python and HTML.</p>\n<p>Also, unless there is a very specific reason for you to use MySQL, I advise you to switch to PostgreSQL. Django is much more oriented towards PostgreSQL and it's a much better database anyway.</p>\n<p>The online Django documentation is great, this is what put it apart from all the other frameworks. I also recommend the book <a href=\"http://apress.com/book/view/9781590599969\" rel=\"nofollow noreferrer\">Practical Django Projects</a> by James Bennett</p>\n", "abstract": "If you decide to go with Django, make sure that you use its Generic Views. They will save you from writing lots of code, both Python and HTML. Also, unless there is a very specific reason for you to use MySQL, I advise you to switch to PostgreSQL. Django is much more oriented towards PostgreSQL and it's a much better database anyway. The online Django documentation is great, this is what put it apart from all the other frameworks. I also recommend the book Practical Django Projects by James Bennett"}, {"id": 3757753, "score": 2, "vote": 0, "content": "<ul>\n<li><p>Django: Heard it has the best administrative\ninterface.  But uses it's own ORM, i.e. doesn't use SQL-Alchemy.</p></li>\n<li><p>Web2py: Didn't research this.</p></li>\n<li>Turbogears2:\nUses SQL-Alchemy by default, uses Catwalk for admin\ninterface, but documentation isn't as\ngreat.</li>\n</ul>\n<p>I chose Turbogears2 because it uses popular components, so I didn't have to learn anything new...</p>\n", "abstract": "Django: Heard it has the best administrative\ninterface.  But uses it's own ORM, i.e. doesn't use SQL-Alchemy. Web2py: Didn't research this. I chose Turbogears2 because it uses popular components, so I didn't have to learn anything new..."}, {"id": 15945257, "score": 2, "vote": 0, "content": "<p>I've used both web2py and RoR extensively, and while RoR has gotten a lot of popularity and support in the past few years, web2py is simpler, cleaner, less \"magical\", and yet also offers more (useful) out-of-the-box functionality. I'd say that web2py has more potential than RoR, but it is a relatively new framework and does yet not have the maturity of RoR. (Despite that, though, I'd choose web2py over RoR any day...)</p>\n", "abstract": "I've used both web2py and RoR extensively, and while RoR has gotten a lot of popularity and support in the past few years, web2py is simpler, cleaner, less \"magical\", and yet also offers more (useful) out-of-the-box functionality. I'd say that web2py has more potential than RoR, but it is a relatively new framework and does yet not have the maturity of RoR. (Despite that, though, I'd choose web2py over RoR any day...)"}, {"id": 3646070, "score": 1, "vote": 0, "content": "<p>If you \"don't want to see any HTML while building it\" then you can forget Django. It is not focused on \"point-click-done,\" it is focused on pros going from concept to production in the shortest time possible. The hierarchical nature of the templating language can lead to some very clean overall site layouts. I use Django for all of my larger sites and I love it.</p>\n<p>Although it's written in PHP, not Python, you might take a look at the major new version of <a href=\"http://wordpress.org/\" rel=\"nofollow noreferrer\">WordPress</a> that came out about 2 or 3 months ago. In 3.0 they have come a long way from being a \"blogs only\" environment and there are tons of ready-made templates for it. Of course if you want to tweak a template, well, there's that nasty old HTML again. I am considering using it for my smaller clients that can't deal with the admin of a dedicated server, etc., that tends to come with a Django site.</p>\n<p><strong>Update:</strong>\nAh, I missed the semi-joke -- I was up too early and that tends to make me tone deaf to humor. As far as using templates from existing sites, I have done this quite successfully with a couple of sites, both those that were static and those originally driven by well-written PHP scripts. I recommend a careful reading of the <a href=\"http://docs.djangoproject.com/en/dev/ref/templates/builtins/?from=olddocs#extends\" rel=\"nofollow noreferrer\"><code>{% extends %}</code></a> and <a href=\"http://docs.djangoproject.com/en/dev/ref/templates/builtins/?from=olddocs#include\" rel=\"nofollow noreferrer\"><code>{% include %}</code></a> docs. Both take either a string literal <em>or</em> a variable. I have used the later method and it can be quite useful for a site that has strong hierarchy distinguished by style changes across branches.</p>\n<p>It is also worth the time to understand the search order for templates -- it can be used to good effect, but it can be puzzling if you don't grok it. See the template-related items in the <a href=\"http://docs.djangoproject.com/en/dev/ref/settings/?from=olddocs#template-context-processors\" rel=\"nofollow noreferrer\">settings.py</a> file for this and other useful goodies.</p>\n", "abstract": "If you \"don't want to see any HTML while building it\" then you can forget Django. It is not focused on \"point-click-done,\" it is focused on pros going from concept to production in the shortest time possible. The hierarchical nature of the templating language can lead to some very clean overall site layouts. I use Django for all of my larger sites and I love it. Although it's written in PHP, not Python, you might take a look at the major new version of WordPress that came out about 2 or 3 months ago. In 3.0 they have come a long way from being a \"blogs only\" environment and there are tons of ready-made templates for it. Of course if you want to tweak a template, well, there's that nasty old HTML again. I am considering using it for my smaller clients that can't deal with the admin of a dedicated server, etc., that tends to come with a Django site. Update:\nAh, I missed the semi-joke -- I was up too early and that tends to make me tone deaf to humor. As far as using templates from existing sites, I have done this quite successfully with a couple of sites, both those that were static and those originally driven by well-written PHP scripts. I recommend a careful reading of the {% extends %} and {% include %} docs. Both take either a string literal or a variable. I have used the later method and it can be quite useful for a site that has strong hierarchy distinguished by style changes across branches. It is also worth the time to understand the search order for templates -- it can be used to good effect, but it can be puzzling if you don't grok it. See the template-related items in the settings.py file for this and other useful goodies."}]}, {"link": "https://stackoverflow.com/questions/136069/python-web-development-with-or-without-a-framework", "question": {"id": "136069", "title": "Python web development - with or without a framework", "content": "<p>I am planning on porting a PHP application over to Python.  The application is mostly about data collection and processing.  The main application runs as a stand alone command line application.  There is a web interface to the application which is basically a very light weight reporting interface.  </p>\n<p>I did not use a framework in the PHP version, but being new to Python, I am wondering if it would be advantageous to use something like Django or at the very least Genshi.  The caveat is I do not want my application distribution to be overwhelmed by the framework parts I would need to distribute with the application.  </p>\n<p>Is using only the cgi import in Python the best way to go in this circumstance?  I would tend to think a framework is too much overhead, but perhaps I'm not thinking in a very \"python\" way about them.  What suggestions do you have in this scenario?</p>\n", "abstract": "I am planning on porting a PHP application over to Python.  The application is mostly about data collection and processing.  The main application runs as a stand alone command line application.  There is a web interface to the application which is basically a very light weight reporting interface.   I did not use a framework in the PHP version, but being new to Python, I am wondering if it would be advantageous to use something like Django or at the very least Genshi.  The caveat is I do not want my application distribution to be overwhelmed by the framework parts I would need to distribute with the application.   Is using only the cgi import in Python the best way to go in this circumstance?  I would tend to think a framework is too much overhead, but perhaps I'm not thinking in a very \"python\" way about them.  What suggestions do you have in this scenario?"}, "answers": [{"id": 136188, "score": 15, "vote": 0, "content": "<p>The command-line Python, IMO, definitely comes first.  Get that to work, since that's the core of what you're doing.</p>\n<p>The issue is that using a web framework's ORM from a command line application isn't obvious.  Django provides specific instructions for using their ORM from a command-line app.  Those are annoying at first, but I think they're a life-saver in the long run.  I use it heavily for giant uploads of customer-supplied files.</p>\n<p>Don't use bare CGI.  It's not impossible, but too many things can go wrong, and they've all been solved by the frameworks.  Why reinvent something?  Just use someone else's code.</p>\n<p>Frameworks involve learning, but no real \"overhead\".  They're not slow.  They're code you don't have to write or debug.</p>\n<ol>\n<li><p>Learn some Python.</p></li>\n<li><p>Do the <a href=\"http://docs.djangoproject.com/en/dev/\" rel=\"noreferrer\">Django</a> tutorial.</p></li>\n<li><p>Start to build a web app.</p>\n<p>a.  Start a Django project.  Build a small application in that project.</p>\n<p>b.  Build your new model using the Django ORM.  Create a Django unit test for the model.  Be sure that it works.  You'll be able to use the default admin pages and do a lot of playing around.  Just don't build the <em>entire</em> web site yet.</p></li>\n<li><p>Get your command-line app to work using Django ORM.  Essentially, you have to finesse the settings file for this app to work nicely.  See the <a href=\"http://docs.djangoproject.com/en/dev/topics/settings/#topics-settings\" rel=\"noreferrer\">settings/configuration</a> section.  </p></li>\n<li><p>Once you've got your command line and the default admin running, you can finish\nthe web app.</p></li>\n</ol>\n<p>Here's the golden rule of frameworks:  <strong>It's code you don't have to write, debug or maintain.</strong>  Use them.</p>\n", "abstract": "The command-line Python, IMO, definitely comes first.  Get that to work, since that's the core of what you're doing. The issue is that using a web framework's ORM from a command line application isn't obvious.  Django provides specific instructions for using their ORM from a command-line app.  Those are annoying at first, but I think they're a life-saver in the long run.  I use it heavily for giant uploads of customer-supplied files. Don't use bare CGI.  It's not impossible, but too many things can go wrong, and they've all been solved by the frameworks.  Why reinvent something?  Just use someone else's code. Frameworks involve learning, but no real \"overhead\".  They're not slow.  They're code you don't have to write or debug. Learn some Python. Do the Django tutorial. Start to build a web app. a.  Start a Django project.  Build a small application in that project. b.  Build your new model using the Django ORM.  Create a Django unit test for the model.  Be sure that it works.  You'll be able to use the default admin pages and do a lot of playing around.  Just don't build the entire web site yet. Get your command-line app to work using Django ORM.  Essentially, you have to finesse the settings file for this app to work nicely.  See the settings/configuration section.   Once you've got your command line and the default admin running, you can finish\nthe web app. Here's the golden rule of frameworks:  It's code you don't have to write, debug or maintain.  Use them."}, {"id": 136804, "score": 11, "vote": 0, "content": "<p>You might consider using something like <a href=\"http://webpy.org/\" rel=\"noreferrer\">web.py</a> which would be easy to distribute (since it's small) and it would also be easy to adapt your other tools to it since it doesn't require you to submit to the framework so much like Django does. </p>\n<p>Be forewarned, however, it's not the most loved framework in the Python community, but it might be just the thing for you. You might also check out <a href=\"http://mdp.cti.depaul.edu/\" rel=\"noreferrer\">web2py</a>, but I know less about that.</p>\n", "abstract": "You might consider using something like web.py which would be easy to distribute (since it's small) and it would also be easy to adapt your other tools to it since it doesn't require you to submit to the framework so much like Django does.  Be forewarned, however, it's not the most loved framework in the Python community, but it might be just the thing for you. You might also check out web2py, but I know less about that."}, {"id": 136152, "score": 4, "vote": 0, "content": "<p>Depends on the size of the project. If you had only a few previous php-scripts which called your stand alone application then I'd probably go for a cgi-app.</p>\n<p>If you have use for databases, url rewriting, templating, user management and such, then using a framework is a good idea.</p>\n<p>And of course, before you port it, consider if it's worth it just to switch the language or if there are specific Python features you need.</p>\n<p>Good luck!</p>\n", "abstract": "Depends on the size of the project. If you had only a few previous php-scripts which called your stand alone application then I'd probably go for a cgi-app. If you have use for databases, url rewriting, templating, user management and such, then using a framework is a good idea. And of course, before you port it, consider if it's worth it just to switch the language or if there are specific Python features you need. Good luck!"}, {"id": 136234, "score": 3, "vote": 0, "content": "<p>I recently ported a PHP app to Python using <a href=\"http://webpy.org/\" rel=\"nofollow noreferrer\">web.py</a>.  As frameworks go it is extremely lightweight with minimal dependencies, and it tends to stay out of your way, so it might be the compromise you're looking for. </p>\n<p>It all depends on your initial application though, because with a large application the advantages of having a full-featured framework handling the plumbing tend to outweigh the disadvantages involved in having to drag around all the framework code.</p>\n", "abstract": "I recently ported a PHP app to Python using web.py.  As frameworks go it is extremely lightweight with minimal dependencies, and it tends to stay out of your way, so it might be the compromise you're looking for.  It all depends on your initial application though, because with a large application the advantages of having a full-featured framework handling the plumbing tend to outweigh the disadvantages involved in having to drag around all the framework code."}, {"id": 136683, "score": 2, "vote": 0, "content": "<p>Django makes it possible to whip out a website rapidly, that's for sure. You don't need to be a Python master to use it, and since it's very pythonic in it's design, and there is not really any \"magic\" going on, it will help you learn Python along the way.</p>\n<p>Start with the examples, check out some django screencasts from TwiD and you'll be on your way.</p>\n<p>Start slow, tweaking the admin, and playing with it via shell is the way to start. Once you have a handle on the ORM and get how things work, start building the real stuff!</p>\n<p>The framework isn't going to cause any performance problems, like S. Lott said, it's code you don't have to maintain, and that's the best kind.</p>\n", "abstract": "Django makes it possible to whip out a website rapidly, that's for sure. You don't need to be a Python master to use it, and since it's very pythonic in it's design, and there is not really any \"magic\" going on, it will help you learn Python along the way. Start with the examples, check out some django screencasts from TwiD and you'll be on your way. Start slow, tweaking the admin, and playing with it via shell is the way to start. Once you have a handle on the ORM and get how things work, start building the real stuff! The framework isn't going to cause any performance problems, like S. Lott said, it's code you don't have to maintain, and that's the best kind."}, {"id": 138888, "score": 2, "vote": 0, "content": "<p>Go for a framework. Basic stuffs like session handling are a nightmare if you don't use a one because Python is not web specialized like PHP.</p>\n<p>If you think django is too much, you can try a lighter one like the very small but still handy web.py.</p>\n", "abstract": "Go for a framework. Basic stuffs like session handling are a nightmare if you don't use a one because Python is not web specialized like PHP. If you think django is too much, you can try a lighter one like the very small but still handy web.py."}, {"id": 1436495, "score": 2, "vote": 0, "content": "<p>For the love of pete, use a framework! There are literally dozens of frameworks out there, from cherrypy to django to albatross to ... well.. you name it. In fact, the huge number of web frameworks are what people point to when they whine about the popularity of Rails. </p>\n<p>The Python web development community is divided up with no single voice. But that's another topic alltogether! The point is, there are \"web toolkits\" (e.g. albatross) that are fairly lightweight but powerful enough to get you through the day (e.g. auto-verifying a bot didn't do a simple form submission fake, or helping with keeping MVC clean).</p>\n<p>If you want something that's not \"too much framework\" look here:</p>\n<p><a href=\"http://wiki.python.org/moin/WebFrameworks\" rel=\"nofollow noreferrer\">http://wiki.python.org/moin/WebFrameworks</a></p>\n<p>Look under \"Basic Frameworks Providing Templating\". They're all lightweight and do all the \"don't reinvent the wheel\" stuff without forcing a Mac truck on you.</p>\n", "abstract": "For the love of pete, use a framework! There are literally dozens of frameworks out there, from cherrypy to django to albatross to ... well.. you name it. In fact, the huge number of web frameworks are what people point to when they whine about the popularity of Rails.  The Python web development community is divided up with no single voice. But that's another topic alltogether! The point is, there are \"web toolkits\" (e.g. albatross) that are fairly lightweight but powerful enough to get you through the day (e.g. auto-verifying a bot didn't do a simple form submission fake, or helping with keeping MVC clean). If you want something that's not \"too much framework\" look here: http://wiki.python.org/moin/WebFrameworks Look under \"Basic Frameworks Providing Templating\". They're all lightweight and do all the \"don't reinvent the wheel\" stuff without forcing a Mac truck on you."}, {"id": 136166, "score": 0, "vote": 0, "content": "<p>It depends on the way you are going to distribute your application.<br/>\nIf it will only be used internally, go for django. It's a joy to work with it.\nHowever, django really falls short at the distribution-task; django-applications are a pain to set up.</p>\n", "abstract": "It depends on the way you are going to distribute your application.\nIf it will only be used internally, go for django. It's a joy to work with it.\nHowever, django really falls short at the distribution-task; django-applications are a pain to set up."}]}, {"link": "https://stackoverflow.com/questions/5460011/web-application-admin-generators", "question": {"id": "5460011", "title": "Web application admin generators", "content": "<p>Since <a href=\"http://www.symfony-project.org/book/1_2/14-Generators\" rel=\"nofollow\"><strong>Symfony 1.x's admin generator</strong></a>, I found this kind of tool really useful to prototype applications, show something very quickly to customers etc.</p>\n<p>Now for <strong>Symfony2</strong>, admin generator does not seems to be a priority (see <a href=\"https://groups.google.com/forum/#!topic/symfony-devs/N1wlvj1F5Eo/discussion\" rel=\"nofollow\">here</a> and <a href=\"https://github.com/sonata-project/AdminBundle\" rel=\"nofollow\">here</a>)</p>\n<p><a href=\"http://docs.djangoproject.com/en/dev/ref/contrib/admin/\" rel=\"nofollow\"><strong>Django</strong>'s admin generator</a> seems very interesting...</p>\n<p>Which web application admin generator (any language / technology) would you recommend (pros / cons)?</p>\n", "abstract": "Since Symfony 1.x's admin generator, I found this kind of tool really useful to prototype applications, show something very quickly to customers etc. Now for Symfony2, admin generator does not seems to be a priority (see here and here) Django's admin generator seems very interesting... Which web application admin generator (any language / technology) would you recommend (pros / cons)?"}, "answers": [{"id": 5493792, "score": 12, "vote": 0, "content": "<p>Django's automatic admin app is excellent.  Once you've written your models, it automatically creates a full-featured admin app around them where you can create, update and delete records.  It's also extensible and customizable for just about whatever you need.</p>\n<p>Here's a <a href=\"http://devpicayune.com/pycon2008/django_admin.html\">pretty good overview about it</a>.  Django (and python) is intuitive and satisfying to work with -- I highly recommend that you set it up and play with it and see how well it works.</p>\n", "abstract": "Django's automatic admin app is excellent.  Once you've written your models, it automatically creates a full-featured admin app around them where you can create, update and delete records.  It's also extensible and customizable for just about whatever you need. Here's a pretty good overview about it.  Django (and python) is intuitive and satisfying to work with -- I highly recommend that you set it up and play with it and see how well it works."}, {"id": 5523242, "score": 7, "vote": 0, "content": "<p><strong>Updated 2017</strong></p>\n<p><a href=\"https://github.com/atk4/ui\" rel=\"nofollow noreferrer\">Agile UI</a> (a successor of atk4.3) is an MIT based PHP UI Component library. It gives your application nice looking, consistent User Interface without you have to write any HTML and works with any PHP framework or application.</p>\n<blockquote>\n<p>Demo: <a href=\"http://ui.agiletoolkit.org/demos/index.php\" rel=\"nofollow noreferrer\">http://ui.agiletoolkit.org/demos/index.php</a></p>\n</blockquote>\n<p>The reason I think this is better than a built-in generator:</p>\n<ul>\n<li>Almost no dependencies, works with any framework or PHP app.</li>\n<li>Can work with SQL or NoSQL, relies on <a href=\"https://git.io/ad\" rel=\"nofollow noreferrer\">Agile Data</a>.</li>\n<li>Stylish, modern and responsive. (<a href=\"https://semantic-ui.com/\" rel=\"nofollow noreferrer\">Semantic UI</a>)</li>\n<li>Interactive. \"Form\" uses JS to submit, display in-line validation. \"CRUD\" uses modal windows, pagination and QuickSearch.</li>\n<li>Extensible. Need charts? <a href=\"https://github.com/atk4/chart\" rel=\"nofollow noreferrer\">https://github.com/atk4/chart</a>.</li>\n<li>Open-source</li>\n</ul>\n<p>To build a minimalistic application admin you only need 15 lines of PHP code:</p>\n<pre><code class=\"python\">&lt;?php\n$app = new \\atk4\\ui\\App('My App');\n$app-&gt;initLayout(new \\atk4\\ui\\Layout\\Admin());\n\n$db = \\atk4\\data\\Persistence::connect($DSN);\n\nclass User extends \\atk4\\data\\Model {\n    public $table = 'user';\n    function init() {\n        parent::init();\n\n        $this-&gt;addField('name');\n        $this-&gt;addField('email', ['required'=&gt;true]);\n        $this-&gt;addField('password', ['type'=&gt;'password']);\n    }\n}\n$app-&gt;layout-&gt;add(new \\atk4\\ui\\CRUD())\n  -&gt;setModel(new User($db));\n</code></pre>\n<p>Result:</p>\n<p><a href=\"https://i.stack.imgur.com/3niDG.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/3niDG.png\"/></a></p>\n", "abstract": "Updated 2017 Agile UI (a successor of atk4.3) is an MIT based PHP UI Component library. It gives your application nice looking, consistent User Interface without you have to write any HTML and works with any PHP framework or application. Demo: http://ui.agiletoolkit.org/demos/index.php The reason I think this is better than a built-in generator: To build a minimalistic application admin you only need 15 lines of PHP code: Result: "}, {"id": 5535658, "score": 4, "vote": 0, "content": "<p>Personally, I have found Yii's scaffolding is the best there is. <a href=\"http://www.yiiframework.com/doc/guide/1.1/en/quickstart.first-app\" rel=\"nofollow\">Quick First Application</a></p>\n<p>What I truly loved:</p>\n<ul>\n<li><p>Controlled creation of files. Yii provides an interface to create all required files, called Gii.</p></li>\n<li><p>You have the ability to generate your model classes based on the database model.</p></li>\n<li><p>You have the ability to generate CRUD operations for all your model classes (Action methods for your controller class).</p></li>\n</ul>\n<p>The generated scaffolding includes: Pagination, Searching, Advanced Searching, Listening, Inserting and Updating includes validation out of the box, Deleting. And all of the interface is ajax driven.</p>\n", "abstract": "Personally, I have found Yii's scaffolding is the best there is. Quick First Application What I truly loved: Controlled creation of files. Yii provides an interface to create all required files, called Gii. You have the ability to generate your model classes based on the database model. You have the ability to generate CRUD operations for all your model classes (Action methods for your controller class). The generated scaffolding includes: Pagination, Searching, Advanced Searching, Listening, Inserting and Updating includes validation out of the box, Deleting. And all of the interface is ajax driven."}, {"id": 5493699, "score": 2, "vote": 0, "content": "<p>For Ruby on Rails: <a href=\"https://stackoverflow.com/questions/61383/is-there-a-good-admin-generator-for-ruby-on-rails\">Here is some discussion on SO</a></p>\n<p>But ActiveScaffold's home page at the moment is still talking about Rails 2.3, so you may want to read past the accepted answer and check the others to see if there are newer ones. </p>\n<p><a href=\"https://github.com/sferik/rails_admin\" rel=\"nofollow noreferrer\">Rails Admin</a> looks to be actively developed and has good pedigree (having been a Google Summer of Code project mentored by big names in the Rails community, so I'd start there if I were looking.</p>\n", "abstract": "For Ruby on Rails: Here is some discussion on SO But ActiveScaffold's home page at the moment is still talking about Rails 2.3, so you may want to read past the accepted answer and check the others to see if there are newer ones.  Rails Admin looks to be actively developed and has good pedigree (having been a Google Summer of Code project mentored by big names in the Rails community, so I'd start there if I were looking."}, {"id": 5531304, "score": 2, "vote": 0, "content": "<p>I can recommend CakePHP <a href=\"http://book.cakephp.org/view/1103/Scaffolding\" rel=\"nofollow\">scaffolding</a>, where you can also add <a href=\"http://book.cakephp.org/view/1104/Creating-a-simple-admin-interface-with-scaffolding\" rel=\"nofollow\">admin routing</a>. Nice for you is that you can stay on PHP, which you also used for Symphony. Be warned, you might get addicted to Cake ;)</p>\n", "abstract": "I can recommend CakePHP scaffolding, where you can also add admin routing. Nice for you is that you can stay on PHP, which you also used for Symphony. Be warned, you might get addicted to Cake ;)"}, {"id": 5552113, "score": 2, "vote": 0, "content": "<p>something a lot more powerful for CakePHP is <a href=\"https://github.com/josegonzalez/cake_admin\" rel=\"nofollow\">https://github.com/josegonzalez/cake_admin</a>, little bit of a Django rip-off :)</p>\n", "abstract": "something a lot more powerful for CakePHP is https://github.com/josegonzalez/cake_admin, little bit of a Django rip-off :)"}, {"id": 5493720, "score": 1, "vote": 0, "content": "<p>I like <a href=\"http://sprox.org/\" rel=\"nofollow\">sprox</a>, for Python. Although I have not found it particularly useful for production, it can help a lot in terms of prototyping and testing -- its simplicity is its strength here, enhancing Python's own strengths.</p>\n", "abstract": "I like sprox, for Python. Although I have not found it particularly useful for production, it can help a lot in terms of prototyping and testing -- its simplicity is its strength here, enhancing Python's own strengths."}, {"id": 5522576, "score": 1, "vote": 0, "content": "<p><a href=\"http://www.padrinorb.com/\" rel=\"nofollow\">Padrino</a> has \"Padrino Admin\":</p>\n<p><a href=\"http://www.padrinorb.com/guides/padrino-admin\" rel=\"nofollow\">http://www.padrinorb.com/guides/padrino-admin</a></p>\n<p>While not as popular as Rails, it's built around the excellent <a href=\"http://www.sinatrarb.com/\" rel=\"nofollow\">Sinatra</a> DSL.</p>\n", "abstract": "Padrino has \"Padrino Admin\": http://www.padrinorb.com/guides/padrino-admin While not as popular as Rails, it's built around the excellent Sinatra DSL."}, {"id": 5562819, "score": 1, "vote": 0, "content": "<p>For Rails applications, <a href=\"https://github.com/sferik/rails_admin/\" rel=\"nofollow\">Rails Admin</a> with <a href=\"https://github.com/ryanb/cancan\" rel=\"nofollow\">CanCan</a> is the best solution as of now. These are very actively maintained and supports Rails 3.0. With CanCan, you can customize access on models. So that you can easily set multiple level of admins/authors. Previously I have used <a href=\"https://github.com/activescaffold/active_scaffold\" rel=\"nofollow\">ActiveScaffold</a> for 2.0 application but it doesn't seem to support newest Rails.</p>\n", "abstract": "For Rails applications, Rails Admin with CanCan is the best solution as of now. These are very actively maintained and supports Rails 3.0. With CanCan, you can customize access on models. So that you can easily set multiple level of admins/authors. Previously I have used ActiveScaffold for 2.0 application but it doesn't seem to support newest Rails."}]}, {"link": "https://stackoverflow.com/questions/45837031/is-there-a-better-way-to-perform-multiple-output-with-dash-by-plotly", "question": {"id": "45837031", "title": "Is there a better way to perform multiple output with Dash by Plotly?", "content": "<p>As we can see in <a href=\"https://plot.ly/dash/getting-started-part-2#interactivity\" rel=\"noreferrer\">Interactivity part of Getting started</a>, one callback function can accept multiple inputs but always has single output. </p>\n<p>Assume that we have two blocks separately that must be updated after input change. Of course, the simplest way is to make two callbacks with same input for each of the blocks. The problem is that request performs twice while one is enough to get all data.</p>\n<pre><code class=\"python\">@app.callback(\n    dash.dependencies.Output('element_1', 'children'),\n    [dash.dependencies.Input('filter', 'value')])\ndef callback_element_1(filter):\n    return get_data(filter).el1\n\n@app.callback(\n    dash.dependencies.Output('element_2', 'children'),\n    [dash.dependencies.Input('filter', 'value')])\ndef callback_element_2(filter):\n    return get_data(filter).el2\n</code></pre>\n<p>Solution I find is to wrap these elements in single block and re-render it completely with a single request. But in this case all static content in the wrapper will be refreshed too, especially if initial elements are far from each other in DOM.</p>\n<pre><code class=\"python\">@app.callback(\n    dash.dependencies.Output('wrapper', 'children'),\n    [dash.dependencies.Input('filter', 'value')])\ndef callback_element_wrapper(filter):\n    data = get_data(filter)\n    return html.Div(\n        children=[\n            data.el1,\n            # more static content\n            data.el2,\n        ]\n    )\n</code></pre>\n<p>So maybe there are more elegant way to output in two or more elements with a single request?</p>\n", "abstract": "As we can see in Interactivity part of Getting started, one callback function can accept multiple inputs but always has single output.  Assume that we have two blocks separately that must be updated after input change. Of course, the simplest way is to make two callbacks with same input for each of the blocks. The problem is that request performs twice while one is enough to get all data. Solution I find is to wrap these elements in single block and re-render it completely with a single request. But in this case all static content in the wrapper will be refreshed too, especially if initial elements are far from each other in DOM. So maybe there are more elegant way to output in two or more elements with a single request?"}, "answers": [{"id": 56659967, "score": 12, "vote": 0, "content": "<p>Now, Plotly Dash supporting multiple outputs in single event. This is with latest version of dash==0.38.0rc1</p>\n<pre><code class=\"python\">@app.callback(\n    [\n        Output('output1', 'children'), \n        Output('output2', 'children')\n    ],\n    [\n        Input('output-btn', 'n_clicks'),\n        State('output-btn', 'n_clicks_timestamp')\n    ]\n)\ndef on_click(n_clicks, n_clicks_timestamp):\n    if n_clicks is None:\n        raise PreventUpdate\n\n    return n_clicks, n_clicks_timestamp\n</code></pre>\n<p><a href=\"https://github.com/plotly/dash/pull/436\" rel=\"noreferrer\">Git Sample</a></p>\n", "abstract": "Now, Plotly Dash supporting multiple outputs in single event. This is with latest version of dash==0.38.0rc1 Git Sample"}, {"id": 47289150, "score": 6, "vote": 0, "content": "<p>Based on <a href=\"https://plot.ly/dash/sharing-data-between-callbacks\" rel=\"nofollow noreferrer\" title=\"this\">this</a>,\nthere is a way.</p>\n<p>What you can do is to update a hidden \"Signal Element\" (this can be a text input for example), which in turn, updates the two main elements. </p>\n<p>Run the <code>get_data(filter)</code> once, and store the result in a global variable. Then instead of updating <code>element_1</code> and <code>element_2</code>, \nupdate that signal element. </p>\n<pre><code class=\"python\">result = []\n\n@app.callback(\ndash.dependencies.Output('signal', 'value'),\n[dash.dependencies.Input('filter', 'value')])\ndef callback_signal(filter):\n    global result\n    result = get_data(filter)\n    return filter\n\n@app.callback(\ndash.dependencies.Output('element_1', 'children'),\n[dash.dependencies.Input('signal', 'value')])\ndef callback_element_1(filter):\n    return result.el1\n\n\n@app.callback(\ndash.dependencies.Output('element_2', 'children'),\n[dash.dependencies.Input('signal', 'value')])\ndef callback_element_2(filter):\n    return result.el2\n</code></pre>\n<p>In my case, I was using Dash in a single user environment, and using the global variable was not an issue. In case you have multiple users who will be running the app at the same time, the alternatives are available, and you can find them in the same link. </p>\n", "abstract": "Based on this,\nthere is a way. What you can do is to update a hidden \"Signal Element\" (this can be a text input for example), which in turn, updates the two main elements.  Run the get_data(filter) once, and store the result in a global variable. Then instead of updating element_1 and element_2, \nupdate that signal element.  In my case, I was using Dash in a single user environment, and using the global variable was not an issue. In case you have multiple users who will be running the app at the same time, the alternatives are available, and you can find them in the same link. "}, {"id": 54217843, "score": 2, "vote": 0, "content": "<p>What if you can compose the action listeners in an outer function? using Oleh's example </p>\n<pre><code class=\"python\">def setup_action_callbacks(app):\n    result = []\n\n    @app.callback(\n    dash.dependencies.Output('signal', 'value'),\n    [dash.dependencies.Input('filter', 'value')])\n    def callback_signal(filter):\n        result = get_data(filter)\n        return filter\n\n    @app.callback(\n    dash.dependencies.Output('element_1', 'children'),\n    [dash.dependencies.Input('signal', 'value')])\n    def callback_element_1(filter):\n        return result.el1\n\n\n    @app.callback(\n    dash.dependencies.Output('element_2', 'children'),\n    [dash.dependencies.Input('signal', 'value')])\n    def callback_element_2(filter):\n        return result.el2\n</code></pre>\n<p>Such that:</p>\n<pre><code class=\"python\">def get_app_layout(app):\n    setup_action_callbacks(app)\n    return html.Div()\n\napp = DjangoDash(name=\"a_nice_name\", app_name=\"a_nice_app_name\")\napp.layout = get_app_layout(app)\n</code></pre>\n", "abstract": "What if you can compose the action listeners in an outer function? using Oleh's example  Such that:"}, {"id": 55169923, "score": 2, "vote": 0, "content": "<p>Multi output callbacks support was merged in Dash (2019/03/01).</p>\n<ul>\n<li><p>See GitHub pull-request: <a href=\"https://github.com/plotly/dash/pull/436\" rel=\"nofollow noreferrer\">Multi output callbacks support</a></p></li>\n<li><p>See announcement: <a href=\"https://community.plot.ly/t/multiple-outputs-in-dash-now-available/19437\" rel=\"nofollow noreferrer\">Multiple outputs in Dash - Now Available!</a></p></li>\n</ul>\n", "abstract": "Multi output callbacks support was merged in Dash (2019/03/01). See GitHub pull-request: Multi output callbacks support See announcement: Multiple outputs in Dash - Now Available!"}]}, {"link": "https://stackoverflow.com/questions/11228153/bottle-framework-with-multiple-files", "question": {"id": "11228153", "title": "bottle framework with multiple files", "content": "<p>I've read the Bottle Documentation but I can't find the example of how to use Bottle with multiple files. Below is the way I did and it's working but I'm not sure whether this is the proper way to go (I saw <code>merge()</code> and <code>mount()</code> in API but not sure if they are related to this). Please give me the comments.</p>\n<ol>\n<li><p>all.py  (This is the main file for running)</p>\n<pre><code class=\"python\">#! /usr/bin/python\nfrom bottle import route, run\n\nimport hello1\nimport hello2    # if I have 10 files, it will be 10 imports\n\nrun(host='localhost', port=8080, debug=True)\n</code></pre></li>\n<li><p>hello1.py</p>\n<pre><code class=\"python\">#! /usr/bin/python\nfrom bottle import route, run\n\n@route('/hello1')\ndef hello1():\n    return \"Hello world no.1\"\n</code></pre></li>\n<li><p>hello2.py</p>\n<pre><code class=\"python\">#! /usr/bin/python\nfrom bottle import route, run\n\n@route('/hello2')\ndef hello2():\n    return \"Hello world no.2\"\n</code></pre></li>\n</ol>\n", "abstract": "I've read the Bottle Documentation but I can't find the example of how to use Bottle with multiple files. Below is the way I did and it's working but I'm not sure whether this is the proper way to go (I saw merge() and mount() in API but not sure if they are related to this). Please give me the comments. all.py  (This is the main file for running) hello1.py hello2.py"}, "answers": [{"id": 21006726, "score": 13, "vote": 0, "content": "<p>I've wanted to use a single bottle server to serve a suite of micro-applications and for a decent separation of concerns, have wanted to do what you've been looking for.</p>\n<p>Here's how I resolved my task:\n<br/><br/>\n<strong>rootApp.py</strong> (Your main file)</p>\n<pre><code class=\"python\">from bottle import Bottle\nfrom clientApp import clientApp\n\nrootApp = Bottle()\n@rootApp.route('/')\ndef rootIndex():\n    return 'Application Suite Home Page'\n\nif __name__ == '__main__':\n    rootApp.merge(clientApp)\n    rootApp.run(debug=True)\n</code></pre>\n<p><br/><br/>\n<strong>clientApp.py</strong> (The new app needing to be merged into the suite)</p>\n<pre><code class=\"python\">from bottle import Bottle\n\nclientApp = Bottle()\n\n@clientApp.route('/clientApp')\ndef clientAppIndex():\n    return 'Client App HomePage'\n</code></pre>\n<p><br/>\nI am not sure if this is the best way to do it, but it seems to work without complaints and saves the hassle of having to <a href=\"https://stackoverflow.com/questions/17044939/python-bottle-can-run-two-programs-on-the-same-address-and-port-on-windows\">share ports between applications</a> that could otherwise have mutual knowledge. The approach really stems out of a design preference but I'd be grateful if someone could demonstrate how/if the AppStack could be used to get the same result.</p>\n", "abstract": "I've wanted to use a single bottle server to serve a suite of micro-applications and for a decent separation of concerns, have wanted to do what you've been looking for. Here's how I resolved my task:\n\nrootApp.py (Your main file) \nclientApp.py (The new app needing to be merged into the suite) \nI am not sure if this is the best way to do it, but it seems to work without complaints and saves the hassle of having to share ports between applications that could otherwise have mutual knowledge. The approach really stems out of a design preference but I'd be grateful if someone could demonstrate how/if the AppStack could be used to get the same result."}, {"id": 11228787, "score": 2, "vote": 0, "content": "<p>If you split your code into 10 Python modules, you\u2019re going to do 10 imports. You can iterate with <code>__import__</code>:</p>\n<pre><code class=\"python\">for i in range(1, 11):\n    __import__('hello%d' % i)\n</code></pre>\n<p>but this doesn\u2019t strike me as a good idea. Why would you <em>need</em> 10 modules with a micro-framework?</p>\n", "abstract": "If you split your code into 10 Python modules, you\u2019re going to do 10 imports. You can iterate with __import__: but this doesn\u2019t strike me as a good idea. Why would you need 10 modules with a micro-framework?"}, {"id": 50587925, "score": 2, "vote": 0, "content": "<p>Not sure about the BEST way, but indeed <strong>mount()</strong> <a href=\"https://bottlepy.org/docs/dev/api.html\" rel=\"nofollow noreferrer\">might be used</a> and looks good for me (tested with python 3.6 + Bottle 0.12.13).</p>\n<p><strong>First</strong> of all, building one of your \"sub apps\" in a <code>app1.py</code> file:</p>\n<pre><code class=\"python\">from bottle import Bottle\n\nserver1 = Bottle()\n@server1.route('/')\ndef root():\n    return 'Hello from sub app 1'\n</code></pre>\n<p><strong>Then</strong> you use it in your main app:</p>\n<pre><code class=\"python\">from bottle import Bottle\nfrom app1 import server1 \n\nmainApp = Bottle()\n\n\nif __name__ == \"__main__\":\n    mainApp.mount('/appli1', server1)\n    mainApp.run()\n</code></pre>\n<p><strong>Lets go:</strong></p>\n<p>Hit your server address: <a href=\"http://myServer/appli1\" rel=\"nofollow noreferrer\">http://myServer/appli1</a></p>\n<p>Let me know if you need a fully functional example.</p>\n", "abstract": "Not sure about the BEST way, but indeed mount() might be used and looks good for me (tested with python 3.6 + Bottle 0.12.13). First of all, building one of your \"sub apps\" in a app1.py file: Then you use it in your main app: Lets go: Hit your server address: http://myServer/appli1 Let me know if you need a fully functional example."}, {"id": 11316428, "score": 1, "vote": 0, "content": "<p>Why would you want to have one module per view? The views are usually grouped in some logical manner, e.g.:</p>\n<ul>\n<li><code>/</code>, <code>/post/:id</code>, <code>/tags</code>/, <code>/tag/:tag</code> in <code>blog.py</code>,</li>\n<li><code>/admin</code>, <code>/admin/newpost</code>, <code>/admin/editpost/:id</code> in <code>admin.py</code>, </li>\n<li>and so forth.</li>\n</ul>\n<p>You should also read the chapter <a href=\"http://flask.pocoo.org/docs/patterns/packages/\" rel=\"nofollow\">Becoming Big</a> from the Flask documentation. For a medium-sized app, you'll probably want to create a package with a layout similar to this:</p>\n<pre><code class=\"python\">/yourapplication\n    /runserver.py\n    /yourapplication\n        /__init__.py\n        /views.py\n        /static\n            /style.css\n        /templates\n            layout.html\n            index.html\n            login.html\n</code></pre>\n<p>For even larger apps, split views into a sub-package.</p>\n", "abstract": "Why would you want to have one module per view? The views are usually grouped in some logical manner, e.g.: You should also read the chapter Becoming Big from the Flask documentation. For a medium-sized app, you'll probably want to create a package with a layout similar to this: For even larger apps, split views into a sub-package."}]}, {"link": "https://stackoverflow.com/questions/6954108/python-rest-frameworks-for-app-engine", "question": {"id": "6954108", "title": "Python REST frameworks for App Engine?", "content": "<p>Any pointers, advice on implementing a REST API on App Engine with Python? Using <code>webapp</code> for the application itself.</p>\n<p>What I currently know is that I can: </p>\n<ul>\n<li><p>hack up my own <code>webapp</code> handlers for handling REST-like URIs, but this seems to lose its elegance for larger amounts of resources. I mean, it's simple when it comes to <code>temperature/atlanta</code>, but not so much* for even a rather simple <code>/users/alice/address/work</code> (though do keep in mind that I'm not saying this after having implemented that, just after spending some time trying to design an appropriate handler, so my perception may be off).</p></li>\n<li><p>use the REST functionality provided by one of the bigger Python web frameworks out there. I have some unexplainable sympathy towards <code>web2py</code>, but, since it's not used for the project, bundling it with the application just to provide some REST functionality seems.. overkill?</p></li>\n</ul>\n<p>(Huh, looks like I don't like any of these approaches. Tough.)</p>\n<p>So here's me asking: what advice, preferably based on experience, would you have for me here? What are my options, is my view of them correct, did I miss something?</p>\n<p>Thanks in advance.</p>\n", "abstract": "Any pointers, advice on implementing a REST API on App Engine with Python? Using webapp for the application itself. What I currently know is that I can:  hack up my own webapp handlers for handling REST-like URIs, but this seems to lose its elegance for larger amounts of resources. I mean, it's simple when it comes to temperature/atlanta, but not so much* for even a rather simple /users/alice/address/work (though do keep in mind that I'm not saying this after having implemented that, just after spending some time trying to design an appropriate handler, so my perception may be off). use the REST functionality provided by one of the bigger Python web frameworks out there. I have some unexplainable sympathy towards web2py, but, since it's not used for the project, bundling it with the application just to provide some REST functionality seems.. overkill? (Huh, looks like I don't like any of these approaches. Tough.) So here's me asking: what advice, preferably based on experience, would you have for me here? What are my options, is my view of them correct, did I miss something? Thanks in advance."}, "answers": [{"id": 9695945, "score": 10, "vote": 0, "content": "<p>I had a similar issue.  Wanting to quickly get my DataStore exposed via REST to WebApps. </p>\n<p>Found: <a href=\"http://code.google.com/p/appengine-rest-server/\">AppEngine REST Server</a>. </p>\n<p>I have only used it lightly so far, but it certainly appears to be very useful with a small amount of work.  And it does use webapp as you suggested.</p>\n", "abstract": "I had a similar issue.  Wanting to quickly get my DataStore exposed via REST to WebApps.  Found: AppEngine REST Server.  I have only used it lightly so far, but it certainly appears to be very useful with a small amount of work.  And it does use webapp as you suggested."}, {"id": 6954482, "score": 6, "vote": 0, "content": "<p><a href=\"http://code.google.com/appengine/docs/python/tools/protorpc/overview.html\" rel=\"noreferrer\">ProtoRPC</a> is bundled with the SDK, and it is robust and actively developed (however experimental). Although I think the source code itself is a little convoluted, the feature-set is pretty complete and it was made by someone with experience in creating this kind of library. It supports transmiting using JSON, ProtocolBuffer and URL-encoded formats.</p>\n<p>Also, you can create APIs that work on the server side <strong>and</strong> client side -- it defines a 'message' protocol with implementations in Python and JavaScript. I used other \"RESTful\" Python libraries, but no other provided this consistency out of the box.</p>\n<p><a href=\"http://code.google.com/p/google-protorpc/\" rel=\"noreferrer\">Here is the project page</a> and <a href=\"https://groups.google.com/forum/#!forum/google-protorpc-discuss\" rel=\"noreferrer\">here is the mailing list</a>.</p>\n<p><strong>Edit:</strong> maybe their documentation is lacking some keywords, but just to be clear: one or the purposes of ProtoRPC is to provide a solid foundation to create REST services.</p>\n", "abstract": "ProtoRPC is bundled with the SDK, and it is robust and actively developed (however experimental). Although I think the source code itself is a little convoluted, the feature-set is pretty complete and it was made by someone with experience in creating this kind of library. It supports transmiting using JSON, ProtocolBuffer and URL-encoded formats. Also, you can create APIs that work on the server side and client side -- it defines a 'message' protocol with implementations in Python and JavaScript. I used other \"RESTful\" Python libraries, but no other provided this consistency out of the box. Here is the project page and here is the mailing list. Edit: maybe their documentation is lacking some keywords, but just to be clear: one or the purposes of ProtoRPC is to provide a solid foundation to create REST services."}]}, {"link": "https://stackoverflow.com/questions/58711/how-would-you-design-a-very-pythonic-ui-framework", "question": {"id": "58711", "title": "How would you design a very &quot;Pythonic&quot; UI framework?", "content": "<p>I have been playing with the Ruby library \"shoes\". Basically you can write a GUI application in the following way:</p>\n<pre><code class=\"python\">Shoes.app do\n  t = para \"Not clicked!\"\n  button \"The Label\" do\n    alert \"You clicked the button!\" # when clicked, make an alert\n    t.replace \"Clicked!\" # ..and replace the label's text\n  end\nend\n</code></pre>\n<p>This made me think - how would I design a similarly nice-to-use GUI framework in Python? One that doesn't have the usual tyings of basically being wrappers to a C* library (In the case of GTK, Tk, wx, QT etc etc)</p>\n<p>Shoes takes things from web devlopment (like <code>#f0c2f0</code> style colour notation, CSS layout techniques, like <code>:margin =&gt; 10</code>), and from ruby (extensively using blocks in sensible ways)</p>\n<p>Python's lack of \"rubyish blocks\" makes a (metaphorically)-direct port impossible:</p>\n<pre><code class=\"python\">def Shoeless(Shoes.app):\n    self.t = para(\"Not clicked!\")\n\n    def on_click_func(self):\n        alert(\"You clicked the button!\")\n        self.t.replace(\"clicked!\")\n\n    b = button(\"The label\", click=self.on_click_func)\n</code></pre>\n<p>No where near as clean, and wouldn't be <em>nearly</em> as flexible, and I'm not even sure if it would be implementable.</p>\n<p>Using decorators seems like an interesting way to map blocks of code to a specific action:</p>\n<pre><code class=\"python\">class BaseControl:\n    def __init__(self):\n        self.func = None\n\n    def clicked(self, func):\n        self.func = func\n\n    def __call__(self):\n        if self.func is not None:\n            self.func()\n\nclass Button(BaseControl):\n    pass\n\nclass Label(BaseControl):\n    pass\n\n# The actual applications code (that the end-user would write)\nclass MyApp:\n    ok = Button()\n    la = Label()\n\n    @ok.clicked\n    def clickeryHappened():\n        print \"OK Clicked!\"\n\nif __name__ == '__main__':\n    a = MyApp()\n    a.ok() # trigger the clicked action\n</code></pre>\n<p>Basically the decorator function stores the function, then when the action occurred (say, a click) the appropriate function would be executed.</p>\n<p>The scope of various stuff (say, the <code>la</code> label in the above example) could be rather complicated, but it seems doable in a fairly neat manner..</p>\n", "abstract": "I have been playing with the Ruby library \"shoes\". Basically you can write a GUI application in the following way: This made me think - how would I design a similarly nice-to-use GUI framework in Python? One that doesn't have the usual tyings of basically being wrappers to a C* library (In the case of GTK, Tk, wx, QT etc etc) Shoes takes things from web devlopment (like #f0c2f0 style colour notation, CSS layout techniques, like :margin => 10), and from ruby (extensively using blocks in sensible ways) Python's lack of \"rubyish blocks\" makes a (metaphorically)-direct port impossible: No where near as clean, and wouldn't be nearly as flexible, and I'm not even sure if it would be implementable. Using decorators seems like an interesting way to map blocks of code to a specific action: Basically the decorator function stores the function, then when the action occurred (say, a click) the appropriate function would be executed. The scope of various stuff (say, the la label in the above example) could be rather complicated, but it seems doable in a fairly neat manner.."}, "answers": [{"id": 58917, "score": 7, "vote": 0, "content": "<p>You could actually pull this off, but it would require using metaclasses, which are <em>deep</em> magic (there be dragons). If you want an intro to metaclasses, there's a series of <a href=\"http://www.ibm.com/developerworks/linux/library/l-pymeta.html\" rel=\"nofollow noreferrer\">articles from IBM</a> which manage to introduce the ideas without melting your brain.</p>\n<p>The source code from an ORM like SQLObject might help, too, since it uses this same kind of declarative syntax.</p>\n", "abstract": "You could actually pull this off, but it would require using metaclasses, which are deep magic (there be dragons). If you want an intro to metaclasses, there's a series of articles from IBM which manage to introduce the ideas without melting your brain. The source code from an ORM like SQLObject might help, too, since it uses this same kind of declarative syntax."}, {"id": 335132, "score": 4, "vote": 0, "content": "<p>I was never satisfied with David Mertz's articles at IBM on metaclsses so I recently wrote my own <a href=\"http://askawizard.blogspot.com/2008/09/metaclasses-python-saga-part-4_30.html\" rel=\"nofollow noreferrer\">metaclass article</a>.  Enjoy.</p>\n", "abstract": "I was never satisfied with David Mertz's articles at IBM on metaclsses so I recently wrote my own metaclass article.  Enjoy."}, {"id": 335887, "score": 4, "vote": 0, "content": "<p>This is extremely contrived and not pythonic at all, but here's my attempt at a semi-literal translation using the new \"with\" statement.</p>\n<pre><code class=\"python\">with Shoes():\n  t = Para(\"Not clicked!\")\n  with Button(\"The Label\"):\n    Alert(\"You clicked the button!\")\n    t.replace(\"Clicked!\")\n</code></pre>\n<p>The hardest part is dealing with the fact that python will not give us anonymous functions with more than one statement in them.  To get around that, we could create a list of commands and run through those...</p>\n<p>Anyway, here's the backend code I ran this with:</p>\n<pre><code class=\"python\">context = None\n\nclass Nestable(object):\n  def __init__(self,caption=None):\n    self.caption = caption\n    self.things = []\n\n    global context\n    if context:\n      context.add(self)\n\n  def __enter__(self):\n    global context\n    self.parent = context\n    context = self\n\n  def __exit__(self, type, value, traceback):\n    global context\n    context = self.parent\n\n  def add(self,thing):\n    self.things.append(thing)\n    print \"Adding a %s to %s\" % (thing,self)\n\n  def __str__(self):\n    return \"%s(%s)\" % (self.__class__.__name__, self.caption)\n\n\nclass Shoes(Nestable):\n  pass\n\nclass Button(Nestable):\n  pass\n\nclass Alert(Nestable):\n  pass\n\nclass Para(Nestable):\n  def replace(self,caption):\n    Command(self,\"replace\",caption)\n\nclass Command(Nestable):\n  def __init__(self, target, command, caption):\n    self.command = command\n    self.target  = target\n    Nestable.__init__(self,caption)\n\n  def __str__(self):\n    return \"Command(%s text of %s with \\\"%s\\\")\" % (self.command, self.target, self.caption)\n\n  def execute(self):\n    self.target.caption = self.caption\n</code></pre>\n", "abstract": "This is extremely contrived and not pythonic at all, but here's my attempt at a semi-literal translation using the new \"with\" statement. The hardest part is dealing with the fact that python will not give us anonymous functions with more than one statement in them.  To get around that, we could create a list of commands and run through those... Anyway, here's the backend code I ran this with:"}, {"id": 336525, "score": 4, "vote": 0, "content": "<pre><code class=\"python\">## All you need is this class:\n\nclass MainWindow(Window):\n    my_button = Button('Click Me')\n    my_paragraph = Text('This is the text you wish to place')\n    my_alert = AlertBox('What what what!!!')\n\n    @my_button.clicked\n    def my_button_clicked(self, button, event):\n        self.my_paragraph.text.append('And now you clicked on it, the button that is.')\n\n    @my_paragraph.text.changed\n    def my_paragraph_text_changed(self, text, event):\n        self.button.text = 'No more clicks!'\n\n    @my_button.text.changed\n    def my_button_text_changed(self, text, event):\n        self.my_alert.show()\n\n\n## The Style class is automatically gnerated by the framework\n## but you can override it by defining it in the class:\n##\n##      class MainWindow(Window):\n##          class Style:\n##              my_blah = {'style-info': 'value'}\n##\n## or like you see below:\n\nclass Style:\n    my_button = {\n        'background-color': '#ccc',\n        'font-size': '14px'}\n    my_paragraph = {\n        'background-color': '#fff',\n        'color': '#000',\n        'font-size': '14px',\n        'border': '1px solid black',\n        'border-radius': '3px'}\n\nMainWindow.Style = Style\n\n## The layout class is automatically generated\n## by the framework but you can override it by defining it\n## in the class, same as the Style class above, or by\n## defining it like this:\n\nclass MainLayout(Layout):\n    def __init__(self, style):\n        # It takes the custom or automatically generated style class upon instantiation\n        style.window.pack(HBox().pack(style.my_paragraph, style.my_button))\n\nMainWindow.Layout = MainLayout\n\nif __name__ == '__main__':\n    run(App(main=MainWindow))\n</code></pre>\n<p>It would be relatively easy to do in python with a bit of that metaclass python magic know how. Which I have. And a knowledge of PyGTK. Which I also have. Gets ideas?</p>\n", "abstract": "It would be relatively easy to do in python with a bit of that metaclass python magic know how. Which I have. And a knowledge of PyGTK. Which I also have. Gets ideas?"}, {"id": 62780, "score": 3, "vote": 0, "content": "<p>With some Metaclass magic to keep the ordering I have the following working. I'm not sure how pythonic it is but it is good fun for creating simple things. </p>\n<pre><code class=\"python\">class w(Wndw):\n  title='Hello World'\n  class txt(Txt):  # either a new class\n    text='Insert name here'\n  lbl=Lbl(text='Hello') # or an instance\n  class greet(Bbt):\n    text='Greet'\n    def click(self): #on_click method\n      self.frame.lbl.text='Hello %s.'%self.frame.txt.text\n\napp=w()\n</code></pre>\n", "abstract": "With some Metaclass magic to keep the ordering I have the following working. I'm not sure how pythonic it is but it is good fun for creating simple things. "}, {"id": 334938, "score": 3, "vote": 0, "content": "<p>The only attempt to do this that I know of is <a href=\"http://zephyrfalcon.org/labs/dope_on_wax.html\" rel=\"nofollow noreferrer\">Hans Nowak's Wax</a> (which is unfortunately dead).</p>\n", "abstract": "The only attempt to do this that I know of is Hans Nowak's Wax (which is unfortunately dead)."}, {"id": 335077, "score": 3, "vote": 0, "content": "<p>The closest you can get to rubyish blocks is the with statement from pep343: </p>\n<p><a href=\"http://www.python.org/dev/peps/pep-0343/\" rel=\"nofollow noreferrer\">http://www.python.org/dev/peps/pep-0343/</a></p>\n", "abstract": "The closest you can get to rubyish blocks is the with statement from pep343:  http://www.python.org/dev/peps/pep-0343/"}, {"id": 336583, "score": 3, "vote": 0, "content": "<p>If you use <a href=\"http://www.pygtk.org/\" rel=\"nofollow noreferrer\">PyGTK</a> with <a href=\"http://glade.gnome.org/\" rel=\"nofollow noreferrer\">glade</a> and <a href=\"http://www.pixelbeat.org/libs/libglade.py\" rel=\"nofollow noreferrer\">this glade wrapper</a>, then PyGTK actually becomes somewhat pythonic. A little at least.</p>\n<p>Basically, you create the GUI layout in Glade. You also specify event callbacks in glade. Then you write a class for your window like this:</p>\n<pre><code class=\"python\">class MyWindow(GladeWrapper):\n    GladeWrapper.__init__(self, \"my_glade_file.xml\", \"mainWindow\")\n    self.GtkWindow.show()\n\n    def button_click_event (self, *args):\n        self.button1.set_label(\"CLICKED\")\n</code></pre>\n<p>Here, I'm assuming that I have a GTK Button somewhere called <em>button1</em> and that I specified <em>button_click_event</em> as the <em>clicked</em> callback. The glade wrapper takes a lot of effort out of event mapping.</p>\n<p>If I were to design a Pythonic GUI library, I would support something similar, to aid rapid development. The only difference is that I would ensure that the widgets have a more pythonic interface too. The current PyGTK classes seem very C to me, except that I use foo.bar(...) instead of bar(foo, ...) though I'm not sure exactly what I'd do differently. Probably allow for a Django models style declarative means of specifying widgets and events in code and allowing you to access data though iterators (where it makes sense, eg widget lists perhaps), though I haven't really thought about it.</p>\n", "abstract": "If you use PyGTK with glade and this glade wrapper, then PyGTK actually becomes somewhat pythonic. A little at least. Basically, you create the GUI layout in Glade. You also specify event callbacks in glade. Then you write a class for your window like this: Here, I'm assuming that I have a GTK Button somewhere called button1 and that I specified button_click_event as the clicked callback. The glade wrapper takes a lot of effort out of event mapping. If I were to design a Pythonic GUI library, I would support something similar, to aid rapid development. The only difference is that I would ensure that the widgets have a more pythonic interface too. The current PyGTK classes seem very C to me, except that I use foo.bar(...) instead of bar(foo, ...) though I'm not sure exactly what I'd do differently. Probably allow for a Django models style declarative means of specifying widgets and events in code and allowing you to access data though iterators (where it makes sense, eg widget lists perhaps), though I haven't really thought about it."}, {"id": 58990, "score": 2, "vote": 0, "content": "<p>Maybe not as slick as the Ruby version, but how about something like this:</p>\n<pre><code class=\"python\">from Boots import App, Para, Button, alert\n\ndef Shoeless(App):\n    t = Para(text = 'Not Clicked')\n    b = Button(label = 'The label')\n\n    def on_b_clicked(self):\n        alert('You clicked the button!')\n        self.t.text = 'Clicked!'\n</code></pre>\n<p><a href=\"https://stackoverflow.com/questions/58711/how-would-you-design-a-very-pythonic-ui-framework#58917\">Like Justin said</a>, to implement this you would need to use a custom metaclass on class <code>App</code>, and a bunch of properties on <code>Para</code> and <code>Button</code>. This actually wouldn't be too hard.</p>\n<p>The problem you run into next is: how do you keep track of the <em>order</em> that things appear in the class definition? In Python 2.x, there is no way to know if <code>t</code> should be above <code>b</code> or the other way around, since you receive the contents of the class definition as a python <code>dict</code>.</p>\n<p>However, in Python 3.0 <a href=\"http://www.python.org/dev/peps/pep-3115/\" rel=\"nofollow noreferrer\">metaclasses are being changed</a> in a couple of (minor) ways. One of them is the <code>__prepare__</code> method, which allows you to supply your own custom dictionary-like object to be used instead -- this means you'll be able to track the order in which items are defined, and position them accordingly in the window.</p>\n", "abstract": "Maybe not as slick as the Ruby version, but how about something like this: Like Justin said, to implement this you would need to use a custom metaclass on class App, and a bunch of properties on Para and Button. This actually wouldn't be too hard. The problem you run into next is: how do you keep track of the order that things appear in the class definition? In Python 2.x, there is no way to know if t should be above b or the other way around, since you receive the contents of the class definition as a python dict. However, in Python 3.0 metaclasses are being changed in a couple of (minor) ways. One of them is the __prepare__ method, which allows you to supply your own custom dictionary-like object to be used instead -- this means you'll be able to track the order in which items are defined, and position them accordingly in the window."}, {"id": 60563, "score": 2, "vote": 0, "content": "<p>This could be an oversimplification, i don't think it would be a good idea to try to make a general purpose ui library this way. On the other hand you could use this approach (metaclasses and friends) to simplify the definition of certain classes of user interfaces for an existing ui library and depending of the application that could actually save you a significant amount of time and code lines.</p>\n", "abstract": "This could be an oversimplification, i don't think it would be a good idea to try to make a general purpose ui library this way. On the other hand you could use this approach (metaclasses and friends) to simplify the definition of certain classes of user interfaces for an existing ui library and depending of the application that could actually save you a significant amount of time and code lines."}, {"id": 334828, "score": 1, "vote": 0, "content": "<p>I have this same problem. I wan to to create a wrapper around any GUI toolkit for Python that is easy to use, and inspired by Shoes, but needs to be a OOP approach (against ruby blocks).</p>\n<p>More information in: <a href=\"http://wiki.alcidesfonseca.com/blog/python-universal-gui-revisited\" rel=\"nofollow noreferrer\">http://wiki.alcidesfonseca.com/blog/python-universal-gui-revisited</a></p>\n<p>Anyone's welcome to join the project.</p>\n", "abstract": "I have this same problem. I wan to to create a wrapper around any GUI toolkit for Python that is easy to use, and inspired by Shoes, but needs to be a OOP approach (against ruby blocks). More information in: http://wiki.alcidesfonseca.com/blog/python-universal-gui-revisited Anyone's welcome to join the project."}, {"id": 335358, "score": 1, "vote": 0, "content": "<p>If you really want to code UI, you could try to get something similar to django's ORM; sth like this to get a simple help browser:</p>\n<pre><code class=\"python\">class MyWindow(Window):\n    class VBox:\n        entry = Entry()\n        bigtext = TextView()\n\n        def on_entry_accepted(text):\n            bigtext.value = eval(text).__doc__\n</code></pre>\n<p>The idea would be to interpret some containers (like windows) as simple classes, some containers (like tables, v/hboxes) recognized by object names, and simple widgets as objects.</p>\n<p>I dont think one would have to name all containers inside a window, so some shortcuts (like old-style classes being recognized as widgets by names) would be desirable.</p>\n<p>About the order of elements: in MyWindow above you don't have to track this (window is conceptually a one-slot container). In other containers you can try to keep track of the order assuming that each widget constructor have access to some global widget list. This is how it is done in django (AFAIK).</p>\n<p>Few hacks here, few tweaks there... There are still few things to think of, but I believe it is possible... and usable, as long as you don't build complicated UIs.</p>\n<p>However I am pretty happy with PyGTK+Glade. UI is just kind of data for me and it should be treated as data. There's just too much parameters to tweak (like spacing in different places) and it is better to manage that using a GUI tool. Therefore I build my UI in glade, save as xml and parse using gtk.glade.XML().</p>\n", "abstract": "If you really want to code UI, you could try to get something similar to django's ORM; sth like this to get a simple help browser: The idea would be to interpret some containers (like windows) as simple classes, some containers (like tables, v/hboxes) recognized by object names, and simple widgets as objects. I dont think one would have to name all containers inside a window, so some shortcuts (like old-style classes being recognized as widgets by names) would be desirable. About the order of elements: in MyWindow above you don't have to track this (window is conceptually a one-slot container). In other containers you can try to keep track of the order assuming that each widget constructor have access to some global widget list. This is how it is done in django (AFAIK). Few hacks here, few tweaks there... There are still few things to think of, but I believe it is possible... and usable, as long as you don't build complicated UIs. However I am pretty happy with PyGTK+Glade. UI is just kind of data for me and it should be treated as data. There's just too much parameters to tweak (like spacing in different places) and it is better to manage that using a GUI tool. Therefore I build my UI in glade, save as xml and parse using gtk.glade.XML()."}, {"id": 335443, "score": 1, "vote": 0, "content": "<p>Personally, I would try to implement <a href=\"http://docs.jquery.com/Main_Page\" rel=\"nofollow noreferrer\">JQuery</a> like API in a GUI framework.</p>\n<pre><code class=\"python\">class MyWindow(Window):\n    contents = (\n        para('Hello World!'),\n        button('Click Me', id='ok'),\n        para('Epilog'),\n    )\n\n    def __init__(self):\n        self['#ok'].click(self.message)\n        self['para'].hover(self.blend_in, self.blend_out)\n\n    def message(self):\n        print 'You clicked!'\n\n    def blend_in(self, object):\n        object.background = '#333333'\n\n    def blend_out(self, object):\n        object.background = 'WindowBackground'\n</code></pre>\n", "abstract": "Personally, I would try to implement JQuery like API in a GUI framework."}, {"id": 336089, "score": 1, "vote": 0, "content": "<p>Here's an approach that goes about GUI definitions a bit differently using class-based meta-programming rather than inheritance.</p>\n<p>This is largley Django/SQLAlchemy inspired in that it is heavily based on meta-programming and separates your GUI code from your \"code code\".  I also think it should make heavy use of layout managers like Java does because when you're dropping code, no one wants to constantly tweak pixel alignment.  I also think it would be cool if we could have CSS-like properties.</p>\n<p>Here is a rough brainstormed example that will show a column with a label on top, then a text box, then a button to click on the bottom which shows a message.</p>\n<pre>\nfrom happygui.controls import *\n\nMAIN_WINDOW = Window(width=\"500px\", height=\"350px\",\n    my_layout=ColumnLayout(padding=\"10px\",\n        my_label=Label(text=\"What's your name kiddo?\", bold=True, align=\"center\"),\n        my_edit=EditBox(placeholder=\"\"),\n        my_btn=Button(text=\"CLICK ME!\", on_click=Handler('module.file.btn_clicked')),\n    ),\n)\nMAIN_WINDOW.show()\n\ndef btn_clicked(sender): # could easily be in a handlers.py file\n    name = MAIN_WINDOW.my_layout.my_edit.text\n    # same thing: name = sender.parent.my_edit.text\n    # best practice, immune to structure change: MAIN_WINDOW.find('my_edit').text\n    MessageBox(\"Your name is '%s'\" % ()).show(modal=True)\n</pre>\n<p>One cool thing to notice is the way you can reference the input of my_edit by saying <code>MAIN_WINDOW.my_layout.my_edit.text</code>.  In the declaration for the window, I think it's important to be able to arbitrarily name controls in the function kwargs.</p>\n<p>Here is the same app only using absolute positioning (the controls will appear in different places because we're not using a fancy layout manager):</p>\n<pre>\nfrom happygui.controls import *\n\nMAIN_WINDOW = Window(width=\"500px\", height=\"350px\",\n    my_label=Label(text=\"What's your name kiddo?\", bold=True, align=\"center\", x=\"10px\", y=\"10px\", width=\"300px\", height=\"100px\"),\n    my_edit=EditBox(placeholder=\"\", x=\"10px\", y=\"110px\", width=\"300px\", height=\"100px\"),\n    my_btn=Button(text=\"CLICK ME!\", on_click=Handler('module.file.btn_clicked'), x=\"10px\", y=\"210px\", width=\"300px\", height=\"100px\"),\n)\nMAIN_WINDOW.show()\n\ndef btn_clicked(sender): # could easily be in a handlers.py file\n    name = MAIN_WINDOW.my_edit.text\n    # same thing: name = sender.parent.my_edit.text\n    # best practice, immune to structure change: MAIN_WINDOW.find('my_edit').text\n    MessageBox(\"Your name is '%s'\" % ()).show(modal=True)\n</pre>\n<p>I'm not entirely sure yet if this is a super great approach, but I definitely think it's on the right path.  I don't have time to explore this idea more, but if someone took this up as a project, I would love them.</p>\n", "abstract": "Here's an approach that goes about GUI definitions a bit differently using class-based meta-programming rather than inheritance. This is largley Django/SQLAlchemy inspired in that it is heavily based on meta-programming and separates your GUI code from your \"code code\".  I also think it should make heavy use of layout managers like Java does because when you're dropping code, no one wants to constantly tweak pixel alignment.  I also think it would be cool if we could have CSS-like properties. Here is a rough brainstormed example that will show a column with a label on top, then a text box, then a button to click on the bottom which shows a message. One cool thing to notice is the way you can reference the input of my_edit by saying MAIN_WINDOW.my_layout.my_edit.text.  In the declaration for the window, I think it's important to be able to arbitrarily name controls in the function kwargs. Here is the same app only using absolute positioning (the controls will appear in different places because we're not using a fancy layout manager): I'm not entirely sure yet if this is a super great approach, but I definitely think it's on the right path.  I don't have time to explore this idea more, but if someone took this up as a project, I would love them."}, {"id": 335400, "score": 0, "vote": 0, "content": "<p>Declarative is not necessarily more (or less) pythonic than functional IMHO. I think a layered approach would be the best (from buttom up):</p>\n<ol>\n<li>A native layer that accepts and returns python data types.</li>\n<li>A functional dynamic layer.</li>\n<li>One or more declarative/object-oriented layers.</li>\n</ol>\n<p>Similar to <a href=\"http://elixir.ematia.de/trac/wiki\" rel=\"nofollow noreferrer\">Elixir</a> + <a href=\"http://www.sqlalchemy.org/\" rel=\"nofollow noreferrer\">SQLAlchemy</a>.</p>\n", "abstract": "Declarative is not necessarily more (or less) pythonic than functional IMHO. I think a layered approach would be the best (from buttom up): Similar to Elixir + SQLAlchemy."}]}, {"link": "https://stackoverflow.com/questions/17759740/python-installation-in-mac-os-x-virtual-environment-that-includes-a-framework-th", "question": {"id": "17759740", "title": "Python installation in Mac OS X virtual environment that includes a framework that I can include into Xcode?", "content": "<p>I like to use Python with numpy, scipy and some other packages. I am an absolute Python beginner and have some issues with the installation under Mac OS X.</p>\n<p>I am following these two tutorials to install python: <a href=\"http://hackercodex.com/guide/mac-osx-mountain-lion-10.8-configuration/\" rel=\"noreferrer\">1</a> and <a href=\"http://hackercodex.com/guide/python-virtualenv-on-mac-osx-mountain-lion-10.8/\" rel=\"noreferrer\">2</a>.  </p>\n<p>Here, HomeBrew is used to install Python (with pip) and virtualenv. I do not have an opinion about what is better, MacPorts, HomeBrew, Fink... I just found this tutorial inspiring confidence.  </p>\n<p>If I understand things correctly, OS X system Python, which I should never touch, is under /System/Library/Frameworks/Python.Framework. And I cannot use this one in Xcode because it does not have my wanted packages. The HomeBrew Python will be installed somewhere in /usr/local/. I found a framework there but as the system framework it does not have the additional packages. The tutorial explains that it might be better to install additional packages in virtual environments only which is done via pip. But I cannot find a framework there.  </p>\n<p>So my question is: How can I get a Python installation in a virtual environment that includes a framework that I can include into Xcode?</p>\n", "abstract": "I like to use Python with numpy, scipy and some other packages. I am an absolute Python beginner and have some issues with the installation under Mac OS X. I am following these two tutorials to install python: 1 and 2.   Here, HomeBrew is used to install Python (with pip) and virtualenv. I do not have an opinion about what is better, MacPorts, HomeBrew, Fink... I just found this tutorial inspiring confidence.   If I understand things correctly, OS X system Python, which I should never touch, is under /System/Library/Frameworks/Python.Framework. And I cannot use this one in Xcode because it does not have my wanted packages. The HomeBrew Python will be installed somewhere in /usr/local/. I found a framework there but as the system framework it does not have the additional packages. The tutorial explains that it might be better to install additional packages in virtual environments only which is done via pip. But I cannot find a framework there.   So my question is: How can I get a Python installation in a virtual environment that includes a framework that I can include into Xcode?"}, "answers": [{"id": 17760868, "score": 34, "vote": 0, "content": "<ol>\n<li>The Apple Python is functional and the normal site-packages folder is <em>/Library/Python/2.7/site-packages</em> (and not <em>/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages</em>). You can use it without problem.</li>\n<li>I never had any problem to install all modules (numpy, scipy, matplotlib, pandas, shapely, and others...) that I wanted as frameworks, or with pip or easy_install, including virtualenv (simply install them in the conventional way in Python) or creating virtual environments.</li>\n<li>when you install a framework module, It is placed in in the normal site-packages folder.</li>\n<li>the only problem is possibly the \"old\" Python version (not a problem for me, using 2.6.x, 2.7.x and 3.3.x versions)</li>\n</ol>\n<p>But if you want, you can install others versions of Python (in 64-bits, not 32 !):</p>\n<p><strong>a) the way prescribed by Apple: as a framework</strong></p>\n<ul>\n<li>the official versions of Python.org are installed in  <em>/Library/Frameworks/Python.framework</em> with site-packages folder in <em>/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages</em></li>\n<li>same for the Enthought scientific version of Python (scientific distribution with many modules preinstalled, numpy, scipy, matplotlib,...), </li>\n<li>(you can also install the Homebrew Python version as a framework, see below)</li>\n</ul>\n<p>You must change the PATH of the Python executable in <em>/usr/bin</em> (usually, this is done automatically by the distribution by symlinks or in the <em>/Users/me/.bash_profile</em> file ). </p>\n<p>The modules installed in <em>/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages</em> do not interfere with those installed in <em>/Library/Python/2.7/site-packages</em> if you use the appropriate Python executable and viceversa. </p>\n<p><strong>b) the package management system way</strong></p>\n<ul>\n<li><p>MacPorts install its own version of Python in the folder <em>/opt/</em>;</p>\n<p>sudo port -v install python27</p></li>\n<li><p>Fink install its own version of Python in the folder <em>/sw/</em>;</p>\n<p>fink install Python27</p></li>\n<li><p>Homebrew installs Python in <em>/usr/local/Cellar</em> with symlinks in <em>/usr/local/bin</em>.</p>\n<p>brew install python<br/>\nor<br/>\nbrew install python --framework </p></li>\n<li><p>To use them, you must add <em>/sw/bin, /sw/lib/ or /opt/bin, /opt/lib/</em> to the PATH and change the PATH of the Python executable </p></li>\n<li>For me, the main problem with Fink and MacPorts is that they do not take into account what is already installed and install all in their respective folders which can create real problems in the management of library paths.</li>\n<li>The Homebrew solution is \"cleaner\" (in <em>/usr/local</em>) and is based on existing libraries if they are up to date, otherwise it installs its own versions of the libraries</li>\n</ul>\n<p><strong>c) the \"autonomous\" way</strong> </p>\n<ul>\n<li>the perfect solution is <a href=\"https://store.continuum.io/\" rel=\"noreferrer\">Anaconda</a> (another scientific distribution with many modules preinstalled, ), \n\n<ul>\n<li>Installs cleanly into a single directory (where you want as <em>/Users/me/anaconda</em>)</li>\n<li>doesn\u2019t require root privileges</li>\n<li>doesn\u2019t affect other Python installs on your system, or interfere with OS X Frameworks</li>\n<li>switch to/from Anaconda just by setting $PATH or creating an alias in <em>/Users/me/.bash_profile</em>\n<ul>\n<li>alias anaconda='/Users/me/anaconda/bin/python'</li>\n<li>alias anaconda3='/Users/me/anaconda/envs/py33/bin/python3' </li>\n</ul></li>\n<li>you can install Python versions from 2.6.x to 3.3.x</li>\n<li>Innovative package and environment manager for Python, named <strong>conda</strong>, but you can use pip or easy_install without problem</li>\n<li>for me now, it is the best solution to install virtual environments (as <em>/Users/me/anaconda/envs/py33</em> )</li>\n</ul></li>\n</ul>\n<p><strong>d) the \"hard\" way</strong> </p>\n<ul>\n<li>you can compile your own version of Python in a classical form (results in /usr/) or as a framework. It takes time but it is not difficult.</li>\n</ul>\n<p>So your question:</p>\n<blockquote>\n<p>How can I get a Python installation in a virtual environment that includes a framework that I can include into Xcode?</p>\n</blockquote>\n<p>Unless you are a Unix specialist (PATHs management) , you must use the Apple's recommended solution, a frameworks distribution (including the Apple Python)</p>\n", "abstract": "But if you want, you can install others versions of Python (in 64-bits, not 32 !): a) the way prescribed by Apple: as a framework You must change the PATH of the Python executable in /usr/bin (usually, this is done automatically by the distribution by symlinks or in the /Users/me/.bash_profile file ).  The modules installed in /Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages do not interfere with those installed in /Library/Python/2.7/site-packages if you use the appropriate Python executable and viceversa.  b) the package management system way MacPorts install its own version of Python in the folder /opt/; sudo port -v install python27 Fink install its own version of Python in the folder /sw/; fink install Python27 Homebrew installs Python in /usr/local/Cellar with symlinks in /usr/local/bin. brew install python\nor\nbrew install python --framework  To use them, you must add /sw/bin, /sw/lib/ or /opt/bin, /opt/lib/ to the PATH and change the PATH of the Python executable  c) the \"autonomous\" way  d) the \"hard\" way  So your question: How can I get a Python installation in a virtual environment that includes a framework that I can include into Xcode? Unless you are a Unix specialist (PATHs management) , you must use the Apple's recommended solution, a frameworks distribution (including the Apple Python)"}]}, {"link": "https://stackoverflow.com/questions/32088702/using-django-for-cli-tool", "question": {"id": "32088702", "title": "Using django for CLI tool", "content": "<p>Is there any sense in using Django framework for developing Command Line Interface tool? In my case there won't be any graphical interface. What benefits can I get using it? Or maybe you know any other useful frameworks for CLI? I'd like to put an accent on making HTTP requests with REST API.</p>\n<p>UPDATE: Thanks guys! I would like rather to use REST API than create it in my tool.</p>\n", "abstract": "Is there any sense in using Django framework for developing Command Line Interface tool? In my case there won't be any graphical interface. What benefits can I get using it? Or maybe you know any other useful frameworks for CLI? I'd like to put an accent on making HTTP requests with REST API. UPDATE: Thanks guys! I would like rather to use REST API than create it in my tool."}, "answers": [{"id": 32091771, "score": 21, "vote": 0, "content": "<p>While django is primarily for web apps it has a powerful and easy to use ORM that can be used for CLI apps as well. To use django script as a standalone script without a webserver, all you need to do is to add the following to the top of the file.</p>\n<pre><code class=\"python\">import os, sys\nif __name__ == '__main__':\n    # Setup environ\n    sys.path.append(os.getcwd())\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"main.settings\")\n\n    # Setup django\n    import django\n    django.setup()\n\n    # now you can import your ORM models \n</code></pre>\n", "abstract": "While django is primarily for web apps it has a powerful and easy to use ORM that can be used for CLI apps as well. To use django script as a standalone script without a webserver, all you need to do is to add the following to the top of the file."}]}, {"link": "https://stackoverflow.com/questions/21402649/what-is-the-difference-between-syncdb-and-migrate", "question": {"id": "21402649", "title": "What is the difference between syncdb and migrate?", "content": "<p>I am going through django documentation. And here I have a situation. In one of the documentation, I am told to do</p>\n<pre><code class=\"python\">python manage.py migrate\n</code></pre>\n<p>And in the other</p>\n<pre><code class=\"python\">python manage.py syncdb\n</code></pre>\n<p>I can't do the first one(Error: no migrate command found.) but second works fine for me. Is this a version issue or I need to take care of something else.</p>\n", "abstract": "I am going through django documentation. And here I have a situation. In one of the documentation, I am told to do And in the other I can't do the first one(Error: no migrate command found.) but second works fine for me. Is this a version issue or I need to take care of something else."}, "answers": [{"id": 21402730, "score": 7, "vote": 0, "content": "<p>The <code>migrate</code> command is new in the upcoming <a href=\"https://docs.djangoproject.com/en/dev/releases/1.7/#what-s-new-in-django-1-7\">Django 1.7</a>, which hasn't been released yet.</p>\n<p>For earlier versions you can use <code>syncdb</code>, or the external app <a href=\"http://south.readthedocs.org/en/latest/\">South</a>.</p>\n<p>When you're reading the documentation, use the Documentation version switcher to select the correct version. </p>\n<p>For example, the current <a href=\"https://docs.djangoproject.com/en/1.6/intro/tutorial01/\">1.6 Tutorial</a> uses <code>syncdb</code>, but the <a href=\"https://docs.djangoproject.com/en/dev/intro/tutorial01/\">dev tutorial</a> (written for the upcoming 1.7) uses <code>migrate</code>.</p>\n", "abstract": "The migrate command is new in the upcoming Django 1.7, which hasn't been released yet. For earlier versions you can use syncdb, or the external app South. When you're reading the documentation, use the Documentation version switcher to select the correct version.  For example, the current 1.6 Tutorial uses syncdb, but the dev tutorial (written for the upcoming 1.7) uses migrate."}, {"id": 21402833, "score": 6, "vote": 0, "content": "<p>The command <code>migrate</code> belongs to an application called south (<a href=\"http://south.aeracode.org/\" rel=\"noreferrer\">http://south.aeracode.org/</a>).</p>\n<p>From the website: </p>\n<blockquote>\n<p>This is South, intelligent schema and data migrations for \u200bDjango projects.</p>\n</blockquote>\n<p>Prior to Django==1.7 you had to install a third party application in order to perform database migrations.</p>\n<p>Please see documentation at <a href=\"http://south.readthedocs.org/en/latest/\" rel=\"noreferrer\">readthedocs</a></p>\n", "abstract": "The command migrate belongs to an application called south (http://south.aeracode.org/). From the website:  This is South, intelligent schema and data migrations for \u200bDjango projects. Prior to Django==1.7 you had to install a third party application in order to perform database migrations. Please see documentation at readthedocs"}, {"id": 21402800, "score": 2, "vote": 0, "content": "<p>It depends what version of the documentation you are reading. <code>migrate</code> is the command from <a href=\"http://south.readthedocs.org/en/latest/\" rel=\"nofollow\">South</a> which up until the latest (currently development, or dev) version of django was a separate app. It's finally getting integrated into Django (basically every django project uses it anyway as a matter of course, so it is well worth reading up on).</p>\n<p>In the bottom right of the django documentation page there is a selector where you can switch between different versions of Django, so if you're looking for information for your project it is a good idea to change to the version of Django you're currently using.</p>\n", "abstract": "It depends what version of the documentation you are reading. migrate is the command from South which up until the latest (currently development, or dev) version of django was a separate app. It's finally getting integrated into Django (basically every django project uses it anyway as a matter of course, so it is well worth reading up on). In the bottom right of the django documentation page there is a selector where you can switch between different versions of Django, so if you're looking for information for your project it is a good idea to change to the version of Django you're currently using."}]}, {"link": "https://stackoverflow.com/questions/29645115/tornado-framework-typeerror-future-object-is-not-callable", "question": {"id": "29645115", "title": "Tornado framework. TypeError: &#39;Future&#39; object is not callable", "content": "<p>I've started to learn Tornado framework sometime ago. I've faced the lack of documentation for unexperienced users and checked also asyncio module docs.\nSo the problem is, that I have some simple code in asyncio:</p>\n<pre><code class=\"python\">    import asyncio\n\n    @asyncio.coroutine\n    def compute(x, y):\n        print(\"Compute %s + %s ...\" % (x, y))\n        yield from asyncio.sleep(1.0)\n        return x + y\n\n\n    @asyncio.coroutine\n    def print_sum(x, y):\n        result = yield from compute(x, y)\n        print(\"%s + %s = %s\" % (x, y, result))\n\n\nloop = asyncio.get_event_loop()\nloop.run_until_complete(print_sum(1, 2))\nloop.close()\n</code></pre>\n<p>And then I've tried to make the same using Tornado framework:</p>\n<pre><code class=\"python\">from tornado.ioloop import IOLoop\nfrom tornado import gen\n\n@gen.coroutine\ndef compute(x, y):\n   print(\"Compute %s + %s ...\" % (x, y))\n   yield gen.sleep(1.0)\n   return (x+y)\n\n@gen.coroutine\ndef print_sum(x, y):\n   result = yield compute(x, y)\n   print(\"%s + %s = %s\" % (x, y, result))\n\nIOLoop.instance().run_sync(print_sum(1,2))\n</code></pre>\n<p>But unfortunately Tornado code raise such an exception:</p>\n<pre><code class=\"python\"> Compute 1 + 2 ...\nTraceback (most recent call last):\n  File \"tornado_coroutine.py\", line 19, in &lt;module&gt;\n    IOLoop.instance().run_sync(print_sum(1, 2))\n  File \"C:\\Python34\\lib\\site-packages\\tornado\\ioloop.py\", line 421, in run_sync\n    return future_cell[0].result()\n  File \"C:\\Python34\\lib\\site-packages\\tornado\\concurrent.py\", line 209, in resul\nt\n    raise_exc_info(self._exc_info)\n  File \"&lt;string&gt;\", line 3, in raise_exc_info\n  File \"C:\\Python34\\lib\\site-packages\\tornado\\ioloop.py\", line 402, in run\n    result = func()\nTypeError: 'Future' object is not callable\n</code></pre>\n<p>Maybe IOLoop tries to make an new \"lap\" after all coroutines have returned their values?</p>\n", "abstract": "I've started to learn Tornado framework sometime ago. I've faced the lack of documentation for unexperienced users and checked also asyncio module docs.\nSo the problem is, that I have some simple code in asyncio: And then I've tried to make the same using Tornado framework: But unfortunately Tornado code raise such an exception: Maybe IOLoop tries to make an new \"lap\" after all coroutines have returned their values?"}, "answers": [{"id": 29645882, "score": 19, "vote": 0, "content": "<p><code>run_sync</code> takes a function (or other \"callable\") as argument. You are calling the function in-place and then giving the result as argument. You can create an anonymous function simply by using <code>lambda</code>:</p>\n<pre><code class=\"python\">IOLoop.instance().run_sync(lambda: print_sum(1,2))\n</code></pre>\n", "abstract": "run_sync takes a function (or other \"callable\") as argument. You are calling the function in-place and then giving the result as argument. You can create an anonymous function simply by using lambda:"}]}, {"link": "https://stackoverflow.com/questions/4466499/in-django-how-do-i-change-this-field-is-required-to-name-is-required", "question": {"id": "4466499", "title": "In Django, how do i change &quot;This field is required.&quot; to &quot;Name is required&quot;?", "content": "<p>I'm using the forms framework. And when I set required=True, this error shows. What if I don't want it to say \"This field\", but instead, say the label?</p>\n<p>Since i'm not going to be displaying it beneath the form input.  I\"m going to display all the errors at the top of the page.</p>\n", "abstract": "I'm using the forms framework. And when I set required=True, this error shows. What if I don't want it to say \"This field\", but instead, say the label? Since i'm not going to be displaying it beneath the form input.  I\"m going to display all the errors at the top of the page."}, "answers": [{"id": 4466904, "score": 23, "vote": 0, "content": "<p>An easy way to specify simple \"required\" validation messages is to pass the field the error_messages argument.</p>\n<pre><code class=\"python\">name = forms.CharField(error_messages={'required': 'Your Name is Required'}) \n</code></pre>\n<p>Check the docs for which keys can be specified per field:\n<a href=\"http://docs.djangoproject.com/en/dev/ref/forms/fields/#django.forms.Field.error_messages\" rel=\"noreferrer\">http://docs.djangoproject.com/en/dev/ref/forms/fields/#django.forms.Field.error_messages</a></p>\n<p>For anything else, you're going to need real form validation which means you'd be writing error messages anyways!</p>\n", "abstract": "An easy way to specify simple \"required\" validation messages is to pass the field the error_messages argument. Check the docs for which keys can be specified per field:\nhttp://docs.djangoproject.com/en/dev/ref/forms/fields/#django.forms.Field.error_messages For anything else, you're going to need real form validation which means you'd be writing error messages anyways!"}, {"id": 4466606, "score": 0, "vote": 0, "content": "<p>If you want to customize the message a little bit more you can also:</p>\n<pre><code class=\"python\">from django.core.exceptions import ValidationError\n\ndef my_validator(value):\n    if not len(value):\n        raise ValidationError('Your error message here!')\n</code></pre>\n<p>Then, in your models.py:</p>\n<pre><code class=\"python\">from django import forms\n\nclass MyForm(forms.Form):\n    my_field= forms.CharField(validators=[my_validator])\n</code></pre>\n", "abstract": "If you want to customize the message a little bit more you can also: Then, in your models.py:"}]}, {"link": "https://stackoverflow.com/questions/19709101/django-rest-framework-multiple-models", "question": {"id": "19709101", "title": "Django - Rest Framework Multiple models", "content": "<p>I'm starting to use Django Rest Framework, it's a great tool!</p>\n<p>I'm actually stuck in something easy, but no way to figure out how to do... I have two models, CustomUser and Order. Here, a CustomUser has 0 to many Orders. </p>\n<p>I would like to generate a JSON HTTPResponse with the following format:</p>\n<pre><code class=\"python\">{\n\"user\": {\n    \"city\": \"XXX\", \n    \"firstName\": \"XXX\", \n    \"zip\": \"XXX\", \n    \"taxNumber\": \"XXX\", \n    \"lastName\": \"XXX\", \n    \"street\": \"XXX\", \n    \"country\": \"XXX\", \n    \"email\": \"XXX\"}, \n\"orders\": [{\n        \"id\": \"XXX\",\n        \"plan\": \"XXX\",\n        \"date\": \"XXX\",\n        \"price\": \"XXX\"\n    }]\n}\n</code></pre>\n<p>I already have my user in session (request) and I fetch the required Orders with the following line:</p>\n<pre><code class=\"python\"># 2. Load user's orders\norders = Order.objects.filter(user=request.user)\n</code></pre>\n<p>I've created two serializers \"OrderSerializer(serializers.ModelSerializer)\" and \"CustomUserSerializer(serializers.ModelSerializer)\", but I've no clue how to merge both into the expected result.</p>\n<p>Thanks a lot for your help.</p>\n<p>Best regards</p>\n", "abstract": "I'm starting to use Django Rest Framework, it's a great tool! I'm actually stuck in something easy, but no way to figure out how to do... I have two models, CustomUser and Order. Here, a CustomUser has 0 to many Orders.  I would like to generate a JSON HTTPResponse with the following format: I already have my user in session (request) and I fetch the required Orders with the following line: I've created two serializers \"OrderSerializer(serializers.ModelSerializer)\" and \"CustomUserSerializer(serializers.ModelSerializer)\", but I've no clue how to merge both into the expected result. Thanks a lot for your help. Best regards"}, "answers": [{"id": 23481901, "score": 18, "vote": 0, "content": "<p>The question is old, so it may have been answered, but something like this should work:\n</p>\n<pre><code class=\"python\">class OrderSerializer(serializers.ModelSerializer)\n    class Meta:\n        model = Order\n\nclass UserSerializer(serializers.ModelSerializer)\n    orders = OrderSerializer(many = True)\n    class Meta:\n        model = user\n        fields = ('city', 'firstName', 'zip', 'taxNumber', 'lastName', 'street', 'country', 'email', 'orders')\n</code></pre>\n<p>Thanks,</p>\n<p>SS</p>\n", "abstract": "The question is old, so it may have been answered, but something like this should work:\n Thanks, SS"}, {"id": 19710871, "score": 2, "vote": 0, "content": "<p>Since <code>orders</code> are related to <code>user</code>, you should use <a href=\"http://django-rest-framework.org/api-guide/relations.html#nested-relationships\" rel=\"nofollow\">Nested relationships</a>.</p>\n", "abstract": "Since orders are related to user, you should use Nested relationships."}]}, {"link": "https://stackoverflow.com/questions/697866/dilemma-should-i-learn-seaside-or-a-python-framework", "question": {"id": "697866", "title": "Dilemma: Should I learn Seaside or a Python framework?", "content": "<p>I know it's kinda subjective but, if you were to put yourself in my shoes <strong>which would you invest the time in learning?</strong></p>\n<p>I want to write a web app which deals securely with relatively modest amounts of peoples private data, a few thousand records of a few Kb each but stuff that needs to be kept safe, addresses, phone numbers etc. I've done several web projects in PHP/MYSQL and have decided, handy though it is I really don't like PHP and don't want to do another large project in it...</p>\n<p>As such I figure I'd best learn something new and so I am considering 2 options (although I'll happily entertain others if you have suggestions). I'm having terrible trouble deciding though. They both look quite involved so rather than just jump in and potentially waste days getting up to speed enough on both of them to make an informed choice I thought I'd come here and canvas some opinion.</p>\n<p>So the two options I'm considering are...</p>\n<p><strong>One of the PYTHON Web frameworks</strong> - TurboGears seems well regarded?\nAdvantage: Of all the languages I ever tried Python is by far and away my favorite. There's loads of frameworks to choose from and I have done quite a lot of non web python coding over the last few years. \nDisadvantage: There's loads to choose from so it's hard to pick! Need to run single server process? or mod_python? which I don't like the sound of. What I do like is the notion of process separation and compartmentalization, i.e. if one users account is compromised it gives an attacker no leverage against the rest of the system. I'm not clear to what extent a python solution would handle that.</p>\n<p><strong>Writing it as a SEASIDE app</strong> Which I guess runs on a squeak app server?\nAdv: From what I've heard it would permit good compartmentalization of users as each would have their own little private VM independent of all the systems other users which sounds wonderful from a security, scaling and redundancy standpoint.\nDis: I've not done any Smalltalk since Uni 15 years back and I never dug too deep into it then. I don't see much entry level help for seaside or that many projects using it. I suspect setting a server up to run it is hard for the same reason i.e. not because it's inherently hard but just cause there will be less help online and a presumption you are already rather au fait with Sqeak/Smalltalk.</p>\n<p>So, what do people think? Would I be able to efficiently get the kind of strong separation and compartmentalization I'm after with a Python framework? Is Seaside as good as I think in terms of insulating users from each other? Might I be better off, security wise, sticking to the languages I'm most familiar with so I don't make any n00b mistakes or will Seaside be worth worth scaling the learning curve and prove more secure, comprehensible and maintainable in the long run? At the end of the day it's not a life or death decision and I can always bail if I start with one and then hate it so pls nobody get all holy language war and start flaming anyone! ;-)</p>\n<p>Cheers for any replies this gets,</p>\n<p>Roger :)</p>\n", "abstract": "I know it's kinda subjective but, if you were to put yourself in my shoes which would you invest the time in learning? I want to write a web app which deals securely with relatively modest amounts of peoples private data, a few thousand records of a few Kb each but stuff that needs to be kept safe, addresses, phone numbers etc. I've done several web projects in PHP/MYSQL and have decided, handy though it is I really don't like PHP and don't want to do another large project in it... As such I figure I'd best learn something new and so I am considering 2 options (although I'll happily entertain others if you have suggestions). I'm having terrible trouble deciding though. They both look quite involved so rather than just jump in and potentially waste days getting up to speed enough on both of them to make an informed choice I thought I'd come here and canvas some opinion. So the two options I'm considering are... One of the PYTHON Web frameworks - TurboGears seems well regarded?\nAdvantage: Of all the languages I ever tried Python is by far and away my favorite. There's loads of frameworks to choose from and I have done quite a lot of non web python coding over the last few years. \nDisadvantage: There's loads to choose from so it's hard to pick! Need to run single server process? or mod_python? which I don't like the sound of. What I do like is the notion of process separation and compartmentalization, i.e. if one users account is compromised it gives an attacker no leverage against the rest of the system. I'm not clear to what extent a python solution would handle that. Writing it as a SEASIDE app Which I guess runs on a squeak app server?\nAdv: From what I've heard it would permit good compartmentalization of users as each would have their own little private VM independent of all the systems other users which sounds wonderful from a security, scaling and redundancy standpoint.\nDis: I've not done any Smalltalk since Uni 15 years back and I never dug too deep into it then. I don't see much entry level help for seaside or that many projects using it. I suspect setting a server up to run it is hard for the same reason i.e. not because it's inherently hard but just cause there will be less help online and a presumption you are already rather au fait with Sqeak/Smalltalk. So, what do people think? Would I be able to efficiently get the kind of strong separation and compartmentalization I'm after with a Python framework? Is Seaside as good as I think in terms of insulating users from each other? Might I be better off, security wise, sticking to the languages I'm most familiar with so I don't make any n00b mistakes or will Seaside be worth worth scaling the learning curve and prove more secure, comprehensible and maintainable in the long run? At the end of the day it's not a life or death decision and I can always bail if I start with one and then hate it so pls nobody get all holy language war and start flaming anyone! ;-) Cheers for any replies this gets, Roger :)"}, "answers": [{"id": 697940, "score": 10, "vote": 0, "content": "<p>Forget about mod_python, there is <a href=\"http://www.python.org/dev/peps/pep-0333/\" rel=\"nofollow noreferrer\">WSGI</a>. </p>\n<p>I'd recommend <a href=\"http://www.djangoproject.com/\" rel=\"nofollow noreferrer\">Django</a>. It runs on any <a href=\"http://www.python.org/dev/peps/pep-0333/\" rel=\"nofollow noreferrer\">WSGI</a> server, there are a lot to choose from. There is <a href=\"http://code.google.com/p/modwsgi/\" rel=\"nofollow noreferrer\">mod_wsgi</a> for Apache, <a href=\"http://docs.python.org/library/wsgiref.html\" rel=\"nofollow noreferrer\">wsgiref</a> - reference implementation included in Python and <a href=\"http://wsgi.org/wsgi/Servers\" rel=\"nofollow noreferrer\">many more</a>. Also <a href=\"http://code.google.com/appengine/\" rel=\"nofollow noreferrer\">Google App Engine</a> is WSGI, and includes Django.</p>\n<p>Django is very popular and it's community is rapidly growing.</p>\n", "abstract": "Forget about mod_python, there is WSGI.  I'd recommend Django. It runs on any WSGI server, there are a lot to choose from. There is mod_wsgi for Apache, wsgiref - reference implementation included in Python and many more. Also Google App Engine is WSGI, and includes Django. Django is very popular and it's community is rapidly growing."}, {"id": 698677, "score": 10, "vote": 0, "content": "<p>Disclaimer: I really don't like PHP, Python is nice, but doesn't come close to Smalltalk in my book. But I am a biased Smalltalker. Some answers about Seaside/Squeak:</p>\n<p>Q: Which I guess runs on a squeak app server?</p>\n<p>Seaside runs in several different Smalltalks (VW, Gemstone, Squeak etc). The term \"app server\" is not really used in Smalltalk country. :)</p>\n<p>Q: From what I've heard it would permit good compartmentalization of users as each would have their own little private VM independent of all the systems other users which sounds wonderful from a security, scaling and redundancy standpoint.</p>\n<p>Yes, each user has its own WASession and all UI components the user sees are instances living on the server side in that session. So sharing of state between sessions is something you must do explicitly, typically through a db.</p>\n<p>Q: I've not done any Smalltalk since Uni 15 years back and I never dug too deep into it then. I don't see much entry level help for seaside or that many projects using it.</p>\n<p>Smalltalk is easy to get going with and there is a whole free online book on Seaside.</p>\n<p>Q: I suspect setting a server up to run it is hard for the same reason i.e. not because it's inherently hard but just cause there will be less help online and a presumption you are already rather au fait with Sqeak/Smalltalk.</p>\n<p>No, not hard. :) In fact, quite trivial. Tons of help - Seaside ml, IRC on freenode, etc.</p>\n<p>Q: Is Seaside as good as I think in terms of insulating users from each other?</p>\n<p>I would say so.</p>\n<p>Q: Might I be better off, security wise, sticking to the languages I'm most familiar with so I don't make any n00b mistakes or will Seaside be worth worth scaling the learning curve and prove more secure, comprehensible and maintainable in the long run?</p>\n<p>The killer argument in favor of Seaside IMHO is the true component model. It really, really makes it wonderful for complex UIs and maintenance. If you are afraid of learning \"something different\" (but then you wouldn't even consider it in the first place I guess) then I would warn you. But if you are not afraid then you will probably love it.</p>\n<p>Also - Squeak (or VW) is a truly awesome development environment - debugging live Seaside sessions, changing code in the debugger and resuming etc etc. It rocks.</p>\n", "abstract": "Disclaimer: I really don't like PHP, Python is nice, but doesn't come close to Smalltalk in my book. But I am a biased Smalltalker. Some answers about Seaside/Squeak: Q: Which I guess runs on a squeak app server? Seaside runs in several different Smalltalks (VW, Gemstone, Squeak etc). The term \"app server\" is not really used in Smalltalk country. :) Q: From what I've heard it would permit good compartmentalization of users as each would have their own little private VM independent of all the systems other users which sounds wonderful from a security, scaling and redundancy standpoint. Yes, each user has its own WASession and all UI components the user sees are instances living on the server side in that session. So sharing of state between sessions is something you must do explicitly, typically through a db. Q: I've not done any Smalltalk since Uni 15 years back and I never dug too deep into it then. I don't see much entry level help for seaside or that many projects using it. Smalltalk is easy to get going with and there is a whole free online book on Seaside. Q: I suspect setting a server up to run it is hard for the same reason i.e. not because it's inherently hard but just cause there will be less help online and a presumption you are already rather au fait with Sqeak/Smalltalk. No, not hard. :) In fact, quite trivial. Tons of help - Seaside ml, IRC on freenode, etc. Q: Is Seaside as good as I think in terms of insulating users from each other? I would say so. Q: Might I be better off, security wise, sticking to the languages I'm most familiar with so I don't make any n00b mistakes or will Seaside be worth worth scaling the learning curve and prove more secure, comprehensible and maintainable in the long run? The killer argument in favor of Seaside IMHO is the true component model. It really, really makes it wonderful for complex UIs and maintenance. If you are afraid of learning \"something different\" (but then you wouldn't even consider it in the first place I guess) then I would warn you. But if you are not afraid then you will probably love it. Also - Squeak (or VW) is a truly awesome development environment - debugging live Seaside sessions, changing code in the debugger and resuming etc etc. It rocks."}, {"id": 697920, "score": 8, "vote": 0, "content": "<p>I'd say take a look at <a href=\"http://www.djangoproject.com\" rel=\"nofollow noreferrer\">Django</a>. It's a Python framework with a ready-made authentication system that's independent of the hosting OS, which means that compromises are limited to the app that was compromised (barring some exploit against the web server hosting the Python process). </p>\n", "abstract": "I'd say take a look at Django. It's a Python framework with a ready-made authentication system that's independent of the hosting OS, which means that compromises are limited to the app that was compromised (barring some exploit against the web server hosting the Python process). "}, {"id": 698940, "score": 6, "vote": 0, "content": "<p>I've been getting into seaside myself but in many ways it is very hard to get started, which has nothing to do with the smalltalk which can be picked up extremely quickly.  The challenge is that you are really protected from writing html directly.  </p>\n<p>I find in most frameworks when you get stuck on how to do something there is always a work around of solving it by using the template.  You may later discover that this solution causes problems with clarity down the road and there is in fact a better solutions built into the framework but you were able to move on from that problem until you learned the right way to do it.</p>\n<p>Seaside doesn't have templates so you don't get that crutch.  No problems have permanently stumped me but some have taken me longer to solve than I would have liked.  The flip side of this is you end up learning the seaside methodology much quicker because you can't cheat.</p>\n<p>If you decide to go the seaside route don't be afraid to post to the seaside mailing list at squeakfoundation.org.  I found it intimidating at first because you don't see a lot of beginner questions there due to the low traffic but people are willing to help beginners there.</p>\n<p>Also there are a handful of seaside developers who monitor stackoverflow regularly.  Good luck.</p>\n", "abstract": "I've been getting into seaside myself but in many ways it is very hard to get started, which has nothing to do with the smalltalk which can be picked up extremely quickly.  The challenge is that you are really protected from writing html directly.   I find in most frameworks when you get stuck on how to do something there is always a work around of solving it by using the template.  You may later discover that this solution causes problems with clarity down the road and there is in fact a better solutions built into the framework but you were able to move on from that problem until you learned the right way to do it. Seaside doesn't have templates so you don't get that crutch.  No problems have permanently stumped me but some have taken me longer to solve than I would have liked.  The flip side of this is you end up learning the seaside methodology much quicker because you can't cheat. If you decide to go the seaside route don't be afraid to post to the seaside mailing list at squeakfoundation.org.  I found it intimidating at first because you don't see a lot of beginner questions there due to the low traffic but people are willing to help beginners there. Also there are a handful of seaside developers who monitor stackoverflow regularly.  Good luck."}, {"id": 776464, "score": 5, "vote": 0, "content": "<p>Have you taken a look at <strong>www.nagare.org</strong> ?</p>\n<p>A framework particularly for web apps rather than web sites.</p>\n<p>It is based around the Seaside concepts but you program in Python (nagare deploys a distribution of python called Stackless Python to get the continuations working).</p>\n<p>Like Seaside it will auto generate HTML, but additionally can use templates as required.</p>\n<p>It has been recently open sourced by <a href=\"http://www.net-ng.com/\" rel=\"nofollow noreferrer\">http://www.net-ng.com/</a> who themselves have many years experience in delivering web apps/sites in quality web frameworks like zope and plone.</p>\n<p>I am researching it myself at the moment to see if it fits my needs, so can't tell you what I think of it in the wild.  If you take a look, please give your feedback. </p>\n", "abstract": "Have you taken a look at www.nagare.org ? A framework particularly for web apps rather than web sites. It is based around the Seaside concepts but you program in Python (nagare deploys a distribution of python called Stackless Python to get the continuations working). Like Seaside it will auto generate HTML, but additionally can use templates as required. It has been recently open sourced by http://www.net-ng.com/ who themselves have many years experience in delivering web apps/sites in quality web frameworks like zope and plone. I am researching it myself at the moment to see if it fits my needs, so can't tell you what I think of it in the wild.  If you take a look, please give your feedback. "}, {"id": 697911, "score": 4, "vote": 0, "content": "<p>While considering a Smalltalk web framework, look at <a href=\"http://www.aidaweb.si\" rel=\"nofollow noreferrer\">Aida/Web</a> as well. Aida has built-in security with user/group/role management and strong access control, which can help you a lot in your case. That way you can achieve safe enough separation of users at the user level in one image. But if you really want, you can separate them with running many images as well. But this brings increased maintenance and I'd think twice if it is worth.</p>\n", "abstract": "While considering a Smalltalk web framework, look at Aida/Web as well. Aida has built-in security with user/group/role management and strong access control, which can help you a lot in your case. That way you can achieve safe enough separation of users at the user level in one image. But if you really want, you can separate them with running many images as well. But this brings increased maintenance and I'd think twice if it is worth."}, {"id": 869218, "score": 3, "vote": 0, "content": "<p>I'm toying with Seaside myself and found <a href=\"http://seaside.gemstone.com/tutorial.html\" rel=\"nofollow noreferrer\">this tutorial</a> to be invaluable in gaining insight into the capabilities of the framework.</p>\n", "abstract": "I'm toying with Seaside myself and found this tutorial to be invaluable in gaining insight into the capabilities of the framework."}, {"id": 697934, "score": 1, "vote": 0, "content": "<p>I think you've pretty much summed up the pros and cons.  Seaside isn't <em>that</em> hard to set up (I've installed it twice for various projects) but using it will definitely affect how you work--in addition to re-learning the language you'll probably have to adjust lots of assumptions about your work flow.  </p>\n<p>It also depends on two other factors</p>\n<ul>\n<li>If other people will eventually be maintaining it, you'll have better luck finding python programmers</li>\n<li>If you are doing a highly stateful site, Seaside is going to beat the pants off any other framework I've seen.</li>\n</ul>\n", "abstract": "I think you've pretty much summed up the pros and cons.  Seaside isn't that hard to set up (I've installed it twice for various projects) but using it will definitely affect how you work--in addition to re-learning the language you'll probably have to adjust lots of assumptions about your work flow.   It also depends on two other factors"}, {"id": 3197051, "score": 1, "vote": 0, "content": "<p>There is now an <a href=\"http://book.seaside.st/book\" rel=\"nofollow noreferrer\">online book on Seaside</a> to complete the <a href=\"http://seaside.gemstone.com/tutorial.html\" rel=\"nofollow noreferrer\">tutorial pointed out earlier</a>.</p>\n", "abstract": "There is now an online book on Seaside to complete the tutorial pointed out earlier."}]}, {"link": "https://stackoverflow.com/questions/4130014/the-new-file-directory-structure-of-pyramid-pylons-is-causing-me-some-confusio", "question": {"id": "4130014", "title": "The new file/directory structure of Pyramid (Pylons) is causing me some confusion", "content": "<p>I've been developing in Pylons for a little while now and have recently learned they're merging with another framework to create Pyramid.</p>\n<p>I've been looking over <a href=\"https://github.com/Pylons/pyramid/tree/master/docs/tutorials/wiki2/src/basiclayout/tutorial\" rel=\"noreferrer\">example code</a> to see the differences and it's causing a bit of confusion...</p>\n<p>For example, Controllers have been replaced by Views. Not a big problem... But what I find interesting is there's no directories for these. It's simply one file: <code>views.py</code>.</p>\n<p>How does this new MVC structure work? Do I write all my actions into this one file? That could get rather annoying when I have similarly named actions (multiple indexes, for example) :/</p>\n<p>Could you point me in the direction of some good tutorials/documentation on how to use this framework?</p>\n", "abstract": "I've been developing in Pylons for a little while now and have recently learned they're merging with another framework to create Pyramid. I've been looking over example code to see the differences and it's causing a bit of confusion... For example, Controllers have been replaced by Views. Not a big problem... But what I find interesting is there's no directories for these. It's simply one file: views.py. How does this new MVC structure work? Do I write all my actions into this one file? That could get rather annoying when I have similarly named actions (multiple indexes, for example) :/ Could you point me in the direction of some good tutorials/documentation on how to use this framework?"}, "answers": [{"id": 4130836, "score": 26, "vote": 0, "content": "<p>Since the various view-related configuration methods (config.add_view, config.add_handler) require you to pass a dotted name as the class or function to be used as a view or handler, you can arrange your code however you like.</p>\n<p>For example, if your project package name were <code>myproject</code> and wanted to arrange all your views in a Python subpackage within the <code>myproject</code> package named \"views\" (see <a href=\"http://docs.python.org/tutorial/modules.html#packages\">http://docs.python.org/tutorial/modules.html#packages</a>) instead of a single views <em>file</em>, you might:</p>\n<ul>\n<li><p>Create a <code>views</code> directory inside your <code>mypackage</code> package.</p></li>\n<li><p><em>Move</em> the existing <code>views.py</code> file to a file inside the new <code>views</code> directory named, say,\n<code>blog.py</code>.</p></li>\n<li><p>Create a file within the new <code>views</code> directory named <code>__init__.py</code> (it can be empty, \nthis just tells Python that the <code>views</code> directory is a <em>package</em>.</p></li>\n</ul>\n<p>Then change the <code>__init__.py</code> of your <code>myproject</code> project (<em>not</em> the <code>__init__.py</code> you just created in the <code>views</code> directory, the one in its parent directory) from something like:</p>\n<p><code>config.add_handler('myhandler', '/my/handler', handler='mypackage.views.MyHandler')</code></p>\n<p>To:</p>\n<p><code>config.add_handler('myhandler', '/my/handler', handler='mypackage.views.blog.MyHandler')</code></p>\n<p>You can then continue to add files to the <code>views</code> directory, and refer to views or handler classes/functions within those files via the dotted name passed as <code>handler=</code> or <code>view=</code>.</p>\n", "abstract": "Since the various view-related configuration methods (config.add_view, config.add_handler) require you to pass a dotted name as the class or function to be used as a view or handler, you can arrange your code however you like. For example, if your project package name were myproject and wanted to arrange all your views in a Python subpackage within the myproject package named \"views\" (see http://docs.python.org/tutorial/modules.html#packages) instead of a single views file, you might: Create a views directory inside your mypackage package. Move the existing views.py file to a file inside the new views directory named, say,\nblog.py. Create a file within the new views directory named __init__.py (it can be empty, \nthis just tells Python that the views directory is a package. Then change the __init__.py of your myproject project (not the __init__.py you just created in the views directory, the one in its parent directory) from something like: config.add_handler('myhandler', '/my/handler', handler='mypackage.views.MyHandler') To: config.add_handler('myhandler', '/my/handler', handler='mypackage.views.blog.MyHandler') You can then continue to add files to the views directory, and refer to views or handler classes/functions within those files via the dotted name passed as handler= or view=."}, {"id": 11342952, "score": 5, "vote": 0, "content": "<p>Here is one answer that should be pretty straight forward. This question was asked when Pyramid 1.3 wasn't yet out. So forget about python handlers since the new decorator do a pretty good job now. </p>\n<p>But just to start: Pyramid doesn't have any common structure. You could possibly write a whole app in one single file if you wanted. In other words, if you liked how pylons was structured, you can go with it. If you prefer to setup your own structure then go for it. </p>\n<p>If your site doesn't need more than one file then...GO FOR IT!!! All you really need is that it works. </p>\n<p>I personally have a structure like that</p>\n<pre><code class=\"python\">- root\n    - __init__.py # all setup goes there\n    - security.py # where functions related to ACL and group_finder\n    - models.py or models/ # where all my models go\n    - views.py or views/   # where all my views go \n    - templates\n       - modelname\n          - all template related to this resource type\n\n    - scripts # where I put my scripts like backup etc\n    - lib # all utilities goes there\n    - subscribers # where all events are defined\n</code></pre>\n<p>My view package might sometimes be splitted up in many files where I'd group views by ResourceType. </p>\n<p>If you happen to use context to match views instead of routes. You can do some pretty nice things with <a href=\"http://docs.pylonsproject.org/projects/pyramid/en/latest/narr/viewconfig.html?awesome#view-defaults-class-decorator\">view_defaults</a> and <a href=\"http://docs.pylonsproject.org/projects/pyramid/en/latest/api/view.html#pyramid.view.view_config\">view_config</a>.</p>\n<p><code>view_defaults</code> sets some default for the class, and <code>view_config</code> sets some more configurations for the defs using defaults provided by <code>view_defaults</code> if present.</p>\n", "abstract": "Here is one answer that should be pretty straight forward. This question was asked when Pyramid 1.3 wasn't yet out. So forget about python handlers since the new decorator do a pretty good job now.  But just to start: Pyramid doesn't have any common structure. You could possibly write a whole app in one single file if you wanted. In other words, if you liked how pylons was structured, you can go with it. If you prefer to setup your own structure then go for it.  If your site doesn't need more than one file then...GO FOR IT!!! All you really need is that it works.  I personally have a structure like that My view package might sometimes be splitted up in many files where I'd group views by ResourceType.  If you happen to use context to match views instead of routes. You can do some pretty nice things with view_defaults and view_config. view_defaults sets some default for the class, and view_config sets some more configurations for the defs using defaults provided by view_defaults if present."}]}, {"link": "https://stackoverflow.com/questions/5540784/how-can-a-test-called-by-robot-framework-return-information-to-the-console", "question": {"id": "5540784", "title": "How can a test called by Robot Framework return information to the console", "content": "<p>I have a robot framework test suite that calls a python method.  I would like that python method to return a message to the console without failing the test. Specifically I am trying to time a process.</p>\n<p>I can use \"raise\" to return a message to the console, but that simultaneously fails the test.</p>\n<pre><code class=\"python\"> def doSomething(self, testCFG={}):\n    '''\n    Do a process and time it. \n    '''\ntestCFG['operation'] = 'doSomething'\nstartTime = time.time()\nresponse=self.Engine(testCFG)\nendTime = time.time()\nduration = int(round(endTime-startTime))\nraise \"doSomething took\", duration//60 , \"minutes and\", duration%60, \"seconds.\"\nerrmsg = 'doSomething failed'\nif testCFG['code']: raise Exception(errmsg)\n</code></pre>\n<p>Or I can use \"print\" to return a message to the log file and report without failing the test, but that information is only available in the report, not the console.</p>\n<pre><code class=\"python\"> def doSomething(self, testCFG={}):\n    '''\n    Do a process and time it. \n    '''\ntestCFG['operation'] = 'doSomething'\nstartTime = time.time()\nresponse=self.Engine(testCFG)\nendTime = time.time()\nduration = int(round(endTime-startTime))\nprint \"doSomething took\", duration//60 , \"minutes and\", duration%60, \"seconds.\"\nerrmsg = 'doSomething failed'\nif testCFG['code']: raise Exception(errmsg)\n</code></pre>\n<p>If I use the \"print\" option I get this:</p>\n<pre><code class=\"python\">==============================================================================\nDo Something :: Do a process to a thing(Slow Process).                | PASS |\n------------------------------------------------------------------------------\ndoSomething :: Overall Results                                        | PASS |\n1 critical test, 1 passed, 0 failed\n1 test total, 1 passed, 0 failed\n==============================================================================\n</code></pre>\n<p>What I want is this:</p>\n<pre><code class=\"python\">==============================================================================\nDo Something :: Do a process to a thing(Slow Process).                | PASS |\ndoSomething took 3 minutes and 14 seconds.\n------------------------------------------------------------------------------\ndoSomething :: Overall Results                                        | PASS |\n1 critical test, 1 passed, 0 failed\n1 test total, 1 passed, 0 failed\n==============================================================================\n</code></pre>\n", "abstract": "I have a robot framework test suite that calls a python method.  I would like that python method to return a message to the console without failing the test. Specifically I am trying to time a process. I can use \"raise\" to return a message to the console, but that simultaneously fails the test. Or I can use \"print\" to return a message to the log file and report without failing the test, but that information is only available in the report, not the console. If I use the \"print\" option I get this: What I want is this:"}, "answers": [{"id": 5544621, "score": 13, "vote": 0, "content": "<p>Since you are using Python you have two simple possibilities:</p>\n<ol>\n<li><p>Write your messages to the <code>stderr</code>. These messages are written both to Robot's log file and to the console. A limitation is that the messages end up to the console only after the keyword you are executing finishes. A bonus is that this approach works also with Java based libraries.</p></li>\n<li><p>Write your messages to <code>sys.__stdout__</code> in Python. Robot only intercepts <code>sys.stdout</code> and <code>sys.stderr</code> and leaves <code>sys.__stdout__</code> (and <code>sys.__stderr__</code>) alone (as all well behaving Python programs should). These messages only end up to the console, but you can write them also to <code>sys.stdout</code> to get them also to the log file.</p></li>\n</ol>\n", "abstract": "Since you are using Python you have two simple possibilities: Write your messages to the stderr. These messages are written both to Robot's log file and to the console. A limitation is that the messages end up to the console only after the keyword you are executing finishes. A bonus is that this approach works also with Java based libraries. Write your messages to sys.__stdout__ in Python. Robot only intercepts sys.stdout and sys.stderr and leaves sys.__stdout__ (and sys.__stderr__) alone (as all well behaving Python programs should). These messages only end up to the console, but you can write them also to sys.stdout to get them also to the log file."}, {"id": 21168485, "score": 2, "vote": 0, "content": "<p>You can use the robot.api library. This is the document for the library</p>\n<p><a href=\"https://robot-framework.readthedocs.org/en/latest/_modules/robot/api/logger.html\" rel=\"nofollow\">https://robot-framework.readthedocs.org/en/latest/_modules/robot/api/logger.html</a></p>\n", "abstract": "You can use the robot.api library. This is the document for the library https://robot-framework.readthedocs.org/en/latest/_modules/robot/api/logger.html"}, {"id": 19393113, "score": 0, "vote": 0, "content": "<p>Have your lib return a string, then use <code>Set Test Message</code> to display it.</p>\n<pre><code class=\"python\">My Test Case  [Documentation]  display data returned from lib call\n  ${r} =  mylib.libfunc  arg=param\n  Set Test Message  libfunc returned ${r}\n</code></pre>\n<p>ref: <a href=\"http://robotframework.googlecode.com/hg/doc/libraries/BuiltIn.html#Set%20Test%20Message\" rel=\"nofollow\">http://robotframework.googlecode.com/hg/doc/libraries/BuiltIn.html#Set%20Test%20Message</a></p>\n<p>Updates:</p>\n<ol>\n<li>new link: <a href=\"http://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Set%20Test%20Message\" rel=\"nofollow\">http://robotframework.org/robotframework/latest/libraries/BuiltIn.html#Set%20Test%20Message</a></li>\n<li>new <code>Log To Console</code> command outputs to console in real time (i.e. during test execution, as opposed to <code>Set Test Message</code> which outputs only at the end of the test case.)</li>\n</ol>\n", "abstract": "Have your lib return a string, then use Set Test Message to display it. ref: http://robotframework.googlecode.com/hg/doc/libraries/BuiltIn.html#Set%20Test%20Message Updates:"}]}, {"link": "https://stackoverflow.com/questions/48914528/is-there-a-way-to-export-allure-report-to-a-single-html-file-to-share-with-the", "question": {"id": "48914528", "title": "Is there a way to export Allure Report to a single html file? To share with the team", "content": "<p>Right now, I am generating the Allure Report through the terminal by running the command: <strong>allure serve {folder that contains the json files}</strong>, but with this way the HTML report will only be available to my local because\n<br/></p>\n<ol>\n<li>The json files that generated the report are in my computer</li>\n<li>I ran the command through the terminal (if i kill the terminal, the report is gone) \n<br/></li>\n</ol>\n<p>I have tried: Saving the Allure Report as <em>Webpage, Complete</em>, but the results did not reflect to the page, all i was seeing was blank fields. </p>\n<p>So, what im trying to to do is after I execute the command to generate the report, I want to have an <strong>html file</strong> of the report that i can store, save to my computer or send through email, so i do not have to execute the command to see the previous reports. (as much as possible into 1 html file)</p>\n", "abstract": "Right now, I am generating the Allure Report through the terminal by running the command: allure serve {folder that contains the json files}, but with this way the HTML report will only be available to my local because\n I have tried: Saving the Allure Report as Webpage, Complete, but the results did not reflect to the page, all i was seeing was blank fields.  So, what im trying to to do is after I execute the command to generate the report, I want to have an html file of the report that i can store, save to my computer or send through email, so i do not have to execute the command to see the previous reports. (as much as possible into 1 html file)"}, "answers": [{"id": 48926889, "score": 7, "vote": 0, "content": "<p>It's doesn't work because allure report as you seen is not a simple Webpage, you could not save it and send as file to you team. It's a local Jetty server instance, serves generated report and then you can open it in the browser.</p>\n<p>Here for your needs some solutions:</p>\n<ol>\n<li>One server(your local PC, remote or some CI environment), where you can generate report and share this for you team. (server should be running alltime)</li>\n<li>Share allure report folder as files({folder that contains the json files}) to teammates, setup them allure tool, and run command allure server on them local(which one).</li>\n</ol>\n<p>Hope, it helps.</p>\n", "abstract": "It's doesn't work because allure report as you seen is not a simple Webpage, you could not save it and send as file to you team. It's a local Jetty server instance, serves generated report and then you can open it in the browser. Here for your needs some solutions: Hope, it helps."}, {"id": 70380178, "score": 1, "vote": 0, "content": "<p>I've made a tool to build whole <code>allure generate</code>' result folder into a single html file.\n<a href=\"https://github.com/MihanEntalpo/allure-single-html-file\" rel=\"nofollow noreferrer\">https://github.com/MihanEntalpo/allure-single-html-file</a></p>\n", "abstract": "I've made a tool to build whole allure generate' result folder into a single html file.\nhttps://github.com/MihanEntalpo/allure-single-html-file"}, {"id": 62147635, "score": 0, "vote": 0, "content": "<p>You can use this docker container to render and export an emailable report\n<a href=\"https://github.com/fescobar/allure-docker-service#customize-emailable-report\" rel=\"nofollow noreferrer\">https://github.com/fescobar/allure-docker-service#customize-emailable-report</a></p>\n", "abstract": "You can use this docker container to render and export an emailable report\nhttps://github.com/fescobar/allure-docker-service#customize-emailable-report"}, {"id": 63722118, "score": 0, "vote": 0, "content": "<p>Allure report generates html in temp folder after execution and you can upload it to one of the server like netlify and it will generate an url to share.</p>\n", "abstract": "Allure report generates html in temp folder after execution and you can upload it to one of the server like netlify and it will generate an url to share."}, {"id": 68027284, "score": 0, "vote": 0, "content": "<p>Yes you can generate HTML report.</p>\n<p>You can use the command <code>allure generate &lt;alluredir&gt;</code> to create html files. This folder you could send around, but you can only directly open the index.html file with <code>Edge</code> or <code>Firefox</code>.</p>\n<p><a href=\"https://github.com/allure-framework/allure2/issues/755#issuecomment-420376918\" rel=\"nofollow noreferrer\">source</a></p>\n", "abstract": "Yes you can generate HTML report. You can use the command allure generate <alluredir> to create html files. This folder you could send around, but you can only directly open the index.html file with Edge or Firefox. source"}, {"id": 69287141, "score": 0, "vote": 0, "content": "<p>Basically we need to deploy our allure-report folder to a server. So Navigate to <strong>allure-report</strong> folder, simply drag and drop to <a href=\"https://www.netlify.com/\" rel=\"nofollow noreferrer\">Netlify</a>. That would generate a link that can be shared with anyone to access. However, this is not recommended to deploy like this if our allure-report folder has confidential data</p>\n", "abstract": "Basically we need to deploy our allure-report folder to a server. So Navigate to allure-report folder, simply drag and drop to Netlify. That would generate a link that can be shared with anyone to access. However, this is not recommended to deploy like this if our allure-report folder has confidential data"}]}, {"link": "https://stackoverflow.com/questions/406907/why-does-ruby-have-rails-while-python-has-no-central-framework", "question": {"id": "406907", "title": "Why does Ruby have Rails while Python has no central framework?", "content": "<p>This is a(n) historical question, not a comparison-between-languages question:</p>\n<p><a href=\"http://tomayko.com/writings/no-rails-for-python\" rel=\"noreferrer\">This article from 2005</a> talks about the lack of a single, central framework for Python. For Ruby, this framework is clearly Rails. <strong>Why, historically speaking, did this happen for Ruby but not for Python?</strong> (or did it happen, and that framework is Django?)</p>\n<p>Also, the hypothetical questions: <strong>would Python be more popular if it had one, good framework? Would Ruby be less popular if it had no central framework?</strong></p>\n<p><strong>[Please avoid discussions of whether Ruby or Python is better, which is just too open-ended to answer.]</strong></p>\n<p><strong>Edit:</strong> Though I thought this is obvious, I'm not saying that other frameworks do not exist for Ruby, but rather that the big one <strong>in terms of popularity</strong> is Rails. Also, I should mention that I'm not saying that frameworks for Python are not as good (or better than) Rails. Every framework has its pros and cons, but Rails seems to, as Ben Blank says in the one of the comments below, have surpassed Ruby in terms of popularity. There are no examples of that on the Python side. WHY? That's the question.</p>\n", "abstract": "This is a(n) historical question, not a comparison-between-languages question: This article from 2005 talks about the lack of a single, central framework for Python. For Ruby, this framework is clearly Rails. Why, historically speaking, did this happen for Ruby but not for Python? (or did it happen, and that framework is Django?) Also, the hypothetical questions: would Python be more popular if it had one, good framework? Would Ruby be less popular if it had no central framework? [Please avoid discussions of whether Ruby or Python is better, which is just too open-ended to answer.] Edit: Though I thought this is obvious, I'm not saying that other frameworks do not exist for Ruby, but rather that the big one in terms of popularity is Rails. Also, I should mention that I'm not saying that frameworks for Python are not as good (or better than) Rails. Every framework has its pros and cons, but Rails seems to, as Ben Blank says in the one of the comments below, have surpassed Ruby in terms of popularity. There are no examples of that on the Python side. WHY? That's the question."}, "answers": [{"id": 407003, "score": 35, "vote": 0, "content": "<p>As I see it, Rails put Ruby on the map. The simple fact is that before Rails, Ruby was a minor esoteric language, with very little adoption.  Ruby owes its success to Rails.  As such, Rails has a central place in the Ruby ecosystem.  As slim points out, there are other web frameworks, but it's going to be very difficult to overtake Rails as the leader.</p>\n<p>Python on the other hand, had a very different adoption curve.  Before Rails, Python was much more widely used than Ruby, and so had a number of competing web frameworks, each slowly building their constituencies.  Django has done a good job consolidating support, and becoming the leader in the Python web framework world, but it will never be the One True Framework simply because of the way the community developed.</p>\n", "abstract": "As I see it, Rails put Ruby on the map. The simple fact is that before Rails, Ruby was a minor esoteric language, with very little adoption.  Ruby owes its success to Rails.  As such, Rails has a central place in the Ruby ecosystem.  As slim points out, there are other web frameworks, but it's going to be very difficult to overtake Rails as the leader. Python on the other hand, had a very different adoption curve.  Before Rails, Python was much more widely used than Ruby, and so had a number of competing web frameworks, each slowly building their constituencies.  Django has done a good job consolidating support, and becoming the leader in the Python web framework world, but it will never be the One True Framework simply because of the way the community developed."}, {"id": 406925, "score": 7, "vote": 0, "content": "<p>I don't think it's right to characterise Rails as 'the' 'single' 'central' Ruby framework.</p>\n<p>Other frameworks for Ruby include Merb, Camping and Ramaze.</p>\n<p>... which sort of invalidates the question.</p>\n", "abstract": "I don't think it's right to characterise Rails as 'the' 'single' 'central' Ruby framework. Other frameworks for Ruby include Merb, Camping and Ramaze. ... which sort of invalidates the question."}, {"id": 408146, "score": 7, "vote": 0, "content": "<p>The real technical answer is that there are three major approaches to web-development in Python: one is CGI-based, where the application is built just like an old one-off Perl application to run through CGI or FastCGI, e.g. <a href=\"http://trac.edgewall.org/\" rel=\"nofollow noreferrer\">Trac</a>; then there is <a href=\"http://zope.org/\" rel=\"nofollow noreferrer\">Zope</a>, which is a bizarro overengineered framework with its own DB concept, a strange misguided through-the-web software development concept, etc. (but <a href=\"http://plone.org\" rel=\"nofollow noreferrer\">Plone</a> is still quite popular); and then there is Django (and <a href=\"http://turbogears.org/\" rel=\"nofollow noreferrer\">Turbogears</a>, etc.), which is guided by the same just-the-tools-needed philosophy as Rails (it can be argued who got there first or who did it better). A lot of people would probably agree that the Django/Rails/<a href=\"http://cakephp.org\" rel=\"nofollow noreferrer\">CakePHP</a> approach is better than the older approaches, but as the older language Python has a lot more legacy frameworks that are still trying to evolve and stay relevant. These frameworks will hang on because there is already developer buy-in for them. For example, in hindsight many people would probably say that Zope (especially ZODB) was a terrible mistake, but Zope 3 is much better than Zope 2, and there are already whole companies built around Zope technologies.</p>\n", "abstract": "The real technical answer is that there are three major approaches to web-development in Python: one is CGI-based, where the application is built just like an old one-off Perl application to run through CGI or FastCGI, e.g. Trac; then there is Zope, which is a bizarro overengineered framework with its own DB concept, a strange misguided through-the-web software development concept, etc. (but Plone is still quite popular); and then there is Django (and Turbogears, etc.), which is guided by the same just-the-tools-needed philosophy as Rails (it can be argued who got there first or who did it better). A lot of people would probably agree that the Django/Rails/CakePHP approach is better than the older approaches, but as the older language Python has a lot more legacy frameworks that are still trying to evolve and stay relevant. These frameworks will hang on because there is already developer buy-in for them. For example, in hindsight many people would probably say that Zope (especially ZODB) was a terrible mistake, but Zope 3 is much better than Zope 2, and there are already whole companies built around Zope technologies."}, {"id": 406940, "score": 5, "vote": 0, "content": "<p>Rails was somewhat revolutionary in its extreme \"convention over configuration\" approach which set it apart from pretty much anything else and made it the \"killer app\" of Ruby, causing a lot of people to notice Ruby in the first place. </p>\n<p>So the question is really \"Why did David Hansson decide to write Rails in Ruby rather than Python?\"</p>\n", "abstract": "Rails was somewhat revolutionary in its extreme \"convention over configuration\" approach which set it apart from pretty much anything else and made it the \"killer app\" of Ruby, causing a lot of people to notice Ruby in the first place.  So the question is really \"Why did David Hansson decide to write Rails in Ruby rather than Python?\""}, {"id": 406949, "score": 5, "vote": 0, "content": "<p>Remember that Ruby had existed for a long time before Rails was created.  According to Wikipedia, Ruby was created in the mid-90's; Rails didn't come around until 2004.  Ruby is simply the language that David Hansson chose to use for Rails.</p>\n<p>And yes, I would say <b>Ruby is to Rails as Python is to Django</b>.</p>\n", "abstract": "Remember that Ruby had existed for a long time before Rails was created.  According to Wikipedia, Ruby was created in the mid-90's; Rails didn't come around until 2004.  Ruby is simply the language that David Hansson chose to use for Rails. And yes, I would say Ruby is to Rails as Python is to Django."}, {"id": 407260, "score": 5, "vote": 0, "content": "<p>I agree with Ned. I'd bet that more than 90% of Ruby installations are for no other purpose than running Rails. Rails dominates Ruby - there is no single application that dominates Python, mainly because the Python community is somewhat bigger than the Ruby community. </p>\n", "abstract": "I agree with Ned. I'd bet that more than 90% of Ruby installations are for no other purpose than running Rails. Rails dominates Ruby - there is no single application that dominates Python, mainly because the Python community is somewhat bigger than the Ruby community. "}, {"id": 407543, "score": 2, "vote": 0, "content": "<p>Would ruby be less popular without Rails? absolutely.</p>\n<p>Would Python be more popular with one true framework? You mean as opposed to several? May be, who knows. In any case most agree Django is a very good framework.</p>\n<p>Why, historically, did it happen to Ruby? Because DHH chose Ruby after doing his own research. </p>\n<p>To add to the answer regarding Rails having made a breakthrough because of 'convention over configuration' there is also another reason and that is that Rails has been using the meta-programming abilities of Ruby superbly. A lot of the magic of Rails which has contributed to removing a lot of the pain of developing web apps came through this clever use of ruby meta-programming.</p>\n", "abstract": "Would ruby be less popular without Rails? absolutely. Would Python be more popular with one true framework? You mean as opposed to several? May be, who knows. In any case most agree Django is a very good framework. Why, historically, did it happen to Ruby? Because DHH chose Ruby after doing his own research.  To add to the answer regarding Rails having made a breakthrough because of 'convention over configuration' there is also another reason and that is that Rails has been using the meta-programming abilities of Ruby superbly. A lot of the magic of Rails which has contributed to removing a lot of the pain of developing web apps came through this clever use of ruby meta-programming."}, {"id": 408756, "score": 2, "vote": 0, "content": "<p>I'd have to agree that Django is basically the \"Rails for Python\" equivalent.  Why did it take so long?  The simple answer is too many options.</p>\n<p>In Python, there are many request/response systems, url rewriters, ORMs, templating languages, etc. that you could build a web stack in dozens of different configurations.  In fact, this is exactly what Pylons and TurboGears do is provide a reliable, predictable stack to build MVC web apps.</p>\n<p>What Django did differently was they encapsulated everything.  Rather than go the components route, they built one contiguous system.  They built their own ORM, their own template language, their own middleware system, etc.  Their reasoning was that there was no unified system like this for Python.</p>\n", "abstract": "I'd have to agree that Django is basically the \"Rails for Python\" equivalent.  Why did it take so long?  The simple answer is too many options. In Python, there are many request/response systems, url rewriters, ORMs, templating languages, etc. that you could build a web stack in dozens of different configurations.  In fact, this is exactly what Pylons and TurboGears do is provide a reliable, predictable stack to build MVC web apps. What Django did differently was they encapsulated everything.  Rather than go the components route, they built one contiguous system.  They built their own ORM, their own template language, their own middleware system, etc.  Their reasoning was that there was no unified system like this for Python."}, {"id": 407000, "score": 1, "vote": 0, "content": "<p>Python is not a one-trick pony. Therefore, there's no single \"central framework\" for it. Many people first heard of Python as \"another nice OO language\" or through one of the many uses to which it has been put.</p>\n<p>To be fair, Ruby is not a one-trick pony either. It's just that many people regarded Rails as the \"killer app\" that got them to look at a previously-not-well-known language. I suspect many people never heard of Ruby before Rails, but that's by no means the only thing Ruby can do.</p>\n", "abstract": "Python is not a one-trick pony. Therefore, there's no single \"central framework\" for it. Many people first heard of Python as \"another nice OO language\" or through one of the many uses to which it has been put. To be fair, Ruby is not a one-trick pony either. It's just that many people regarded Rails as the \"killer app\" that got them to look at a previously-not-well-known language. I suspect many people never heard of Ruby before Rails, but that's by no means the only thing Ruby can do."}, {"id": 412947, "score": 0, "vote": 0, "content": "<p>If you followed the news, you have read that Merb and Rails will merge. This is a good move IMHO. I think it's because of the common goal that the developers have: They want a simple framework for webdev, which comes with a OR mapper, routing, template language, etc which fits for most tasks..</p>\n", "abstract": "If you followed the news, you have read that Merb and Rails will merge. This is a good move IMHO. I think it's because of the common goal that the developers have: They want a simple framework for webdev, which comes with a OR mapper, routing, template language, etc which fits for most tasks.."}, {"id": 2864532, "score": 0, "vote": 0, "content": "<p>Check out this article on <a href=\"http://blog.ianbicking.org/what-really-makes-rails-work.html\" rel=\"nofollow noreferrer\">why we'll never see Python-on-Rails</a>. The author gives some of the basic reasons why Python has never had <strong>and will never have</strong> a central framework. I might add, myself, that Java doesn't have one either, and for the same reasons.</p>\n<p>According to the author, Rails is strictly tied to its \"implementation,\" which is Ruby. Rails was adopted by many developers and Ruby was just part of it. Rails works perfectly on Ruby (or Ruby wanna-bes like Groovy), but more importantly, as many other answers say, Rails led the way to Ruby adoption.</p>\n<blockquote>\n<p>This is why Rails-for-Python won't\n  work, or at least what people have\n  been focusing on with Rails isn't\n  correct. It's not about the\n  implementation or the quality of the\n  framework, it's about the pattern of\n  adoption. It's about putting the\n  framework up front, and the\n  implementation in the back -- even if\n  this wasn't the Rails developers\n  intentions (though maybe they are\n  clever and this was their intention).</p>\n</blockquote>\n<p>Basically, you can't get a bunch of language-loving folk to gather around a single framework. On the Java side, while Spring is well-loved, it's no Rails in terms of popularity in the Java community. In a mature community developers have their own ideas about what metaphors work and don't work in a framework. <strong>This</strong> is why Rails leads to Ruby and not the other way around (typically, mostly, not in all cases).</p>\n", "abstract": "Check out this article on why we'll never see Python-on-Rails. The author gives some of the basic reasons why Python has never had and will never have a central framework. I might add, myself, that Java doesn't have one either, and for the same reasons. According to the author, Rails is strictly tied to its \"implementation,\" which is Ruby. Rails was adopted by many developers and Ruby was just part of it. Rails works perfectly on Ruby (or Ruby wanna-bes like Groovy), but more importantly, as many other answers say, Rails led the way to Ruby adoption. This is why Rails-for-Python won't\n  work, or at least what people have\n  been focusing on with Rails isn't\n  correct. It's not about the\n  implementation or the quality of the\n  framework, it's about the pattern of\n  adoption. It's about putting the\n  framework up front, and the\n  implementation in the back -- even if\n  this wasn't the Rails developers\n  intentions (though maybe they are\n  clever and this was their intention). Basically, you can't get a bunch of language-loving folk to gather around a single framework. On the Java side, while Spring is well-loved, it's no Rails in terms of popularity in the Java community. In a mature community developers have their own ideas about what metaphors work and don't work in a framework. This is why Rails leads to Ruby and not the other way around (typically, mostly, not in all cases)."}]}, {"link": "https://stackoverflow.com/questions/241575/framework-cms-suggestions-for-enterprise-website-intranet-ive-got-to-convinc", "question": {"id": "241575", "title": "Framework/CMS suggestions for enterprise website &amp; intranet (I&#39;ve got to convince the president its solid!)", "content": "<p>Dear stack overflow community,</p>\n<p>I've been given the task of overhauling a couple of websites for a large corporation I'm working for, as well as developing an internal intranet site for content management and document storage within the organization.</p>\n<p>My \"problem\" is this: They want me to use a framework/set of languages/technologies that I can prove to them are \"stable, enterprise-ready technologies with a proven track record.\"</p>\n<p>The spec's \"big picture\" really isn't too complicated: Implement an enterprise-class CMS for management of each division's web pages that deal mostly with product information and documentation (i.e. a simpler version of www.linksys.com).</p>\n<p>As an open-source programmer, I'd like to use Python with TurboGears and build it from scratch, but I can't really find a way to prove to the president that TurboGears has a huge enterprise track record. Zope seems to have a lot of enterprise usage, but it looks a bit bloated to me. Django could be an option, but doesn't seem as flexible as TurboGears.</p>\n<p>I'd rather not use PHP, but Drupal has a very nice resume with the \"right\" names under it (AOL, Sony, MTV); plus it could save me building many of the CMS components from scratch.</p>\n<p>Rails might be another option, but I'm not too familiar with it (and as a Python/PHP programmer, Ruby's syntax drives me crazy).</p>\n<p>What would the S.O. community suggest for a project like this? I'm sure many of you have faced the same dilemma. What ended up working/not working for you? As I said before, my first choice would be Python, second would be PHP, third would be Rails.</p>\n<p>Thank you,\nSeth</p>\n", "abstract": "Dear stack overflow community, I've been given the task of overhauling a couple of websites for a large corporation I'm working for, as well as developing an internal intranet site for content management and document storage within the organization. My \"problem\" is this: They want me to use a framework/set of languages/technologies that I can prove to them are \"stable, enterprise-ready technologies with a proven track record.\" The spec's \"big picture\" really isn't too complicated: Implement an enterprise-class CMS for management of each division's web pages that deal mostly with product information and documentation (i.e. a simpler version of www.linksys.com). As an open-source programmer, I'd like to use Python with TurboGears and build it from scratch, but I can't really find a way to prove to the president that TurboGears has a huge enterprise track record. Zope seems to have a lot of enterprise usage, but it looks a bit bloated to me. Django could be an option, but doesn't seem as flexible as TurboGears. I'd rather not use PHP, but Drupal has a very nice resume with the \"right\" names under it (AOL, Sony, MTV); plus it could save me building many of the CMS components from scratch. Rails might be another option, but I'm not too familiar with it (and as a Python/PHP programmer, Ruby's syntax drives me crazy). What would the S.O. community suggest for a project like this? I'm sure many of you have faced the same dilemma. What ended up working/not working for you? As I said before, my first choice would be Python, second would be PHP, third would be Rails. Thank you,\nSeth"}, "answers": [{"id": 241637, "score": 9, "vote": 0, "content": "<p>This is a contradictory statement: \"The spec's \"big picture\" really isn't too complicated: Implement an enterprise-class CMS for management of each division's web pages\".</p>\n<p>\"Enterprise Class\" and \"isn't too complicated\" do not belong in the same sentence. Seriously.</p>\n<p>\"Enterprise Class\" stuff is complicated because \"enterprise class\" tasks and environments are complicated.</p>\n<p>Mind, just because something is deployed within an enterprise doesn't mean it requires an \"enterprise class\" tool. But those that DO have \"enterprise class\" requirements ARE complicated because the problem domain and deployment environment are complicated.</p>\n<p>So, you need to be more clear on your specs than \"buzzword compliant\", \"my boss has heard of it\", \"never breaks\", etc.</p>\n<p>CMS seems deceptively simple, but it's not. If it's geeks managing stuff for geeks, that's one thing, but CMSs tend to have great impact on non-technical end users which can dramatically complicate user interfaces, security, workflows, support, etc. Think \"marketing wants to maintain the website\", and that they're going to let their junior intern do it.</p>\n<p>So, seriously, without REAL requirements it's hard to suggest anything. And without REAL requirements, and a solid understanding of your user base, you most certainly should NOT just \"roll your own\".</p>\n", "abstract": "This is a contradictory statement: \"The spec's \"big picture\" really isn't too complicated: Implement an enterprise-class CMS for management of each division's web pages\". \"Enterprise Class\" and \"isn't too complicated\" do not belong in the same sentence. Seriously. \"Enterprise Class\" stuff is complicated because \"enterprise class\" tasks and environments are complicated. Mind, just because something is deployed within an enterprise doesn't mean it requires an \"enterprise class\" tool. But those that DO have \"enterprise class\" requirements ARE complicated because the problem domain and deployment environment are complicated. So, you need to be more clear on your specs than \"buzzword compliant\", \"my boss has heard of it\", \"never breaks\", etc. CMS seems deceptively simple, but it's not. If it's geeks managing stuff for geeks, that's one thing, but CMSs tend to have great impact on non-technical end users which can dramatically complicate user interfaces, security, workflows, support, etc. Think \"marketing wants to maintain the website\", and that they're going to let their junior intern do it. So, seriously, without REAL requirements it's hard to suggest anything. And without REAL requirements, and a solid understanding of your user base, you most certainly should NOT just \"roll your own\"."}, {"id": 241578, "score": 8, "vote": 0, "content": "<p>If you like Python, and you want a web framework, I wouldn't go past Django.  It's simple, powerful, and runs plenty of enterprise-level sites.</p>\n<p>A few of the bigger sites using Django are <a href=\"http://www.lawrence.com/\" rel=\"nofollow noreferrer\">Lawrence.com</a>, <a href=\"http://www.curse.com/\" rel=\"nofollow noreferrer\">Curse Gaming</a> and some <a href=\"http://projects.washingtonpost.com/congress/\" rel=\"nofollow noreferrer\">Washington Post</a> sites.  It just went to version 1.0 recently as well, so you have a solid code base to work from.</p>\n<p>You can always throw in a <a href=\"http://wiki.python.org/moin/OrganizationsUsingPython\" rel=\"nofollow noreferrer\">list of companies that use Python</a> if you want to, it includes people like Google, Yahoo and NASA.</p>\n", "abstract": "If you like Python, and you want a web framework, I wouldn't go past Django.  It's simple, powerful, and runs plenty of enterprise-level sites. A few of the bigger sites using Django are Lawrence.com, Curse Gaming and some Washington Post sites.  It just went to version 1.0 recently as well, so you have a solid code base to work from. You can always throw in a list of companies that use Python if you want to, it includes people like Google, Yahoo and NASA."}, {"id": 243511, "score": 5, "vote": 0, "content": "<p>If you want an enterprise CMS, you don't build it from scratch with a framework. An enterprise CMS requires the work of thousands of people, like Plone. Here's Plone in the enterprise:</p>\n<p><a href=\"http://plone.net\" rel=\"nofollow noreferrer\">http://plone.net</a></p>\n", "abstract": "If you want an enterprise CMS, you don't build it from scratch with a framework. An enterprise CMS requires the work of thousands of people, like Plone. Here's Plone in the enterprise: http://plone.net"}, {"id": 243340, "score": 4, "vote": 0, "content": "<p>If you're looking for a enterprise-class CMS, why implement from scratch? There's a well-established, mature, Python-based enterprise-class CMS already available called Plone.</p>\n<p>It was recently reviewed by a major IT publication:</p>\n<p>\"Plone does one thing -- Web content management -- and does it with aplomb. That's why you'll find well-known U.S. and international organizations in most industries running their Web sites, internets, and extranets with Plone.\" <a href=\"http://tinyurl.com/35toee\" rel=\"nofollow noreferrer\">Inforworld, \"Open source CMSes prove well worth the price\" Oct 2007</a></p>\n<p>Out of the box Plone provides most if not all of the features you'll need, and with hundreds of <a href=\"http://plone.org/products\" rel=\"nofollow noreferrer\">free add-ons</a> available to implement any other features you'll need you may not need to do any coding to get your site up and running.</p>\n<p>It is being used by government, non-profit, education and businesses.  Names such as Novell, gnome.org, Discover Magazine, and thousands more.  And you can be pretty certain its secure, the CIA is using it to run its public facing site.</p>\n<p>The Plone community is very strong, it is one of the largest Open Source projects in the planet.  There are hundreds of Plone service providers around the world to provide support for your deployment.</p>\n<p>You can read up on the project itself on the <a href=\"http://plone.org\" rel=\"nofollow noreferrer\">Plone.org</a> website.  There's also <a href=\"http://plone.net\" rel=\"nofollow noreferrer\">Plone.net</a> which provides case studies and success stories, global list of service providers and more media coverage.</p>\n", "abstract": "If you're looking for a enterprise-class CMS, why implement from scratch? There's a well-established, mature, Python-based enterprise-class CMS already available called Plone. It was recently reviewed by a major IT publication: \"Plone does one thing -- Web content management -- and does it with aplomb. That's why you'll find well-known U.S. and international organizations in most industries running their Web sites, internets, and extranets with Plone.\" Inforworld, \"Open source CMSes prove well worth the price\" Oct 2007 Out of the box Plone provides most if not all of the features you'll need, and with hundreds of free add-ons available to implement any other features you'll need you may not need to do any coding to get your site up and running. It is being used by government, non-profit, education and businesses.  Names such as Novell, gnome.org, Discover Magazine, and thousands more.  And you can be pretty certain its secure, the CIA is using it to run its public facing site. The Plone community is very strong, it is one of the largest Open Source projects in the planet.  There are hundreds of Plone service providers around the world to provide support for your deployment. You can read up on the project itself on the Plone.org website.  There's also Plone.net which provides case studies and success stories, global list of service providers and more media coverage."}, {"id": 241737, "score": 3, "vote": 0, "content": "<p>I agree with <a href=\"https://stackoverflow.com/questions/241575/frameworkcms-suggestions-for-enterprise-website-intranet-ive-got-to-convince-th#241637\">Will's comments</a>.  Building a CMS, an intranet, and a document management system sounds like a ton of work.  My company would probably spend 6 months on the requirements for <strong>one</strong> of those systems and <strong>still</strong> hand off vague/incomplete requirements.</p>\n<p>Here are a few questions:</p>\n<ol>\n<li>Who will be maintaining the CMS and\nDoc Management systems when you're\ndone? The odds of the apps being a\nsuccess go down if you drop a custom\nPython app in the midst of a bunch\nof salaried Java developers.  I'm\nnot saying that it can't work, just\nthat the odds skew against it.</li>\n<li>Are you looking for a single\napp/framework to create the CMS for the\nexternal sites, the CMS for the\nintranet, and the document\nmanagement system? If so, that\nshould narrow the field of possible\nCMSs considerably.  For example, I\ndon't think that Drupal handles\nDocument Management well (if it\nhandles it at all.)</li>\n<li>Who are the users of the systems? \nWill the folks using the document\nmanagement system be the same ones\nmanaging the websites and intranet?</li>\n<li>Will the systems share workflow?\n(Will document management system\ncontent stay in its silo or can documents\nmigrate to the Web CMS or intranet? \nAre there different \"approvers\" in\neach area of the system or one set of overlords?)</li>\n</ol>\n<p>Good luck!</p>\n", "abstract": "I agree with Will's comments.  Building a CMS, an intranet, and a document management system sounds like a ton of work.  My company would probably spend 6 months on the requirements for one of those systems and still hand off vague/incomplete requirements. Here are a few questions: Good luck!"}, {"id": 241773, "score": 3, "vote": 0, "content": "<p>The first thing that comes to mind here is that you're approaching this all wrong. It seems like you're looking for a pet project for yourself and trying to decide what you'd like to do best.  You didn't specify the scope of who is going to be managing this site.. which is the real question. Is it just you?  Is it the management team?  Is it each division?  </p>\n<p>Making a huge decision like this takes a lot of time and thought. We spend a lot of time just helping our clients choose the right CMS for their needs. There are a lot out there and a decision like this is not something to be taken lightly.  A lot are good in the right situation and HORRIBLE in others. Also, what is right for you as the developer isn't necessarily right for your end user.</p>\n<p>As someone up there suggested, you need a lot more research into what the requirements are before anyone (including the developer community) can make any suggestions about what is best to use.  </p>\n", "abstract": "The first thing that comes to mind here is that you're approaching this all wrong. It seems like you're looking for a pet project for yourself and trying to decide what you'd like to do best.  You didn't specify the scope of who is going to be managing this site.. which is the real question. Is it just you?  Is it the management team?  Is it each division?   Making a huge decision like this takes a lot of time and thought. We spend a lot of time just helping our clients choose the right CMS for their needs. There are a lot out there and a decision like this is not something to be taken lightly.  A lot are good in the right situation and HORRIBLE in others. Also, what is right for you as the developer isn't necessarily right for your end user. As someone up there suggested, you need a lot more research into what the requirements are before anyone (including the developer community) can make any suggestions about what is best to use.  "}, {"id": 241785, "score": 3, "vote": 0, "content": "<p>I agree with Will's, braveterry's and Divamatrix's comments. Fully.</p>\n<p>There are tons of questions/issues/risks/considerations to take in order to succesfully launch a CMS solution for a medium/big enterprise. I will not repeat what Will and braveterry had said, instead of it I will offer a different point of view:</p>\n<p><strong>CMS for a medium-big company is not about Software. It is about proccesses and policies.</strong></p>\n<p>Which framework/tool to use must be dependent on exact requirements (kind of content, sources for content, who will be responsible to capture and create content, what are their abilities, who will be approving content updates, which departments will have a voice on what goes into the home page?, under which policies will be selected the content for the home page?, what will be the puropose for the home page? (marketing? sales? technical? branding?).</p>\n<p>If the answers to these questions (there are lot more) are not clear to you or even if you do not get why are SO important. Then I think you need to contract a seasoned consulting firm.</p>\n<p>PS: This gives me the idea to publish some sort of paper about this topic but that would take some days as I currently do not have the time to prepare it.</p>\n", "abstract": "I agree with Will's, braveterry's and Divamatrix's comments. Fully. There are tons of questions/issues/risks/considerations to take in order to succesfully launch a CMS solution for a medium/big enterprise. I will not repeat what Will and braveterry had said, instead of it I will offer a different point of view: CMS for a medium-big company is not about Software. It is about proccesses and policies. Which framework/tool to use must be dependent on exact requirements (kind of content, sources for content, who will be responsible to capture and create content, what are their abilities, who will be approving content updates, which departments will have a voice on what goes into the home page?, under which policies will be selected the content for the home page?, what will be the puropose for the home page? (marketing? sales? technical? branding?). If the answers to these questions (there are lot more) are not clear to you or even if you do not get why are SO important. Then I think you need to contract a seasoned consulting firm. PS: This gives me the idea to publish some sort of paper about this topic but that would take some days as I currently do not have the time to prepare it."}, {"id": 241831, "score": 2, "vote": 0, "content": "<p>\"They want me to use a framework/set of languages/technologies that I can prove to them are \"stable, enterprise-ready technologies with a proven track record.\"\"</p>\n<p>There's no proof of those features.  None.</p>\n<p>Is there some incumbent technology that they want you to use?  If so, you might be swimming upstream.</p>\n<ul>\n<li><p>If you're fighting for your preferred technology, you probably can't win their hearts and minds without a serious proof of concept or pilot project or something.</p></li>\n<li><p>If they're willing to listen, they'd be more willing to listen if you had a demo that showed how rock-solid your preferred approach is.</p></li>\n</ul>\n<p>if there is no incumbent, then they're just wringing their hands.  In this case, you'll need some evidence they actually believe -- a pilot project or a proof of concept.</p>\n<p>There's no Proof in this industry.  For every technology you can find a proponent and an opponent.  Even crap technology has proponents.  Forget proof. </p>\n<p>Just pick something that you can use <strong>very</strong> rapidly.  Get something up and running so quickly, with such high quality that you're obviously right and the rest of your opinions must be equally right.</p>\n<p>For this reason, flexibility has no value.  Go with Django and get something to run ASAP.</p>\n", "abstract": "\"They want me to use a framework/set of languages/technologies that I can prove to them are \"stable, enterprise-ready technologies with a proven track record.\"\" There's no proof of those features.  None. Is there some incumbent technology that they want you to use?  If so, you might be swimming upstream. If you're fighting for your preferred technology, you probably can't win their hearts and minds without a serious proof of concept or pilot project or something. If they're willing to listen, they'd be more willing to listen if you had a demo that showed how rock-solid your preferred approach is. if there is no incumbent, then they're just wringing their hands.  In this case, you'll need some evidence they actually believe -- a pilot project or a proof of concept. There's no Proof in this industry.  For every technology you can find a proponent and an opponent.  Even crap technology has proponents.  Forget proof.  Just pick something that you can use very rapidly.  Get something up and running so quickly, with such high quality that you're obviously right and the rest of your opinions must be equally right. For this reason, flexibility has no value.  Go with Django and get something to run ASAP."}, {"id": 243952, "score": 2, "vote": 0, "content": "<p>You'd like to build an Enterprise Class CMS from scratch? Just for one project? Are you crazy? Unless plan to go into the CMS business and have thousands and thousands of hours of development time there absolutely is no point to create a new one. There are excellent CMS's already out there. Drupal and Plone are the best in my opinion. I like Plone because its delightful to use. It's used by CIA, NASA, Akami, Novell and Ebay. </p>\n<p>Best wishes, </p>\n<p>Tony</p>\n", "abstract": "You'd like to build an Enterprise Class CMS from scratch? Just for one project? Are you crazy? Unless plan to go into the CMS business and have thousands and thousands of hours of development time there absolutely is no point to create a new one. There are excellent CMS's already out there. Drupal and Plone are the best in my opinion. I like Plone because its delightful to use. It's used by CIA, NASA, Akami, Novell and Ebay.  Best wishes,  Tony"}, {"id": 1384018, "score": 2, "vote": 0, "content": "<p>\"Enterprise\" is a marketing term. It has pretty much zero technical meaning. If your boss wants to hear Enterprise, then he will, but this won't mean that a given system is suitable for your needs. </p>\n<p>Beware of lists of companies that use a given suite of software. \"Ebay uses Plone\", and \"Ebay runs on Plone\" are two very different statements. </p>\n<p>Mostly, if you're doing \"Enterprise\" CMS (for whatever that term is worth) you should expect to have a learning curve that will only just <em>begin</em> to flatten out by the end of a significant project. </p>\n<p>For your project, I'd suggest you try to figure out what you really need. If you think TurboGears (or any other framework) is a good fit, discuss some risk management strategies with your boss. Maybe a small pilot to start with. Adopting a new technology is risky. Many \"large corporation\" web sites are mission-critical these days. </p>\n<p>For what it's worth. I like Plone, but I've only ever used it for non-corporate stuff. I don't personally know of any \"Enterprise\" implementations. At work I use Tridion, and I know of numerous implementations at that level. (If you're looking for a choice that will let you work in Python, Tridion isn't a good fit.)</p>\n", "abstract": "\"Enterprise\" is a marketing term. It has pretty much zero technical meaning. If your boss wants to hear Enterprise, then he will, but this won't mean that a given system is suitable for your needs.  Beware of lists of companies that use a given suite of software. \"Ebay uses Plone\", and \"Ebay runs on Plone\" are two very different statements.  Mostly, if you're doing \"Enterprise\" CMS (for whatever that term is worth) you should expect to have a learning curve that will only just begin to flatten out by the end of a significant project.  For your project, I'd suggest you try to figure out what you really need. If you think TurboGears (or any other framework) is a good fit, discuss some risk management strategies with your boss. Maybe a small pilot to start with. Adopting a new technology is risky. Many \"large corporation\" web sites are mission-critical these days.  For what it's worth. I like Plone, but I've only ever used it for non-corporate stuff. I don't personally know of any \"Enterprise\" implementations. At work I use Tridion, and I know of numerous implementations at that level. (If you're looking for a choice that will let you work in Python, Tridion isn't a good fit.)"}, {"id": 241593, "score": 1, "vote": 0, "content": "<p>No matter what you choose, don't use Typo3. It is a huge unhackable mess with its own idiotic template \"script\" language, near impossible to learn quickly, hard to teach to your enterprise users and damn ugly. No wonder there are shops which earn a living just doing Typo3 consulting. It is somewhat popular but don't think there is any decent documentation.</p>\n", "abstract": "No matter what you choose, don't use Typo3. It is a huge unhackable mess with its own idiotic template \"script\" language, near impossible to learn quickly, hard to teach to your enterprise users and damn ugly. No wonder there are shops which earn a living just doing Typo3 consulting. It is somewhat popular but don't think there is any decent documentation."}, {"id": 244946, "score": 1, "vote": 0, "content": "<p>Seth, if you really want a E-CMS, dont try to reinvent the wheel. There are plenty tested E-CMS around. For example some Zope/Python based solutions like Plone. It is Enterprise tested, so easy to use, extremly extensible (as you have a complete applicationserver in the backend), there are books around explaining it for authors/editors, webmasters and developers. Evolve it where it doesnt fit. If you need more info ask at IRC (OPN/freenode, #plone) or if one of the 59 World Plone Day [1] locations is not too far away go there at November 7th 2008 and get in touch with Plone and its huge and helpful community. [1] <a href=\"http://plone.org/wpd\" rel=\"nofollow noreferrer\">http://plone.org/wpd</a></p>\n", "abstract": "Seth, if you really want a E-CMS, dont try to reinvent the wheel. There are plenty tested E-CMS around. For example some Zope/Python based solutions like Plone. It is Enterprise tested, so easy to use, extremly extensible (as you have a complete applicationserver in the backend), there are books around explaining it for authors/editors, webmasters and developers. Evolve it where it doesnt fit. If you need more info ask at IRC (OPN/freenode, #plone) or if one of the 59 World Plone Day [1] locations is not too far away go there at November 7th 2008 and get in touch with Plone and its huge and helpful community. [1] http://plone.org/wpd"}, {"id": 294729, "score": 0, "vote": 0, "content": "<blockquote>\n<p>CMS for a medium-big company is not about Software. It is about proccesses and policies.</p>\n</blockquote>\n<p>Very true! </p>\n<p>Association with prestigious names is not necessarily an indicator of pleasing end results. </p>\n<p>I like Sony products, yes, but on the various occasions on which I have sought support from Sony sites I have felt like banging my head against a brick wall! Those head-cracking sites may not have been Drupal-oriented, I have no idea, but the point is: don't be sucked in by big names alone.</p>\n<p>An issue you should expect is: preconceptions of what may be achieved (or constrained) by a system. </p>\n<p>Allow yourself some learning time with Plone \u2014\u00a0ideally, for a large project such as this, <em>invest</em> in expert advice \u2014\u00a0and you'll realise that traditional-ish ideas of what a system can or should accomplish are mostly exceeded by Plone's capabilities. </p>\n<p>Gauge user requirements with a very open mind (not based on simplicities such as \"I'd like a system that's equal to system x\") then come to plone.org | Support | Chat Room to further discuss your requirements.</p>\n", "abstract": "CMS for a medium-big company is not about Software. It is about proccesses and policies. Very true!  Association with prestigious names is not necessarily an indicator of pleasing end results.  I like Sony products, yes, but on the various occasions on which I have sought support from Sony sites I have felt like banging my head against a brick wall! Those head-cracking sites may not have been Drupal-oriented, I have no idea, but the point is: don't be sucked in by big names alone. An issue you should expect is: preconceptions of what may be achieved (or constrained) by a system.  Allow yourself some learning time with Plone \u2014\u00a0ideally, for a large project such as this, invest in expert advice \u2014\u00a0and you'll realise that traditional-ish ideas of what a system can or should accomplish are mostly exceeded by Plone's capabilities.  Gauge user requirements with a very open mind (not based on simplicities such as \"I'd like a system that's equal to system x\") then come to plone.org | Support | Chat Room to further discuss your requirements."}, {"id": 294740, "score": 0, "vote": 0, "content": "<p>Keep an eye on Flossquality - Open source quality research\n<a href=\"http://flossquality.eu/\" rel=\"nofollow noreferrer\">http://flossquality.eu/</a></p>\n<p>Concerning Flossquality and the three quality-related projects under that heading, at <a href=\"http://n2.nabble.com/Plone-and-QUALOSS---QUALity-in-Open-Source-Software-tp1402419p1446439.html\" rel=\"nofollow noreferrer\">http://n2.nabble.com/Plone-and-QUALOSS---QUALity-in-Open-Source-Software-tp1402419p1446439.html</a> I imagined some questions that people in the open source communities (not just in Plone) might ask about the whole caboodle. </p>\n<p>Very recently I received, off-list, some responses to those questions. As soon as I find time to read the relevant e-mails I'll aim to either share or at least abstract the responses. </p>\n", "abstract": "Keep an eye on Flossquality - Open source quality research\nhttp://flossquality.eu/ Concerning Flossquality and the three quality-related projects under that heading, at http://n2.nabble.com/Plone-and-QUALOSS---QUALity-in-Open-Source-Software-tp1402419p1446439.html I imagined some questions that people in the open source communities (not just in Plone) might ask about the whole caboodle.  Very recently I received, off-list, some responses to those questions. As soon as I find time to read the relevant e-mails I'll aim to either share or at least abstract the responses. "}]}, {"link": "https://stackoverflow.com/questions/9979326/python-how-to-create-simple-web-pages-without-a-huge-framework", "question": {"id": "9979326", "title": "Python: How to create simple web pages without a huge framework?", "content": "<p>I would like to know if there is a way to create web pages without a huge framework in python.</p>\n<p>I think of something like PHP/Apache, which comes just as a language and not with to much overhead (but I don't like PHP...). In PHP there is no ORM, no template engine, etc. But it is very very easy to just print a <code>Hello World</code> to the browser.</p>\n<p>I know about Django and really like it, but it is a bit too big for simple web portals (5-10 pages).</p>\n<p>I really like something simple, without installing too much.</p>\n", "abstract": "I would like to know if there is a way to create web pages without a huge framework in python. I think of something like PHP/Apache, which comes just as a language and not with to much overhead (but I don't like PHP...). In PHP there is no ORM, no template engine, etc. But it is very very easy to just print a Hello World to the browser. I know about Django and really like it, but it is a bit too big for simple web portals (5-10 pages). I really like something simple, without installing too much."}, "answers": [{"id": 9979354, "score": 6, "vote": 0, "content": "<p>Have you looked up <a href=\"http://flask.pocoo.org/\" rel=\"noreferrer\">Flask</a>?</p>\n<p>It's a much more minimalistic framework, and very easy to set up and get started.</p>\n", "abstract": "Have you looked up Flask? It's a much more minimalistic framework, and very easy to set up and get started."}, {"id": 9979487, "score": 4, "vote": 0, "content": "<p>I've used Flask (and bottle.py) in the past, but these days I actually prefer <a href=\"http://www.pylonsproject.org/\" rel=\"noreferrer\">Pyramid, from the Pylons folks</a>.</p>\n<p>Pyramid is capable of being a large, full-fledged framework, is designed for flexibility, and has no shortage of plugins and extensions available adding additional functionality -- but it also is capable of small, single-file projects; see <a href=\"http://docs.pylonsproject.org/projects/pyramid_tutorials/en/latest/single_file_tasks/single_file_tasks.html\" rel=\"noreferrer\">this tutorial for an example</a>.</p>\n<p>Going with Pyramid will give you room to grow if your needs expand over time, while still retaining the ability to start small.</p>\n", "abstract": "I've used Flask (and bottle.py) in the past, but these days I actually prefer Pyramid, from the Pylons folks. Pyramid is capable of being a large, full-fledged framework, is designed for flexibility, and has no shortage of plugins and extensions available adding additional functionality -- but it also is capable of small, single-file projects; see this tutorial for an example. Going with Pyramid will give you room to grow if your needs expand over time, while still retaining the ability to start small."}, {"id": 9979439, "score": 2, "vote": 0, "content": "<p>Good old CGI is the quickest way to get you started. On most configurations, you just need to drop a python script in 'cgi-bin' and make it executable, no need to install anything. Google for \"cgi python\", there are lots of tutorials, e.g. <a href=\"http://webpython.codepoint.net/cgi_tutorial\" rel=\"nofollow\">this one</a> looks pretty decent.</p>\n", "abstract": "Good old CGI is the quickest way to get you started. On most configurations, you just need to drop a python script in 'cgi-bin' and make it executable, no need to install anything. Google for \"cgi python\", there are lots of tutorials, e.g. this one looks pretty decent."}, {"id": 9979395, "score": 1, "vote": 0, "content": "<p>I'm not sure what's wrong with django flatpages for your purposes.</p>\n<p>Another alternative would be to replace the django template system with something more powerful, like jinja, so you can write your tag soup and do processing there, with minimal logic in the view.</p>\n<p>In practice (given that you already know django), that is likely to be easier than using a microframework (which requires more of the programmer, in exchange for being completely unopinionated about anything).</p>\n", "abstract": "I'm not sure what's wrong with django flatpages for your purposes. Another alternative would be to replace the django template system with something more powerful, like jinja, so you can write your tag soup and do processing there, with minimal logic in the view. In practice (given that you already know django), that is likely to be easier than using a microframework (which requires more of the programmer, in exchange for being completely unopinionated about anything)."}, {"id": 9979359, "score": 0, "vote": 0, "content": "<p><a href=\"http://www.modpython.org/\" rel=\"nofollow\">mod_python</a> perhaps?</p>\n", "abstract": "mod_python perhaps?"}, {"id": 9979406, "score": 0, "vote": 0, "content": "<p>I would recommend <a href=\"http://www.cherrypy.org/\" rel=\"nofollow\">CherryPy</a></p>\n<pre><code class=\"python\">import cherrypy\nclass HelloWorld(object):\n    def index(self):\n        return \"Hello World!\"\n    index.exposed = True\n\ncherrypy.quickstart(HelloWorld())\n</code></pre>\n", "abstract": "I would recommend CherryPy"}, {"id": 9979455, "score": 0, "vote": 0, "content": "<p>Sure, you can go really lean with the CGI or <code>wsgiref</code> route.  However, you get what you pay for, and I prefer <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> or <a href=\"http://werkzeug.pocoo.org/\" rel=\"nofollow\">WerkZeug</a> for all the pain they prevent.</p>\n<p>From <a href=\"http://docs.python.org/library/wsgiref.html#examples\" rel=\"nofollow\">wsgiref python docs</a>:</p>\n<pre><code class=\"python\">from wsgiref.simple_server import make_server\n\ndef hello_world_app(environ, start_response):\n    status = '200 OK' # HTTP Status\n    headers = [('Content-type', 'text/plain')] # HTTP Headers\n    start_response(status, headers)\n    return [\"Hello World\"]\n\nhttpd = make_server('', 8000, hello_world_app)\nprint \"Serving on port 8000...\"\n\n# Serve until process is killed\nhttpd.serve_forever()\n</code></pre>\n", "abstract": "Sure, you can go really lean with the CGI or wsgiref route.  However, you get what you pay for, and I prefer Flask or WerkZeug for all the pain they prevent. From wsgiref python docs:"}, {"id": 9979501, "score": 0, "vote": 0, "content": "<p>Python works well using CGI. </p>\n<p>that's the simplest thing you can do: it only needs apache and a working python environment, and is the closest to a standard php setup.</p>\n<p>remember that, when using CGI, your python script is responsible for outputting the necessary HTTP headers (<code>sys.stdout.write('Content-Type: text/html\\n\\n')</code>), but there is a CGI module which is part of the python standard library which greatly helps dealing with the raw stuffs (post/get arguments parsing, header retrieval, header generation).</p>\n", "abstract": "Python works well using CGI.  that's the simplest thing you can do: it only needs apache and a working python environment, and is the closest to a standard php setup. remember that, when using CGI, your python script is responsible for outputting the necessary HTTP headers (sys.stdout.write('Content-Type: text/html\\n\\n')), but there is a CGI module which is part of the python standard library which greatly helps dealing with the raw stuffs (post/get arguments parsing, header retrieval, header generation)."}]}, {"link": "https://stackoverflow.com/questions/1718251/finding-the-correct-python-framework-with-cmake", "question": {"id": "1718251", "title": "Finding the correct Python framework with cmake", "content": "<p>I am using the macports version of python on a Snow Leopard computer, and using cmake to build a cross-platform extension to it. I search for the python interpreter and libraries on the system using the following commands in CMakeLists.txt</p>\n<pre><code class=\"python\">include(FindPythonInterp)\ninclude(FindPythonLibs  )\n</code></pre>\n<p>However, while cmake identified the correct interpreter in <code>/opt/local/bin</code>, it tries to link against the wrong framework - namely the system Python framework. </p>\n<pre><code class=\"python\">-- Found PythonInterp: /opt/local/bin/python2.6\n-- Found PythonLibs: -framework Python\n</code></pre>\n<p>And this causes the following runtime error</p>\n<pre><code class=\"python\">Fatal Python error: Interpreter not initialized (version mismatch?)\n</code></pre>\n<p>As soon as I replace <code>-framework Python</code> with <code>/opt/local/Library/Frameworks/Python.framework/Python</code> things seem to work as expected. </p>\n<p>How can I make cmake link against the correct Python framework found in </p>\n<pre><code class=\"python\">/opt/local/Library/Frameworks/Python.framework/Python\n</code></pre>\n<p>rather than the system one in </p>\n<pre><code class=\"python\">/System/Library/Frameworks/Python.framework/Python\n</code></pre>\n<p>?</p>\n", "abstract": "I am using the macports version of python on a Snow Leopard computer, and using cmake to build a cross-platform extension to it. I search for the python interpreter and libraries on the system using the following commands in CMakeLists.txt However, while cmake identified the correct interpreter in /opt/local/bin, it tries to link against the wrong framework - namely the system Python framework.  And this causes the following runtime error As soon as I replace -framework Python with /opt/local/Library/Frameworks/Python.framework/Python things seem to work as expected.  How can I make cmake link against the correct Python framework found in  rather than the system one in  ?"}, "answers": [{"id": 1728003, "score": 5, "vote": 0, "content": "<p>Adding the following in <code>~/.bash_profile</code></p>\n<pre><code class=\"python\">export DYLD_FRAMEWORK_PATH=/opt/local/Library/Frameworks\n</code></pre>\n<p>fixes the problem at least temporarily. Apparently, this inconsistency between the python interpreter and the python framework used by cmake is a bug that should be hopefully fixed in the new version.</p>\n", "abstract": "Adding the following in ~/.bash_profile fixes the problem at least temporarily. Apparently, this inconsistency between the python interpreter and the python framework used by cmake is a bug that should be hopefully fixed in the new version."}, {"id": 1724738, "score": 1, "vote": 0, "content": "<p>I am not intimately familiar with CMake, but with the Apple version of gcc/ld, you can pass the <code>-F</code> flag to specify a new framework search path. For example, <code>-F/opt/local/Library/Frameworks</code> will search in MacPorts' frameworks directory. If you can specify such a flag using CMake, it may solve your problem.</p>\n", "abstract": "I am not intimately familiar with CMake, but with the Apple version of gcc/ld, you can pass the -F flag to specify a new framework search path. For example, -F/opt/local/Library/Frameworks will search in MacPorts' frameworks directory. If you can specify such a flag using CMake, it may solve your problem."}]}, {"link": "https://stackoverflow.com/questions/16195601/flask-error-typeerror-run-got-an-unexpected-keyword-argument-host", "question": {"id": "16195601", "title": "Flask Error: typeerror run() got an unexpected keyword argument &#39;host&#39;", "content": "<p>I built a website on virtualbox with Flask. The website can be opened on localhost, but I cannot open it through Port forwarding, so I changed the code from <code>manage.run()</code> to <code>manage.run(host='0.0.0.0')</code>. </p>\n<p>The problem is that I am receiving this error: </p>\n<pre><code class=\"python\">typeerror run() got an unexpected keyword argument 'host'. \n</code></pre>\n<p>The similar error occurs when change <code>manage.run()</code> to <code>manage.run(debug=True)</code>. I just followed the Flask documentation.<a href=\"http://flask.pocoo.org/docs/quickstart/#a-minimal-application\">http://flask.pocoo.org/docs/quickstart/#a-minimal-application</a> Could anyone let me know why I'm receiving this error? </p>\n<pre><code class=\"python\">#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n\n\"\"\"Manage Script.\"\"\"\n\nfrom sys import stderr, exit\n\nfrom flask.ext.script import Manager, prompt_bool\n\nfrom szupa import create_app\nfrom szupa.extensions import db\nfrom szupa.account.models import User\nfrom szupa.context import create_category_db\n\n\napp = create_app()\nmanager = Manager(app)\n\n\n@manager.command\ndef initdb():\n    \"\"\"Initialize database.\"\"\"\n    db.create_all()\n    create_category_db()\n\n\n@manager.command\ndef migrate(created, action=\"up\"):\n    module_name = \"migrates.migrate%s\" % created\n    try:\n        module = __import__(module_name, fromlist=[\"migrates\"])\n    except ImportError:\n        print &gt;&gt; stderr, \"The migrate script '%s' is not found.\" % module_name\n        exit(-1)\n    if prompt_bool(\"Confirm to execute migrate script '%s'\" % module_name):\n        try:\n            action = getattr(module, action)\n        except AttributeError:\n            print &gt;&gt; stderr, \"The given action '%s' is invalid.\" % action\n            exit(-1)\n        action(db)\n        print &gt;&gt; stderr, \"Finished.\"\n\n\n@manager.command\ndef dropdb():\n    \"\"\"Drop database.\"\"\"\n    if prompt_bool(\"Confirm to drop all table from database\"):\n        db.drop_all()\n\n\n@manager.command\ndef setadmin(email):\n    \"\"\"Promote a user to administrator.\"\"\"\n    user = User.query.filter_by(email=email).first()\n    if not user:\n        print &gt;&gt; stderr, \"The user with email '%s' could not be found.\" % email\n        exit(-1)\n    else:\n        user.is_admin = True\n        db.session.commit()\n\n\nif __name__ == \"__main__\":\n    manager.run()\n</code></pre>\n", "abstract": "I built a website on virtualbox with Flask. The website can be opened on localhost, but I cannot open it through Port forwarding, so I changed the code from manage.run() to manage.run(host='0.0.0.0').  The problem is that I am receiving this error:  The similar error occurs when change manage.run() to manage.run(debug=True). I just followed the Flask documentation.http://flask.pocoo.org/docs/quickstart/#a-minimal-application Could anyone let me know why I'm receiving this error? "}, "answers": [{"id": 34355673, "score": 2, "vote": 0, "content": "<p>As @fangwz0577 said in a comment, they solved the problem using <code>manager.add_command</code>. The archived version of their link is <a href=\"https://web.archive.org/web/20130218044123/http://docs.mongodb.org/manual/tutorial/write-a-tumblelog-application-with-flask-mongoengine/\" rel=\"nofollow\">here</a>.</p>\n<blockquote>\n<p>Next, create the manage.py file. Use this file to load additional\n  Flask-scripts in the future. Flask-scripts provides a development\n  server and shell:</p>\n<pre>from flask.ext.script import Manager, Server\nfrom tumblelog import app\n\nmanager = Manager(app)\n\n # Turn on debugger by default and reloader \nmanager.add_command(\"runserver\", Server(\n    use_debugger = True,\n    use_reloader = True,\n    host = '0.0.0.0') )\n</pre>\n</blockquote>\n", "abstract": "As @fangwz0577 said in a comment, they solved the problem using manager.add_command. The archived version of their link is here. Next, create the manage.py file. Use this file to load additional\n  Flask-scripts in the future. Flask-scripts provides a development\n  server and shell:"}, {"id": 71226555, "score": 1, "vote": 0, "content": "<p>The answer of @SuperBiasedMan is the one who worked for me, except that the import <code>from flask.ext.script import Manager, Server</code> doesn't work\nbecause it was deprecated (as an issue on flask's github shows: <a href=\"https://github.com/pallets/flask/issues/1135#issuecomment-61860862\" rel=\"nofollow noreferrer\">https://github.com/pallets/flask/issues/1135#issuecomment-61860862</a>)</p>\n<p>So if you are still struggling, try to use <code>from flask_script  import Manager, Server</code> instead.</p>\n<p>Also, on Linux the creation of a \"bare bones\" application is not needed, just create the <code>__init__.py</code> file and make the <code>manage.py</code> file.</p>\n", "abstract": "The answer of @SuperBiasedMan is the one who worked for me, except that the import from flask.ext.script import Manager, Server doesn't work\nbecause it was deprecated (as an issue on flask's github shows: https://github.com/pallets/flask/issues/1135#issuecomment-61860862) So if you are still struggling, try to use from flask_script  import Manager, Server instead. Also, on Linux the creation of a \"bare bones\" application is not needed, just create the __init__.py file and make the manage.py file."}]}, {"link": "https://stackoverflow.com/questions/2642364/a-web-framework-where-ajax-was-not-an-after-thought", "question": {"id": "2642364", "title": "A web framework where AJAX was not an after thought", "content": "<p>AJAX is a pain in the ass because it essentially means you'll have to write two sets of similarish code: one for browsers with JavaScript enabled and those without.</p>\n<p>Not only this, but you have to connect JavaScript events to hook into your models and display the results.</p>\n<p>And if all that weren't bad enough, you need to send an address change with the request, otherwise the user won't be able to \"click back\" correctly (if confused look at what happens to the address bar when you click links in GMail).</p>\n<p><strong>We're searching for something that had the foresight and design goals with all these concerns in mind.</strong></p>\n<p>Performance and security are also obvious major concerns.</p>\n<p>We love config-based systems as well, where you don't have to write a lot of code you just drop it into an easily read config format.</p>\n<p>It's like asking for the holy grail right?</p>\n", "abstract": "AJAX is a pain in the ass because it essentially means you'll have to write two sets of similarish code: one for browsers with JavaScript enabled and those without. Not only this, but you have to connect JavaScript events to hook into your models and display the results. And if all that weren't bad enough, you need to send an address change with the request, otherwise the user won't be able to \"click back\" correctly (if confused look at what happens to the address bar when you click links in GMail). We're searching for something that had the foresight and design goals with all these concerns in mind. Performance and security are also obvious major concerns. We love config-based systems as well, where you don't have to write a lot of code you just drop it into an easily read config format. It's like asking for the holy grail right?"}, "answers": [{"id": 2642540, "score": 3, "vote": 0, "content": "<p>Have you given a look to <a href=\"http://pyjs.org/\" rel=\"nofollow noreferrer\">Pyjamas</a></p>\n<p>Quoted from the site</p>\n<blockquote>\n<p>Why should I use it?</p>\n<p>You can write web applications in\n  python - a readable programming\n  language - instead of in HTML and\n  Javascript, both of which become\n  quickly unreadable for even\n  medium-sized applications. Your\n  application's design can benefit from\n  encapsulating high level concepts into\n  classes and modules (instead of trying\n  to fit as much HTML as you can stand\n  into one page); you can reuse - and\n  import - classes and modules.</p>\n<p>Also, the AJAX library takes care of\n  all the browser interoperability\n  issues on your behalf, leaving you\n  free to focus on application\n  development instead of learning all\n  the \"usual\" browser incompatibilities.</p>\n</blockquote>\n", "abstract": "Have you given a look to Pyjamas Quoted from the site Why should I use it? You can write web applications in\n  python - a readable programming\n  language - instead of in HTML and\n  Javascript, both of which become\n  quickly unreadable for even\n  medium-sized applications. Your\n  application's design can benefit from\n  encapsulating high level concepts into\n  classes and modules (instead of trying\n  to fit as much HTML as you can stand\n  into one page); you can reuse - and\n  import - classes and modules. Also, the AJAX library takes care of\n  all the browser interoperability\n  issues on your behalf, leaving you\n  free to focus on application\n  development instead of learning all\n  the \"usual\" browser incompatibilities."}, {"id": 2642409, "score": 0, "vote": 0, "content": "<p>Two approaches to this problem generally. One is for the framework to try and do it all, like Microsoft's ASP.NET with its Ajax toolkit. This includes server side controls that produce Ajax functionality with all client- and server-side code generated for you. For example, their UpdatePanel control allows for partial page updates via an Ajax call. However, it is not universally popular as a framework in general because their Page and Control models are sometimes seen as too heavyweight and overbloated.</p>\n<p>A second, \"slimmer\" approach would be to separate the concerns. Let jQuery or a similar library deal with cross-browser inconsistencies and the client side of the Ajax call, and use a simple lightweight server-side web framework, such as Groovy on Grails or Microsoft ASP.NET MVC (there are others as I'm sure people will point out). Any decent framework should be capable of easily producing either JSON or XML data in response to an Ajax call.</p>\n<p>As for browsers with Javascript disabled - this is the twenty first century. Do you really have to cater for them any more?</p>\n", "abstract": "Two approaches to this problem generally. One is for the framework to try and do it all, like Microsoft's ASP.NET with its Ajax toolkit. This includes server side controls that produce Ajax functionality with all client- and server-side code generated for you. For example, their UpdatePanel control allows for partial page updates via an Ajax call. However, it is not universally popular as a framework in general because their Page and Control models are sometimes seen as too heavyweight and overbloated. A second, \"slimmer\" approach would be to separate the concerns. Let jQuery or a similar library deal with cross-browser inconsistencies and the client side of the Ajax call, and use a simple lightweight server-side web framework, such as Groovy on Grails or Microsoft ASP.NET MVC (there are others as I'm sure people will point out). Any decent framework should be capable of easily producing either JSON or XML data in response to an Ajax call. As for browsers with Javascript disabled - this is the twenty first century. Do you really have to cater for them any more?"}, {"id": 2642757, "score": 0, "vote": 0, "content": "<p>Yes, the <a href=\"http://www.noloh.com\" rel=\"nofollow noreferrer\">NOLOH PHP Framework</a> (the site itself was written in NOLOH) is that holy grail. NOLOH was developed from the ground up to address these issues. You develop in a single language on the server-side and it takes care of the rest. No need to worry about AJAX, or cross browser issues. NOLOH's been around since 2005 and is being used in various companies large and small. It significantly outperforms the competition in performance due to it's lightweight and on-demand nature.</p>\n<p>NOLOH recently gave a talk at Confoo, the most applicable parts of that presentation to your question are the <a href=\"http://www.youtube.com/watch?v=qLFc-aF2fDI\" rel=\"nofollow noreferrer\">live examples</a>, and the <a href=\"http://www.youtube.com/watch?v=cdD9hSuq7aw\" rel=\"nofollow noreferrer\">basic coding</a>.</p>\n<p>If you're curious about the power of NOLOH you can also check out this Steve Jobs like <a href=\"http://www.youtube.com/watch?v=8r0FR0Dx4zE\" rel=\"nofollow noreferrer\">one more thing</a> demonstrating the upcoming automatic Comet.</p>\n<p>Disclaimer: I'm a co-founder of NOLOH.</p>\n<p>Enjoy. </p>\n", "abstract": "Yes, the NOLOH PHP Framework (the site itself was written in NOLOH) is that holy grail. NOLOH was developed from the ground up to address these issues. You develop in a single language on the server-side and it takes care of the rest. No need to worry about AJAX, or cross browser issues. NOLOH's been around since 2005 and is being used in various companies large and small. It significantly outperforms the competition in performance due to it's lightweight and on-demand nature. NOLOH recently gave a talk at Confoo, the most applicable parts of that presentation to your question are the live examples, and the basic coding. If you're curious about the power of NOLOH you can also check out this Steve Jobs like one more thing demonstrating the upcoming automatic Comet. Disclaimer: I'm a co-founder of NOLOH. Enjoy. "}, {"id": 2642796, "score": 0, "vote": 0, "content": "<p>The <a href=\"http://benalman.com/projects/jquery-bbq-plugin/\" rel=\"nofollow noreferrer\">jQuery BBQ: Back Button &amp; Query Library</a> aims to help with ajax \"back button\" issue. You might check it out if you're considering jQuery for your ajax functionality.</p>\n", "abstract": "The jQuery BBQ: Back Button & Query Library aims to help with ajax \"back button\" issue. You might check it out if you're considering jQuery for your ajax functionality."}]}, {"link": "https://stackoverflow.com/questions/7743913/command-line-python-app-and-frameworks", "question": {"id": "7743913", "title": "command line python app and frameworks", "content": "<p>I'm going to be writing a fairly sophisticated command line app in python.  I'd like to leverage something other than just pure python, maybe a framework or something that makes the services and code management within the app easier.  I guess in my mind, I'm thinking MVC, as the app will have several different commands (controllers) which call different sources for data (JSON requests, REST requests, etc., e.g. the \"Models\" in MVC), and then display results in different formats (the View).</p>\n<p>I think MVC works well for this, but I'm not really doing a web app.  I want something that doesn't necessarily require a web server, but has the advantages of a framework to force some coding standards.</p>\n<p>Does anyone have any tips or suggestions?  I know I could build something from scratch with Python, but I'm just curious if there's something else out there I could utilize.</p>\n<p>Thanks,\nDustin</p>\n", "abstract": "I'm going to be writing a fairly sophisticated command line app in python.  I'd like to leverage something other than just pure python, maybe a framework or something that makes the services and code management within the app easier.  I guess in my mind, I'm thinking MVC, as the app will have several different commands (controllers) which call different sources for data (JSON requests, REST requests, etc., e.g. the \"Models\" in MVC), and then display results in different formats (the View). I think MVC works well for this, but I'm not really doing a web app.  I want something that doesn't necessarily require a web server, but has the advantages of a framework to force some coding standards. Does anyone have any tips or suggestions?  I know I could build something from scratch with Python, but I'm just curious if there's something else out there I could utilize. Thanks,\nDustin"}, "answers": [{"id": 10394333, "score": 20, "vote": 0, "content": "<p>This is a bit late, however posting for anyone else who stumbles across this:</p>\n<p>Cement is an Advanced CLI Application Framework for Python.  Getting started is easy, and it is extremely flexible for customizing almost every piece of it from logging to config file parsing.  Cement2 (code name portland) is currently in beta, but is very close to a stable release:</p>\n<p><a href=\"http://cement.readthedocs.org/en/portland/\">http://cement.readthedocs.org/en/portland/</a></p>\n<p>Additionally, if you are creating a REST command line client, also checkout dRest:</p>\n<p><a href=\"http://drest.readthedocs.org/en/latest/\">http://drest.readthedocs.org/en/latest/</a></p>\n<p>It too is very easy to get started with, and is also extremely flexible for customization from the request handler, to how serialization happens on both the sending and receiving ends.</p>\n<p>I'd be happy to answer any questions about either.</p>\n", "abstract": "This is a bit late, however posting for anyone else who stumbles across this: Cement is an Advanced CLI Application Framework for Python.  Getting started is easy, and it is extremely flexible for customizing almost every piece of it from logging to config file parsing.  Cement2 (code name portland) is currently in beta, but is very close to a stable release: http://cement.readthedocs.org/en/portland/ Additionally, if you are creating a REST command line client, also checkout dRest: http://drest.readthedocs.org/en/latest/ It too is very easy to get started with, and is also extremely flexible for customization from the request handler, to how serialization happens on both the sending and receiving ends. I'd be happy to answer any questions about either."}, {"id": 7751482, "score": 0, "vote": 0, "content": "<p>To be fair to the pattern, MVC is not bound to web applications. I think because of the web-aware trend of the last couple of years this relation between MVC and web apps could have grown. Put differently, a web app can use MVC, but using MVC doesn't necessarily mean that you have a web app.</p>\n<p>If you want to use a framework, you could try to use the one most close to your intended controller. I'm not aware of an MVC frameworks that have a command line as the interface, but some platform independent GUI frameworks that use it are for example <a href=\"http://www.gtk.org/\" rel=\"nofollow\">GTK+</a> or <a href=\"http://www.google.nl/url?sa=t&amp;source=web&amp;cd=1&amp;ved=0CC0QFjAA&amp;url=http://qt.nokia.com/products/&amp;ei=2KGWTsqPE5DrOdvv7YkC&amp;usg=AFQjCNHeopgWAIPHcaixe_HfP7Lg0q-gTQ\" rel=\"nofollow\">QT</a>: both have python bindings.</p>\n<p>From a personal point of view, I've used <a href=\"http://www.google.nl/url?sa=t&amp;source=web&amp;cd=1&amp;ved=0CDkQFjAA&amp;url=https://www.djangoproject.com/&amp;ei=P6KWTtvSE4PqObzFgI8C&amp;usg=AFQjCNGAkwU79_tDTUz9QJ2qNnMTWbsaXw\" rel=\"nofollow\">Django</a> for this purpose before. Although the technical purity can be a point of discussion, when selecting a framework no one forces you to use all of the framework's components. Django has a nice ORM which I've liked so much that I made it the backend for a SSH operated interface. It might be overkill, but for me had the advantage that I could reuse my knowledge about the system instead of learning a new, once-to-be-used framework.</p>\n<p>In conclusion, it all boils down to discipline. Even the best framework cannot prevent you from violating coding standards and cutting corners...</p>\n<p>PS if you're on Linux, you might consider using python's <a href=\"http://docs.python.org/library/curses.html\" rel=\"nofollow\">curses</a> module for your command line frontend.</p>\n", "abstract": "To be fair to the pattern, MVC is not bound to web applications. I think because of the web-aware trend of the last couple of years this relation between MVC and web apps could have grown. Put differently, a web app can use MVC, but using MVC doesn't necessarily mean that you have a web app. If you want to use a framework, you could try to use the one most close to your intended controller. I'm not aware of an MVC frameworks that have a command line as the interface, but some platform independent GUI frameworks that use it are for example GTK+ or QT: both have python bindings. From a personal point of view, I've used Django for this purpose before. Although the technical purity can be a point of discussion, when selecting a framework no one forces you to use all of the framework's components. Django has a nice ORM which I've liked so much that I made it the backend for a SSH operated interface. It might be overkill, but for me had the advantage that I could reuse my knowledge about the system instead of learning a new, once-to-be-used framework. In conclusion, it all boils down to discipline. Even the best framework cannot prevent you from violating coding standards and cutting corners... PS if you're on Linux, you might consider using python's curses module for your command line frontend."}]}, {"link": "https://stackoverflow.com/questions/19012044/django-sites-framework-initial-setup", "question": {"id": "19012044", "title": "Django Sites Framework initial setup", "content": "<p>I'm comfortable with fairly one-dimensional Django implementations, but now trying to understand the multi-sites-with-shared-stuff process.   </p>\n<p>I've read through the Django Sites Framework and many posts on the topic, but I'm not getting the basics of how to start a second site that uses the same database, but presents itself as at a separate domain name.</p>\n<p>I have a very happy and by-the-book django site consisting of one app running in a project.</p>\n<p>To use the parlance of the tutorials I began a project \"mysite\" with</p>\n<pre><code class=\"python\">django-admin.py startproject mysite\n</code></pre>\n<p>and then started an app \"polls\" with </p>\n<pre><code class=\"python\">manage.py startapp polls\n</code></pre>\n<p><strong>Q1:</strong> Does the Sites Framework assume each site is a separate project or a separate app?  </p>\n<p>A second app 'polls2' within the project seems to make sense, but the settings.py where SITE_ID is defined seems to be a whole-project thing.  Is there a means to make app-by-app settings?</p>\n<p>A second proj 'mysite2' adjacent to 'mysite' would give me a second structure with its own settings.py and a separate SITE_ID, but then there seems a big violation of the \"DRY\" principle as I'd be duplicating many elements of the adjacent sister project.</p>\n<p><strong>Q2:</strong> Sounds like I'll need to redefine database models (models.py) into a many-to-many relationships for sharing data between sites. Does that just change the way Django accesses those tables, or will the existing site's database need to be rebuilt as well?</p>\n<p>Your guidance on what the intended process for implementing the sites framework would be great and much appreciated.</p>\n", "abstract": "I'm comfortable with fairly one-dimensional Django implementations, but now trying to understand the multi-sites-with-shared-stuff process.    I've read through the Django Sites Framework and many posts on the topic, but I'm not getting the basics of how to start a second site that uses the same database, but presents itself as at a separate domain name. I have a very happy and by-the-book django site consisting of one app running in a project. To use the parlance of the tutorials I began a project \"mysite\" with and then started an app \"polls\" with  Q1: Does the Sites Framework assume each site is a separate project or a separate app?   A second app 'polls2' within the project seems to make sense, but the settings.py where SITE_ID is defined seems to be a whole-project thing.  Is there a means to make app-by-app settings? A second proj 'mysite2' adjacent to 'mysite' would give me a second structure with its own settings.py and a separate SITE_ID, but then there seems a big violation of the \"DRY\" principle as I'd be duplicating many elements of the adjacent sister project. Q2: Sounds like I'll need to redefine database models (models.py) into a many-to-many relationships for sharing data between sites. Does that just change the way Django accesses those tables, or will the existing site's database need to be rebuilt as well? Your guidance on what the intended process for implementing the sites framework would be great and much appreciated."}, "answers": [{"id": 19013555, "score": 19, "vote": 0, "content": "<blockquote>\n<p>Q1: Does the Sites Framework assume each site is a separate project or\n  a separate app?</p>\n</blockquote>\n<p>A Django website usually consists of multiple apps, so the \"single app\" approach wouldn't really work. But it's not helpful to think in terms of a separate project for every site either. The <em>only</em> thing that has to be separate for every site is the settings file.</p>\n<p>Does having a separate settings file for every site is a violation of the DRY principle? Not necessarily. You can (and should) create a base settings file with common settings. You would then import them in per-site settings files.</p>\n<p>For example in your project directory you could have three settings files:</p>\n<pre><code class=\"python\">base_settings.py\nsiteA_settings.py\nsiteB_settings.py\n</code></pre>\n<p><code>siteA_settings.py</code> and <code>siteB_settings.py</code> would import all the settings from <code>base_settings.py</code>.</p>\n<p>The only thing you <em>have to</em> put in the per-site setting files is the <code>SITE_ID</code> setting with an individual site id. All the other settings may be shared across the sites (<code>base_settings.py</code>) or be specific to a particular site (<code>siteA_settings.py</code>, <code>siteB_settings.py</code>) depending on your individual needs. For example you can redefine the <code>TEMPLATE_DIRS</code> setting in per-site settings, if you have seperate per-sites templates, but if the templates are shared across the sites you don't have to. The same with all the other settings - url structure, list of installed apps, etc.</p>\n<p>You would then choose which site you want to run just by specifying the settings files. For example with the Django development server:</p>\n<pre><code class=\"python\">python manage.py runserver --settings=mysite.siteA_settings\n</code></pre>\n<p>or</p>\n<pre><code class=\"python\">python manage.py runserver --settings=mysite.siteB_settings\n</code></pre>\n<hr/>\n<blockquote>\n<p>Q2: Sounds like I'll need to redefine database models (models.py) into\n  a many-to-many relationships for sharing data between sites. Does that\n  just change the way Django accesses those tables, or will the existing\n  site's database need to be rebuilt as well?</p>\n</blockquote>\n<p>Models that are just shared between the sites don't need to be modified, as long as all the objects are shared. Only in cases when you want to be able to control which object of the model appears on each site, you need to account for that by adding a relationship (Many To Many or a Foreign Key, depending on your needs) from your model to the Django's <code>Site</code> model.</p>\n<p>Doing that does indeed change the underlying database structure (as adding a Foreign Key requires an additional column in a database table for a given model, and adding a Many To Many relationship requires a whole additional table). The Sites framework itself also uses its own database table, so you need to sync the database after enabling it.</p>\n<p>After you add the relationship you can easily restrict your query to objects intended for the current site - for example by using <a href=\"https://docs.djangoproject.com/en/dev/ref/contrib/sites/#the-currentsitemanager\" rel=\"nofollow noreferrer\">the CurrentSiteManager</a>. On the other hand you still can access all the objects, using the default manager (i.e. the usual <code>Model.objects</code> form of accessing the ORM).</p>\n", "abstract": "Q1: Does the Sites Framework assume each site is a separate project or\n  a separate app? A Django website usually consists of multiple apps, so the \"single app\" approach wouldn't really work. But it's not helpful to think in terms of a separate project for every site either. The only thing that has to be separate for every site is the settings file. Does having a separate settings file for every site is a violation of the DRY principle? Not necessarily. You can (and should) create a base settings file with common settings. You would then import them in per-site settings files. For example in your project directory you could have three settings files: siteA_settings.py and siteB_settings.py would import all the settings from base_settings.py. The only thing you have to put in the per-site setting files is the SITE_ID setting with an individual site id. All the other settings may be shared across the sites (base_settings.py) or be specific to a particular site (siteA_settings.py, siteB_settings.py) depending on your individual needs. For example you can redefine the TEMPLATE_DIRS setting in per-site settings, if you have seperate per-sites templates, but if the templates are shared across the sites you don't have to. The same with all the other settings - url structure, list of installed apps, etc. You would then choose which site you want to run just by specifying the settings files. For example with the Django development server: or Q2: Sounds like I'll need to redefine database models (models.py) into\n  a many-to-many relationships for sharing data between sites. Does that\n  just change the way Django accesses those tables, or will the existing\n  site's database need to be rebuilt as well? Models that are just shared between the sites don't need to be modified, as long as all the objects are shared. Only in cases when you want to be able to control which object of the model appears on each site, you need to account for that by adding a relationship (Many To Many or a Foreign Key, depending on your needs) from your model to the Django's Site model. Doing that does indeed change the underlying database structure (as adding a Foreign Key requires an additional column in a database table for a given model, and adding a Many To Many relationship requires a whole additional table). The Sites framework itself also uses its own database table, so you need to sync the database after enabling it. After you add the relationship you can easily restrict your query to objects intended for the current site - for example by using the CurrentSiteManager. On the other hand you still can access all the objects, using the default manager (i.e. the usual Model.objects form of accessing the ORM)."}]}, {"link": "https://stackoverflow.com/questions/21412324/django-rest-framework-always-inserts-never-updates", "question": {"id": "21412324", "title": "django rest framework - always INSERTs, never UPDATES", "content": "<p>I want to be able to UPDATE a user record by POST. However, the id is always NULL. Even if I pass the id it seems to be ignored</p>\n<p>View Code:</p>\n<p>JSON POSTED:</p>\n<pre><code class=\"python\">{\n    \"id\": 1, \n    \"name\": \"Craig Champion\", \n    \"profession\": \"Developer\", \n    \"email\": \"craig@isai.co.uk\"\n}\n\n@api_view(['POST'])\ndef get_purchase(request):\n    \"\"\"\n    Gets purchase records for a user\n\n    Purchase collection is returned\n    \"\"\"\n\n    user = User();\n    serializer = UserSerializer(user, data=request.DATA)\n\n    if serializer.is_valid():\n\n       #The object ALWAYS has ID = nothing at this point\n\n        serializer.save()\n\n        return Response(serializer.data, status=status.HTTP_200_OK)\n\n    else:\n        return Response(serializer.errors,   status=status.HTTP_400_BAD_REQUEST)\n</code></pre>\n<p>ModelSerializer</p>\n<pre><code class=\"python\">class UserSerializer(serializers.ModelSerializer):\n\n    class Meta:\n        model = User\n        fields = ('id', 'name', 'profession', 'email', 'password', )\n        write_only_fields = ('password' , )\n</code></pre>\n<p>Model</p>\n<pre><code class=\"python\">class User(models.Model):\n    name = models.CharField(max_length=30, null=True, blank=True)\n    profession = models.CharField(max_length=100, null=True, blank=True)\n    email = models.EmailField()\n    password = models.CharField(max_length=20, null=True, blank=True)\n\n\n    def __unicode__(self):\n        return self.name\n</code></pre>\n<p>How can I force the savechanges to update and see the ID?</p>\n", "abstract": "I want to be able to UPDATE a user record by POST. However, the id is always NULL. Even if I pass the id it seems to be ignored View Code: JSON POSTED: ModelSerializer Model How can I force the savechanges to update and see the ID?"}, "answers": [{"id": 21412365, "score": 12, "vote": 0, "content": "<p>You need to use <code>partial=True</code> to update a row with partial data:</p>\n<pre><code class=\"python\">serializer = UserSerializer(user, data=request.DATA, partial=True)\n</code></pre>\n<p>From <a href=\"http://www.django-rest-framework.org/api-guide/serializers#deserializing-objects\">docs</a>:</p>\n<blockquote>\n<p>By default, serializers must be passed values for all required fields\n  or they will throw validation errors. You can use the <code>partial</code> argument\n  in order to allow partial updates.</p>\n</blockquote>\n", "abstract": "You need to use partial=True to update a row with partial data: From docs: By default, serializers must be passed values for all required fields\n  or they will throw validation errors. You can use the partial argument\n  in order to allow partial updates."}]}, {"link": "https://stackoverflow.com/questions/27553596/django-rest-framework-nested-serializer-partial-update", "question": {"id": "27553596", "title": "Django rest framework nested serializer partial update", "content": "<p><strong>Serializer:</strong></p>\n<pre><code class=\"python\">class ProfileSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = UserProfile\n        fields = ('foo', 'bar')\n\n\nclass UserSerializer(serializers.ModelSerializer):\n    userprofile = ProfileSerializer(partial=True)\n\n    class Meta:\n        model = User\n        fields = ('username', 'password', 'email', 'userprofile')\n\n    def create(self, validated_data):\n        profile_data = validated_data.pop('userprofile')\n        user = User.objects.create(**validated_data)\n        UserProfile.objects.create(user=user, **profile_data)\n\n        return user\n\n    def update(self, instance, validated_data):\n        profile_data = validated_data.pop('userprofile')\n        profile = instance.userprofile\n\n        instance.username = validated_data.get('username', instance.username)\n        instance.email = validated_data.get('email', instance.email)\n        instance.save()\n\n        profile.foo = profile_data.get('foo', profile.foo)\n        profile.bar = profile_data.get('bar', profile.bar)\n        profile.save()\n\n        return instance\n</code></pre>\n<p><strong>View:</strong></p>\n<pre><code class=\"python\">class UsersViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n    authentication_classes = (TokenAuthentication,)\n    permission_classes = (IsAuthenticated,)\n</code></pre>\n<p>Both create and update are working just fine, problem is with partial updates.\nThe django User model has as required username and I would like to make that optional.\nIs there a way to enable partial updates for this scenario?</p>\n<p>For instance I would like to update with PUT just \"foo\".</p>\n", "abstract": "Serializer: View: Both create and update are working just fine, problem is with partial updates.\nThe django User model has as required username and I would like to make that optional.\nIs there a way to enable partial updates for this scenario? For instance I would like to update with PUT just \"foo\"."}, "answers": [{"id": 33767643, "score": 6, "vote": 0, "content": "<p>By default PUT is expected to supply all required arguments. But PATCH is not. So as long as you are OK with using PATCH instead of PUT you don't have to change your code at all.</p>\n<p>Personally I think it is a little weird how that works, PUT requires all arguments that aren't optional, but will leave optional arguments alone. So you can edit optional arguments while leaving other optional arguments alone but can't do the same with required arguments (I mean you can obviously just supply the existing values, but if they changed whilst you were editing you are screwed and will force change them back). PATCH makes a lot more sense to me. Any argument you supply will be changed, and any you don't won't. IMO PUT should wipe out any optional arguments that aren't supplied, so that it is a true replace rather than simply a replace required and update (PUT) optional.</p>\n", "abstract": "By default PUT is expected to supply all required arguments. But PATCH is not. So as long as you are OK with using PATCH instead of PUT you don't have to change your code at all. Personally I think it is a little weird how that works, PUT requires all arguments that aren't optional, but will leave optional arguments alone. So you can edit optional arguments while leaving other optional arguments alone but can't do the same with required arguments (I mean you can obviously just supply the existing values, but if they changed whilst you were editing you are screwed and will force change them back). PATCH makes a lot more sense to me. Any argument you supply will be changed, and any you don't won't. IMO PUT should wipe out any optional arguments that aren't supplied, so that it is a true replace rather than simply a replace required and update (PUT) optional."}, {"id": 27567268, "score": 4, "vote": 0, "content": "<p>I ended up overriding get_serializer inside UsersViewSet:</p>\n<pre><code class=\"python\">    def get_serializer(self, instance=None, data=None, many=False, partial=False):\n        \"\"\"If request is not PUT, allow partial updates.\"\"\"\n        if self.request.method == 'PUT':\n            return UserSerializer(instance=instance, data=data, many=many, partial=True)\n        else:\n            return UserSerializer(instance=instance, data=data, many=many, partial=partial)\n</code></pre>\n<p>Forcing partial to True if request.method is PUT. Not sure if this is the most elegant solution but it works.\nIf any one has a better solution please do share :)</p>\n", "abstract": "I ended up overriding get_serializer inside UsersViewSet: Forcing partial to True if request.method is PUT. Not sure if this is the most elegant solution but it works.\nIf any one has a better solution please do share :)"}, {"id": 29190675, "score": 1, "vote": 0, "content": "<p>Actually, the following code already supports the partial update:</p>\n<pre><code class=\"python\">instance.username = validated_data.get('username', instance.username)\n</code></pre>\n<p>This '<strong>get</strong>' function will get the <strong>'username'</strong> field from <strong>validated_data</strong>. If it didn't exist, then instance.username would be returned.</p>\n", "abstract": "Actually, the following code already supports the partial update: This 'get' function will get the 'username' field from validated_data. If it didn't exist, then instance.username would be returned."}, {"id": 33477617, "score": 0, "vote": 0, "content": "<p>The user seriliazer needs to change to something like </p>\n<pre><code class=\"python\">username = fields.CharField(required=False)\n</code></pre>\n", "abstract": "The user seriliazer needs to change to something like "}, {"id": 61555614, "score": 0, "vote": 0, "content": "<p>I think it is enough to enforce <code>partial=True</code> when you define and override the <code>update()</code> method in <em>serializers.py</em>, i.e.:</p>\n<pre><code class=\"python\">def update(self, instance, validated_data, partial=True):\n...\n</code></pre>\n", "abstract": "I think it is enough to enforce partial=True when you define and override the update() method in serializers.py, i.e.:"}]}, {"link": "https://stackoverflow.com/questions/5459736/python-restful-webservice-framework-roll-my-own-or-is-there-a-recommended-libra", "question": {"id": "5459736", "title": "python RESTful webservice framework: roll my own or is there a recommended library?", "content": "<p>I need to write a python webservice, but I would rather use a LIGHT WEIGHT framework (no one mention Django please), so that I can cater for more complicated scenarios in the future.</p>\n<p>Is there a (peer) recommended library that I can use or at least can provide a good starting point?</p>\n<p>[Edit]</p>\n<p>To clarify, I am talking about a RESTful web service here - nothing to do with SOAP and/or WSDL</p>\n", "abstract": "I need to write a python webservice, but I would rather use a LIGHT WEIGHT framework (no one mention Django please), so that I can cater for more complicated scenarios in the future. Is there a (peer) recommended library that I can use or at least can provide a good starting point? [Edit] To clarify, I am talking about a RESTful web service here - nothing to do with SOAP and/or WSDL"}, "answers": [{"id": 5459773, "score": 6, "vote": 0, "content": "<p>Try <a href=\"http://docs.pylonsproject.org/projects/pyramid/1.0/\" rel=\"noreferrer\">Pyramid</a>, which is the result of a merger between the Pylons and repoze.bfg frameworks. It's relatively lightweight, yet robust and well-documented.</p>\n<p>For RESTful services in Pyramid, you might find <a href=\"http://zhuoqiang.me/a/restful-pyramid\" rel=\"noreferrer\">this blog post</a> interesting.</p>\n", "abstract": "Try Pyramid, which is the result of a merger between the Pylons and repoze.bfg frameworks. It's relatively lightweight, yet robust and well-documented. For RESTful services in Pyramid, you might find this blog post interesting."}, {"id": 5460055, "score": 3, "vote": 0, "content": "<p>I suggest you look at Cherry Py.  <a href=\"http://cherrypy.org/\" rel=\"nofollow\">http://cherrypy.org/</a></p>\n", "abstract": "I suggest you look at Cherry Py.  http://cherrypy.org/"}, {"id": 5459794, "score": 2, "vote": 0, "content": "<p>I was in a similar situation looking for lightweight, and tired of Django.  I came across web.py, which seems to be as lightweight as it can get.</p>\n<p>web.py main site: <a href=\"http://webpy.org/\" rel=\"nofollow\">http://webpy.org/</a>\nweb.py github: <a href=\"https://github.com/webpy/webpy\" rel=\"nofollow\">https://github.com/webpy/webpy</a></p>\n", "abstract": "I was in a similar situation looking for lightweight, and tired of Django.  I came across web.py, which seems to be as lightweight as it can get. web.py main site: http://webpy.org/\nweb.py github: https://github.com/webpy/webpy"}, {"id": 5460383, "score": 0, "vote": 0, "content": "<p><a href=\"http://www.web2py.com\" rel=\"nofollow\">web2py</a> may be of interest. It includes support for <a href=\"http://web2py.com/book/default/chapter/09\" rel=\"nofollow\">web services</a> and has recently added RESTful API functionality, described <a href=\"http://vimeo.com/21133657\" rel=\"nofollow\">here</a> (video) and <a href=\"http://www.reddit.com/r/programming/comments/g5hxq/web2py_trunk_has_a_new_restful_api_that_writes_db/c1l2ykg\" rel=\"nofollow\">here</a>. If you have any questions, ask on the <a href=\"https://groups.google.com/forum/?fromgroups#!forum/web2py\" rel=\"nofollow\">mailing list</a>.</p>\n", "abstract": "web2py may be of interest. It includes support for web services and has recently added RESTful API functionality, described here (video) and here. If you have any questions, ask on the mailing list."}, {"id": 18829797, "score": 0, "vote": 0, "content": "<p><a href=\"http://python-eve.org\" rel=\"nofollow\">Eve</a> is an open source Python REST API Framework powered by Flask, MongoDB and Redis. It allows you to effortlessly build and deploy highly customizable, fully featured RESTful Web Services. </p>\n<p>[disclaimer: I am the project author]</p>\n", "abstract": "Eve is an open source Python REST API Framework powered by Flask, MongoDB and Redis. It allows you to effortlessly build and deploy highly customizable, fully featured RESTful Web Services.  [disclaimer: I am the project author]"}]}, {"link": "https://stackoverflow.com/questions/3089554/which-framework-should-i-use-for-building-ecommerce-site-in-python", "question": {"id": "3089554", "title": "WHich framework should i use for building ecommerce site in Python", "content": "<p>I have chosen Python as a langauge to build my ecommerce webiste.</p>\n<p>The site will contains</p>\n<pre><code class=\"python\">1)Logins\n2)registration\n3)SHop Cart\n4)Payment gateway\n5)Admin can edit some content pages\n</code></pre>\n<p>I have started learning basic python.</p>\n<p>But i want to build website and i have to start with one framework</p>\n<p>the web users can vary fromm 100's to 1000's</p>\n<p>SO which Framework will be best . I have to use some Machine learning tools using python on some webistes.</p>\n<p>Will Django be enough for me</p>\n", "abstract": "I have chosen Python as a langauge to build my ecommerce webiste. The site will contains I have started learning basic python. But i want to build website and i have to start with one framework the web users can vary fromm 100's to 1000's SO which Framework will be best . I have to use some Machine learning tools using python on some webistes. Will Django be enough for me"}, "answers": [{"id": 3089959, "score": 7, "vote": 0, "content": "<p>I bet you already reviewed your choices:</p>\n<p><a href=\"http://wiki.python.org/moin/WebFrameworks\" rel=\"noreferrer\">http://wiki.python.org/moin/WebFrameworks</a></p>\n<p>If you understand the value proposition of using SQLAlchemy (as compared to being forced to do \"ActiveRecord\" style database (non)abstraction) stick with those platforms that offer native support for SQLAlchemy. Mastering it = half of your business logic becomes portable to any Python platform or database type.</p>\n<p>If you want to \"slap something together\" go with Django.</p>\n<p>If you know you will stay the course until you are done, take a strong look at Pylons and stick with it if you can stomach the extra effort. It will give you more freedom than Django, at a cost of more coding. </p>\n<p>Take special note of web2py and go for it if the special benefits it provides (see their video presentation) are worth the limitations.</p>\n<p>Twisted will look technically interesting to you, but go for it only if you are a masochist.</p>\n<p>Either way. Good luck.</p>\n<p>On a related note, there is a movement out there to separate \"shopping cart + check out\" from the page-serving framework. One good example is <a href=\"http://www.ecwid.com/\" rel=\"noreferrer\">http://www.ecwid.com/</a>  It provides javascript that you put in your regular site. That javascript pull the entire shopping cart system into customer's browser directly from ecwid.com. However, all of that is presented on top of your site's actual \"shop\" page. I work in payment processing industry (not in the ecwid.com) and messing around with your own payment pages and security is a pain. Might as well outsource the payment glue to a processor and concentrate on presentation, merchandise, customer service.</p>\n", "abstract": "I bet you already reviewed your choices: http://wiki.python.org/moin/WebFrameworks If you understand the value proposition of using SQLAlchemy (as compared to being forced to do \"ActiveRecord\" style database (non)abstraction) stick with those platforms that offer native support for SQLAlchemy. Mastering it = half of your business logic becomes portable to any Python platform or database type. If you want to \"slap something together\" go with Django. If you know you will stay the course until you are done, take a strong look at Pylons and stick with it if you can stomach the extra effort. It will give you more freedom than Django, at a cost of more coding.  Take special note of web2py and go for it if the special benefits it provides (see their video presentation) are worth the limitations. Twisted will look technically interesting to you, but go for it only if you are a masochist. Either way. Good luck. On a related note, there is a movement out there to separate \"shopping cart + check out\" from the page-serving framework. One good example is http://www.ecwid.com/  It provides javascript that you put in your regular site. That javascript pull the entire shopping cart system into customer's browser directly from ecwid.com. However, all of that is presented on top of your site's actual \"shop\" page. I work in payment processing industry (not in the ecwid.com) and messing around with your own payment pages and security is a pain. Might as well outsource the payment glue to a processor and concentrate on presentation, merchandise, customer service."}, {"id": 3090522, "score": 4, "vote": 0, "content": "<p>Check out <a href=\"http://www.satchmoproject.com/\" rel=\"nofollow noreferrer\">Satchmo</a> for building e-commerce sites in Django.  </p>\n<p>If your needs aren't that complex I'd give <a href=\"http://www.shopify.com/\" rel=\"nofollow noreferrer\">Shopify</a> a look.</p>\n", "abstract": "Check out Satchmo for building e-commerce sites in Django.   If your needs aren't that complex I'd give Shopify a look."}, {"id": 3089637, "score": 0, "vote": 0, "content": "<p>framework choice won't limit you. You can use <strong>any</strong> framework and still do all those things.</p>\n", "abstract": "framework choice won't limit you. You can use any framework and still do all those things."}]}, {"link": "https://stackoverflow.com/questions/18696403/dynamically-modifying-serializer-fields-in-django-rest-framework", "question": {"id": "18696403", "title": "Dynamically modifying serializer fields in Django Rest Framework", "content": "<p>I'm trying to use the Advanced serializer usage described in the django rest framework documentation. <a href=\"http://django-rest-framework.org/api-guide/serializers.html#advanced-serializer-usage\" rel=\"noreferrer\">http://django-rest-framework.org/api-guide/serializers.html#advanced-serializer-usage</a> to dynamically modifying serializer field</p>\n<p>Here is my serializer class:</p>\n<pre><code class=\"python\">class MovieSerializer(serializers.ModelSerializer):\n    moviework_work = MovieWorkSerializer(many=True) \n\n    def __init__(self, *args, **kwargs):\n        # Don't pass the 'fields' arg up to the superclass\n        dropfields = kwargs.pop('dropfields', None)\n\n        # Instantiate the superclass normally\n        super(MovieSerializer, self).__init__(*args, **kwargs)\n\n        if dropfields:\n            # Drop fields specified in the `fields` argument.\n            banished = set(dropfields)\n            for field_name in banished:\n                self.fields.pop(field_name)\n    class Meta:\n        model = Movie\n        fields = ('field1','field2','moviework_work')\n</code></pre>\n<p>Here is my viewset</p>\n<pre><code class=\"python\">class MovieFromInterpreterViewSet(viewsets.ModelViewSet):\n    queryset = Movie.objects.all()\n    serializer_class = MovieSerializer(dropfields=('moviework_work',))\n</code></pre>\n<p>I get this error:</p>\n<pre><code class=\"python\">TypeError: 'MovieSerializer' object is not callable\n</code></pre>\n", "abstract": "I'm trying to use the Advanced serializer usage described in the django rest framework documentation. http://django-rest-framework.org/api-guide/serializers.html#advanced-serializer-usage to dynamically modifying serializer field Here is my serializer class: Here is my viewset I get this error:"}, "answers": [{"id": 19016972, "score": 5, "vote": 0, "content": "<p>Note that you are setting <code>serializer_class</code> not to a class, but to an instance of the class. You either need to set <code>dropfields</code> as an attribute on the class, (just like it does for <code>fields</code> in the documented example you link to) or you need to look at overriding the <code>get_serializer</code> method of the viewset (<a href=\"http://django-rest-framework.org/api-guide/generic-views.html#methods\" rel=\"noreferrer\">docs</a>).</p>\n", "abstract": "Note that you are setting serializer_class not to a class, but to an instance of the class. You either need to set dropfields as an attribute on the class, (just like it does for fields in the documented example you link to) or you need to look at overriding the get_serializer method of the viewset (docs)."}]}, {"link": "https://stackoverflow.com/questions/2300007/rpc-lib-for-python", "question": {"id": "2300007", "title": "RPC lib for Python", "content": "<p>What RPC framework/lib for python could you recommend me? The architecture is client-server, server should stand high load, and connection tunneled over ssl. I've googled such things as pyro, twisted.spread, rpyc.</p>\n", "abstract": "What RPC framework/lib for python could you recommend me? The architecture is client-server, server should stand high load, and connection tunneled over ssl. I've googled such things as pyro, twisted.spread, rpyc."}, "answers": [{"id": 3129684, "score": 2, "vote": 0, "content": "<p>The are some alternatives to Pyro if you really need high loads: </p>\n<ul>\n<li><a href=\"http://pypi.python.org/pypi/jpc\" rel=\"nofollow noreferrer\">http://pypi.python.org/pypi/jpc</a> (see more on <a href=\"http://winpdb.org/2009/11/enter-jpc/\" rel=\"nofollow noreferrer\">http://winpdb.org/2009/11/enter-jpc/</a>)</li>\n<li>From the same guy: <a href=\"http://code.google.com/p/rfoo/\" rel=\"nofollow noreferrer\">http://code.google.com/p/rfoo/</a></li>\n</ul>\n<p>Both are really fast. The second one needs Cython, however; so you can try jpc on the first place.</p>\n", "abstract": "The are some alternatives to Pyro if you really need high loads:  Both are really fast. The second one needs Cython, however; so you can try jpc on the first place."}, {"id": 9872612, "score": 2, "vote": 0, "content": "<p>You may like <strong><a href=\"http://pypi.python.org/pypi/rpclib\" rel=\"nofollow\">rpclib</a></strong> that is good presented in this <a href=\"http://www.youtube.com/watch?v=N4zdWLuSbV0#t=21m58\" rel=\"nofollow\">lighting talk</a> from PyCon 2012.</p>\n", "abstract": "You may like rpclib that is good presented in this lighting talk from PyCon 2012."}, {"id": 13346864, "score": 1, "vote": 0, "content": "<p>Look at <a href=\"http://rpyc.sourceforge.net/index.html\" rel=\"nofollow\">http://rpyc.sourceforge.net/index.html</a> It is very nice micro RPC library with async calls, SSL, etc. </p>\n", "abstract": "Look at http://rpyc.sourceforge.net/index.html It is very nice micro RPC library with async calls, SSL, etc. "}]}, {"link": "https://stackoverflow.com/questions/1072920/user-friendly-framework-for-personal-website", "question": {"id": "1072920", "title": "user friendly framework for personal website?", "content": "<p>Hi,\nWhich are the user friendly frameworks for building personal sites? Specially if that comes with little programming knowledge. And integrated jquery will be great. python or php based framework will do better.</p>\n<p>I tried wordpress and joomla! But those are far more complex for a simple personal site with personal blogging, live commenting, twitting, keeping personal projects and resume etc.</p>\n<p>Please suggest me. Thanks in advance.</p>\n", "abstract": "Hi,\nWhich are the user friendly frameworks for building personal sites? Specially if that comes with little programming knowledge. And integrated jquery will be great. python or php based framework will do better. I tried wordpress and joomla! But those are far more complex for a simple personal site with personal blogging, live commenting, twitting, keeping personal projects and resume etc. Please suggest me. Thanks in advance."}, "answers": [{"id": 1074595, "score": 2, "vote": 0, "content": "<p>\"a simple personal site with personal blogging, live commenting, twitting, keeping personal projects and resume etc.\"</p>\n<p>In my opinion, a personal site means a single author.  You don't have a lot of really \"dynamic\" content.  How many times a day will  you update a person site?  Once?  Twice?</p>\n<p>A blog, comment, twitter things change relatively slowly -- once or twice a day.</p>\n<p>Personal projects, resume, etc. change even more slowly.</p>\n<p>None of this <em>requires</em> dynamic content creation.  A database is often more trouble than help.  Most of it is simply unstructured text.  Consequently, consider using a toolset to build static HTML and simply FTP that to a server.  </p>\n<p>Consider using <a href=\"http://sphinx.pocoo.org/\" rel=\"nofollow noreferrer\">Sphinx</a> to build static content.  You can generate a mountain of content, maintain it, and upload it periodically.  You don't need to know HTML because you write in RST.  It's easy to generate hundreds of pages of content and adjust the look and feel.</p>\n<p>Best of all, it's very, very lightweight.  You can easily get by with zero code.  Or, if you want to add directives or interpreted text roles, you can do a little coding.</p>\n", "abstract": "\"a simple personal site with personal blogging, live commenting, twitting, keeping personal projects and resume etc.\" In my opinion, a personal site means a single author.  You don't have a lot of really \"dynamic\" content.  How many times a day will  you update a person site?  Once?  Twice? A blog, comment, twitter things change relatively slowly -- once or twice a day. Personal projects, resume, etc. change even more slowly. None of this requires dynamic content creation.  A database is often more trouble than help.  Most of it is simply unstructured text.  Consequently, consider using a toolset to build static HTML and simply FTP that to a server.   Consider using Sphinx to build static content.  You can generate a mountain of content, maintain it, and upload it periodically.  You don't need to know HTML because you write in RST.  It's easy to generate hundreds of pages of content and adjust the look and feel. Best of all, it's very, very lightweight.  You can easily get by with zero code.  Or, if you want to add directives or interpreted text roles, you can do a little coding."}, {"id": 1074678, "score": 2, "vote": 0, "content": "<p>\"I tried wordpress and joomla! But those are far more complex for a simple personal site with personal blogging, live commenting, twitting, keeping personal projects and resume etc.\"</p>\n<p>Nothing can be simpler to your needs than wordpress. You can use it to create not only posts to your blog but what they call \"static pages\", like a \"contact\" page, a \"resume\" and such. You edit this page like a \"microsoft word\" box in the admin panel. You don't even need to edit a php file, you dont need to create a layout, just download a free template (search google for this).</p>\n<p>Wordpress can be installed in a variety of plataforms since it doesn't need a lot of requirements. It's PHP, its easier to find a cheap hosting (even a machine in your own home): see their <a href=\"http://wordpress.org/about/requirements/\" rel=\"nofollow noreferrer\">requirements page</a> for yourself.</p>\n<p>The only thing you may need \"out of the box\" is the twitting thing, that you can achieve by downloading some plugins from their official website.</p>\n<p>If you find that to achieve your goals using wordpress is too complicated, I don't think it's a good idea to use a \"framework\", <b>unless you want to learn coding</b>. You can achieve what you need in wordpress without coding a single line.</p>\n<p>Oh, and it has jquery.</p>\n", "abstract": "\"I tried wordpress and joomla! But those are far more complex for a simple personal site with personal blogging, live commenting, twitting, keeping personal projects and resume etc.\" Nothing can be simpler to your needs than wordpress. You can use it to create not only posts to your blog but what they call \"static pages\", like a \"contact\" page, a \"resume\" and such. You edit this page like a \"microsoft word\" box in the admin panel. You don't even need to edit a php file, you dont need to create a layout, just download a free template (search google for this). Wordpress can be installed in a variety of plataforms since it doesn't need a lot of requirements. It's PHP, its easier to find a cheap hosting (even a machine in your own home): see their requirements page for yourself. The only thing you may need \"out of the box\" is the twitting thing, that you can achieve by downloading some plugins from their official website. If you find that to achieve your goals using wordpress is too complicated, I don't think it's a good idea to use a \"framework\", unless you want to learn coding. You can achieve what you need in wordpress without coding a single line. Oh, and it has jquery."}, {"id": 1784588, "score": 1, "vote": 0, "content": "<p>Take a look at Personal Web Site Starter Kit (<a href=\"http://www.asp.net/downloads/starter-kits/personal\" rel=\"nofollow noreferrer\">http://www.asp.net/downloads/starter-kits/personal</a>), very easy to install and maintain and it's got what you need.</p>\n", "abstract": "Take a look at Personal Web Site Starter Kit (http://www.asp.net/downloads/starter-kits/personal), very easy to install and maintain and it's got what you need."}, {"id": 1073063, "score": 0, "vote": 0, "content": "<p>You may be looking for a free CMS system?</p>\n<p>I could suggest you several good .NET CMS which are either open sorce or commercial but have a limited free editions very well suited for perosnal sites</p>\n<p><a href=\"http://www.kentico.com/free-cms-asp-net.aspx\" rel=\"nofollow noreferrer\">Kentico</a> - really simple thing, that you can use without any programming knwoledge, easy to setup, but free edition is limited with 1 blog only. so only for personal use, nothing more, or you will need to buy a commercial edition...</p>\n<p><a href=\"http://www.umbraco.org/\" rel=\"nofollow noreferrer\">Umbraco</a> - open source, but will require knowledge of XSL templates if you want to build really good site. not easy to learn if you are not a developer</p>\n<p><a href=\"http://www.telerik.com/products/sitefinity.aspx\" rel=\"nofollow noreferrer\">Sitefinity</a> - commercial CMS from Telerik but they have a community edition. Worth looking at. I suppose the complexity of learning somewhere between Kentico and Umbraco. But simple web sites will not require development</p>\n<p>In any case I recomend you a great resource <a href=\"http://cmsmatrix.org\" rel=\"nofollow noreferrer\">CMSMatrix.org</a> where you can compare more then 100 CMS on different platforms and languages. </p>\n<p>p.s.</p>\n<p>And if you just want a simple personal web site and don't want to care about hosting, databases etc. I suppose you could look at <a href=\"http://www.google.com/sites/help/intl/en/overview.html\" rel=\"nofollow noreferrer\">Google Sites</a></p>\n", "abstract": "You may be looking for a free CMS system? I could suggest you several good .NET CMS which are either open sorce or commercial but have a limited free editions very well suited for perosnal sites Kentico - really simple thing, that you can use without any programming knwoledge, easy to setup, but free edition is limited with 1 blog only. so only for personal use, nothing more, or you will need to buy a commercial edition... Umbraco - open source, but will require knowledge of XSL templates if you want to build really good site. not easy to learn if you are not a developer Sitefinity - commercial CMS from Telerik but they have a community edition. Worth looking at. I suppose the complexity of learning somewhere between Kentico and Umbraco. But simple web sites will not require development In any case I recomend you a great resource CMSMatrix.org where you can compare more then 100 CMS on different platforms and languages.  p.s. And if you just want a simple personal web site and don't want to care about hosting, databases etc. I suppose you could look at Google Sites"}, {"id": 1073083, "score": 0, "vote": 0, "content": "<p>for PHP ones, beside joomla that you've already mentioned, I can suggest :</p>\n<p><strong>Drupal</strong> (<a href=\"http://drupal.org/\" rel=\"nofollow noreferrer\">http://drupal.org/</a>).</p>\n<p>Or a much simpler one :</p>\n<p><strong>Dotclear</strong> (<a href=\"http://dotclear.org/\" rel=\"nofollow noreferrer\">http://dotclear.org/</a>)</p>\n", "abstract": "for PHP ones, beside joomla that you've already mentioned, I can suggest : Drupal (http://drupal.org/). Or a much simpler one : Dotclear (http://dotclear.org/)"}, {"id": 22913432, "score": 0, "vote": 0, "content": "<p>AnchorCMS gets a lot of good feedback, give it a try.</p>\n", "abstract": "AnchorCMS gets a lot of good feedback, give it a try."}, {"id": 1073070, "score": -1, "vote": 0, "content": "<p>Have a look at <a href=\"http://www.plone.org/\" rel=\"nofollow noreferrer\">Plone</a>. Perhaps this meets your requirements.</p>\n", "abstract": "Have a look at Plone. Perhaps this meets your requirements."}, {"id": 1073087, "score": -1, "vote": 0, "content": "<p>Kentico,Umbraco and Sitefinity,DotNetNuke  are meant for developers/designers/integrators. Use Wordpress or if you are looking for .NET version use Community server.</p>\n", "abstract": "Kentico,Umbraco and Sitefinity,DotNetNuke  are meant for developers/designers/integrators. Use Wordpress or if you are looking for .NET version use Community server."}]}, {"link": "https://stackoverflow.com/questions/1368364/what-non-web-oriented-python-frameworks-exist", "question": {"id": "1368364", "title": "What non web-oriented Python frameworks exist?", "content": "<p>I'm looking for a good framework on which to base my applications development.</p>\n<p>In PHP I use <a href=\"http://en.wikipedia.org/wiki/Symfony\" rel=\"nofollow noreferrer\">Symfony</a>, in ActionScript <a href=\"http://en.wikipedia.org/wiki/PureMVC\" rel=\"nofollow noreferrer\">PureMVC</a>, they are all MVC frameworks.</p>\n<p>I'm looking for <strong>a Python framework being oriented towards general purpose application development</strong>, not web application. I mean, just applications, services, daemons and so on.\nSometimes I have not a real view to implement, just an RPC service. Other times I have to code for a serial port, or implement a command scheduler, or whatever.</p>\n<p>What is the best open source software I can think of as a standard base for my needs? Why do you think your suggestion will fulfill my requirements over its competitors?</p>\n<p><strong>EDIT:</strong></p>\n<p>For \"general purpose\" I mean not being <em>strongly</em> bounded to be with or without a GUI, being a daemon or a command-line application, being multiprocess/multithread or not. Being general, giving a good architecture structure, not being a particular tool.</p>\n<p><strong>EDIT 2:</strong></p>\n<p>I'd want to explain that the question is about the <em>eventual existence</em> of one or more \"frameworks\" not being bounded to any particular use case, but being able to give a good and well standardized startup structure/architecture, with some best practices applied, being a guideline, something being able to guide the architecture planning of the application itself, not of their behavior regarding tasks to perform.</p>\n<p>I think this question is not so subjective, maybe wrong exposed because of my English, but I suppose it is legal</p>\n", "abstract": "I'm looking for a good framework on which to base my applications development. In PHP I use Symfony, in ActionScript PureMVC, they are all MVC frameworks. I'm looking for a Python framework being oriented towards general purpose application development, not web application. I mean, just applications, services, daemons and so on.\nSometimes I have not a real view to implement, just an RPC service. Other times I have to code for a serial port, or implement a command scheduler, or whatever. What is the best open source software I can think of as a standard base for my needs? Why do you think your suggestion will fulfill my requirements over its competitors? EDIT: For \"general purpose\" I mean not being strongly bounded to be with or without a GUI, being a daemon or a command-line application, being multiprocess/multithread or not. Being general, giving a good architecture structure, not being a particular tool. EDIT 2: I'd want to explain that the question is about the eventual existence of one or more \"frameworks\" not being bounded to any particular use case, but being able to give a good and well standardized startup structure/architecture, with some best practices applied, being a guideline, something being able to guide the architecture planning of the application itself, not of their behavior regarding tasks to perform. I think this question is not so subjective, maybe wrong exposed because of my English, but I suppose it is legal"}, "answers": [{"id": 1368442, "score": 9, "vote": 0, "content": "<p>For network services needing to handle numerous connections asynchronously, a great many people favor <a href=\"http://twistedmatrix.com/\" rel=\"nofollow noreferrer\">Twisted</a>.</p>\n<p>Outside of that (and web applications), however, there's simply less need for overarching frameworks in Python than with many other languages -- the core language itself is expressive, powerful, and comes with batteries included; why add anything?</p>\n", "abstract": "For network services needing to handle numerous connections asynchronously, a great many people favor Twisted. Outside of that (and web applications), however, there's simply less need for overarching frameworks in Python than with many other languages -- the core language itself is expressive, powerful, and comes with batteries included; why add anything?"}, {"id": 1368613, "score": 6, "vote": 0, "content": "<p>Check out the Zope Component Architecture. It's an architecture to use and reuse components. It's mostly used in web applications because it's used in Zope (as the name implies) but it is in no way web specific.</p>\n<p>I wrote a quick intro to it:\n<a href=\"http://regebro.wordpress.com/2007/11/16/a-python-component-architecture/\" rel=\"noreferrer\">http://regebro.wordpress.com/2007/11/16/a-python-component-architecture/</a></p>\n<p>Here is an online book about it: <a href=\"http://www.muthukadan.net/docs/zca.html\" rel=\"noreferrer\">http://www.muthukadan.net/docs/zca.html</a></p>\n<p>And here is a non-online book: <a href=\"https://rads.stackoverflow.com/amzn/click/com/354076447X\" rel=\"nofollow noreferrer\">http://www.amazon.com/dp/354076447X</a></p>\n", "abstract": "Check out the Zope Component Architecture. It's an architecture to use and reuse components. It's mostly used in web applications because it's used in Zope (as the name implies) but it is in no way web specific. I wrote a quick intro to it:\nhttp://regebro.wordpress.com/2007/11/16/a-python-component-architecture/ Here is an online book about it: http://www.muthukadan.net/docs/zca.html And here is a non-online book: http://www.amazon.com/dp/354076447X"}, {"id": 1368955, "score": 6, "vote": 0, "content": "<p>I would guess what you're looking for might be the <a href=\"http://code.enthought.com/\" rel=\"nofollow noreferrer\">Enthought Tool Suite</a> (ETS), particularly <a href=\"http://code.enthought.com/projects/envisage/\" rel=\"nofollow noreferrer\">Envisage</a> (extensible plug-in architecture for scientific applications).</p>\n", "abstract": "I would guess what you're looking for might be the Enthought Tool Suite (ETS), particularly Envisage (extensible plug-in architecture for scientific applications)."}, {"id": 1368618, "score": 3, "vote": 0, "content": "<p>\"not being bounded to be with or without a GUI\" doesn't make a lot of sense.</p>\n<p>GUI's -- generally -- are quite complex and require a framework.  Folks use <a href=\"http://wiki.python.org/moin/TkInter\" rel=\"nofollow noreferrer\">tkinter</a>, <a href=\"http://wiki.python.org/moin/PyQt\" rel=\"nofollow noreferrer\">pyQT</a>, <a href=\"http://www.pygtk.org/\" rel=\"nofollow noreferrer\">pyGTK</a>, <a href=\"http://www.wxpython.org/\" rel=\"nofollow noreferrer\">wxWidgets</a>, etc. to build GUI's.</p>\n<p>\"daemon or a cmd line app\" does not require a framework of any kind.  This is already part of the standard library.</p>\n<p>\"being multiprocess/multithread or not\" is already part of the standard library.</p>\n<p>Since, \"general\" doesn't have much meaning, there are several answers:</p>\n<ul>\n<li><p>For GUI development, yes, there are many frameworks.  \"Best\" is subjective.</p></li>\n<li><p>For non-GUI development, there are no \"additional\" frameworks to speak of.  </p></li>\n<li><p>For \"event driven networking\", there is <a href=\"http://twistedmatrix.com/trac/\" rel=\"nofollow noreferrer\">twisted</a>.</p></li>\n<li><p>For \"Object-Relational Mapping\", there are several.  \"Best\" is subjective.</p></li>\n</ul>\n", "abstract": "\"not being bounded to be with or without a GUI\" doesn't make a lot of sense. GUI's -- generally -- are quite complex and require a framework.  Folks use tkinter, pyQT, pyGTK, wxWidgets, etc. to build GUI's. \"daemon or a cmd line app\" does not require a framework of any kind.  This is already part of the standard library. \"being multiprocess/multithread or not\" is already part of the standard library. Since, \"general\" doesn't have much meaning, there are several answers: For GUI development, yes, there are many frameworks.  \"Best\" is subjective. For non-GUI development, there are no \"additional\" frameworks to speak of.   For \"event driven networking\", there is twisted. For \"Object-Relational Mapping\", there are several.  \"Best\" is subjective."}, {"id": 1368634, "score": 3, "vote": 0, "content": "<p>I'm having difficulty imagining what a \"framework\" would be that unifies \"with or without a GUI, being a daemon or a cmd line app, being multiprocess/multithread or not\". What do you expect such a framework to provide?</p>\n<p>Frameworks are built to encapsulate various basic tasks - GUI, or web, or asynchronicity, or whatever - so that, as you say, users don't have to reinvent them. But you're explicitly excluding all the things that make a framework a framework, so I can't see what you're left with.</p>\n<p>About the only thing you don't exclude is database access (ORM). If that's all you want, look at sqlalchemy.</p>\n", "abstract": "I'm having difficulty imagining what a \"framework\" would be that unifies \"with or without a GUI, being a daemon or a cmd line app, being multiprocess/multithread or not\". What do you expect such a framework to provide? Frameworks are built to encapsulate various basic tasks - GUI, or web, or asynchronicity, or whatever - so that, as you say, users don't have to reinvent them. But you're explicitly excluding all the things that make a framework a framework, so I can't see what you're left with. About the only thing you don't exclude is database access (ORM). If that's all you want, look at sqlalchemy."}, {"id": 1368638, "score": 1, "vote": 0, "content": "<p>Python's core language and standard library are an amazing framework by themselves.</p>\n<p>Only languages which are deficient in some way need a framework for efficient development of applications (example: JavaScript needs jQuery or <a href=\"http://en.wikipedia.org/wiki/Prototype_JavaScript_Framework\" rel=\"nofollow noreferrer\">Prototype</a>).</p>\n<p>The general approach with Python is:</p>\n<ol>\n<li>Check the standard library; it probably has what you need.</li>\n<li>If there's some large component that isn't in the standard library, there's probably a specific library that help with it.</li>\n</ol>\n", "abstract": "Python's core language and standard library are an amazing framework by themselves. Only languages which are deficient in some way need a framework for efficient development of applications (example: JavaScript needs jQuery or Prototype). The general approach with Python is:"}, {"id": 1368882, "score": 0, "vote": 0, "content": "<p>Python bindings to GObject and GLib provide an application framework not bound to GUI or anything-- however, if it should be bound to a UI, GTK+ comes closer.</p>\n<p>GLib provides functions such as an application main loop, events, signals and callbacks. GObject implements the base class for objects with connectable signal slots.</p>\n<p>GLib also offers a lot of Filesystem abstraction, including VFS, trash handling, directory monitoring, file metadata.</p>\n<p>The python reference is here:</p>\n<p><a href=\"http://library.gnome.org/devel/pygobject/stable/index.html\" rel=\"nofollow noreferrer\">http://library.gnome.org/devel/pygobject/stable/index.html</a></p>\n", "abstract": "Python bindings to GObject and GLib provide an application framework not bound to GUI or anything-- however, if it should be bound to a UI, GTK+ comes closer. GLib provides functions such as an application main loop, events, signals and callbacks. GObject implements the base class for objects with connectable signal slots. GLib also offers a lot of Filesystem abstraction, including VFS, trash handling, directory monitoring, file metadata. The python reference is here: http://library.gnome.org/devel/pygobject/stable/index.html"}, {"id": 1372523, "score": 0, "vote": 0, "content": "<p>I don't think what you are asking for exists. Frameworks provide a common frame for similar applications, whereas you are asking for something for all applications. Almost by definition, such a thing can't exist.</p>\n<p>Instead, for each application type, unless you find a framework for that specific type of app, you provide the framework yourself and use libraries to provide common functionality shared across applications. Python has many good libraries that come as standard and more can be found at <a href=\"http://pypi.python.org/pypi\" rel=\"nofollow noreferrer\">PyPi</a>.</p>\n", "abstract": "I don't think what you are asking for exists. Frameworks provide a common frame for similar applications, whereas you are asking for something for all applications. Almost by definition, such a thing can't exist. Instead, for each application type, unless you find a framework for that specific type of app, you provide the framework yourself and use libraries to provide common functionality shared across applications. Python has many good libraries that come as standard and more can be found at PyPi."}]}, {"link": "https://stackoverflow.com/questions/85119/running-multiple-sites-from-a-single-python-web-framework", "question": {"id": "85119", "title": "Running multiple sites from a single Python web framework", "content": "<p>I know you can do redirection based on the domain or path to rewrite the URI to point at a site-specific location and I've also seen some brutish <code>if</code> and <code>elif</code> statements for every site as shown in the following code, which I would like to avoid.</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">if site == 'site1':\n    ...\nelif site == 'site2:\n    ...\n</code></pre>\n<p>What are some good and clever ways of running multiple sites from a single, common Python web framework (i.e., Pylons, TurboGears, etc)?</p>\n", "abstract": "I know you can do redirection based on the domain or path to rewrite the URI to point at a site-specific location and I've also seen some brutish if and elif statements for every site as shown in the following code, which I would like to avoid. What are some good and clever ways of running multiple sites from a single, common Python web framework (i.e., Pylons, TurboGears, etc)?"}, "answers": [{"id": 85134, "score": 11, "vote": 0, "content": "<p>Django has this built in.  See <a href=\"http://docs.djangoproject.com/en/dev/ref/contrib/sites/#ref-contrib-sites\" rel=\"noreferrer\">the sites framework</a>.</p>\n<p>As a general technique, include a 'host' column in your database schema attached to the data you want to be host-specific, then include the <code>Host</code> HTTP header in the query when you are retrieving data.</p>\n", "abstract": "Django has this built in.  See the sites framework. As a general technique, include a 'host' column in your database schema attached to the data you want to be host-specific, then include the Host HTTP header in the query when you are retrieving data."}, {"id": 86705, "score": 7, "vote": 0, "content": "<p>Using Django on apache with mod_python, I host multiple (unrelated) django sites simply with the following apache config:</p>\n<pre><code class=\"python\">&lt;VirtualHost 1.2.3.4&gt;\n        DocumentRoot /www/site1\n        ServerName site1.com\n        &lt;Location /&gt;\n                SetHandler python-program\n                SetEnv DJANGO_SETTINGS_MODULE site1.settings\n                PythonPath \"['/www'] + sys.path\"\n                PythonDebug On\n                PythonInterpreter site1\n        &lt;/Location&gt;\n&lt;/VirtualHost&gt;\n\n&lt;VirtualHost 1.2.3.4&gt;\n        DocumentRoot /www/site2\n        ServerName site2.com\n        &lt;Location /&gt;\n                SetHandler python-program\n                SetEnv DJANGO_SETTINGS_MODULE site2.settings\n                PythonPath \"['/www'] + sys.path\"\n                PythonDebug On\n                PythonInterpreter site2\n        &lt;/Location&gt;\n&lt;/VirtualHost&gt;\n</code></pre>\n<p>No need for multiple apache instances or proxy servers. Using a different PythonInterpreter directive for each site (the name you enter is arbitrary) keeps the namespaces separate.</p>\n", "abstract": "Using Django on apache with mod_python, I host multiple (unrelated) django sites simply with the following apache config: No need for multiple apache instances or proxy servers. Using a different PythonInterpreter directive for each site (the name you enter is arbitrary) keeps the namespaces separate."}, {"id": 85271, "score": 3, "vote": 0, "content": "<p>I use CherryPy as my web server (which comes bundled with Turbogears), and I simply run multiple instances of the CherryPy web server on different ports bound to localhost.  Then I configure Apache with mod_proxy and mod_rewrite to transparently forward requests to the proper port based on the HTTP request.</p>\n", "abstract": "I use CherryPy as my web server (which comes bundled with Turbogears), and I simply run multiple instances of the CherryPy web server on different ports bound to localhost.  Then I configure Apache with mod_proxy and mod_rewrite to transparently forward requests to the proper port based on the HTTP request."}, {"id": 86003, "score": 3, "vote": 0, "content": "<p>Using multiple server instances on local ports is a good idea, but you don't need a full featured web server to redirect HTTP requests. </p>\n<p>I would use <a href=\"http://www.apsis.ch/pound/\" rel=\"nofollow noreferrer\">pound</a> as a reverse proxy to do the job. It is small, fast, simple and does exactly what we need here.</p>\n<blockquote>\n<p>WHAT POUND IS:</p>\n<ol>\n<li><strong>a reverse-proxy: it passes requests from client browsers to one or more back-end servers.</strong></li>\n<li>a load balancer: it will distribute the requests from the client browsers among several back-end servers, while keeping session information.</li>\n<li>an SSL wrapper: Pound will decrypt HTTPS requests from client browsers and pass them as plain HTTP to the back-end servers.</li>\n<li>an HTTP/HTTPS sanitizer: Pound will verify requests for correctness and accept only well-formed ones.</li>\n<li>a fail over-server: should a back-end server fail, Pound will take note of the fact and stop passing requests to it until it recovers.</li>\n<li><strong>a request redirector: requests may be distributed among servers according to the requested URL.</strong></li>\n</ol>\n</blockquote>\n", "abstract": "Using multiple server instances on local ports is a good idea, but you don't need a full featured web server to redirect HTTP requests.  I would use pound as a reverse proxy to do the job. It is small, fast, simple and does exactly what we need here. WHAT POUND IS:"}]}, {"link": "https://stackoverflow.com/questions/10778346/multiple-url-segment-in-flask-and-other-python-frameowrks", "question": {"id": "10778346", "title": "Multiple URL segment in Flask and other Python frameowrks", "content": "<p>I'm building an application in both Bottle and Flask to see which I am more comfortable with as Django is too much 'batteries included'.</p>\n<p>I have read through the routing documentation of both, which is very clear and understandable but I am struggling to find a way of dealing with an unknown, possibly unlimited number of URL segments. ie:</p>\n<pre>http://www.example.com/seg1/seg2/seg3/seg4/seg5.....</pre>\n<p>I was looking at using something like <pre><code class=\"python\">@app.route(/&lt; path:fullurl &gt;)</code></pre> using regex to remove unwanted characters and splitting the fullurl string into a list the same length as the number of segments, but this seems incredibly inefficient.</p>\n<p>Most PHP frameworks seem to have a method of building an array of the segment variable names regardless of the number but neither Flask, Bottle or Django seem to have a similar option, I seem to need to specify an exact number of segments to capture variables. A couple of PHP cms's seem to collect the first 9 segments immediately as variables and anything any longer gets passed as a full path which is then broken down in the way I mentioned above.</p>\n<p>Am I not understanding the way things work in URL routing? Is the string splitting method really inefficient or the best way to do it? Or, is there a way of collecting an unknown number of segments straight into variables in Flask?</p>\n<p>I'm pretty new on Python frameworks so a five year olds explanation would help,</p>\n<p>many thanks.</p>\n", "abstract": "I'm building an application in both Bottle and Flask to see which I am more comfortable with as Django is too much 'batteries included'. I have read through the routing documentation of both, which is very clear and understandable but I am struggling to find a way of dealing with an unknown, possibly unlimited number of URL segments. ie: I was looking at using something like @app.route(/< path:fullurl >) using regex to remove unwanted characters and splitting the fullurl string into a list the same length as the number of segments, but this seems incredibly inefficient. Most PHP frameworks seem to have a method of building an array of the segment variable names regardless of the number but neither Flask, Bottle or Django seem to have a similar option, I seem to need to specify an exact number of segments to capture variables. A couple of PHP cms's seem to collect the first 9 segments immediately as variables and anything any longer gets passed as a full path which is then broken down in the way I mentioned above. Am I not understanding the way things work in URL routing? Is the string splitting method really inefficient or the best way to do it? Or, is there a way of collecting an unknown number of segments straight into variables in Flask? I'm pretty new on Python frameworks so a five year olds explanation would help, many thanks."}, "answers": [{"id": 10782775, "score": 15, "vote": 0, "content": "<p>I'm fairly new to Flask myself, but from what I've worked out so far, I'm pretty sure that the idea is that you have lots of small route/view methods, rather than one massive great switching beast.</p>\n<p>For example, if you have urls like this:</p>\n<pre><code class=\"python\">http://example.com/unit/57/\nhttp://example.com/unit/57/page/23/\nhttp://example.com/unit/57/page/23/edit\n</code></pre>\n<p>You would route it like this:</p>\n<pre><code class=\"python\">@app.route('/unit/&lt;int:unit_number&gt;/')\ndef display_unit(unit_number):\n    ...\n\n@app.route('/unit/&lt;int:unit_number&gt;/page/&lt;int:page_number&gt;/')\ndef display_page(unit_number, page_number):\n    ...\n\n@app.route('/unit/&lt;int:unit_number&gt;/page/&lt;int:page_number&gt;/edit')\ndef page_editor(unit_number, page_number):\n    ...\n</code></pre>\n<p>Doing it this way helps to keep some kind of structure in your application and relies on the framework to route stuff, rather than grabbing the URL and doing all the routing yourself. You could then also make use of blueprints to deal with the different functions.</p>\n<p>I'll admit though, I'm struggling to think of a situation where you would need a possibly unlimited number of sections in the URL?</p>\n", "abstract": "I'm fairly new to Flask myself, but from what I've worked out so far, I'm pretty sure that the idea is that you have lots of small route/view methods, rather than one massive great switching beast. For example, if you have urls like this: You would route it like this: Doing it this way helps to keep some kind of structure in your application and relies on the framework to route stuff, rather than grabbing the URL and doing all the routing yourself. You could then also make use of blueprints to deal with the different functions. I'll admit though, I'm struggling to think of a situation where you would need a possibly unlimited number of sections in the URL?"}, {"id": 10779778, "score": 4, "vote": 0, "content": "<p>Splitting the string doesn't introduce any inefficiency to your program. Performance-wise, it's a negligible addition to the URL processing done by the framework. It also fits in a single line of code.</p>\n<pre><code class=\"python\">@app.route('/&lt;path:fullurl&gt;')\ndef my_view(fullurl):\n    params = fullurl.split('/')\n</code></pre>\n", "abstract": "Splitting the string doesn't introduce any inefficiency to your program. Performance-wise, it's a negligible addition to the URL processing done by the framework. It also fits in a single line of code."}, {"id": 17639564, "score": 2, "vote": 0, "content": "<p>it works\uff1a</p>\n<pre><code class=\"python\">@app.route(\"/login/&lt;user&gt;/&lt;password&gt;\")\ndef login(user, password):\n    app.logger.error('An error occurred')\n    app.logger.error(password)\n    return \"user : %s password : %s\" % (user, password)\n</code></pre>\n<p>then:</p>\n<p><a href=\"http://example.com:5000/login/jack/hi\" rel=\"nofollow\">http://example.com:5000/login/jack/hi</a></p>\n<p>output:</p>\n<pre><code class=\"python\">user : jack password : hi\n</code></pre>\n", "abstract": "it works\uff1a then: http://example.com:5000/login/jack/hi output:"}]}, {"link": "https://stackoverflow.com/questions/3724878/cms-or-framework", "question": {"id": "3724878", "title": "CMS or Framework?", "content": "<p>I'm looking to build a online store. However, the first question, past the idea of the store, is the platform. I've previously worked with Java and PHP and am quite comfortable with PHP. So my first considerations were Drupal or maybe CodeIgniter (which I have heard lots of good  things about)</p>\n<p>On discussions with friends, they suggested Django. But I have no experience with Python or Django.</p>\n<p>So my question is, is CI better or Drupal? And further, if not either of them, is Django better in terms of ease of development and extensibility?</p>\n<p>Request you to not make this a php vs python battle as I'm looking for advice here. Thanks</p>\n<p>Edit: More information about the project:</p>\n<p>The Project is intended to create a web-store for certain products which aren't currently sold online. The store will have high-resolution images of the products and other associated details. A few other special features related to the products will be added on in time so they aren't that important.</p>\n<p>Another clarification: I understand that Drupal is a CMS and not a framework per so. The only reason I compared it to CI was due to the base platform - php. Perhaps the better comparison would have been Joomla vs Django (but I'm not sure as I do not know enough about either, yet)</p>\n", "abstract": "I'm looking to build a online store. However, the first question, past the idea of the store, is the platform. I've previously worked with Java and PHP and am quite comfortable with PHP. So my first considerations were Drupal or maybe CodeIgniter (which I have heard lots of good  things about) On discussions with friends, they suggested Django. But I have no experience with Python or Django. So my question is, is CI better or Drupal? And further, if not either of them, is Django better in terms of ease of development and extensibility? Request you to not make this a php vs python battle as I'm looking for advice here. Thanks Edit: More information about the project: The Project is intended to create a web-store for certain products which aren't currently sold online. The store will have high-resolution images of the products and other associated details. A few other special features related to the products will be added on in time so they aren't that important. Another clarification: I understand that Drupal is a CMS and not a framework per so. The only reason I compared it to CI was due to the base platform - php. Perhaps the better comparison would have been Joomla vs Django (but I'm not sure as I do not know enough about either, yet)"}, "answers": [{"id": 3724958, "score": 14, "vote": 0, "content": "<p>Choosing a framework for a project you already know what will be the purpose will only slow your development down. If your project's main goal is to be an online store, then pick your choice among the many projects already implemented for you with payment gateways, shipping options, product management, etc. A framework <em>may</em> offer all that too, but will not be ready-to-use out of the box and you will have to bind everything together yourself. My personal opinion is that frameworks are good candidate when you need an highly customized web application that you will write from scratch, that will not only do e-Commerce but handle other specific business models too.</p>\n<p>General purpose CMS such as Drupal, WordPress, etc. are good if you plan to extend your online store to also offer other options (i.g. forums, blogs, multimedia/interactive contents, etc.) If you choose to pick this avenue, I would suggest you download the source code of each CMS you retain and play with it for a while and pick the one you feel the most comfortable with, and which has a good user community. Because there's nothing worst than being stuck with someone else's broken code with no one to help you out.</p>\n<p>For e-Commerce solutions, you can find many good projects <a href=\"http://php.opensourcecms.com/scripts/show.php?catid=3&amp;category=eCommerce\" rel=\"noreferrer\">here</a>. If I may choose one to suggest, a solution that you may consider as it looks simple, it is written in PHP and has good reviews is <a href=\"http://www.opencart.com/\" rel=\"noreferrer\">OpenCart</a></p>\n<p>A good one I have worked with is the <a href=\"http://www.instinct.co.nz/e-commerce/\" rel=\"noreferrer\">Instinct e-Commerce</a> plugin for <a href=\"http://wordpress.org/\" rel=\"noreferrer\">WordPress</a>. I don't necessarily like WordPress, but that plugin is fairly good and will have you get your online store up and running in no time. The plugin also enable you to code new custom payment gateways fairly easily (just one file to code...)</p>\n", "abstract": "Choosing a framework for a project you already know what will be the purpose will only slow your development down. If your project's main goal is to be an online store, then pick your choice among the many projects already implemented for you with payment gateways, shipping options, product management, etc. A framework may offer all that too, but will not be ready-to-use out of the box and you will have to bind everything together yourself. My personal opinion is that frameworks are good candidate when you need an highly customized web application that you will write from scratch, that will not only do e-Commerce but handle other specific business models too. General purpose CMS such as Drupal, WordPress, etc. are good if you plan to extend your online store to also offer other options (i.g. forums, blogs, multimedia/interactive contents, etc.) If you choose to pick this avenue, I would suggest you download the source code of each CMS you retain and play with it for a while and pick the one you feel the most comfortable with, and which has a good user community. Because there's nothing worst than being stuck with someone else's broken code with no one to help you out. For e-Commerce solutions, you can find many good projects here. If I may choose one to suggest, a solution that you may consider as it looks simple, it is written in PHP and has good reviews is OpenCart A good one I have worked with is the Instinct e-Commerce plugin for WordPress. I don't necessarily like WordPress, but that plugin is fairly good and will have you get your online store up and running in no time. The plugin also enable you to code new custom payment gateways fairly easily (just one file to code...)"}, {"id": 3724927, "score": 2, "vote": 0, "content": "<p>CI and Django are frameworks that help you build a web application from scratch, if you are willing to do this - go ahead and try it. There should be plenty of modules available that allow you to easily extend the framework.</p>\n<p>Drupal however is a CMS, so it comes with multiple plugins already installed and is able to manage your content. You'd still need to develop the \"store\" functionality - payment, listings, etc. - yourself.</p>\n", "abstract": "CI and Django are frameworks that help you build a web application from scratch, if you are willing to do this - go ahead and try it. There should be plenty of modules available that allow you to easily extend the framework. Drupal however is a CMS, so it comes with multiple plugins already installed and is able to manage your content. You'd still need to develop the \"store\" functionality - payment, listings, etc. - yourself."}, {"id": 3725165, "score": 2, "vote": 0, "content": "<p>If the CMS fits you <strong>perfectly</strong> <em>now and in the future</em> then CMS, otherwise framework. The framework will allow you total liberty for the price of time spent on development</p>\n", "abstract": "If the CMS fits you perfectly now and in the future then CMS, otherwise framework. The framework will allow you total liberty for the price of time spent on development"}, {"id": 3724889, "score": 1, "vote": 0, "content": "<p>Have you read and heard about JOOMLA i think its very poweful CMS in php and has a lot of community support as well, In java LifeRay is a good option.</p>\n", "abstract": "Have you read and heard about JOOMLA i think its very poweful CMS in php and has a lot of community support as well, In java LifeRay is a good option."}, {"id": 3725222, "score": 1, "vote": 0, "content": "<p>I'd only use a framework if the requirements can not be engineered into an existing cart CMS. \nI'd use a CMS over a shopping cart if the commerce aspect was relatively trivial\nI'm surprised you're not considering an off the shelf cart. Open Cart is pretty extensible, and Trading Eye has a nice CMS component. </p>\n", "abstract": "I'd only use a framework if the requirements can not be engineered into an existing cart CMS. \nI'd use a CMS over a shopping cart if the commerce aspect was relatively trivial\nI'm surprised you're not considering an off the shelf cart. Open Cart is pretty extensible, and Trading Eye has a nice CMS component. "}, {"id": 3724928, "score": 0, "vote": 0, "content": "<p>I would generally advise to stick with a language you know for important projects, although I like Python as a language much more than PHP, and Django is a nice framework.</p>\n<p>Drupal is not only a framwork, but also a CMS. You can build an online store with some modules (<a href=\"http://www.ubercart.org/\" rel=\"nofollow noreferrer\">Ubercart</a>), so I would recommend to try that and see if the stock solution fits to your needs.</p>\n", "abstract": "I would generally advise to stick with a language you know for important projects, although I like Python as a language much more than PHP, and Django is a nice framework. Drupal is not only a framwork, but also a CMS. You can build an online store with some modules (Ubercart), so I would recommend to try that and see if the stock solution fits to your needs."}, {"id": 3724932, "score": 0, "vote": 0, "content": "<p>I suggest you have a look at Drupal's repository of modules -- in particular those in the e-commerce group here: <a href=\"http://drupal.org/project/modules?filters=tid:104&amp;solrsort=sis_project_release_usage%20desc\" rel=\"nofollow noreferrer\">http://drupal.org/project/modules?filters=tid:104&amp;solrsort=sis_project_release_usage%20desc</a></p>\n<p>There's a ton of them that could really help to speed you along on this project.</p>\n<p>If you know PHP and have a good grasp of HTML/CSS/JS, you should do OK in Drupal too.</p>\n", "abstract": "I suggest you have a look at Drupal's repository of modules -- in particular those in the e-commerce group here: http://drupal.org/project/modules?filters=tid:104&solrsort=sis_project_release_usage%20desc There's a ton of them that could really help to speed you along on this project. If you know PHP and have a good grasp of HTML/CSS/JS, you should do OK in Drupal too."}, {"id": 3724939, "score": 0, "vote": 0, "content": "<p>Choose Django if you want to learn Python/Django and use them in your future projects. Django is cool and you'll have fun learning Python. And you'll be able to make an informed decision for your next project.</p>\n<p>However, if you have a budget/timeframe or just want to make this project out of the door without needing to learn a new framework I'd suggest choosing a tool/language you're familiar with.</p>\n", "abstract": "Choose Django if you want to learn Python/Django and use them in your future projects. Django is cool and you'll have fun learning Python. And you'll be able to make an informed decision for your next project. However, if you have a budget/timeframe or just want to make this project out of the door without needing to learn a new framework I'd suggest choosing a tool/language you're familiar with."}, {"id": 16210012, "score": 0, "vote": 0, "content": "<p>The Bricksett CMS will build the website for you but you can also modify it using PHP for additional functionality. Modify its CSS for a better look and feel. The layout is also simple yet it has a design distinct from other CMS. </p>\n<p><a href=\"http://www.bricksett.com/home/classifiedadsview_topic.php?id=6&amp;topiccat=services&amp;location=PH&amp;wid=3\" rel=\"nofollow\">A new addition to open-source CMS</a></p>\n", "abstract": "The Bricksett CMS will build the website for you but you can also modify it using PHP for additional functionality. Modify its CSS for a better look and feel. The layout is also simple yet it has a design distinct from other CMS.  A new addition to open-source CMS"}, {"id": 5641607, "score": -1, "vote": 0, "content": "<p>Yahoo has something like a specialized CMS for online stores, called Yahoo Stores. They make it very easy to set up an online store, and provide other logistical services. You may want to take a look at that. Of course, they take a small percentage from your sales. </p>\n", "abstract": "Yahoo has something like a specialized CMS for online stores, called Yahoo Stores. They make it very easy to set up an online store, and provide other logistical services. You may want to take a look at that. Of course, they take a small percentage from your sales. "}]}, {"link": "https://stackoverflow.com/questions/55805865/is-django-a-mvc-or-mvt-framework", "question": {"id": "55805865", "title": "Is Django a MVC or MVT framework?", "content": "<p>I was wondering that whether Django is a MVC or MVT framework? I searched this question on net but didn't find any suitable or satisfactory answer.</p>\n", "abstract": "I was wondering that whether Django is a MVC or MVT framework? I searched this question on net but didn't find any suitable or satisfactory answer."}, "answers": [{"id": 64794909, "score": 12, "vote": 0, "content": "<p>I found a partial answer to this question directly in Django's FAQs</p>\n<p><a href=\"https://docs.djangoproject.com/en/3.1/faq/general/#django-appears-to-be-a-mvc-framework-but-you-call-the-controller-the-view-and-the-view-the-template-how-come-you-don-t-use-the-standard-names\" rel=\"noreferrer\">https://docs.djangoproject.com/en/3.1/faq/general/#django-appears-to-be-a-mvc-framework-but-you-call-the-controller-the-view-and-the-view-the-template-how-come-you-don-t-use-the-standard-names</a></p>\n<p>Quoting directly here for convenience:</p>\n<blockquote>\n<p><strong>Django appears to be a MVC framework, but you call the Controller the \u201cview\u201d, and the View the \u201ctemplate\u201d. How come you don\u2019t use the standard names?</strong></p>\n</blockquote>\n<blockquote>\n<p>Well, the standard names are debatable. In our\ninterpretation of MVC, the \u201cview\u201d describes the data that gets\npresented to the user. It\u2019s not necessarily how the data looks, but\nwhich data is presented. The view describes which data you see, not\nhow you see it. It\u2019s a subtle distinction. So, in our case, a \u201cview\u201d\nis the Python callback function for a particular URL, because that\ncallback function describes which data is presented. Furthermore, it\u2019s\nsensible to separate content from presentation \u2013 which is where\ntemplates come in. In Django, a \u201cview\u201d describes which data is\npresented, but a view normally delegates to a template, which\ndescribes how the data is presented. Where does the \u201ccontroller\u201d fit\nin, then? In Django\u2019s case, it\u2019s probably the framework itself: the\nmachinery that sends a request to the appropriate view, according to\nthe Django URL configuration. If you\u2019re hungry for acronyms, you might\nsay that Django is a \u201cMTV\u201d framework \u2013 that is, \u201cmodel\u201d, \u201ctemplate\u201d,\nand \u201cview.\u201d That breakdown makes much more sense. At the end of the\nday, it comes down to getting stuff done. And, regardless of how\nthings are named, Django gets stuff done in a way that\u2019s most logical\nto us.</p>\n</blockquote>\n", "abstract": "I found a partial answer to this question directly in Django's FAQs https://docs.djangoproject.com/en/3.1/faq/general/#django-appears-to-be-a-mvc-framework-but-you-call-the-controller-the-view-and-the-view-the-template-how-come-you-don-t-use-the-standard-names Quoting directly here for convenience: Django appears to be a MVC framework, but you call the Controller the \u201cview\u201d, and the View the \u201ctemplate\u201d. How come you don\u2019t use the standard names? Well, the standard names are debatable. In our\ninterpretation of MVC, the \u201cview\u201d describes the data that gets\npresented to the user. It\u2019s not necessarily how the data looks, but\nwhich data is presented. The view describes which data you see, not\nhow you see it. It\u2019s a subtle distinction. So, in our case, a \u201cview\u201d\nis the Python callback function for a particular URL, because that\ncallback function describes which data is presented. Furthermore, it\u2019s\nsensible to separate content from presentation \u2013 which is where\ntemplates come in. In Django, a \u201cview\u201d describes which data is\npresented, but a view normally delegates to a template, which\ndescribes how the data is presented. Where does the \u201ccontroller\u201d fit\nin, then? In Django\u2019s case, it\u2019s probably the framework itself: the\nmachinery that sends a request to the appropriate view, according to\nthe Django URL configuration. If you\u2019re hungry for acronyms, you might\nsay that Django is a \u201cMTV\u201d framework \u2013 that is, \u201cmodel\u201d, \u201ctemplate\u201d,\nand \u201cview.\u201d That breakdown makes much more sense. At the end of the\nday, it comes down to getting stuff done. And, regardless of how\nthings are named, Django gets stuff done in a way that\u2019s most logical\nto us."}, {"id": 65580662, "score": 3, "vote": 0, "content": "<p>Django is an MVT based framework. And in that \u201cM\u201d stand for Model \u201cV\u201d stands for View &amp; \u201cT\u201d stands for Template</p>\n<p>Model: The Model is the logical data structure behind the entire application and is represented by a database(generally relational databases such as MySql, Postgres).</p>\n<p>View: View is the main functionality part of <a href=\"https://www.knowledgebazzar.xyz/articles/django-mvt-architecture/\" rel=\"nofollow noreferrer\">Django architecture</a>, where we write the business logic which is going to be responsible for request and response according to the client inputs.</p>\n<p>Template: By the name itself it's showing its behavior. The template is the part that is used for the representation of HTML pages on the web browser.</p>\n<p>If you want more specific detail about <a href=\"https://www.knowledgebazzar.xyz/articles/django-mvt-architecture/\" rel=\"nofollow noreferrer\">django mvt architecture</a>, you can refer to this article which I found good and they have explained very well with a diagram representation <a href=\"https://www.knowledgebazzar.xyz/articles/django-mvt-architecture/\" rel=\"nofollow noreferrer\">Django MVT Architecture</a></p>\n", "abstract": "Django is an MVT based framework. And in that \u201cM\u201d stand for Model \u201cV\u201d stands for View & \u201cT\u201d stands for Template Model: The Model is the logical data structure behind the entire application and is represented by a database(generally relational databases such as MySql, Postgres). View: View is the main functionality part of Django architecture, where we write the business logic which is going to be responsible for request and response according to the client inputs. Template: By the name itself it's showing its behavior. The template is the part that is used for the representation of HTML pages on the web browser. If you want more specific detail about django mvt architecture, you can refer to this article which I found good and they have explained very well with a diagram representation Django MVT Architecture"}, {"id": 72823123, "score": 2, "vote": 0, "content": "<p>Django follows MVC pattern very closely but it uses slightly different terminology. Django is essentially an MTV (Model-Template-View) framework. Django uses the term Templates for Views and Views for Controller. In other words, in Django views are called templates, and controllers are called views. Hence our HTML code will be in templates and Python code will be in views and models.</p>\n<p>A complete explanation of this can be found here - <a href=\"https://overiq.com/django-1-10/mvc-pattern-and-django/\" rel=\"nofollow noreferrer\">https://overiq.com/django-1-10/mvc-pattern-and-django/</a></p>\n", "abstract": "Django follows MVC pattern very closely but it uses slightly different terminology. Django is essentially an MTV (Model-Template-View) framework. Django uses the term Templates for Views and Views for Controller. In other words, in Django views are called templates, and controllers are called views. Hence our HTML code will be in templates and Python code will be in views and models. A complete explanation of this can be found here - https://overiq.com/django-1-10/mvc-pattern-and-django/"}, {"id": 72837520, "score": 1, "vote": 0, "content": "<p>Djnago follows MVT framework.M=model V=views. T=templates</p>\n<p><a href=\"https://www.geeksforgeeks.org/django-project-mvt-structure/\" rel=\"nofollow noreferrer\">https://www.geeksforgeeks.org/django-project-mvt-structure/</a></p>\n", "abstract": "Djnago follows MVT framework.M=model V=views. T=templates https://www.geeksforgeeks.org/django-project-mvt-structure/"}]}, {"link": "https://stackoverflow.com/questions/38394078/django-form-validation-overview-quick", "question": {"id": "38394078", "title": "Django Form validation overview (quick!)", "content": "<p>There is reasonably precise\ndocumentation about <a href=\"https://docs.djangoproject.com/en/stable/ref/forms/validation/\" rel=\"nofollow noreferrer\">Django Form validation</a>\nand I have used it successfully already,\nso what is my problem?</p>\n<p><strong>My problem is remembering this stuff.</strong></p>\n<p>The framework involves redundancy, irregularity, some non-obvious names,\nand of course a lot of behind-the-scenes magic\nand I do not seem to be able to keep it in my head.</p>\n<p>Can somebody help with a description that is\n<strong>faster to scan than the original documentation</strong>?</p>\n", "abstract": "There is reasonably precise\ndocumentation about Django Form validation\nand I have used it successfully already,\nso what is my problem? My problem is remembering this stuff. The framework involves redundancy, irregularity, some non-obvious names,\nand of course a lot of behind-the-scenes magic\nand I do not seem to be able to keep it in my head. Can somebody help with a description that is\nfaster to scan than the original documentation?"}, "answers": [{"id": 38394079, "score": 11, "vote": 0, "content": "<p>Assume you have a <a href=\"https://docs.djangoproject.com/en/dev/ref/forms/\" rel=\"noreferrer\">Form</a> class <code>MyForm</code> with an instance called <code>myform</code>\nand containing various <a href=\"https://docs.djangoproject.com/en/dev/ref/forms/fields/\" rel=\"noreferrer\">Fields</a>, in particular a \n<code>SomeField</code> field called <code>somefield</code> which we use as an example to understand\nwhat is going on.\n<code>SomeField</code> can be from Django or your own code.</p>\n<h1>The <code>Form</code> validation process</h1>\n<p>These are the validation steps that Django is going to\nperform or attempt:</p>\n<ol>\n<li><p><code>SomeField.to_python(self, value)</code></p>\n<ul>\n<li>called for: each Field of <code>myform</code></li>\n<li>meaning: converts the string <code>value</code> to its Python target type (e.g. <code>int</code>)</li>\n<li>takes input from: <code>value</code></li>\n<li>returns: <code>value</code> coerced into the proper Python type for <code>SomeField</code></li>\n<li>side effects: should have none</li>\n<li>signals problems by: raise <code>ValidationError</code></li>\n</ul></li>\n<li><p><code>SomeField.validate(self, value)</code></p>\n<ul>\n<li>called for: each Field of <code>myform</code></li>\n<li>meaning: validates Field locally (just like a <a href=\"https://docs.djangoproject.com/en/dev/ref/validators/\" rel=\"noreferrer\">validator</a> would)</li>\n<li>takes input from: <code>value</code></li>\n<li>returns: None</li>\n<li>side effects: should have none</li>\n<li>signals problems by: raise <code>ValidationError</code></li>\n</ul></li>\n<li><p><code>SomeField.run_validators(self, value)</code></p>\n<ul>\n<li>called for: each Field of <code>myform</code></li>\n<li>meaning: executes all <a href=\"https://docs.djangoproject.com/en/dev/ref/validators/\" rel=\"noreferrer\">validators</a> registered for <code>myform.somefield</code></li>\n<li>takes input from: <code>value</code></li>\n<li>returns: None</li>\n<li>side effects: should have none</li>\n<li>signals problems by: raise <code>ValidationError</code> combining all <code>ValidationError</code>s from the validators into one</li>\n</ul></li>\n<li><p><code>SomeField.clean(self, value)</code></p>\n<ul>\n<li>called for: each Field of <code>myform</code></li>\n<li>meaning: runs <code>to_python</code>, <code>validate</code>, and <code>run_validators</code></li>\n<li>takes input from: <code>value</code></li>\n<li>returns: the desired (\"cleaned\") value, usually the result of <code>to_python</code></li>\n<li>side effects: Django will insert the return value into <code>myform.cleaned_data</code></li>\n<li>signals problems by: not handling any <code>ValidationError</code> raised by the other operations</li>\n<li>note: do not override.</li>\n</ul></li>\n<li><p><code>MyForm.clean_somefield(self)</code></p>\n<ul>\n<li>called for: each Field of <code>myform</code> with such a method</li>\n<li>meaning: validate <code>somefield</code> locally</li>\n<li>takes input from: <code>self.cleaned_data</code> (no longer just strings now!)</li>\n<li>returns: the new or unchanged value for <code>somefield</code></li>\n<li>side effects: Django will insert the return value into <code>myform.cleaned_data</code></li>\n<li>signals problems by: raising <code>ValidationError</code></li>\n<li>note: This happens in the same loop as the <code>Field.clean</code> calls.</li>\n</ul></li>\n<li><p><code>MyForm.clean(self)</code></p>\n<ul>\n<li>called for: <code>myform</code> once</li>\n<li>meaning: perform any cross-field validation</li>\n<li>takes input from: <code>self.cleaned_data</code> (no longer just strings now!)</li>\n<li>returns: either None or a dict that will become <code>cleaned_data</code> </li>\n<li>side effects: Django will assign a dict return value to <code>myform.cleaned_data</code></li>\n<li>signals problems by: calling <code>self.add_error</code> or raising <code>ValidationError</code>.\nThe latter will end up in <code>myform.non_field_errors()</code>.</li>\n<li>note: Beware when accessing <code>cleaned_data</code>, as fields that did not\nvalidate will be missing.</li>\n</ul></li>\n</ol>\n<h1>Extensions for <code>ModelForms</code></h1>\n<p>Validation of a <code>ModelForm</code> has one more step added at the end:</p>\n<ol start=\"7\">\n<li><code>myform.instance.full_clean()</code>:\n calling validation on the respective model instance (if any).</li>\n</ol>\n<p>And a <code>ModelForm's</code> <code>clean</code> method will also have\naccess to the model instance via this <code>instance</code> attribute.</p>\n<h1>Customizing validation</h1>\n<p>For making <code>myform</code> validate just like you want, you therefore\nhave different possibilities:</p>\n<ul>\n<li>At the <strong><code>SomeField</code> class level</strong>, you can override \n<code>SomeField.to_python</code> or <code>SomeField.validate</code> (e.g. by subclassing)</li>\n<li>For <strong>field-level validation at the <code>MyForm</code> class level</strong>,\nyou can implement <code>MyForm.clean_somefield</code> or\njust register a validator: \n<code>somefield = SomeField(validators=[somevalidator])</code>.\n\n<ul>\n<li>That validator can be a standard one from \n<a href=\"https://docs.djangoproject.com/en/dev/ref/validators/#built-in-validators\" rel=\"noreferrer\"><code>django.core.validators</code></a> or a custom one.</li>\n<li>BTW: You can place a validator function into your Form class;\nsimply refrain from adding <code>self</code> as the first parameter.</li>\n</ul></li>\n<li>At the <strong>MyForm level</strong>, you can implement\n<code>MyForm.clean</code>.</li>\n</ul>\n<h1>Triggering validation</h1>\n<p>This validation process can be triggered in various ways:</p>\n<ul>\n<li>calling <code>myform.full_clean()</code></li>\n<li>calling <code>myform.is_valid()</code></li>\n<li>accessing <code>myform.errors</code> etc.</li>\n</ul>\n", "abstract": "Assume you have a Form class MyForm with an instance called myform\nand containing various Fields, in particular a \nSomeField field called somefield which we use as an example to understand\nwhat is going on.\nSomeField can be from Django or your own code. These are the validation steps that Django is going to\nperform or attempt: SomeField.to_python(self, value) SomeField.validate(self, value) SomeField.run_validators(self, value) SomeField.clean(self, value) MyForm.clean_somefield(self) MyForm.clean(self) Validation of a ModelForm has one more step added at the end: And a ModelForm's clean method will also have\naccess to the model instance via this instance attribute. For making myform validate just like you want, you therefore\nhave different possibilities: This validation process can be triggered in various ways:"}]}, {"link": "https://stackoverflow.com/questions/426820/what-is-the-easiest-way-to-export-data-from-a-live-google-app-engine-application", "question": {"id": "426820", "title": "What is the easiest way to export data from a live Google App Engine application?", "content": "<p>I'm especially interested in solutions with source code available (Django independency is a plus, but I'm willing to hack my way through)</p>\n", "abstract": "I'm especially interested in solutions with source code available (Django independency is a plus, but I'm willing to hack my way through)"}, "answers": [{"id": 427588, "score": 6, "vote": 0, "content": "<p>You can, of course, write your own handler. Other than that, your options currently are limited to:</p>\n<ul>\n<li><a href=\"http://github.com/fczuardi/gae-rest/tree/master\" rel=\"noreferrer\">gae-rest</a>, which provides a RESTful interface to the datastore.</li>\n<li><a href=\"http://code.google.com/p/approcket/\" rel=\"noreferrer\">approcket</a>, a tool for replicating between MySQL and App Engine.</li>\n<li>The amusingly named <a href=\"http://aralbalkan.com/1784\" rel=\"noreferrer\">GAEBAR</a> - Google App Engine Backup and Restore.</li>\n</ul>\n", "abstract": "You can, of course, write your own handler. Other than that, your options currently are limited to:"}, {"id": 435901, "score": 3, "vote": 0, "content": "<p><strong>Update</strong>: New version of Google AppEngine supports data import to and export from the online application natively. In their terms this is called <code>upload_data</code> and <code>download_data</code> respectively (names of subcommands of <code>appcfg.py</code>).</p>\n<p>Please refer to Google documentation <a href=\"http://code.google.com/appengine/docs/python/tools/uploadingdata.html\" rel=\"nofollow noreferrer\">how to export and import data from/to GAE</a>. This is probably the better way to do it today.</p>\n<p>My old answer is below:</p>\n<hr/>\n<p>I use <a href=\"http://code.google.com/intl/ru/appengine/docs/datastore/modelclass.html#Model_to_xml\" rel=\"nofollow noreferrer\">to_xml()</a> method of the Model class to export the datastore.</p>\n<pre><code class=\"python\">class XmlExport(webapp.RequestHandler):\n    def get(self):\n        objects=MyModel.all().fetch(1000)\n        xml='&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\\n&lt;site&gt;\\n'\n        for o in objects:\n            xml = xml + o.to_xml()\n        xml = xml + '&lt;/site&gt;'\n        self.response.headers['Content-Type']='text/xml; charset=utf-8'\n        self.response.out.write(xml)\n</code></pre>\n", "abstract": "Update: New version of Google AppEngine supports data import to and export from the online application natively. In their terms this is called upload_data and download_data respectively (names of subcommands of appcfg.py). Please refer to Google documentation how to export and import data from/to GAE. This is probably the better way to do it today. My old answer is below: I use to_xml() method of the Model class to export the datastore."}]}, {"link": "https://stackoverflow.com/questions/11180806/creating-subprojects-in-bottle", "question": {"id": "11180806", "title": "creating subprojects in bottle", "content": "<p>I'm just starting Python web development, and have chosen Bottle as my framework of choice.</p>\n<p>I'm trying to have a project structure that is modular, in that I can have a 'core' application that has modules built around it, where these modules can be enabled/disabled during setup (or on the fly, if possible...not sure how I would set that up tho).</p>\n<p>My 'main' class is the following:</p>\n<pre><code class=\"python\">from bottle import Bottle, route, run\nfrom bottle import error\nfrom bottle import jinja2_view as view\n\nfrom core import core\n\napp = Bottle()\napp.mount('/demo', core)\n\n#@app.route('/')\n@route('/hello/&lt;name&gt;')\n@view('hello_template')\ndef greet(name='Stranger'):\n    return dict(name=name)\n\n@error(404)\ndef error404(error):\n    return 'Nothing here, sorry'\n\nrun(app, host='localhost', port=5000)\n</code></pre>\n<p>My 'subproject' (i.e. module) is this:</p>\n<pre><code class=\"python\">from bottle import Bottle, route, run\nfrom bottle import error\nfrom bottle import jinja2_view as view\n\napp = Bottle()\n\n@app.route('/demo')\n@view('demographic')\ndef greet(name='None', yob='None'):\n    return dict(name=name, yob=yob)\n\n@error(404)\ndef error404(error):\n    return 'Nothing here, sorry'\n</code></pre>\n<p>When I go to <code>http://localhost:5000/demo</code> in my browser, it shows a 500 error.  The output from the bottle server is:</p>\n<pre><code class=\"python\">localhost - - [24/Jun/2012 15:51:27] \"GET / HTTP/1.1\" 404 720\nlocalhost - - [24/Jun/2012 15:51:27] \"GET /favicon.ico HTTP/1.1\" 404 742\nlocalhost - - [24/Jun/2012 15:51:27] \"GET /favicon.ico HTTP/1.1\" 404 742\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/bottle-0.10.9-py2.7.egg/bottle.py\", line 737, in _handle\n    return route.call(**args)\n  File \"/usr/local/lib/python2.7/dist-packages/bottle-0.10.9-py2.7.egg/bottle.py\", line 582, in mountpoint\n    rs.body = itertools.chain(rs.body, app(request.environ, start_response))\nTypeError: 'module' object is not callable\n</code></pre>\n<p>The folder structure is:</p>\n<pre><code class=\"python\">index.py\nviews (folder)\n|--&gt;hello_template.tpl\ncore (folder)\n|--&gt;core.py\n|--&gt;__init__.py\n|--&gt;views (folder)\n|--|--&gt;demographic.tpl\n</code></pre>\n<p>I have no idea what I'm doing (wrong) :) </p>\n<p>Anyone have any idea how this can/should be done?</p>\n<p>Thanks!</p>\n", "abstract": "I'm just starting Python web development, and have chosen Bottle as my framework of choice. I'm trying to have a project structure that is modular, in that I can have a 'core' application that has modules built around it, where these modules can be enabled/disabled during setup (or on the fly, if possible...not sure how I would set that up tho). My 'main' class is the following: My 'subproject' (i.e. module) is this: When I go to http://localhost:5000/demo in my browser, it shows a 500 error.  The output from the bottle server is: The folder structure is: I have no idea what I'm doing (wrong) :)  Anyone have any idea how this can/should be done? Thanks!"}, "answers": [{"id": 11182760, "score": 8, "vote": 0, "content": "<p>You are Passing the module \"core\" to the mount() function. Instead you have to pass the bottle app object to the mount() function, So the call would be like this.</p>\n<pre><code class=\"python\">app.mount(\"/demo\",core.app)\n</code></pre>\n<p>Here are formal docs for the mount() function.</p>\n<blockquote>\n<pre><code class=\"python\">mount(prefix, app, **options)[source]\n</code></pre>\n<p>Mount an application (Bottle or plain WSGI) to a specific URL\n  prefix.<br/> Example:</p>\n<pre><code class=\"python\">root_app.mount('/admin/', admin_app)\n</code></pre>\n<p>Parameters:<br/>   prefix \u2013 path prefix or mount-point. If it ends in a\n  slash, that slash is mandatory.<br/>\n<strong>app \u2013 an instance of Bottle or a WSGI application</strong></p>\n</blockquote>\n", "abstract": "You are Passing the module \"core\" to the mount() function. Instead you have to pass the bottle app object to the mount() function, So the call would be like this. Here are formal docs for the mount() function. Mount an application (Bottle or plain WSGI) to a specific URL\n  prefix. Example: Parameters:   prefix \u2013 path prefix or mount-point. If it ends in a\n  slash, that slash is mandatory.\napp \u2013 an instance of Bottle or a WSGI application"}]}, {"link": "https://stackoverflow.com/questions/11313081/python-framework-that-support-mongodb-out-of-the-box", "question": {"id": "11313081", "title": "Python Framework that support MongoDB out of the box?", "content": "<p>I'd like to exercise MongoDB in a real world project so I'm wondering what are the Python frameworks that support MongoDB as the main database out of the box (and are well documented)?</p>\n", "abstract": "I'd like to exercise MongoDB in a real world project so I'm wondering what are the Python frameworks that support MongoDB as the main database out of the box (and are well documented)?"}, "answers": [{"id": 11313190, "score": 5, "vote": 0, "content": "<p>If you're talking Web-Frameworks there's <a href=\"http://codevoyeur.com/Downloads/Presentations/PHL-Mongo-Philly-Tornado-2011.pdf\" rel=\"noreferrer\">Tornado</a> or <a href=\"http://flask.pocoo.org/docs/patterns/mongokit/\" rel=\"noreferrer\">Mongo-kit in Flask</a> or <a href=\"http://flask-pymongo.readthedocs.org/en/latest/index.html\" rel=\"noreferrer\">Flask-PyMongo</a> that have great support for MongoDB, but at the end of the day it's all easily pluggable.</p>\n", "abstract": "If you're talking Web-Frameworks there's Tornado or Mongo-kit in Flask or Flask-PyMongo that have great support for MongoDB, but at the end of the day it's all easily pluggable."}, {"id": 11347585, "score": 0, "vote": 0, "content": "<p>I'm not sure what you mean by \"out of the box\" but I have successfully used MongoDB with Tornado web server in a number of projects.</p>\n<p>You can very easily interface with MongoDB using several libraries. My favorites are:</p>\n<ol>\n<li>PyMongo: <a href=\"http://api.mongodb.org/python/2.2/\" rel=\"nofollow\">http://api.mongodb.org/python/2.2/</a></li>\n<li>Mongoengine: <a href=\"http://mongoengine.org/\" rel=\"nofollow\">http://mongoengine.org/</a></li>\n</ol>\n<p>IMO Mongonegine is an excellent tool for communicating to Mongo through Python and it is relatively well documented. I particularly like the fact that Mongoengine provides concrete examples in the documentation (which is really nice for a beginner).</p>\n", "abstract": "I'm not sure what you mean by \"out of the box\" but I have successfully used MongoDB with Tornado web server in a number of projects. You can very easily interface with MongoDB using several libraries. My favorites are: IMO Mongonegine is an excellent tool for communicating to Mongo through Python and it is relatively well documented. I particularly like the fact that Mongoengine provides concrete examples in the documentation (which is really nice for a beginner)."}, {"id": 20580229, "score": 0, "vote": 0, "content": "<p>You can use <a href=\"https://github.com/peterbe/django-mongokit.git\" rel=\"nofollow\">django-mongokit</a> as excellent framework for your project. It bridges Django to MongoDB with the MongoKit ODM (Object Document Mapper).</p>\n<p>As Django is most widely and successfully used in many projects, which has big community support and lots of packages are available that can be easily implement in the project.</p>\n<p>We had successfully implemented it in our project which is available at <a href=\"https://github.com/gnowledge/gstudio\" rel=\"nofollow\">github</a>.</p>\n", "abstract": "You can use django-mongokit as excellent framework for your project. It bridges Django to MongoDB with the MongoKit ODM (Object Document Mapper). As Django is most widely and successfully used in many projects, which has big community support and lots of packages are available that can be easily implement in the project. We had successfully implemented it in our project which is available at github."}]}, {"link": "https://stackoverflow.com/questions/8016390/what-is-the-most-simple-lightest-weight-wsgi-framework", "question": {"id": "8016390", "title": "What is the most simple / lightest-weight WSGI framework?", "content": "<p>Which of the <a href=\"http://www.wsgi.org/en/latest/frameworks.html\">WSGI frameworks</a> are super lightweight and minimal? If you are familar with ruby, then I'm looking for something similar to Rails Metal.</p>\n<ul>\n<li>WSGI == Rack</li>\n<li>Rails == Django</li>\n<li>Sinatra == Flask</li>\n<li>Rails Metal == <strong><em>???????</em></strong></li>\n</ul>\n", "abstract": "Which of the WSGI frameworks are super lightweight and minimal? If you are familar with ruby, then I'm looking for something similar to Rails Metal."}, "answers": [{"id": 8016414, "score": 5, "vote": 0, "content": "<p>I believe <a href=\"http://werkzeug.pocoo.org/\">Werkzeug</a> is what you're looking for.</p>\n", "abstract": "I believe Werkzeug is what you're looking for."}]}, {"link": "https://stackoverflow.com/questions/1423041/what-python-web-frameworks-work-well-with-cgi-e-g-on-nearlyfreespeech-net", "question": {"id": "1423041", "title": "What python web frameworks work well with CGI (e.g. on nearlyfreespeech.net)?", "content": "<p>From nearlyfreespeech's website, they state that the following don't work well:</p>\n<ul>\n<li>mod_python  Web application</li>\n<li>frameworks that depend on persistent processes, including: Ruby On Rails, Django, Zope, and others (some of these will run under CGI, but will run slowly and are suitable only for development purposes)</li>\n</ul>\n<p>Are there any Python web frameworks that work well on NearlyFreeSpeech?</p>\n", "abstract": "From nearlyfreespeech's website, they state that the following don't work well: Are there any Python web frameworks that work well on NearlyFreeSpeech?"}, "answers": [{"id": 1423182, "score": 5, "vote": 0, "content": "<p>WSGI can run on top of CGI, and popular frameworks typically run on top of WSGI, <strong>but</strong> performance is quite another issue -- since a CGI service starts afresh on each hit, any framework you may be using will need to reload from scratch each and every time, and that (in addition to opening a new connection to a DB, etc, which is basically inevitable with CGI) will make things pretty sluggish on anything but the tiniest, lightest frameworks.</p>\n<p>Maybe something like <a href=\"http://pythonpaste.org/webob/\" rel=\"nofollow noreferrer\">WebOb</a> might be tolerable, but you'll need to do some tests to check even that (how loaded those servers are is, of course, a big part of the puzzle, and you just can't tell except by testing).</p>\n", "abstract": "WSGI can run on top of CGI, and popular frameworks typically run on top of WSGI, but performance is quite another issue -- since a CGI service starts afresh on each hit, any framework you may be using will need to reload from scratch each and every time, and that (in addition to opening a new connection to a DB, etc, which is basically inevitable with CGI) will make things pretty sluggish on anything but the tiniest, lightest frameworks. Maybe something like WebOb might be tolerable, but you'll need to do some tests to check even that (how loaded those servers are is, of course, a big part of the puzzle, and you just can't tell except by testing)."}, {"id": 1423207, "score": 2, "vote": 0, "content": "<p>I got web.py to work on nearly free speech a few years ago by fooling with its WSGI stuff to run on CGI.  It was just slightly too slow to be usable though.</p>\n<p>I've made a few Python web applications hosted on nearly free speech just using the CGI module, and they are actually plenty fast even with high traffic.  Example: <a href=\"http://www.gigbayes.com\" rel=\"nofollow noreferrer\">www.gigbayes.com</a>.</p>\n", "abstract": "I got web.py to work on nearly free speech a few years ago by fooling with its WSGI stuff to run on CGI.  It was just slightly too slow to be usable though. I've made a few Python web applications hosted on nearly free speech just using the CGI module, and they are actually plenty fast even with high traffic.  Example: www.gigbayes.com."}, {"id": 1423084, "score": 0, "vote": 0, "content": "<p>By the things they reject. I think that twisted.web is still an option there, but I don't have any experience with nearlyfreespeech.net</p>\n", "abstract": "By the things they reject. I think that twisted.web is still an option there, but I don't have any experience with nearlyfreespeech.net"}, {"id": 1424853, "score": -3, "vote": 0, "content": "<p>Well, if what you really need is just free hosting for a Python web app, <a href=\"http://code.google.com/appengine/\" rel=\"nofollow noreferrer\">Google AppEngine</a> is a nice alternative and you won't be as limited on choice of frameworks.</p>\n", "abstract": "Well, if what you really need is just free hosting for a Python web app, Google AppEngine is a nice alternative and you won't be as limited on choice of frameworks."}]}, {"link": "https://stackoverflow.com/questions/17327407/python-tk-framework", "question": {"id": "17327407", "title": "Python tk framework", "content": "<p>I have python code that generates the following error:</p>\n<pre><code class=\"python\">objc[36554]: Class TKApplication is implemented in both /Library/Frameworks/Tk.framework/Versions/8.5/Tk and /System/Library/Frameworks/Tk.framework/Versions/8.5/Tk. One of the two will be used. Which one is undefined.\n\nobjc[36554]: Class TKMenu is implemented in both /Library/Frameworks/Tk.framework/Versions/8.5/Tk and /System/Library/Frameworks/Tk.framework/Versions/8.5/Tk. One of the two will be used. Which one is undefined.\n\nobjc[36554]: Class TKContentView is implemented in both /Library/Frameworks/Tk.framework/Versions/8.5/Tk and /System/Library/Frameworks/Tk.framework/Versions/8.5/Tk. One of the two will be used. Which one is undefined.\n\nobjc[36554]: Class TKWindow is implemented in both /Library/Frameworks/Tk.framework/Versions/8.5/Tk and /System/Library/Frameworks/Tk.framework/Versions/8.5/Tk. One of the two will be used. Which one is undefined.\n</code></pre>\n<p>Some of my Tk extension libraries are linking against \n/System/Library/Frameworks instead of /Library/Frameworks when they are \nbeing compiled, I know The install_name_tool tool can re-link a binary to the \ncorrect framework, but what exactly do I need to type into Terminal in order to fix this problem?</p>\n", "abstract": "I have python code that generates the following error: Some of my Tk extension libraries are linking against \n/System/Library/Frameworks instead of /Library/Frameworks when they are \nbeing compiled, I know The install_name_tool tool can re-link a binary to the \ncorrect framework, but what exactly do I need to type into Terminal in order to fix this problem?"}, "answers": [{"id": 17339018, "score": 1, "vote": 0, "content": "<p>I am not completely aware how to relink the libraries but I found this blog post. That deals with the same issue. In that case everything was cause due to ActiveTcl messing with the already installed System Framework.</p>\n<p>He ended up simply removing the non-System version. Its a drastic solution but it might work.</p>\n<pre><code class=\"python\">cd /Library/Frameworks\nrm -r Tk.framework\nrm -r Tcl.framework\n</code></pre>\n<p>You could also move the Frameworks somewhere else first for testing purposes and if you break something restore them later.</p>\n<p><a href=\"http://michaelwelburn.com/2013/06/07/python-error-conflicting-tk-libraries-and-activetcl/\" rel=\"nofollow\">http://michaelwelburn.com/2013/06/07/python-error-conflicting-tk-libraries-and-activetcl/</a></p>\n", "abstract": "I am not completely aware how to relink the libraries but I found this blog post. That deals with the same issue. In that case everything was cause due to ActiveTcl messing with the already installed System Framework. He ended up simply removing the non-System version. Its a drastic solution but it might work. You could also move the Frameworks somewhere else first for testing purposes and if you break something restore them later. http://michaelwelburn.com/2013/06/07/python-error-conflicting-tk-libraries-and-activetcl/"}, {"id": 23730320, "score": 0, "vote": 0, "content": "<p>I don't think simply deleting the frameworks is the best way to handle this issue.  If indeed the frameworks are from an ActiveTcl installation, other files and links probably should be cleaned up.  ActiveState provides an <code>uninstall</code> script to clean everything out; where to find it and how to use it is specified in the the <a href=\"http://docs.activestate.com/activetcl/8.5/at.install.html\" rel=\"nofollow\">ActiveTcl User Guide</a>.  Note that the script location depends on the OS X version.</p>\n<p>If you've already deleted the frameworks and the uninstall script with them, you may want to look in /usr/local/bin for any executables (or stale links to executables) that ActiveTcl puts there (e.g., <code>wish</code>, <code>tclsh</code> and <code>tkcon</code>).  To find anything there that links to the deleted framework locations, you could use something like <code>ls -l | grep Tcl</code> or <code>ls -l | grep Tk</code> (but make sure any links you discover and intend to delete are to the 3rd party /Library locations, not to the /System/Library locations).</p>\n", "abstract": "I don't think simply deleting the frameworks is the best way to handle this issue.  If indeed the frameworks are from an ActiveTcl installation, other files and links probably should be cleaned up.  ActiveState provides an uninstall script to clean everything out; where to find it and how to use it is specified in the the ActiveTcl User Guide.  Note that the script location depends on the OS X version. If you've already deleted the frameworks and the uninstall script with them, you may want to look in /usr/local/bin for any executables (or stale links to executables) that ActiveTcl puts there (e.g., wish, tclsh and tkcon).  To find anything there that links to the deleted framework locations, you could use something like ls -l | grep Tcl or ls -l | grep Tk (but make sure any links you discover and intend to delete are to the 3rd party /Library locations, not to the /System/Library locations)."}]}, {"link": "https://stackoverflow.com/questions/20396253/how-to-show-all-errors-in-the-browser-on-flask-framework", "question": {"id": "20396253", "title": "How to show all errors in the browser on Flask framework?", "content": "<p>I use Flask framework and build a Python project. It shows all errors on the page when I run a python file on the SSH shell. </p>\n<p>After I installed WSGI to run the server automatically, it started not showing errors on the browser. It only shows \"Internal Server Error\" if there is an error.</p>\n<p>my python file has this option at the end.</p>\n<pre><code class=\"python\">if __name__ == '__main__':\n    app.run(host='0.0.0.0',port=5000,debug=True)\n</code></pre>\n<p>I would like to look at all errors to figure out problems. Is there a way to look at all errors on the browser?</p>\n", "abstract": "I use Flask framework and build a Python project. It shows all errors on the page when I run a python file on the SSH shell.  After I installed WSGI to run the server automatically, it started not showing errors on the browser. It only shows \"Internal Server Error\" if there is an error. my python file has this option at the end. I would like to look at all errors to figure out problems. Is there a way to look at all errors on the browser?"}, "answers": [{"id": 20419303, "score": 6, "vote": 0, "content": "<p>I finally noticed that it doesn't show errors on the browser because I run the server under WSGI mod.</p>\n<p>Python Flask shows detailed errors on the browser if I run the python file on the shell.</p>\n<pre><code class=\"python\">app.debug = True\n</code></pre>\n<p>This is a command to look at detailed errors. </p>\n<p>So, I had to turn off WSGI mod to run python file to look at detailed errors that Flask supported.</p>\n", "abstract": "I finally noticed that it doesn't show errors on the browser because I run the server under WSGI mod. Python Flask shows detailed errors on the browser if I run the python file on the shell. This is a command to look at detailed errors.  So, I had to turn off WSGI mod to run python file to look at detailed errors that Flask supported."}, {"id": 68317586, "score": 1, "vote": 0, "content": "<p>Please someone explain to me why the following approach doesnt display the erros in the browser which is what i want to do:</p>\n<pre><code class=\"python\">app = Flask(__name__)\napp.debug = True\napplication = app\n</code></pre>\n<p>Its very tedieous task to always have to <code>tail -f ../logs/error_log</code></p>\n", "abstract": "Please someone explain to me why the following approach doesnt display the erros in the browser which is what i want to do: Its very tedieous task to always have to tail -f ../logs/error_log"}]}, {"link": "https://stackoverflow.com/questions/3006041/django-message-doesnt-expire", "question": {"id": "3006041", "title": "Django message doesn&#39;t expire", "content": "<p>My code in the view:</p>\n<pre><code class=\"python\">   from django.contrib import messages\n   messages.add_message(request, messages.INFO, 'Hello world.')\n</code></pre>\n<p>I don't want to show this code to the user the second time if he/she refreshes again. How do I go about doing that? Messages don't seem to have any sort of expiry setting. There is documentation here:</p>\n<p><a href=\"http://docs.djangoproject.com/en/1.2/ref/contrib/messages/#expiration-of-messages\" rel=\"noreferrer\">http://docs.djangoproject.com/en/1.2/ref/contrib/messages/#expiration-of-messages</a> </p>\n", "abstract": "My code in the view: I don't want to show this code to the user the second time if he/she refreshes again. How do I go about doing that? Messages don't seem to have any sort of expiry setting. There is documentation here: http://docs.djangoproject.com/en/1.2/ref/contrib/messages/#expiration-of-messages "}, "answers": [{"id": 3006332, "score": 5, "vote": 0, "content": "<p>Messages are cleared as soon as you iterate messages (which should be available from <code>RequestContext</code>).</p>\n<p>So step one is making sure you're displaying messages! If you want to hold-off on displaying messages for a certain page, you'll perhaps want to investigate punching things into session but it's getting a bit messy for my liking. I can't think of any good reasons to delay the message for the next pageload.</p>\n<p>If you are displaying them and your messages are hanging on longer than you expect, perhaps you're re-adding them after they're being displayed. Try putting timestamps into your messages and you'll see if when they were written.</p>\n", "abstract": "Messages are cleared as soon as you iterate messages (which should be available from RequestContext). So step one is making sure you're displaying messages! If you want to hold-off on displaying messages for a certain page, you'll perhaps want to investigate punching things into session but it's getting a bit messy for my liking. I can't think of any good reasons to delay the message for the next pageload. If you are displaying them and your messages are hanging on longer than you expect, perhaps you're re-adding them after they're being displayed. Try putting timestamps into your messages and you'll see if when they were written."}]}, {"link": "https://stackoverflow.com/questions/44380022/uwsgi-signal-framework-signal-to-all-workers-being-sent-to-the-first-available", "question": {"id": "44380022", "title": "uWSGI Signal framework: signal to ALL workers being sent to the first available workers", "content": "<p>I am deploying a Flask app using uWSGI running in a docker container. In the app, which has 4 workers, there are some in-memory dictionaries that store \"cached values\" used by the application to prevent the need to query the DB everytime. These dicts are created when the workers are initialized and I am trying to use uWSGI's Signal Framework to force an update of the caches in all workers.</p>\n<p>My initial idea was:</p>\n<ol>\n<li>Define a function that updates the dictionaries in all workers.</li>\n<li>Register this function as a handler for a signal that targets all workers (target=\"workers\").</li>\n<li>Trigger the signal when needed.</li>\n</ol>\n<p>Example:</p>\n<pre><code class=\"python\">def update_dicts(sig):\n    # Update dictionaries here\n    print('Received signal {}: updating dicts in worker {}'.format(sig, uwsgi.worker_id()))\n\nuwsgi.register_signal(100, \"workers\", update_dicts)\n</code></pre>\n<p>and trigger the signal in any worker when needed:</p>\n<pre><code class=\"python\">uwsgi.signal(100)\n</code></pre>\n<p>However, even with the signal targeting \"workers\", the signal is received and handled by only one worker, <strong>as if it had \"worker\" as target</strong>.</p>\n<p>I also tried registering one signal for each worker (using target \"workerN\") and triggering all of them, but the signals are being sent to any worker, and not to the specified worker:</p>\n<pre><code class=\"python\"># Each worker executes this \n# Signal registrations: 111, 112, 113, 114\nuwsgi.register_signal(110 + uwsgi.worker_id(), \"worker{}\".format(uwsgi.worker_id()), update_service_dicts)\n\n# To trigger the signals:\nfor i in [1,2,3,4]:\n    uwsgi.signal(110 + i)\n</code></pre>\n<p>Application's log:</p>\n<pre><code class=\"python\">[uwsgi-signal] signum 113 registered (wid: 3 modifier1: 0 target: worker3)\n[uwsgi-signal] signum 112 registered (wid: 2 modifier1: 0 target: worker2)\n[uwsgi-signal] signum 114 registered (wid: 4 modifier1: 0 target: worker4)\n[uwsgi-signal] signum 111 registered (wid: 1 modifier1: 0 target: worker1)\nMon Jun  5 18:17:51 2017 - error managing signal 112 on worker 4\nReceived signal 111: updating dicts in worker 1.\nReceived signal 113: updating dicts in worker 3.\nReceived signal 114: updating dicts in worker 4.\n</code></pre>\n<p>Triggering another time:</p>\n<pre><code class=\"python\">Mon Jun  5 18:18:01 2017 - error managing signal 111 on worker 4\nMon Jun  5 18:18:01 2017 - error managing signal 113 on worker 4\nMon Jun  5 18:18:01 2017 - error managing signal 112 on worker 4\nReceived signal 114: updating dicts in worker 4.\n</code></pre>\n<p>Am I missing something here or are these targets not yet implemented?</p>\n<p>I am currently using the following uwsgi configurations:</p>\n<pre><code class=\"python\">[uwsgi]\n\ndie-on-term = true\n\nhttp = 0.0.0.0:9090\nmount = /=/path/to/my/app/file.py\ncallable = app\nchdir = /path/to/my/app/\n\n; enable the stats server on port 9191\nstats = 0.0.0.0:9191\n\n; log configuration\nlogto = /var/log/uwsgi/uwsgi.log\n\n; spawn 2 threads in 4 processes (concurrency level: 8)\nprocesses = 4\nthreads = 2\n\n; drop privileges\nuid = pmais\ngid = pmais\n\n; Loads apps independently to solve error related to DB connection:\n;     \"SSL error: decryption failed or bad record mac uwsgi\"\n; Reference: http://stackoverflow.com/a/22753269\nlazy-apps = true\n\ncatch-exceptions = true\n</code></pre>\n", "abstract": "I am deploying a Flask app using uWSGI running in a docker container. In the app, which has 4 workers, there are some in-memory dictionaries that store \"cached values\" used by the application to prevent the need to query the DB everytime. These dicts are created when the workers are initialized and I am trying to use uWSGI's Signal Framework to force an update of the caches in all workers. My initial idea was: Example: and trigger the signal in any worker when needed: However, even with the signal targeting \"workers\", the signal is received and handled by only one worker, as if it had \"worker\" as target. I also tried registering one signal for each worker (using target \"workerN\") and triggering all of them, but the signals are being sent to any worker, and not to the specified worker: Application's log: Triggering another time: Am I missing something here or are these targets not yet implemented? I am currently using the following uwsgi configurations:"}, "answers": [{"id": 64782343, "score": 1, "vote": 0, "content": "<p>I had similar problems and changed the signalling to 'active-workers' instead of 'workers', as the signalling queue may overflow if non-active workers are signalled. See also <a href=\"https://github.com/unbit/uwsgi/issues/775\" rel=\"nofollow noreferrer\">https://github.com/unbit/uwsgi/issues/775</a></p>\n<pre><code class=\"python\">def update_dicts(sig):\n    # Update dictionaries here\n    print('Received signal {}: updating dicts in worker {}'.format(sig, uwsgi.worker_id()))\n    \n    uwsgi.register_signal(100, \"active-workers\", update_dicts)\n</code></pre>\n<p>Also be aware that using 'lazy-apps' will load the app in the workers, possibly registering the signal multiple times.</p>\n", "abstract": "I had similar problems and changed the signalling to 'active-workers' instead of 'workers', as the signalling queue may overflow if non-active workers are signalled. See also https://github.com/unbit/uwsgi/issues/775 Also be aware that using 'lazy-apps' will load the app in the workers, possibly registering the signal multiple times."}, {"id": 52897343, "score": 0, "vote": 0, "content": "<p>It doesn't seem like uWSGI provides much internal data exchange mechanisms. I mean, they use Redis in their examples themselves.</p>\n<p>However, in your case, uWSGI does come with a caching framework. See if it helps.</p>\n<blockquote>\n<p><a href=\"https://uwsgi-docs.readthedocs.io/en/latest/Caching.html\" rel=\"nofollow noreferrer\">https://uwsgi-docs.readthedocs.io/en/latest/Caching.html</a></p>\n</blockquote>\n", "abstract": "It doesn't seem like uWSGI provides much internal data exchange mechanisms. I mean, they use Redis in their examples themselves. However, in your case, uWSGI does come with a caching framework. See if it helps. https://uwsgi-docs.readthedocs.io/en/latest/Caching.html"}]}, {"link": "https://stackoverflow.com/questions/1003131/python-web-framework-large-project", "question": {"id": "1003131", "title": "python web framework large project", "content": "<p>I need your advices to choose a Python Web Framework for developing a large project:</p>\n<p>Database (Postgresql)will have at least 500 tables, most of them with a composite primary\nkey, lots of constraints, indexes &amp; queries. About 1,500 views for starting. The project belongs to the financial area. Alwasy new requirements are coming.</p>\n<p>Will a ORM be helpful?</p>\n", "abstract": "I need your advices to choose a Python Web Framework for developing a large project: Database (Postgresql)will have at least 500 tables, most of them with a composite primary\nkey, lots of constraints, indexes & queries. About 1,500 views for starting. The project belongs to the financial area. Alwasy new requirements are coming. Will a ORM be helpful?"}, "answers": [{"id": 1003161, "score": 12, "vote": 0, "content": "<p>Django has been used by many large organizations (Washington Post, etc.) and can connect with Postgresql easily enough.  I use it fairly often and have had no trouble.</p>\n", "abstract": "Django has been used by many large organizations (Washington Post, etc.) and can connect with Postgresql easily enough.  I use it fairly often and have had no trouble."}, {"id": 1003173, "score": 8, "vote": 0, "content": "<p>Yes.  An ORM is essential for mapping SQL stuff to objects.  </p>\n<p>You have three choices.</p>\n<ol>\n<li><p>Use someone else's ORM</p></li>\n<li><p>Roll your own.</p></li>\n<li><p>Try to execute low-level SQL queries and pick out the fields they want from the result set.  This is -- actually -- a kind of ORM with the mappings scattered throughout the applications.  It may be fast to execute and appear easy to develop, but it is a maintenance nightmare.</p></li>\n</ol>\n<p>If you're designing the tables first, any ORM will be painful.  For example, \"composite primary key\" is generally a bad idea, and with an ORM it's almost always a bad idea.  You'll need to have a surrogate primary key.  Then you can have all the composite keys with indexes you want.  They just won't be \"primary\".</p>\n<p>If you design the objects first, then work out tables that will implement the objects, the ORM will be pleasant, simple and will run quickly, also.</p>\n", "abstract": "Yes.  An ORM is essential for mapping SQL stuff to objects.   You have three choices. Use someone else's ORM Roll your own. Try to execute low-level SQL queries and pick out the fields they want from the result set.  This is -- actually -- a kind of ORM with the mappings scattered throughout the applications.  It may be fast to execute and appear easy to develop, but it is a maintenance nightmare. If you're designing the tables first, any ORM will be painful.  For example, \"composite primary key\" is generally a bad idea, and with an ORM it's almost always a bad idea.  You'll need to have a surrogate primary key.  Then you can have all the composite keys with indexes you want.  They just won't be \"primary\". If you design the objects first, then work out tables that will implement the objects, the ORM will be pleasant, simple and will run quickly, also."}, {"id": 1003423, "score": 5, "vote": 0, "content": "<p>Since most of your tables have composite primary keys, you'll want an ORM that supports that functionality. Django's default ORM does not support composite primary keys. SQLAlchemy does have that support (<a href=\"http://www.sqlalchemy.org/features.html\" rel=\"nofollow noreferrer\">http://www.sqlalchemy.org/features.html</a>). </p>\n<p>The TurboGears framework uses SQLAlchemy as its default ORM. Pylons lets you use SQLAlchemy as well. </p>\n<p>There are also ways to get Django to use SQLAlchemy, though I've not tried them myself. I prefer to use Django myself, but given your needs, I'd go with Pylons or TurboGears rather then shoe-horning a different ORM into the system.</p>\n", "abstract": "Since most of your tables have composite primary keys, you'll want an ORM that supports that functionality. Django's default ORM does not support composite primary keys. SQLAlchemy does have that support (http://www.sqlalchemy.org/features.html).  The TurboGears framework uses SQLAlchemy as its default ORM. Pylons lets you use SQLAlchemy as well.  There are also ways to get Django to use SQLAlchemy, though I've not tried them myself. I prefer to use Django myself, but given your needs, I'd go with Pylons or TurboGears rather then shoe-horning a different ORM into the system."}, {"id": 1005238, "score": 3, "vote": 0, "content": "<p>For such horrid data-layer complexity as 500 tables with 1500 views, differently from most answers, I would personally prefer to stick with SQL (PostgreSQL offers a really excellent implementation thereof, expecially in the new 8.4 version which you should really lobby for if you have any chance); the only ORM I would [grudgingly] accept is SQLAlchemy (one of the few ORBs I don't really mind -- but the main added value is portability to different DBMS: if you're committed to just one, and in a project of this DB complexity you'd better be, then my personal opinion is that <em>any</em> ORM is just overhead, as the data-access layer developers will need deep familiarity with the specific DBMS to crawl towards acceptable performance).</p>\n<p>Having picked \"raw psycopg2\" or SQLAlchemy as the technology for my data-access layer, that would rule out Django (which in my experience only works well with its own ORM -- but that's not suitable for a project of such DB complexity, IMNSHO). I'd go with Werkzeug, personally, as the framework most suitable for highly complex projects requiring ridiculous amounts of flexibility and power -- though Pylons and Turbogears 2 on top of it may be acceptable as a fall-back if the team just doesn't have the web app experience and skill it takes to make truly beautiful music with a flexible framework such as Werkzeug.</p>\n<p>Last but not least, I'd strongly lobby for Dojo for the presentation layer on the client -- a rich and strongly structured Javascript framework, offering superbly designed functionality for \"local data\", host access, &amp;c, optimized for the best that each of several browsers (and plug-ins such as Gears) can offer, as well as advanced UI functionality, seems likeliest to lighten the heavy development burden on the back-end team (in fact, I'd strongly recommend looking at offering an essentially RESTful interface on the server side, and delegate all presentation work to Dojo on the client -- see <a href=\"http://www.thinserverarchitecture.com/\" rel=\"nofollow noreferrer\">this site</a> for more, except I'd be thinking of JSON rather than XML as the preferred interchange format). But, I'll readily admit to knowing far less about the UI side of things than about back-ends, business logic and overall architecture, so take this last paragraph for what it's worth!-)</p>\n", "abstract": "For such horrid data-layer complexity as 500 tables with 1500 views, differently from most answers, I would personally prefer to stick with SQL (PostgreSQL offers a really excellent implementation thereof, expecially in the new 8.4 version which you should really lobby for if you have any chance); the only ORM I would [grudgingly] accept is SQLAlchemy (one of the few ORBs I don't really mind -- but the main added value is portability to different DBMS: if you're committed to just one, and in a project of this DB complexity you'd better be, then my personal opinion is that any ORM is just overhead, as the data-access layer developers will need deep familiarity with the specific DBMS to crawl towards acceptable performance). Having picked \"raw psycopg2\" or SQLAlchemy as the technology for my data-access layer, that would rule out Django (which in my experience only works well with its own ORM -- but that's not suitable for a project of such DB complexity, IMNSHO). I'd go with Werkzeug, personally, as the framework most suitable for highly complex projects requiring ridiculous amounts of flexibility and power -- though Pylons and Turbogears 2 on top of it may be acceptable as a fall-back if the team just doesn't have the web app experience and skill it takes to make truly beautiful music with a flexible framework such as Werkzeug. Last but not least, I'd strongly lobby for Dojo for the presentation layer on the client -- a rich and strongly structured Javascript framework, offering superbly designed functionality for \"local data\", host access, &c, optimized for the best that each of several browsers (and plug-ins such as Gears) can offer, as well as advanced UI functionality, seems likeliest to lighten the heavy development burden on the back-end team (in fact, I'd strongly recommend looking at offering an essentially RESTful interface on the server side, and delegate all presentation work to Dojo on the client -- see this site for more, except I'd be thinking of JSON rather than XML as the preferred interchange format). But, I'll readily admit to knowing far less about the UI side of things than about back-ends, business logic and overall architecture, so take this last paragraph for what it's worth!-)"}, {"id": 1003329, "score": 2, "vote": 0, "content": "<p>Depending on what you want to do, you actually have a few possible frameworks :</p>\n<p>[Django] Big, strong (to the limit of what a python framework can be), and the older in the race. Used by a few 'big' sites around the world ([Django sites]). Still is a bit of an overkill for almost everything and with a deprecated coding approach.</p>\n<p>[Turbogears] is a recent framework based on Pylons. Don't know much about it, but got many good feedbacks from friends who tried it.</p>\n<p>[Pylons] ( which Turbogears2 is based on ). Often saw at the \"PHP of Python\" , it allow very quick developements from scratch. Even if it can seem inappropriate for big projects, it's often the faster and easier way to go.</p>\n<p>The last option is [Zope] ( with or without Plone ), but Plone is way to slow, and Zope learning curve is way too long ( not even speaking in replacing the ZODB with an SQL connector ) so if you don't know the framework yet, just forget about it.</p>\n<p>And yes, An ORM seem mandatory for a project of this size. For Django, you'll have to handle migration to their database models (don't know how hard it is to plug SQLAlchemy in Django). For turbogears and Pylons, the most suitable solution is [SQLAlchemy], which is actually the most complete ( and rising ) ORM for python. For zope ... well, nevermind</p>\n<p>Last but not least, I'm not sure you're starting on a good basis for your project. 500 tables on any python framework would scare me to death. A boring but rigid language such as java (hibernate+spring+tapestry or so) seem really more appropriate.</p>\n", "abstract": "Depending on what you want to do, you actually have a few possible frameworks : [Django] Big, strong (to the limit of what a python framework can be), and the older in the race. Used by a few 'big' sites around the world ([Django sites]). Still is a bit of an overkill for almost everything and with a deprecated coding approach. [Turbogears] is a recent framework based on Pylons. Don't know much about it, but got many good feedbacks from friends who tried it. [Pylons] ( which Turbogears2 is based on ). Often saw at the \"PHP of Python\" , it allow very quick developements from scratch. Even if it can seem inappropriate for big projects, it's often the faster and easier way to go. The last option is [Zope] ( with or without Plone ), but Plone is way to slow, and Zope learning curve is way too long ( not even speaking in replacing the ZODB with an SQL connector ) so if you don't know the framework yet, just forget about it. And yes, An ORM seem mandatory for a project of this size. For Django, you'll have to handle migration to their database models (don't know how hard it is to plug SQLAlchemy in Django). For turbogears and Pylons, the most suitable solution is [SQLAlchemy], which is actually the most complete ( and rising ) ORM for python. For zope ... well, nevermind Last but not least, I'm not sure you're starting on a good basis for your project. 500 tables on any python framework would scare me to death. A boring but rigid language such as java (hibernate+spring+tapestry or so) seem really more appropriate."}, {"id": 2246687, "score": 1, "vote": 0, "content": "<p>I would absolutely recommend Repoze.bfg with SQLAlchemy for what you describe. I've done projects now in Django, TurboGears 1, TurboGears 2, Pylons, and dabbled in pure Zope3. BFG is far and away the framework most designed to accomodate a project growing in ways you don't anticipate at the beginning, but is far more lightweight and pared down than Grok or Zope 3. Also, the docs are the best technical docs of all of them, not the <em>easiest</em>, but the ones that answer the hard questions you're going to encounter the best. I'm currently doing a similar thing where we are overhauling a bunch of legacy databases into a new web deliverable app and we're using BFG, some Pylons, Zope 3 adapters, Genshi for templating, SQLAlchemy, and Dojo for the front end. We couldn't be happier with BFG, and it's working out great. BFGs classes as views that are actually zope multi-adapters is absolutely perfect for being able to override only very specific bits for certain domain resources. And the complete lack of magic globals anywhere makes testing and packaging the easiest we've had with any framework.</p>\n<p>ymmv!</p>\n", "abstract": "I would absolutely recommend Repoze.bfg with SQLAlchemy for what you describe. I've done projects now in Django, TurboGears 1, TurboGears 2, Pylons, and dabbled in pure Zope3. BFG is far and away the framework most designed to accomodate a project growing in ways you don't anticipate at the beginning, but is far more lightweight and pared down than Grok or Zope 3. Also, the docs are the best technical docs of all of them, not the easiest, but the ones that answer the hard questions you're going to encounter the best. I'm currently doing a similar thing where we are overhauling a bunch of legacy databases into a new web deliverable app and we're using BFG, some Pylons, Zope 3 adapters, Genshi for templating, SQLAlchemy, and Dojo for the front end. We couldn't be happier with BFG, and it's working out great. BFGs classes as views that are actually zope multi-adapters is absolutely perfect for being able to override only very specific bits for certain domain resources. And the complete lack of magic globals anywhere makes testing and packaging the easiest we've had with any framework. ymmv!"}, {"id": 1003218, "score": 0, "vote": 0, "content": "<blockquote>\n<p>Alwasy new requirements are coming.</p>\n</blockquote>\n<p>So what you really need is a framework that will allow you to adapt rapidly to changing specs.</p>\n<p>From personal experience, I can only discuss django, which is great because it allows you to get up and running quickly.  </p>\n<p>If you stick to its ORM, you will have a pretty easy time getting your models fleshed out and connected in useful ways.  You will need to familiarize yourself with a database migration tool, because Django does not have one built in.  <a href=\"http://code.google.com/p/dmigrations/\" rel=\"nofollow noreferrer\">dmigrations</a> seems to be a leading tool for this.</p>\n<p>Another choice for ORM's is <a href=\"http://www.sqlalchemy.org/\" rel=\"nofollow noreferrer\">SQLAlchemy</a>, which appears to be a bit more mature out of the box. </p>\n", "abstract": "Alwasy new requirements are coming. So what you really need is a framework that will allow you to adapt rapidly to changing specs. From personal experience, I can only discuss django, which is great because it allows you to get up and running quickly.   If you stick to its ORM, you will have a pretty easy time getting your models fleshed out and connected in useful ways.  You will need to familiarize yourself with a database migration tool, because Django does not have one built in.  dmigrations seems to be a leading tool for this. Another choice for ORM's is SQLAlchemy, which appears to be a bit more mature out of the box. "}]}, {"link": "https://stackoverflow.com/questions/7611759/do-i-need-to-use-a-web-framework-for-a-simple-website", "question": {"id": "7611759", "title": "Do I need to use a web framework for a simple website?", "content": "<p>The site won't be that complicated and will resemble a modern blog (users, messages, news and other similar features).<br/>\nDo I need to use a framework for this, and if so, which is best?<br/>\nPyramid, Django?</p>\n", "abstract": "The site won't be that complicated and will resemble a modern blog (users, messages, news and other similar features).\nDo I need to use a framework for this, and if so, which is best?\nPyramid, Django?"}, "answers": [{"id": 7612742, "score": 8, "vote": 0, "content": "<p>You certainly don't need a webframework to create a simple website.  Given that you're new to python and interested in building a python website, I imagine this implies: you're interested in learning python.  If you're exclusively interested in learning django-python, there's no reason you can't jump in to django, as Ronak said, of course.  He's right.  It has a lot of documentation.  But it will make for somewhat of an odd intro to python.</p>\n<p>If I were in your shoes, I'd either start making some offline programs first, or consider an ultra-lightweight framework.  Many would advocate web2py or pyramid for ultralightweight.  I might consider going even lighter.  Something like Bottle, where you're more or less just pairing functions with urls.  This way you can at least do a bit of hacking/trial-and-error, instead of launching right into django.  </p>\n<p>It's not that django doesn't use python-- it will tell you many times that it is in fact 'just python.'  But it's adapted at its core to be used in a large business setting (the chicago something or other online, i think).  So it enforces various rules that are helpful in managing many different employees working on a project together.  You may or may not wish for this kind of 'help.'  It also means the scale of projects is assumed to be large and the time-horizon, limitless.  If you want to see how a python dictionary works, you may not want to spend a long time configuring settings and creating the pseudo-static-typing you need for your database, and so on, just to execute your project and see a result.</p>\n<p>I realize I will automatically get downvoted for this, but I believe it to be sound advice.</p>\n", "abstract": "You certainly don't need a webframework to create a simple website.  Given that you're new to python and interested in building a python website, I imagine this implies: you're interested in learning python.  If you're exclusively interested in learning django-python, there's no reason you can't jump in to django, as Ronak said, of course.  He's right.  It has a lot of documentation.  But it will make for somewhat of an odd intro to python. If I were in your shoes, I'd either start making some offline programs first, or consider an ultra-lightweight framework.  Many would advocate web2py or pyramid for ultralightweight.  I might consider going even lighter.  Something like Bottle, where you're more or less just pairing functions with urls.  This way you can at least do a bit of hacking/trial-and-error, instead of launching right into django.   It's not that django doesn't use python-- it will tell you many times that it is in fact 'just python.'  But it's adapted at its core to be used in a large business setting (the chicago something or other online, i think).  So it enforces various rules that are helpful in managing many different employees working on a project together.  You may or may not wish for this kind of 'help.'  It also means the scale of projects is assumed to be large and the time-horizon, limitless.  If you want to see how a python dictionary works, you may not want to spend a long time configuring settings and creating the pseudo-static-typing you need for your database, and so on, just to execute your project and see a result. I realize I will automatically get downvoted for this, but I believe it to be sound advice."}, {"id": 7612176, "score": 3, "vote": 0, "content": "<p>It depends on what kind of website you are planning to come up with.  If the website is going to be just a set of static HTML files, then you don't really need a framework.  But if your website will have lots of dynamic content that will get updated on regular basis, you should go with some framework.  That will make your life maintaining the website much more simpler.</p>\n<p>Django is the most popular framework written in Python.  It has very good documentation and a strong community base too.</p>\n", "abstract": "It depends on what kind of website you are planning to come up with.  If the website is going to be just a set of static HTML files, then you don't really need a framework.  But if your website will have lots of dynamic content that will get updated on regular basis, you should go with some framework.  That will make your life maintaining the website much more simpler. Django is the most popular framework written in Python.  It has very good documentation and a strong community base too."}, {"id": 7611778, "score": 2, "vote": 0, "content": "<p>Go with Django - 10,000 Elvis fans can't be wrong.</p>\n<p>Or roll your own from scratch.  You'll learn a lot, know everything about how you site works, and better appreciate what a framework does for you.</p>\n", "abstract": "Go with Django - 10,000 Elvis fans can't be wrong. Or roll your own from scratch.  You'll learn a lot, know everything about how you site works, and better appreciate what a framework does for you."}, {"id": 11603886, "score": 1, "vote": 0, "content": "<p>As RonakG first pointed, it all depends on the kind of website you intend to have up and running. Actually, your question is too general for a single, definitive answer. There are more aspects to consider other than just being in python. For example, deadlines. This means considering the learning curve to achieve your results. If you don't have much time, a steep learning curve (time to learn it in order to develop it) is certainly something you will want to avoid. Perhaps you already develop in other languages, and need integration and/or migration support, need scalability, reusability, etc, etc, etc.</p>\n<p>Another thing that is not so clear in your question is what you mean by \"<em>The site won't be that complicated and will resemble a modern blog (users, messages, news and other similar features)</em>\". If it really resembles just a modern blog, with users, messages and news, you could google for CMS (Content Management Systems). There are many options available, that could make you have your site up and running in almost no-time. All you'll have to learn is how to customize whatever it has to as to comply to your needs.</p>\n<p>That said, if you prefer python, there are some good CMSs available which you can develop your site fast, like Plone. And if you prefer Django, there's Django CMS and there's the excellent Pinax project, which takes the django code reusability to deliver you sample fully customizable, complete websites.</p>\n", "abstract": "As RonakG first pointed, it all depends on the kind of website you intend to have up and running. Actually, your question is too general for a single, definitive answer. There are more aspects to consider other than just being in python. For example, deadlines. This means considering the learning curve to achieve your results. If you don't have much time, a steep learning curve (time to learn it in order to develop it) is certainly something you will want to avoid. Perhaps you already develop in other languages, and need integration and/or migration support, need scalability, reusability, etc, etc, etc. Another thing that is not so clear in your question is what you mean by \"The site won't be that complicated and will resemble a modern blog (users, messages, news and other similar features)\". If it really resembles just a modern blog, with users, messages and news, you could google for CMS (Content Management Systems). There are many options available, that could make you have your site up and running in almost no-time. All you'll have to learn is how to customize whatever it has to as to comply to your needs. That said, if you prefer python, there are some good CMSs available which you can develop your site fast, like Plone. And if you prefer Django, there's Django CMS and there's the excellent Pinax project, which takes the django code reusability to deliver you sample fully customizable, complete websites."}]}, {"link": "https://stackoverflow.com/questions/29055172/port-proxy-for-nginx-gunicorn-django-rest-framework-app", "question": {"id": "29055172", "title": "Port proxy for nginx/gunicorn Django Rest Framework app", "content": "<p>I am using gunicorn and nginx to route incoming requests to my Django Rest Framework API.</p>\n<p>gunicorn is running on port 8001, nginx is running on port 8000.  nginx is configured to forward requests to gunicorn, as per the following config file:</p>\n<pre><code class=\"python\">server {\n    listen   8000;\n    server_name ec2-ww.xx.yy.zz.compute-1.amazonaws.com; # public address of my server, redacted for stack overflow\n\n    access_log  /vol/logs/ftv.access.log;\n\n    location ^~ /static/  {\n       alias /vol/server/ftv/static/;\n       autoindex on;\n    }\n\n    location ~* ^.+\\.(jpg|jpeg|gif|png|ico|css|zip|tgz|gz|rar|bz2|doc|xls|exe|pdf|ppt|txt|tar|mid|midi|wav|bmp|rtf|js|mov) {\n        #access_log   off;\n        expires      30d;\n    }\n\n    location / {\n       proxy_pass_header Server;\n       proxy_redirect off;\n       proxy_set_header X-Real-IP $remote_addr;\n       proxy_set_header X-Scheme $scheme;\n       proxy_connect_timeout 10;\n       proxy_read_timeout 10;\n\n       proxy_set_header Host $host:8000;\n       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; \n\n       proxy_pass http://ec2-ww.xx.yy.zz.compute-1.amazonaws.com:8001/;\n    }\n}\n</code></pre>\n<p>The problem I'm having is that DRF's HyperlinkedModelSerializer returns url's that point to the 8001 port, instead of the 8000 port.  This is (I guess) because Django Rest Framework, unaware of gunicorn or nginx, just sees the request coming in on port 8001, and so it forms its URL hyperlinks based upon that port.</p>\n<p>I must be missing some configuration option in my nginx conf file, or in settings.py (or both) but, amazingly (to me), this question hasn't been asked/answered before -- I've been searching.  Any help from DRF or nginx experts would be very much appreciated!</p>\n", "abstract": "I am using gunicorn and nginx to route incoming requests to my Django Rest Framework API. gunicorn is running on port 8001, nginx is running on port 8000.  nginx is configured to forward requests to gunicorn, as per the following config file: The problem I'm having is that DRF's HyperlinkedModelSerializer returns url's that point to the 8001 port, instead of the 8000 port.  This is (I guess) because Django Rest Framework, unaware of gunicorn or nginx, just sees the request coming in on port 8001, and so it forms its URL hyperlinks based upon that port. I must be missing some configuration option in my nginx conf file, or in settings.py (or both) but, amazingly (to me), this question hasn't been asked/answered before -- I've been searching.  Any help from DRF or nginx experts would be very much appreciated!"}, "answers": [{"id": 29064077, "score": 10, "vote": 0, "content": "<p>Changing </p>\n<pre><code class=\"python\">proxy_set_header Host $host:8000;\n</code></pre>\n<p>to</p>\n<pre><code class=\"python\">proxy_set_header Host $http_host;\n</code></pre>\n<p>in the nginx configuration file seems to have fixed the issue -- </p>\n", "abstract": "Changing  to in the nginx configuration file seems to have fixed the issue -- "}, {"id": 53629213, "score": 0, "vote": 0, "content": "<p>Changing</p>\n<pre><code class=\"python\">proxy_set_header Host $host:8000;\n</code></pre>\n<p>to</p>\n<pre><code class=\"python\">proxy_set_header Host $http_host;\n</code></pre>\n<p>worked for me.</p>\n<p>Also I had to add host name to <code>ALLOWED_HOST</code> field in <code>settings.py</code> file.</p>\n", "abstract": "Changing to worked for me. Also I had to add host name to ALLOWED_HOST field in settings.py file."}, {"id": 59932065, "score": 0, "vote": 0, "content": "<p>I am using wsgi, nginx and Django.\nActually i want to redirect the request on multiple port on same IP address.\nHow to do this.</p>\n<p>I have one url, for example \"mysite.com\". When its called i want server to process request on different port. Every thing will be same like only one instance, same url but server should redirect the request on different port. \nmysite.com:8080, mysite.com:8001, mysite.com:8002, etc for load balancing. How to do it in nginx.</p>\n", "abstract": "I am using wsgi, nginx and Django.\nActually i want to redirect the request on multiple port on same IP address.\nHow to do this. I have one url, for example \"mysite.com\". When its called i want server to process request on different port. Every thing will be same like only one instance, same url but server should redirect the request on different port. \nmysite.com:8080, mysite.com:8001, mysite.com:8002, etc for load balancing. How to do it in nginx."}]}, {"link": "https://stackoverflow.com/questions/6063140/is-there-an-open-source-framework-for-building-desktop-apps-that-run-in-the-brow", "question": {"id": "6063140", "title": "Is there an Open Source framework for building desktop apps that run in the browser?", "content": "<p>I'm interested in starting an Open Source project that could be packaged as a desktop application for non-technical end users, but would run in the browser - one existing model would be <a href=\"http://code.google.com/p/google-refine/\" rel=\"nofollow\">Google Refine</a>. I'm looking for an <strong>existing, Open-Source framework</strong> that would support this - <em>not</em> the UI portion, but the lower-level application framework, including:</p>\n<ul>\n<li>Data persistence (preferably via some sort of ORM)</li>\n<li>Desktop-based webserver (I'm assuming this would be necessary to support a browser-based UI)</li>\n<li>Filesystem access</li>\n<li>Security/sandboxing (e.g. to address the XSS/CSRF issues of running your own webserver)</li>\n<li>Support for basic web app elements (e.g. URL handling, templating) or for another web app framework that could handle this</li>\n<li>Packaging the project for one-click installation (i.e. the user should not need to have Python, node, or other technologies installed)</li>\n</ul>\n<p>I'm hoping to find a framework that sets up a significant amount of this for me, the way that Django sets up web applications - not just a technology that would support writing this framework myself.</p>\n<p>My ideal framework would be <strong>cross-platform</strong> and <strong>cross-browser</strong>, and would be written in either Python, Java, or Javascript (running on node.js or something similar). Does a framework like this exist?</p>\n", "abstract": "I'm interested in starting an Open Source project that could be packaged as a desktop application for non-technical end users, but would run in the browser - one existing model would be Google Refine. I'm looking for an existing, Open-Source framework that would support this - not the UI portion, but the lower-level application framework, including: I'm hoping to find a framework that sets up a significant amount of this for me, the way that Django sets up web applications - not just a technology that would support writing this framework myself. My ideal framework would be cross-platform and cross-browser, and would be written in either Python, Java, or Javascript (running on node.js or something similar). Does a framework like this exist?"}, "answers": [{"id": 6065331, "score": 5, "vote": 0, "content": "<p>You should be able to build a desktop app that runs in the browser using <a href=\"http://www.web2py.com\" rel=\"noreferrer\">web2py</a>. Web2py requires no installation or configuration, has no dependencies, and includes a built-in web server and the SQLite RDBMS (as well as a database abstraction layer). The Windows and Mac binaries even include the Python interpreter, so no need to install Python (you can even run it off a thumb drive). You can pack your application with a web2py distribution, and your users will simply have to unzip it, click a single file to start it, and your app will launch in their browser. You can even distribute your applications as binaries, as explained <a href=\"http://web2py.com/book/default/chapter/12#How-to-Distribute-your-Applications-as-Binaries\" rel=\"noreferrer\">here</a>.</p>\n<p>The <a href=\"http://web2py.com/book/\" rel=\"noreferrer\">documentation</a> is excellent, and if you have any questions, there's a very helpful and responsive <a href=\"https://groups.google.com/forum/?fromgroups#!forum/web2py\" rel=\"noreferrer\">mailing list</a>.</p>\n<p>If you want to start playing with it, just <a href=\"http://web2py.com/examples/default/download\" rel=\"noreferrer\">download</a> it, unzip it, and click the web2py.exe (Windows) or web2py.app (Mac) file -- that will launch the \"welcome\" (scaffolding) app in your browser. If there's something it's lacking that would be helpful for your use case, ask on the list -- if the change is easy and useful, it will probably get added.</p>\n", "abstract": "You should be able to build a desktop app that runs in the browser using web2py. Web2py requires no installation or configuration, has no dependencies, and includes a built-in web server and the SQLite RDBMS (as well as a database abstraction layer). The Windows and Mac binaries even include the Python interpreter, so no need to install Python (you can even run it off a thumb drive). You can pack your application with a web2py distribution, and your users will simply have to unzip it, click a single file to start it, and your app will launch in their browser. You can even distribute your applications as binaries, as explained here. The documentation is excellent, and if you have any questions, there's a very helpful and responsive mailing list. If you want to start playing with it, just download it, unzip it, and click the web2py.exe (Windows) or web2py.app (Mac) file -- that will launch the \"welcome\" (scaffolding) app in your browser. If there's something it's lacking that would be helpful for your use case, ask on the list -- if the change is easy and useful, it will probably get added."}, {"id": 6063362, "score": 3, "vote": 0, "content": "<p>Take a look at <a href=\"https://launchpad.net/pyjavascriptcore\" rel=\"nofollow\">PyJavascriptCore</a> and the PyGTK Webkit implementation which will let you make an application in HTML, CSS, and Javascript. For the backend you can either use Python since with PyJavascriptCore you can call Javascript functions from Python and vice versa, or you can combine with a WSGI framework like Flask to do Ajax calls to the app's local server.</p>\n", "abstract": "Take a look at PyJavascriptCore and the PyGTK Webkit implementation which will let you make an application in HTML, CSS, and Javascript. For the backend you can either use Python since with PyJavascriptCore you can call Javascript functions from Python and vice versa, or you can combine with a WSGI framework like Flask to do Ajax calls to the app's local server."}, {"id": 6065728, "score": 1, "vote": 0, "content": "<p>Have a look at <a href=\"http://pyjs.org/\" rel=\"nofollow\">pyjamas</a></p>\n", "abstract": "Have a look at pyjamas"}]}, {"link": "https://stackoverflow.com/questions/7522062/django-shopping-site-similar-to-ebay", "question": {"id": "7522062", "title": "Django: Shopping site similar to eBay", "content": "<p>I need to build a site similar to ebay. I've found some \"e-commerce\" packages for Django but those are not related to the \"C2C\" model from eBay.</p>\n<p>I've tried these:</p>\n<p><a href=\"https://www.django-shop.org/\" rel=\"nofollow\">https://www.django-shop.org/</a></p>\n<p><a href=\"http://www.satchmoproject.com/\" rel=\"nofollow\">http://www.satchmoproject.com/</a></p>\n<p>Do you know any app (package, framework) that can deal with it? Thank you very much!</p>\n", "abstract": "I need to build a site similar to ebay. I've found some \"e-commerce\" packages for Django but those are not related to the \"C2C\" model from eBay. I've tried these: https://www.django-shop.org/ http://www.satchmoproject.com/ Do you know any app (package, framework) that can deal with it? Thank you very much!"}, "answers": [{"id": 7522758, "score": 5, "vote": 0, "content": "<p>While this is a frequently asked-for application, it doesn't appear as if anyone has actually implemented it.</p>\n<p>It doesn't seem like that hard a project.  You would need a Profile app to track the user's reputation, a messaging app (easily available), a Products app (users offer products, users bid on products, at a given time the bidding is closed, etc...).  </p>\n<p>A weekend for the basics, I think.  Rip the Hell out of Satchmo for your transaction handling, and get a real authorization account through Authorize.NET, not some Google Checkout or Paypal thingy.  You'd be on the hook for one big fraud risk, though, which is why auction sites are generally for the Big Kids.</p>\n", "abstract": "While this is a frequently asked-for application, it doesn't appear as if anyone has actually implemented it. It doesn't seem like that hard a project.  You would need a Profile app to track the user's reputation, a messaging app (easily available), a Products app (users offer products, users bid on products, at a given time the bidding is closed, etc...).   A weekend for the basics, I think.  Rip the Hell out of Satchmo for your transaction handling, and get a real authorization account through Authorize.NET, not some Google Checkout or Paypal thingy.  You'd be on the hook for one big fraud risk, though, which is why auction sites are generally for the Big Kids."}, {"id": 17645517, "score": 1, "vote": 0, "content": "<p>Here is a near similar solution for you: <a href=\"https://github.com/StephenPower/CollectorCity-Market-Place\" rel=\"nofollow\">Collector City Marketplace</a></p>\n", "abstract": "Here is a near similar solution for you: Collector City Marketplace"}]}, {"link": "https://stackoverflow.com/questions/10054439/where-to-put-templates-in-django-1-4", "question": {"id": "10054439", "title": "Where to put templates in Django 1.4?", "content": "<p>I got a bit confused, because when I use the generic ListView class, Django is looking for \"appname/objectname_list.html\" inside the \"appname/templates\" folder. This results in:</p>\n<pre><code class=\"python\">appname/templates/appname/objectname_list.html\n</code></pre>\n<p>If I supply \"template_name\", it does not require the subfolder inside the templates folder anymore. </p>\n<p>Why doesn't it find the objectname_list.html inside the \"templates\" folder like before in 1.3 ? Did I configure something wrong or did they change the place where I'm supposed to put my templates as well ? In 1.3 I used to place template html files inside \"appname/templates\" directly instead of using a subfolder.</p>\n<p>For me it does not make sense to use another subfolder with the name of the app, where the templates folder is already in. Or am I missing something useful ?</p>\n<p>I could not find anything about it in the release notes.</p>\n", "abstract": "I got a bit confused, because when I use the generic ListView class, Django is looking for \"appname/objectname_list.html\" inside the \"appname/templates\" folder. This results in: If I supply \"template_name\", it does not require the subfolder inside the templates folder anymore.  Why doesn't it find the objectname_list.html inside the \"templates\" folder like before in 1.3 ? Did I configure something wrong or did they change the place where I'm supposed to put my templates as well ? In 1.3 I used to place template html files inside \"appname/templates\" directly instead of using a subfolder. For me it does not make sense to use another subfolder with the name of the app, where the templates folder is already in. Or am I missing something useful ? I could not find anything about it in the release notes."}, "answers": [{"id": 10054623, "score": 5, "vote": 0, "content": "<p>I don't think this is 1.4 specific.  If you will want your template in a subfolder, specify <code>template_name = 'subfolde/template.html'</code></p>\n<p>Regarding template dirs, from the <a href=\"https://docs.djangoproject.com/en/dev/ref/templates/api/#loader-types\" rel=\"noreferrer\">docs</a>:</p>\n<blockquote>\n<p>... For each app in\n  INSTALLED_APPS, the loader looks for a templates subdirectory. If the\n  directory exists, Django looks for templates in there.</p>\n</blockquote>\n<p>So the actual dir is:</p>\n<pre><code class=\"python\">projectname/appname/templates/appname/objectname_list.html\n            ^^^               ^^^\n</code></pre>\n<p>This helps you keep everything inside the app folder and does not require you to configure anything,  </p>\n<p>This also means that if you have apps <code>foo</code>, <code>bar</code> and <code>baz</code>, you can still have one <code>templates</code> dir under one of the apps:</p>\n<pre><code class=\"python\">myproj/foo/templates/foo/...\nmyproj/foo/templates/bar/...\nmyproj/foo/templates/baz/...\n</code></pre>\n", "abstract": "I don't think this is 1.4 specific.  If you will want your template in a subfolder, specify template_name = 'subfolde/template.html' Regarding template dirs, from the docs: ... For each app in\n  INSTALLED_APPS, the loader looks for a templates subdirectory. If the\n  directory exists, Django looks for templates in there. So the actual dir is: This helps you keep everything inside the app folder and does not require you to configure anything,   This also means that if you have apps foo, bar and baz, you can still have one templates dir under one of the apps:"}]}, {"link": "https://stackoverflow.com/questions/5972426/django-how-can-i-change-the-table-name-used-by-i-e-django-contrib-sessions", "question": {"id": "5972426", "title": "Django; How can i change the table name used by i.e django.contrib.sessions?", "content": "<p>How can i change the info in the Meta class in i.e 'django.contrib.sessions.models' , so that my project can have somewhat uniform table names, but so that the functionality of the app is the same?</p>\n<p>Thanks</p>\n", "abstract": "How can i change the info in the Meta class in i.e 'django.contrib.sessions.models' , so that my project can have somewhat uniform table names, but so that the functionality of the app is the same? Thanks"}, "answers": [{"id": 5972466, "score": 5, "vote": 0, "content": "<p>You can try this:</p>\n<pre><code class=\"python\">from django.contrib.sessions.models import Session\nSession.Meta.db_table = 'my_session'\n</code></pre>\n<p><strong>EDITED</strong>\nThe above solution throws an error but the following works:</p>\n<pre><code class=\"python\">from django.contrib.sessions.models import Session\nSession._meta.db_table = \"my_session\"\n</code></pre>\n", "abstract": "You can try this: EDITED\nThe above solution throws an error but the following works:"}]}, {"link": "https://stackoverflow.com/questions/3681904/what-is-the-most-up-to-date-python-asterisk-agi-framework-for-asterisk", "question": {"id": "3681904", "title": "What is the most up to date Python asterisk AGI framework for asterisk?", "content": "<p>I have done some AGI development in the past with PERL and PHP, but my current project is using Python.  I have found the frameworks listed here: <a href=\"http://www.voip-info.org/wiki/view/Asterisk+AGI\" rel=\"nofollow noreferrer\">http://www.voip-info.org/wiki/view/Asterisk+AGI</a> , but they are all pretty old and do not seem kept up to date.  I'd like to know if there are any others out there specifically for asterisk 1.6.2. and preferably written in python 2.6 or higher.</p>\n<p>Thanks in advance.</p>\n", "abstract": "I have done some AGI development in the past with PERL and PHP, but my current project is using Python.  I have found the frameworks listed here: http://www.voip-info.org/wiki/view/Asterisk+AGI , but they are all pretty old and do not seem kept up to date.  I'd like to know if there are any others out there specifically for asterisk 1.6.2. and preferably written in python 2.6 or higher. Thanks in advance."}, "answers": [{"id": 3682749, "score": 4, "vote": 0, "content": "<p>With my Asterisk 1.6.2.7 I use <a href=\"http://sourceforge.net/projects/pyst/\" rel=\"nofollow noreferrer\">pyst</a>. I haven't changed it for some years (since Asterisk 1.0), and it still works with Python 2.4, but I see that this project lives, has a new maintainer and should work with Python 2.7.</p>\n", "abstract": "With my Asterisk 1.6.2.7 I use pyst. I haven't changed it for some years (since Asterisk 1.0), and it still works with Python 2.4, but I see that this project lives, has a new maintainer and should work with Python 2.7."}, {"id": 14938907, "score": 1, "vote": 0, "content": "<p>Please look into <a href=\"http://code.google.com/p/pystrix/\" rel=\"nofollow\">Pystrix</a>. I have used Pystrix on Python 2.7 and Asterisk 1.8 without any issue.</p>\n<p>Though these libraries are old, but if you see their recent changes, you will find there are just few commits to improve it, its doc and then nothing else. <strong>These library works fine without any issue</strong> in communicating with Asterisk, as Asterisk didn't change the communication pattern with clients from 1.4 to latest (I tested at least 1.8), but they made their commands/applicatiions/functions rich with more arguments. So the existing libraries work fine.</p>\n<p>In all these libraries, you will find a method like 'send_action'. All other methods do give you helpers to assemble the commands argument in asterisk recognized format, (ending with \\n\\r and command ends with \\n\\r\\n\\r). </p>\n", "abstract": "Please look into Pystrix. I have used Pystrix on Python 2.7 and Asterisk 1.8 without any issue. Though these libraries are old, but if you see their recent changes, you will find there are just few commits to improve it, its doc and then nothing else. These library works fine without any issue in communicating with Asterisk, as Asterisk didn't change the communication pattern with clients from 1.4 to latest (I tested at least 1.8), but they made their commands/applicatiions/functions rich with more arguments. So the existing libraries work fine. In all these libraries, you will find a method like 'send_action'. All other methods do give you helpers to assemble the commands argument in asterisk recognized format, (ending with \\n\\r and command ends with \\n\\r\\n\\r). "}]}, {"link": "https://stackoverflow.com/questions/2916693/framework-similar-to-pylons-for-ruby", "question": {"id": "2916693", "title": "Framework Similar to Pylons for Ruby", "content": "<p>I've been using Python for most of my web projects lately, and have come to really love the Pylons MVC framework.  I like the incredible transparency (lack of magic), the built-in components they selected (sqlalchemy, formencode, routes), and the ability to easily change things up (use a different ORM or templating engine).</p>\n<p>Moving forward, due to constraints at my company, I'm going to be trying out Ruby rather than Python.  I'm wondering if people with experience in both have any recommendations for a Ruby framework that is comparable to Pylons.</p>\n<p>Python is to Django as Ruby is to Rails</p>\n<p>Python is to Pylons as Ruby is to ?</p>\n", "abstract": "I've been using Python for most of my web projects lately, and have come to really love the Pylons MVC framework.  I like the incredible transparency (lack of magic), the built-in components they selected (sqlalchemy, formencode, routes), and the ability to easily change things up (use a different ORM or templating engine). Moving forward, due to constraints at my company, I'm going to be trying out Ruby rather than Python.  I'm wondering if people with experience in both have any recommendations for a Ruby framework that is comparable to Pylons. Python is to Django as Ruby is to Rails Python is to Pylons as Ruby is to ?"}, "answers": [{"id": 2916726, "score": 5, "vote": 0, "content": "<p>I have no experience with pylons so its tough for me to compare, but if you are looking for a lightweight alternative to Rails, definitely check out <a href=\"http://www.sinatrarb.com/\" rel=\"nofollow noreferrer\">Sinatra</a>. However, keep in mind its not an MVC framework.</p>\n<p><a href=\"http://ramaze.net/\" rel=\"nofollow noreferrer\">Ramaze</a> is another alternative which is ORM and templating engine agnostic.</p>\n", "abstract": "I have no experience with pylons so its tough for me to compare, but if you are looking for a lightweight alternative to Rails, definitely check out Sinatra. However, keep in mind its not an MVC framework. Ramaze is another alternative which is ORM and templating engine agnostic."}, {"id": 2916844, "score": 0, "vote": 0, "content": "<p>Python is to Django as Ruby is to Rails</p>\n<p>Python is to Pylons as Ruby is to <a href=\"http://merbivore.com/\" rel=\"nofollow noreferrer\">Merb</a>, is my best guess.</p>\n<p>But since Merb and Rails are converging in the almost-released Rails 3.0 (at <a href=\"http://weblog.rubyonrails.org/2010/4/13/rails-3-0-third-beta-release\" rel=\"nofollow noreferrer\">Beta 3</a> right now) - the <a href=\"http://yehudakatz.com/\" rel=\"nofollow noreferrer\">lead developer</a> for Merb now performs the same role in the united product, I'd suggest that</p>\n<p>Python is to Pylons as Ruby is to Rails 3.0</p>\n<p>YMMV, of course.</p>\n", "abstract": "Python is to Django as Ruby is to Rails Python is to Pylons as Ruby is to Merb, is my best guess. But since Merb and Rails are converging in the almost-released Rails 3.0 (at Beta 3 right now) - the lead developer for Merb now performs the same role in the united product, I'd suggest that Python is to Pylons as Ruby is to Rails 3.0 YMMV, of course."}, {"id": 2922375, "score": 0, "vote": 0, "content": "<p>Honestly I am not sure how it compares to Pylons, but if you appreciate simplicity and transparency, you will definitely like Sinatra. And if you decide to give it a try, I would also recommend you <a href=\"http://monkrb.com/\" rel=\"nofollow noreferrer\">Monk</a> if you're already used to an MVC framework.</p>\n", "abstract": "Honestly I am not sure how it compares to Pylons, but if you appreciate simplicity and transparency, you will definitely like Sinatra. And if you decide to give it a try, I would also recommend you Monk if you're already used to an MVC framework."}]}, {"link": "https://stackoverflow.com/questions/12885068/python-framework-to-use-with-sqlalchemy", "question": {"id": "12885068", "title": "Python framework to use with SQLAlchemy", "content": "<p>I was planning on starting a project using Turbogears 2. I noticed however that in particular on stackoverflow.com there don't seem to be many questions concerning it. According to Wikipedia, it seems the framework is still under active development (the last stable version released 50 days ago or so). I selected TG2 mostly because of it's support for SQLAlchemy that I find a superior ORM solution for my needs.</p>\n<p><strong>Questions</strong>:</p>\n<ul>\n<li>Would you consider TG2 as a framework with a future or rather a dying technology?</li>\n<li>Would you recommend using it for a new project considering the answer to the previous question?</li>\n<li>If the answer is \"no\", what other Python frameworks similar to TG2 (in particular: highly modular, integrated with SQLAlchemy), are there?</li>\n</ul>\n<p>Hope these won't be classified as \"open-ended\" questions. Cheers!</p>\n", "abstract": "I was planning on starting a project using Turbogears 2. I noticed however that in particular on stackoverflow.com there don't seem to be many questions concerning it. According to Wikipedia, it seems the framework is still under active development (the last stable version released 50 days ago or so). I selected TG2 mostly because of it's support for SQLAlchemy that I find a superior ORM solution for my needs. Questions: Hope these won't be classified as \"open-ended\" questions. Cheers!"}, "answers": [{"id": 12885478, "score": 4, "vote": 0, "content": "<p>Definitely go for <a href=\"http://www.pylonsproject.org/\" rel=\"nofollow\">Pyramid</a></p>\n<p>It is highly modular and has native \"scaffold\" to use SqlAlchemy as ORM.</p>\n<p>You can also combine SqlAlchemy with <a href=\"https://github.com/FormAlchemy/formalchemy\" rel=\"nofollow\">FormAlchemy</a> which is the forms system built on top of SqlAlchemy.</p>\n<p>The same developper released <a href=\"https://github.com/FormAlchemy/pyramid_formalchemy\" rel=\"nofollow\">pyramid_formalchemy</a> module to help you setting all this together.</p>\n", "abstract": "Definitely go for Pyramid It is highly modular and has native \"scaffold\" to use SqlAlchemy as ORM. You can also combine SqlAlchemy with FormAlchemy which is the forms system built on top of SqlAlchemy. The same developper released pyramid_formalchemy module to help you setting all this together."}]}, {"link": "https://stackoverflow.com/questions/11233837/running-client-side-python-script-at-a-click-of-a-button-on-a-webpage", "question": {"id": "11233837", "title": "running client-side python script at a click of a button (on a webpage)", "content": "<p>So I'm trying to modify some HTML to have a button that initiates a python script that acts on a few files in ones own system.</p>\n<p>more specifically, i have a python script that reads through snort logs and produces a link to a new website (really, an IP address that takes parameters for a packet-capture stream search)\nI'm trying to implement this script as a button on a website.\n-note: it's ok if whoever is clicking on the button(s) needs to have the script.py on their own machine</p>\n<p>I've <em>tried</em> to do my homework on the subject, but there seem to be infinite options - most of which aren't agreed upon by any 2 parties.\nDo i NEED a framework? can i not just call my python script from its directory using some &lt; script / &gt;'s or something in my HTML code?</p>\n", "abstract": "So I'm trying to modify some HTML to have a button that initiates a python script that acts on a few files in ones own system. more specifically, i have a python script that reads through snort logs and produces a link to a new website (really, an IP address that takes parameters for a packet-capture stream search)\nI'm trying to implement this script as a button on a website.\n-note: it's ok if whoever is clicking on the button(s) needs to have the script.py on their own machine I've tried to do my homework on the subject, but there seem to be infinite options - most of which aren't agreed upon by any 2 parties.\nDo i NEED a framework? can i not just call my python script from its directory using some < script / >'s or something in my HTML code?"}, "answers": [{"id": 11233934, "score": 2, "vote": 0, "content": "<p>Short answer: you can't.</p>\n<p>You can't access files on the user's machine, and even less execute them, from the browser. Imagine how much of a security hole that would be.</p>\n<p>However, you could implement your own simple web browser (that displays a single page for example) in many GUI toolkits (Qt or wx have web views or similar). Or, you would need to develop (or find) a plugin/addon to the browser you are using, and communicate with that. It will depend on each browser, etc. I have no idea if this is feasible. Or, the user will download a file which he will choose to run instead of save, that will execute your script.</p>\n<p>Actually, I just saw <a href=\"http://www.ironpython.net/browser/\" rel=\"nofollow\">this</a> and <a href=\"http://blog.jimmy.schementi.com/2010/03/pycon-2010-python-in-browser.html\" rel=\"nofollow\">this</a> which is basically a plugin that you install (based on IronPython and Silverlight), I'm not sure you can execute scripts that are on the user's system though. It can execute code embedded in the page.</p>\n", "abstract": "Short answer: you can't. You can't access files on the user's machine, and even less execute them, from the browser. Imagine how much of a security hole that would be. However, you could implement your own simple web browser (that displays a single page for example) in many GUI toolkits (Qt or wx have web views or similar). Or, you would need to develop (or find) a plugin/addon to the browser you are using, and communicate with that. It will depend on each browser, etc. I have no idea if this is feasible. Or, the user will download a file which he will choose to run instead of save, that will execute your script. Actually, I just saw this and this which is basically a plugin that you install (based on IronPython and Silverlight), I'm not sure you can execute scripts that are on the user's system though. It can execute code embedded in the page."}, {"id": 34318488, "score": 1, "vote": 0, "content": "<p>Alternative Solution to the OPs question:</p>\n<p>Synopsis of solution:</p>\n<ol>\n<li>Send user input via HTML Form with 'GET'</li>\n<li>Process values from the url encoded values 'GET' sent to the shell script</li>\n<li>Shell script parses values and saves them passing the arguments to the Python script while calling it to run.</li>\n</ol>\n<p>Javascript and php work nicely with this setup and allows for mysql, etc. from there.     </p>\n<p>Using 'GET' we send the user's input from client side to server side using a shell script to process our data.</p>\n<p>Example Index.php</p>\n<pre><code class=\"python\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n    &lt;title&gt;Google Email Search&lt;/title&gt;  \n    &lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Script Options&lt;/h1&gt;\n&lt;form action=\"/cgi-bin/call.sh\" method=\"get\"&gt;       \n    &lt;TABLE BORDER=\"1\"&gt;\n        &lt;TR&gt;\n            &lt;TD&gt;Keyword:&lt;/TD&gt;\n            &lt;TD&gt;&lt;input type=\"text\" name=\"query\" value=\"Query\"&gt;&lt;/TD&gt;\n        &lt;/TR&gt;\n        &lt;TR&gt;\n            &lt;TD&gt;# of Pages:&lt;/TD&gt;\n            &lt;TD&gt;&lt;input type=\"text\" name=\"pages\" value=\"1\"&gt;&lt;/TD&gt;\n        &lt;/TR&gt;\n        &lt;TR&gt;\n            &lt;TD&gt;Output File Name:&lt;/TD&gt;\n            &lt;TD&gt;&lt;input type=\"text\" name=\"output_name\" value=\"results\"&gt;&lt;/TD&gt;\n        &lt;/TR&gt;\n        &lt;TR&gt;\n            &lt;TD&gt;E-mail Address:&lt;/TD&gt;\n            &lt;TD&gt;&lt;input type=\"text\" name=\"email_address\" value=\"example@gmail.com\"&gt;         \n            &lt;/TD&gt;\n        &lt;/TR&gt;\n        &lt;TR&gt;\n            &lt;TD&gt;&lt;input type=\"submit\" value=\"Submit\"&gt;&lt;/TD&gt;\n        &lt;/TR&gt;\n    &lt;/TABLE&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>Example shell script to call the python script which would be located in your cgi-bin or other designated 'executable' allowed directory.</p>\n<pre><code class=\"python\">#!/bin/bash\n# Runs the cgi-script, using the shell, using 'get' results from the index html form we parse it to the options in the python script.\n\necho \"Content-type: text/html\"\necho \"\"\n\necho '&lt;html&gt;'\necho '&lt;head&gt;'\necho '&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"&gt;'\n\necho '&lt;title&gt;&lt;/title&gt;'\necho '&lt;/head&gt;'\necho '&lt;body&gt;'\nquery=`echo \"$QUERY_STRING\" | sed -n 's/^.*query=\\([^&amp;]*\\).*$/\\1/p' | sed \"s/%20/ /g\"`\npages=`echo \"$QUERY_STRING\" | sed -n 's/^.*pages=\\([^&amp;]*\\).*$/\\1/p' | sed \"s/%20/ /g\"`\noutput_name=`echo \"$QUERY_STRING\" | sed -n 's/^.*output_name=\\([^&amp;]*\\).*$/\\1/p' | sed \"s/%20/ /g\"`\nemail_address=`echo \"$QUERY_STRING\" | sed -n 's/^.*email_address=\\([^&amp;]*\\).*$/\\1/p' | sed \"s/%20/ /g\"`\necho '&lt;h1&gt;'\necho 'Running...'\necho '&lt;/h1&gt;'\nDIR=$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" &amp;&amp; pwd )\ncd \"$DIR\"\npython main.py -query $query -pages $pages -o $output_name\necho ''\n\necho '&lt;/body&gt;'\necho '&lt;/html&gt;'\n</code></pre>\n<p>Example Python script.</p>\n<p>called from the shell script:</p>\n<pre><code class=\"python\">#!/usr/bin/env python\nfrom xgoogle.search import GoogleSearch\nimport urllib2, re, csv, os\nimport argparse\n\nclass ScrapeProcess(object):\nemails = []  # for duplication prevention\n\ndef __init__(self, filename):\n    self.filename  = filename\n    self.csvfile   = open(filename, 'wb+')\n    self.csvwriter = csv.writer(self.csvfile)\n\ndef go(self, query, pages):\n    search = GoogleSearch(query)\n    search.results_per_page = 10\n\n    for i in range(pages):\n        search.page = i\n        results = search.get_results()\n        for page in results:\n            self.scrape(page)\n\ndef scrape(self, page):\n    try:\n        request = urllib2.Request(page.url.encode(\"utf8\"))\n        html    = urllib2.urlopen(request).read()\n    except Exception, e:\n        return\n\n    emails = re.findall(r'([A-Za-z0-9\\.\\+_-]+@[A-Za-z0-9\\._-]+\\.[a-zA-Z]*)', html)\n\n    for email in emails:\n        if email not in self.emails:  # if not a duplicate\n            self.csvwriter.writerow([page.title.encode('utf8'), page.url.encode(\"utf8\"), email])\n            self.emails.append(email)\n\nparser = argparse.ArgumentParser(description='Scrape Google results for emails')\nparser.add_argument('-query', type=str, default='test', help='a query to use for the Google search')\nparser.add_argument('-pages', type=int, default=10, help='number of Google results pages to scrape')\nparser.add_argument('-o', type=str, default='emails.csv', help='output filename')    \n\nargs   = parser.parse_args()\nargs.o = args.o+'.csv' if '.csv' not in args.o else args.o  # make sure filename has .csv extension\n\ns = ScrapeProcess(args.o)\ns.go(args.query, args.pages)\n</code></pre>\n<p>Full working example located here: \n<a href=\"https://github.com/mhenes/Google-EmailScraper\" rel=\"nofollow\">https://github.com/mhenes/Google-EmailScraper</a></p>\n<p>Disclaimer this is my git- using a forked project to show this functionality.</p>\n", "abstract": "Alternative Solution to the OPs question: Synopsis of solution: Javascript and php work nicely with this setup and allows for mysql, etc. from there.      Using 'GET' we send the user's input from client side to server side using a shell script to process our data. Example Index.php Example shell script to call the python script which would be located in your cgi-bin or other designated 'executable' allowed directory. Example Python script. called from the shell script: Full working example located here: \nhttps://github.com/mhenes/Google-EmailScraper Disclaimer this is my git- using a forked project to show this functionality."}, {"id": 33789029, "score": -2, "vote": 0, "content": "<p>IronPython may have been the solution you were looking for:\n<a href=\"http://ironpython.net/\" rel=\"nofollow noreferrer\">http://ironpython.net/</a></p>\n<p>With the tutorials and code provided in the below link, you should be able to create html elements that react to events such as an html \"button\" like you mentioned.</p>\n<p>I've been playing with IronPython and have had success with internal and external calls to scripts.  The tutorial below most likely contains any other questions you may have.</p>\n<p><strong>helloworld.html</strong> -</p>\n<blockquote>\n<p>IronPython alert example, internal python scripting in document.</p>\n<p>To develop a Python application in the browser, you just need your favorite text editor; so open it up, create a HTML file, reference dlr.js, and then you can use script-tags for running Python code:</p>\n</blockquote>\n<pre><code class=\"python\">&lt;html&gt;\n&lt;head&gt;\n&lt;script src=\"http://gestalt.ironpython.net/dlr-latest.js\"\n        type=\"text/javascript\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;script type=\"text/python\"&gt;\n  window.Alert(\"Hello from Python\")\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p><strong>repl.py</strong>\n</p>\n<blockquote>\n<p>to do this in a REPL window, so let's turn one on in the browser; just place the following script-tag in the page:</p>\n</blockquote>\n<pre><code class=\"python\">from Microsoft.Scripting.Silverlight import Repl\n\nif 'document' not in globals():\n  import System\n  document = System.Windows.Browser.HtmlPage.Document\nif 'window' not in globals():\n  import System\n  window = System.Windows.Browser.HtmlPage.Window\n\nclass PythonRepl(object):\n  __ironpython__ = 'silverlightDlrRepl1'\n  __minimize__ = 'silverlightDlrWindowLink'\n  __container__ = 'silverlightDlrWindowContainer'\n\n  def __init__(self):\n    self.repl = Repl.Show('python')\n\n  def hide_all_panels(self):\n    window.Eval(\"sdlrw.hideAllPanels(document.getElementById(\\\"%s\\\"))\" % self.__minimize__)\n  \n  def show_panel(self, id):\n    window.Eval(\"sdlrw.showPanel(\\\"%s\\\")\" % id)\n  \n  def show_ironpython(self):\n    self.show_panel(self.__ironpython__)\n\n  def remove(self):\n    document.Body.RemoveChild(document.silverlightDlrWindowContainer)\n\ndef show():\n  prepl = PythonRepl()\n  repl = prepl.repl\n  import sys\n  sys.stdout = repl.OutputBuffer\n  sys.stderr = repl.OutputBuffer\n  return prepl\n\nif document.QueryString.ContainsKey('console'): \n  prepl = show()\n  if document.QueryString['console'] == 'hide':\n    prepl.hide_all_panels()\n  else:\n    prepl.show_ironpython()\n</code></pre>\n<p><strong>dom.py</strong></p>\n<blockquote>\n<p>IronPython example: for adding a DOM element and changing it's HTML content to \"Ouch!\" when clicked:</p>\n</blockquote>\n<pre><code class=\"python\">dir(document) \ndiv = document.CreateElement(\"div\")\ndiv.innerHTML = \"Hello from Python!\"\ndocument.Body.AppendChild(div)\ndiv.id = \"message\"\ndiv.SetStyleAttribute(\"font-size\", \"24px\")\ndef say_ouch(o, e):\n    o.innerHTML = \"Ouch!\"\n\ndocument.message.events.onclick += say_ouch\n</code></pre>\n<p>Caveat to note: IronPython requires SilverLight and therefore it will only work with FireFox or Safari.</p>\n<p>Excellent tutorial related to your question:\n<a href=\"http://jimmy.schementi.com/2010/03/pycon-2010-python-in-browser.html\" rel=\"nofollow noreferrer\">http://jimmy.schementi.com/2010/03/pycon-2010-python-in-browser.html</a></p>\n", "abstract": "IronPython may have been the solution you were looking for:\nhttp://ironpython.net/ With the tutorials and code provided in the below link, you should be able to create html elements that react to events such as an html \"button\" like you mentioned. I've been playing with IronPython and have had success with internal and external calls to scripts.  The tutorial below most likely contains any other questions you may have. helloworld.html - IronPython alert example, internal python scripting in document. To develop a Python application in the browser, you just need your favorite text editor; so open it up, create a HTML file, reference dlr.js, and then you can use script-tags for running Python code: repl.py\n to do this in a REPL window, so let's turn one on in the browser; just place the following script-tag in the page: dom.py IronPython example: for adding a DOM element and changing it's HTML content to \"Ouch!\" when clicked: Caveat to note: IronPython requires SilverLight and therefore it will only work with FireFox or Safari. Excellent tutorial related to your question:\nhttp://jimmy.schementi.com/2010/03/pycon-2010-python-in-browser.html"}]}, {"link": "https://stackoverflow.com/questions/5770080/web-dev-framework-for-rad-web-app-dev-in-shortest-time-yii-vs-django", "question": {"id": "5770080", "title": "Web Dev. Framework for RAD Web App Dev. in Shortest Time ( Yii vs. Django )", "content": "<p>I googled it and found nothing of much interest , right now me &amp; my Team know/partially know   ( Codeigniter, Yii) and also Django (Python Framework) , now after working with codeigniter for past 1 year we have noticed that we are not that efficient and we still have to code most of the stuff( comment system, image upload, rating, voting etc. ) repeatedly ( you can call it progressive enhancement ) . </p>\n<p>Now , we have started development in Yii and it's superb we are experiencing it but what I find is that I love Python more than PHP , but due to  deadlines and time shortage , I cant ask my team to switch to it  now . SO, what I'm trying to do is convince myself that which framework among these 3 ( Codeigniter, Yii, Django ) would give us fastest delivery times ?</p>\n<p>My personal opinion is that Yii &amp; Django are somewhat equal but due to avilability of large no. of Packages <a href=\"http://djangopackages.com/\" rel=\"nofollow\">Django Packages</a>  , we will be able to develop quicker and faster , although Yii has it's extensions too <a href=\"http://www.yiiframework.com/extensions/\" rel=\"nofollow\">Yii Extensions</a> but at this time there are not  many and  only few of them are highly stable , while  others have bugs  still (Maybe all this is due to my higher knowledge of PHP &amp; PHP frameworks than Python frameworks &amp; Django )  so, I would be glad if someone who has some practical experience transitioning from PHP to Python based frameworks could shed some light on this !</p>\n<p>Edit: I'm looking for a practical response from a programmer who has developed in both frameworks Django vs. Yii ( or has atleast played with them ) and he/she can verify that development time for a typical CMS/Portal/Review Website/Digg clone ... type Web App takes less time in one than other , as Time is what I worry about  learning the language / features/ benefits are not that important , scalability too ius a matter of proper DB optimization and  other architectural changes , also i would like to highlight that I'm not considering Ruby on Rails as I dont want to learn ruby just for a framework , rather I'm interested in Django vs. Yii in terms of shortest time to market given all other factors ( manpower/skill set/DB design) equal , Kindly help , I have been thinking about this for a week now !</p>\n", "abstract": "I googled it and found nothing of much interest , right now me & my Team know/partially know   ( Codeigniter, Yii) and also Django (Python Framework) , now after working with codeigniter for past 1 year we have noticed that we are not that efficient and we still have to code most of the stuff( comment system, image upload, rating, voting etc. ) repeatedly ( you can call it progressive enhancement ) .  Now , we have started development in Yii and it's superb we are experiencing it but what I find is that I love Python more than PHP , but due to  deadlines and time shortage , I cant ask my team to switch to it  now . SO, what I'm trying to do is convince myself that which framework among these 3 ( Codeigniter, Yii, Django ) would give us fastest delivery times ? My personal opinion is that Yii & Django are somewhat equal but due to avilability of large no. of Packages Django Packages  , we will be able to develop quicker and faster , although Yii has it's extensions too Yii Extensions but at this time there are not  many and  only few of them are highly stable , while  others have bugs  still (Maybe all this is due to my higher knowledge of PHP & PHP frameworks than Python frameworks & Django )  so, I would be glad if someone who has some practical experience transitioning from PHP to Python based frameworks could shed some light on this ! Edit: I'm looking for a practical response from a programmer who has developed in both frameworks Django vs. Yii ( or has atleast played with them ) and he/she can verify that development time for a typical CMS/Portal/Review Website/Digg clone ... type Web App takes less time in one than other , as Time is what I worry about  learning the language / features/ benefits are not that important , scalability too ius a matter of proper DB optimization and  other architectural changes , also i would like to highlight that I'm not considering Ruby on Rails as I dont want to learn ruby just for a framework , rather I'm interested in Django vs. Yii in terms of shortest time to market given all other factors ( manpower/skill set/DB design) equal , Kindly help , I have been thinking about this for a week now !"}, "answers": [{"id": 5770474, "score": 1, "vote": 0, "content": "<p>Vivek, this is one of those questions to which it's hard to give an answer better than \"it depends\". Personally, I think that the language and its ecosystem is a very important factor in the choice, perhaps more so than the specific framework.</p>\n<p>Why so? As you mentioned, you found out that you had to write a lot of code from scratch even though you thought a framework would provide it. <em>This is a basic fact of our programming life</em> - no matter the framework / library, eventually we're going to write some functionality of our own because:</p>\n<ul>\n<li>Either it's missing</li>\n<li>Or it's not good enough for our needs, for 1000s of possible reasons</li>\n</ul>\n<p>So in the end, as an application becomes more and more complex, we'll find ourselves implementing more and more functionality because the existing libraries just aren't flexible enough. I think that the recent success of web micro-frameworks in Python has its roots in the same cause.</p>\n<p>This is why the basis is important, and the basis in your case is PHP and its ecosystem vs. Python and its ecosystem. Both languages have huge amounts of library code available, but which do you find more pleasant to work with <em>as a language</em>? Which is the one you and your co-devs know best? Which is the language for which you'll find it easier to hire new devs (if applicable)?</p>\n<hr/>\n<p>P.S. I don't know much about PHP, but for Python/Django, apart from Django Packages, there's also <a href=\"http://pinaxproject.com/\" rel=\"nofollow\">Pinax</a>.</p>\n", "abstract": "Vivek, this is one of those questions to which it's hard to give an answer better than \"it depends\". Personally, I think that the language and its ecosystem is a very important factor in the choice, perhaps more so than the specific framework. Why so? As you mentioned, you found out that you had to write a lot of code from scratch even though you thought a framework would provide it. This is a basic fact of our programming life - no matter the framework / library, eventually we're going to write some functionality of our own because: So in the end, as an application becomes more and more complex, we'll find ourselves implementing more and more functionality because the existing libraries just aren't flexible enough. I think that the recent success of web micro-frameworks in Python has its roots in the same cause. This is why the basis is important, and the basis in your case is PHP and its ecosystem vs. Python and its ecosystem. Both languages have huge amounts of library code available, but which do you find more pleasant to work with as a language? Which is the one you and your co-devs know best? Which is the language for which you'll find it easier to hire new devs (if applicable)? P.S. I don't know much about PHP, but for Python/Django, apart from Django Packages, there's also Pinax."}, {"id": 5770671, "score": 0, "vote": 0, "content": "<p>Never used Yii and Code Igniter, but i come from CakePHP and now i work on Django, and i enjoy it. I can say that in Python there's a higher test-culture, and Django has superb docs. If you search for Yii and Django on github, you'll find 191 vs. 6176 projects.</p>\n<p>IMHO Python is orders of magnitude better than PHP, and the average Python code is better than the average PHP code.</p>\n<p>Your choice should be between Django and Rails or Sinatra, i think. Python community is bigger than Ruby community, instead there are more Rails projects and developers than Django.</p>\n", "abstract": "Never used Yii and Code Igniter, but i come from CakePHP and now i work on Django, and i enjoy it. I can say that in Python there's a higher test-culture, and Django has superb docs. If you search for Yii and Django on github, you'll find 191 vs. 6176 projects. IMHO Python is orders of magnitude better than PHP, and the average Python code is better than the average PHP code. Your choice should be between Django and Rails or Sinatra, i think. Python community is bigger than Ruby community, instead there are more Rails projects and developers than Django."}]}, {"link": "https://stackoverflow.com/questions/347497/emitting-headers-from-a-tiny-python-web-framework", "question": {"id": "347497", "title": "Emitting headers from a tiny Python web-framework", "content": "<p>I am writing a web-framework for Python, of which the goal is to be as \"small\" as possible (currently under 100 lines of code).. You can see the current code <a href=\"http://github.com/dbr/pyerweb/tree/master\" rel=\"nofollow noreferrer\">on github</a></p>\n<p>Basically it's written to be as simple to use as possible. An example \"Hello World\" like site:</p>\n<pre><code class=\"python\">from pyerweb import GET, runner\n\n@GET(\"/\")\ndef index():\n    return \"&lt;strong&gt;This&lt;/strong&gt; would be the output HTML for the URL / \"\n\n@GET(\"/view/([0-9]+?)$\")\ndef view_something(id):\n    return \"Viewing id %s\" % (id) # URL /view/123 would output \"Viewing id 123\"\n\nrunner(url = \"/\", # url would be from a web server, in actual use\n       output_helper = \"html_tidy\" # run returned HTML though \"HTML tidy\"\n</code></pre>\n<p>Basically you have a function that returns HTML, and the GET decorator maps this to a URL.</p>\n<p>When <code>runner()</code> is called, each decorated function is checked, if the URL regex matches the request URL, the function is run, and the output is sent to the browser.</p>\n<p>Now, the problem - outputting headers. Currently for development I've just put a line before the <code>runner()</code> call which does <code>print Content-type:text/html\\n</code> - this is obviously a bit limiting..</p>\n<p>My first ideas was to have the functions return a dict, something like..</p>\n<pre><code class=\"python\">@GET(\"/\")\ndef index():\n    return {\n        \"html\": \"&lt;html&gt;&lt;body&gt;...&lt;/body&gt;&lt;/html&gt;\",\n        \"headers\": {\"Location\":\"http://google.com\"}\n    }\n</code></pre>\n<p>I really don't like this - having to return a dict with a specifically named key isn't nearly as nice as just returning a string..</p>\n<p>I could check if the returned data is a dict, if so use <code>returned_data['html']</code> as the output, if it's a string, there is no custom headers to be sent... but this means to go from no headers (which would be the case a huge majority of the time) to headers, you'd have to change the return function from <code>return my_html</code> to <code>return {'html':my_html}</code> which isn't very elegant either..</p>\n<p>After writing this, I discovered \"Sinatra\" - a similar-in-use Ruby library, and looked at how it dealt with headers:</p>\n<pre><code class=\"python\">get \"/\" do\n    content_type 'text/css', :charset =&gt; 'utf-8'\nend\n</code></pre>\n<p>This seems like it could be nice enough in Python:</p>\n<pre><code class=\"python\">@GET(\"/\")\ndef index():\n    header(\"location\", \"http://google.com\")\n</code></pre>\n<p>To implement this, I was considering changing how the functions are executed - instead of simply using the return value, I would change <code>sys.stdout</code> to a StringIO, so you could do..</p>\n<pre><code class=\"python\">def index():\n    print \"&lt;html&gt;\"\n    print \"&lt;head&gt;&lt;title&gt;Something&lt;/title&gt;&lt;/head&gt;\"\n    print \"&lt;body&gt;...&lt;/body&gt;\"\n    print \"&lt;/html&gt;\n</code></pre>\n<p>..without having to worry about concatenating a bunch of strings together. The upshot of this is I could have a separate stream for headers, so the above <code>header()</code> function would write to this.. Something like:</p>\n<pre><code class=\"python\">def header(name, value):\n    pyerweb.header_stream.write(\"%s: %s\" % (name, value))\n</code></pre>\n<p>Basically, the question is, how would you output headers from this web-framework (mostly in terms of <em>use</em>, but to a lesser extent implementation)?</p>\n", "abstract": "I am writing a web-framework for Python, of which the goal is to be as \"small\" as possible (currently under 100 lines of code).. You can see the current code on github Basically it's written to be as simple to use as possible. An example \"Hello World\" like site: Basically you have a function that returns HTML, and the GET decorator maps this to a URL. When runner() is called, each decorated function is checked, if the URL regex matches the request URL, the function is run, and the output is sent to the browser. Now, the problem - outputting headers. Currently for development I've just put a line before the runner() call which does print Content-type:text/html\\n - this is obviously a bit limiting.. My first ideas was to have the functions return a dict, something like.. I really don't like this - having to return a dict with a specifically named key isn't nearly as nice as just returning a string.. I could check if the returned data is a dict, if so use returned_data['html'] as the output, if it's a string, there is no custom headers to be sent... but this means to go from no headers (which would be the case a huge majority of the time) to headers, you'd have to change the return function from return my_html to return {'html':my_html} which isn't very elegant either.. After writing this, I discovered \"Sinatra\" - a similar-in-use Ruby library, and looked at how it dealt with headers: This seems like it could be nice enough in Python: To implement this, I was considering changing how the functions are executed - instead of simply using the return value, I would change sys.stdout to a StringIO, so you could do.. ..without having to worry about concatenating a bunch of strings together. The upshot of this is I could have a separate stream for headers, so the above header() function would write to this.. Something like: Basically, the question is, how would you output headers from this web-framework (mostly in terms of use, but to a lesser extent implementation)?"}, "answers": [{"id": 347588, "score": 5, "vote": 0, "content": "<p>Look at <a href=\"http://www.python.org/dev/peps/pep-0333/\" rel=\"nofollow noreferrer\">PEP 333</a> for an excellent design pattern for a very lightweight web server.  If your server has this exact API, you can reuse it in a lot of context with a lot of other products.</p>\n<p>PEP 333 (WSGI) suggests that you don't directly return the page, but you provide the HTML page to a \"start_response\" callable object, which wraps your HTML in the proper HTTP response, with the proper headers.</p>\n", "abstract": "Look at PEP 333 for an excellent design pattern for a very lightweight web server.  If your server has this exact API, you can reuse it in a lot of context with a lot of other products. PEP 333 (WSGI) suggests that you don't directly return the page, but you provide the HTML page to a \"start_response\" callable object, which wraps your HTML in the proper HTTP response, with the proper headers."}, {"id": 347545, "score": 3, "vote": 0, "content": "<p>you could use that idea of returning a dict or a string, but add a new decorator, so the 'evolution' for a user would be:</p>\n<p>simple html:</p>\n<pre><code class=\"python\">@GET(\"/\")\ndef index():\nreturn \"&lt;html&gt;&lt;body&gt;...&lt;/body&gt;&lt;/html&gt;\"\n</code></pre>\n<p>with constant headers (one @HEADER for each one, or a dict with all of them):</p>\n<pre><code class=\"python\">@GET(\"/\")\n@HEADER(\"Location\",\"http://google.com\")\ndef index():\nreturn \"&lt;html&gt;&lt;body&gt;...&lt;/body&gt;&lt;/html&gt;\"\n</code></pre>\n<p>with complex, maybe calculated headers:</p>\n<pre><code class=\"python\">@GET(\"/\")\ndef index():\nreturn {\n    \"html\": \"&lt;html&gt;&lt;body&gt;...&lt;/body&gt;&lt;/html&gt;\",\n    \"headers\": {\"Location\":\"http://google.com\"}\n}\n</code></pre>\n<p>the @HEADER() decorator would simply change the returned value, so the 'framework' code would stay simple.</p>\n", "abstract": "you could use that idea of returning a dict or a string, but add a new decorator, so the 'evolution' for a user would be: simple html: with constant headers (one @HEADER for each one, or a dict with all of them): with complex, maybe calculated headers: the @HEADER() decorator would simply change the returned value, so the 'framework' code would stay simple."}, {"id": 347509, "score": 1, "vote": 0, "content": "<p>You should reconsider the notion of returning <a href=\"http://en.wikipedia.org/wiki/Html\" rel=\"nofollow noreferrer\">HTML</a> - headers are part of <a href=\"http://en.wikipedia.org/wiki/Http\" rel=\"nofollow noreferrer\">HTTP</a>.\nIf you build your framework around an HTTP stream, the headers are simply lines that precede the HTML payload.</p>\n<p>A headers example from the above link:</p>\n<pre><code class=\"python\">HTTP/1.1 200 OK\nDate: Mon, 23 May 2005 22:38:34 GMT\nServer: Apache/1.3.3.7 (Unix)  (Red-Hat/Linux)\nLast-Modified: Wed, 08 Jan 2003 23:11:55 GMT\nEtag: \"3f80f-1b6-3e1cb03b\"\nAccept-Ranges: bytes\nContent-Length: 438\nConnection: close\nContent-Type: text/html; charset=UTF-8\n</code></pre>\n<p>For a Python example, see the implementaion of <a href=\"http://docs.python.org/library/basehttpserver.html#BaseHTTPServer.BaseHTTPRequestHandler.send_header\" rel=\"nofollow noreferrer\"><code>BaseHTTPRequestHandler.send_header(keyword, value</code>)</a>.</p>\n", "abstract": "You should reconsider the notion of returning HTML - headers are part of HTTP.\nIf you build your framework around an HTTP stream, the headers are simply lines that precede the HTML payload. A headers example from the above link: For a Python example, see the implementaion of BaseHTTPRequestHandler.send_header(keyword, value)."}]}, {"link": "https://stackoverflow.com/questions/4980750/generic-test-automation-framework-for-python", "question": {"id": "4980750", "title": "Generic test automation framework for Python", "content": "<p>I'm working as a system administrator/infrastructure engineer, and sometimes I am wasting my time on checking if everything working properly after infrastructure changes. I want to write some tests, such as:</p>\n<ul>\n<li>Download some CSS/JavaScript code from a website</li>\n<li>Login to website</li>\n<li>Upload some file and try to download it</li>\n<li>Login to a server and execute some script</li>\n<li>And so on.</li>\n</ul>\n<p>Most unit testing frameworks focused on unit testing and code coverage, but all I need is just a configurable runner for my tests with nice reporting and may be additional modules for ease of writing HTTP tests. Possibility to use this tool for stress-testing would be an advantage.</p>\n<p>I've found many names (testoob, functest, robotframework, py.test, etc.), but I don't know what to choose.</p>\n", "abstract": "I'm working as a system administrator/infrastructure engineer, and sometimes I am wasting my time on checking if everything working properly after infrastructure changes. I want to write some tests, such as: Most unit testing frameworks focused on unit testing and code coverage, but all I need is just a configurable runner for my tests with nice reporting and may be additional modules for ease of writing HTTP tests. Possibility to use this tool for stress-testing would be an advantage. I've found many names (testoob, functest, robotframework, py.test, etc.), but I don't know what to choose."}, "answers": [{"id": 4980874, "score": 7, "vote": 0, "content": "<p>Robot Framework has many nice libraries that would definitely help you - so you don't have to reinvent the wheel. For example, Robot Framework integrates with <a href=\"http://code.google.com/p/robotframework-seleniumlibrary/\" rel=\"nofollow noreferrer\">the Selenium web testing tool</a>.</p>\n<p>I think that from the tools that you mentioned Robot Framework is the most active project - py.test seems to be active also.</p>\n<p>One thing that you should notice is that Robot tests are not written in Python directly, but they use a simple text based syntax. You can of course access Robots libraries from Python code if you want to or create your own robot library in Python code.</p>\n<p>[DISCLAIMER: I am a member of the team that is developing Robot Framework]</p>\n", "abstract": "Robot Framework has many nice libraries that would definitely help you - so you don't have to reinvent the wheel. For example, Robot Framework integrates with the Selenium web testing tool. I think that from the tools that you mentioned Robot Framework is the most active project - py.test seems to be active also. One thing that you should notice is that Robot tests are not written in Python directly, but they use a simple text based syntax. You can of course access Robots libraries from Python code if you want to or create your own robot library in Python code. [DISCLAIMER: I am a member of the team that is developing Robot Framework]"}, {"id": 4980961, "score": 1, "vote": 0, "content": "<p>I develop an open-source framework (part of <a href=\"http://code.google.com/p/pycopia/\" rel=\"nofollow\">Pycopia</a>) that does exactly this. It's not complete yet (still working on the web UI), but it's usable to run real tests and get emailed reports. You write tests in Python, but it also manages test cases, test results, and equipment inventory.</p>\n", "abstract": "I develop an open-source framework (part of Pycopia) that does exactly this. It's not complete yet (still working on the web UI), but it's usable to run real tests and get emailed reports. You write tests in Python, but it also manages test cases, test results, and equipment inventory."}]}, {"link": "https://stackoverflow.com/questions/6877301/suggest-a-standalone-python-web-framework", "question": {"id": "6877301", "title": "Suggest a standalone python web framework?", "content": "<p>I have a python program that I would like to present as a simple web application.  The program currently uses sqlite for storage.  I also need to distribute the whole thing to colleagues so having something standalone and easy to start would be ideal ( no install if possible).  This web app is meant to be used locally , not by multiple users over a network.</p>\n<p>Is there a suitable python framework that might fit my needs?  I looked at Django so far but it seems a bit heavy handed for what I need.</p>\n<p>Thanks for any suggestions.</p>\n", "abstract": "I have a python program that I would like to present as a simple web application.  The program currently uses sqlite for storage.  I also need to distribute the whole thing to colleagues so having something standalone and easy to start would be ideal ( no install if possible).  This web app is meant to be used locally , not by multiple users over a network. Is there a suitable python framework that might fit my needs?  I looked at Django so far but it seems a bit heavy handed for what I need. Thanks for any suggestions."}, "answers": [{"id": 6877423, "score": 3, "vote": 0, "content": "<p>I have never tried it myself, but you could try <a href=\"http://bottlepy.org/docs/dev/\" rel=\"nofollow\">Bottle</a>:</p>\n<blockquote>\n<p>Bottle is a fast, simple and lightweight WSGI micro web-framework for\n  Python. It is distributed as a single file module and has no\n  dependencies other than the Python Standard Library.</p>\n</blockquote>\n", "abstract": "I have never tried it myself, but you could try Bottle: Bottle is a fast, simple and lightweight WSGI micro web-framework for\n  Python. It is distributed as a single file module and has no\n  dependencies other than the Python Standard Library."}, {"id": 6877339, "score": 2, "vote": 0, "content": "<p>try <a href=\"http://docs.python.org/library/simplehttpserver.html\" rel=\"nofollow\">http://docs.python.org/library/simplehttpserver.html</a></p>\n", "abstract": "try http://docs.python.org/library/simplehttpserver.html"}, {"id": 6877350, "score": 1, "vote": 0, "content": "<p>As web frameworks are not part of the standard lib, you will have to install something in every case. I would propse to look at <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">http://flask.pocoo.org/</a>. It has a build in WSGI server. </p>\n", "abstract": "As web frameworks are not part of the standard lib, you will have to install something in every case. I would propse to look at http://flask.pocoo.org/. It has a build in WSGI server. "}, {"id": 6877491, "score": 1, "vote": 0, "content": "<p>Lots of choices for Python web frameworks!  Another is <a href=\"http://web2py.com/\" rel=\"nofollow\">web2py</a> which is designed to work out of the box and allows, but doesn't require, through-the-web development.  It is mature and has a strong community and is <a href=\"http://web2py.com/book\" rel=\"nofollow\">well-documented</a>.</p>\n", "abstract": "Lots of choices for Python web frameworks!  Another is web2py which is designed to work out of the box and allows, but doesn't require, through-the-web development.  It is mature and has a strong community and is well-documented."}, {"id": 6877370, "score": 0, "vote": 0, "content": "<p>Tornado as a framework may be a lot more than what you're looking for. However it will meet the requirement of being a completely python based web server. <a href=\"http://tornadoweb.org\" rel=\"nofollow\">http://tornadoweb.org</a></p>\n<p>I generally just download the source, drop it in /tornado/ of my project and do includes there from the app.</p>\n", "abstract": "Tornado as a framework may be a lot more than what you're looking for. However it will meet the requirement of being a completely python based web server. http://tornadoweb.org I generally just download the source, drop it in /tornado/ of my project and do includes there from the app."}, {"id": 6877382, "score": 0, "vote": 0, "content": "<p>I don't think that any web framework is specifically oriented for the use case you're talking about;  They all assume they are running on a server and there's a browser on a remote machine that is accessing them.</p>\n<p>A better approach is to think about the HTTP server you'll be using.  It's probably preferable to use a server that's as easy to pack and ship as the rest of the python code you'll be using.  Now most frameworks provide a 'development' server that's easy to invoke from the command line, but most of them are intended to be \"easy for the developer\" which often means they are restricted to a single thread.  This is bad for deployment because single threaded servers will always feel a bit sluggish.</p>\n<p>CherryPy stands out in contrast, by providing a full featured, embedded server that's easy to configure for many use cases, and is available by default with the rest of the framework.  There are probably others, but I haven't used 'em.</p>\n", "abstract": "I don't think that any web framework is specifically oriented for the use case you're talking about;  They all assume they are running on a server and there's a browser on a remote machine that is accessing them. A better approach is to think about the HTTP server you'll be using.  It's probably preferable to use a server that's as easy to pack and ship as the rest of the python code you'll be using.  Now most frameworks provide a 'development' server that's easy to invoke from the command line, but most of them are intended to be \"easy for the developer\" which often means they are restricted to a single thread.  This is bad for deployment because single threaded servers will always feel a bit sluggish. CherryPy stands out in contrast, by providing a full featured, embedded server that's easy to configure for many use cases, and is available by default with the rest of the framework.  There are probably others, but I haven't used 'em."}]}, {"link": "https://stackoverflow.com/questions/4028573/higher-level-frameworks-that-wrap-tkinter-ttk", "question": {"id": "4028573", "title": "High(er) level frameworks that wrap Tkinter/ttk", "content": "<p>Curious if there are any higher level frameworks that attempt to wrap Tkinter? For example, wxPython is wrapped by the Dabo framework (http://dabodev.com/) and PythonCard.</p>\n<p>Motivation: We've recently moved to Python 2.7 (Windows) and are very impressed with the new ttk (Tile) support which allows one to build professional quality, platform native GUI's using the built-in Tkinter framework. In the past we would have used wxPython to create simple GUI interfaces for our command line utilities, but we're re-thinking this strategy in favor of using Tkinter/ttk for these use cases.</p>\n<p>We're new to Tkinter (coming from wxPython) and while Tkinter/ttk seem to be simple to use, there seems to be a lot of repeated boilerplate code that we're writing. Before we try to wrap up some of our code in a home made set of classes, I want to make sure that we're not re-inventing the wheel.</p>\n", "abstract": "Curious if there are any higher level frameworks that attempt to wrap Tkinter? For example, wxPython is wrapped by the Dabo framework (http://dabodev.com/) and PythonCard. Motivation: We've recently moved to Python 2.7 (Windows) and are very impressed with the new ttk (Tile) support which allows one to build professional quality, platform native GUI's using the built-in Tkinter framework. In the past we would have used wxPython to create simple GUI interfaces for our command line utilities, but we're re-thinking this strategy in favor of using Tkinter/ttk for these use cases. We're new to Tkinter (coming from wxPython) and while Tkinter/ttk seem to be simple to use, there seems to be a lot of repeated boilerplate code that we're writing. Before we try to wrap up some of our code in a home made set of classes, I want to make sure that we're not re-inventing the wheel."}, "answers": [{"id": 27761836, "score": 3, "vote": 0, "content": "<p>Probably a little bit late for you. But I've just released a tkinter framework in beta called <strong>tKroopy</strong>. Which aims to provide a means for switching between dialogs and provide some higher level widgets, like easily displaying tabulated data.</p>\n<p>It was designed for building lots of small to medium applications and grouping them together in a single application, but there is no reason why you couldn't use it to build a single large scale application too.</p>\n<p><a href=\"https://github.com/tKroopy/tkroopy\" rel=\"nofollow\">https://github.com/tKroopy/tkroopy</a></p>\n", "abstract": "Probably a little bit late for you. But I've just released a tkinter framework in beta called tKroopy. Which aims to provide a means for switching between dialogs and provide some higher level widgets, like easily displaying tabulated data. It was designed for building lots of small to medium applications and grouping them together in a single application, but there is no reason why you couldn't use it to build a single large scale application too. https://github.com/tKroopy/tkroopy"}, {"id": 4707464, "score": 2, "vote": 0, "content": "<p>The only one I knew about seems quite stale, <a href=\"http://pmw.sourceforge.net/\" rel=\"nofollow\">Python megawidgets</a>.</p>\n<p>You can find a list of others on the <a href=\"http://tkinter.unpythonic.net/wiki/TixVsPmwVsBWidgets\" rel=\"nofollow\">Tkinter wiki</a>. </p>\n", "abstract": "The only one I knew about seems quite stale, Python megawidgets. You can find a list of others on the Tkinter wiki. "}, {"id": 29706594, "score": 2, "vote": 0, "content": "<p>tkRAD supports python 2 and 3 and looks mature</p>\n<p><a href=\"https://pypi.python.org/pypi/tkRAD/1.6.5\" rel=\"nofollow\">https://pypi.python.org/pypi/tkRAD/1.6.5</a></p>\n", "abstract": "tkRAD supports python 2 and 3 and looks mature https://pypi.python.org/pypi/tkRAD/1.6.5"}]}, {"link": "https://stackoverflow.com/questions/2892720/web-framework-recommendation-for-python-webservices-auth-cache", "question": {"id": "2892720", "title": "Web framework recommendation for python (webservices, auth, cache, ...)", "content": "<p>Googling for the past week, but cannot finally decide which python web framework would be right for me. The web app I'm about to develop would be almost completely \"pure\" html with js (jQuery). Server side would have to do the following:</p>\n<ul>\n<li>authentication</li>\n<li>session management</li>\n<li>caching</li>\n<li>web services (almost all the on page data would be pulled with jQuery\nthrough web services)</li>\n<li>secured web services (through some form of authentication; this is for\nremote accessing some of the web\nservices though other web apps,\ndesktop/mobile applications)</li>\n</ul>\n<p>If there is a good tutorial/guide/idea for how to do this in Django I would be most thankfull if someone could share it as I already have experience with it. The thing that made me start thinking about other frameworks is Django's built in ORM. I know I could swap it with SQLAlchemy, but wouldn't go down that road if I'm not sure all the rest of the requirements is supported.</p>\n<p>Thanks all in advance.</p>\n", "abstract": "Googling for the past week, but cannot finally decide which python web framework would be right for me. The web app I'm about to develop would be almost completely \"pure\" html with js (jQuery). Server side would have to do the following: If there is a good tutorial/guide/idea for how to do this in Django I would be most thankfull if someone could share it as I already have experience with it. The thing that made me start thinking about other frameworks is Django's built in ORM. I know I could swap it with SQLAlchemy, but wouldn't go down that road if I'm not sure all the rest of the requirements is supported. Thanks all in advance."}, "answers": [{"id": 2892858, "score": 3, "vote": 0, "content": "<p>The best way to do web services in Django, if you choose that route, is to use <a href=\"http://bitbucket.org/jespern/django-piston/wiki/Home\" rel=\"nofollow noreferrer\">piston</a>. The combination of Django and Piston can certainly fulfil all the requirements you specify.</p>\n", "abstract": "The best way to do web services in Django, if you choose that route, is to use piston. The combination of Django and Piston can certainly fulfil all the requirements you specify."}, {"id": 2892877, "score": 2, "vote": 0, "content": "<p>For me - there are two choices:</p>\n<ol>\n<li><a href=\"http://www.djangoproject.com/\" rel=\"nofollow noreferrer\">Django</a> - I find it much, much easier to learn and to work with than Pylons. Most of the time it just does what it is expected from it and doesn't stay on my way. Plus - there is <a href=\"http://bitbucket.org/jespern/django-piston/wiki/Home\" rel=\"nofollow noreferrer\">django-piston</a> that is designed for quick API making.</li>\n<li>Make your own stack - Using <a href=\"http://werkzeug.pocoo.org/\" rel=\"nofollow noreferrer\">Werkzeug</a> + <a href=\"http://www.sqlalchemy.org/\" rel=\"nofollow noreferrer\">SQLAlchemy</a> + <a href=\"http://jinja.pocoo.org/2/\" rel=\"nofollow noreferrer\">Jinja</a> can yield some very nice results.</li>\n</ol>\n<p>Bots options have very good documentation, communities and are easy to learn. If you prefer more modular approach - go for 2. If you can give up some freedom for better integration - go with Django.</p>\n", "abstract": "For me - there are two choices: Bots options have very good documentation, communities and are easy to learn. If you prefer more modular approach - go for 2. If you can give up some freedom for better integration - go with Django."}, {"id": 2892845, "score": 1, "vote": 0, "content": "<p>Have a look at <a href=\"http://pylonshq.com/\" rel=\"nofollow noreferrer\">pylons</a> the idea behind this framework is flexibility of components, and it comes with caching, sessions middleware (Beaker). You can also do RESTful web services using this. If you want to swap out components, no problem...it was designed for that.</p>\n", "abstract": "Have a look at pylons the idea behind this framework is flexibility of components, and it comes with caching, sessions middleware (Beaker). You can also do RESTful web services using this. If you want to swap out components, no problem...it was designed for that."}]}, {"link": "https://stackoverflow.com/questions/1638870/django-generic-templates", "question": {"id": "1638870", "title": "django generic templates", "content": "<p>So, Generic views are pretty cool, but what I'm interested in is something that's a generic template.</p>\n<p>so for example, I can give it an object and it'll just tostring it for me.</p>\n<p>or if I give it a list, it'll just iterate over the objects and tostring them as a ul (or tr, or whatever else it deems necessary).</p>\n<p>for most uses you wouldn't need this. I just threw something together quickly for a friend (a bar stock app, if you must know), and I don't feel like writing templates.</p>\n", "abstract": "So, Generic views are pretty cool, but what I'm interested in is something that's a generic template. so for example, I can give it an object and it'll just tostring it for me. or if I give it a list, it'll just iterate over the objects and tostring them as a ul (or tr, or whatever else it deems necessary). for most uses you wouldn't need this. I just threw something together quickly for a friend (a bar stock app, if you must know), and I don't feel like writing templates."}, "answers": [{"id": 1639317, "score": 5, "vote": 0, "content": "<p>If there's a django model for it, you can just stick to <code>django.contrib.admin</code> or <code>django.contrib.databrowse</code>.  If not, then you might manage by skipping the django template altogether.  example:</p>\n<pre><code class=\"python\">from django.http import HttpResponse\nimport datetime\n\ndef current_datetime(request):\n    now = datetime.datetime.now()\n    html = \"&lt;html&gt;&lt;body&gt;It is now %s.&lt;/body&gt;&lt;/html&gt;\" % now\n    return HttpResponse(html)\n</code></pre>\n<p>But of course you wanted to avoid even writing that much, so instead of doing html, we can use plain text and the <code>pprint</code> module:</p>\n<pre><code class=\"python\">from django.http import HttpResponse\nimport datetime\nfrom pprint import pformat\n\ndef current_datetime(request):\n    now = datetime.datetime.now()\n    return HttpResponse(pformat(now), mimetype=\"text/plain\")\n</code></pre>\n<p><em>edit:</em> Hmm... this seems like something a view decorator should handle: </p>\n<pre><code class=\"python\">from django.http import HttpResponse\nimport datetime\nimport pprint\n\ndef prettyprint(fun):\n    return lambda request:HttpResponse(\n            pprint.pformat(fun(request)), mimetype=\"text/plain\")\n\n@prettyprint\ndef current_datetime(request):\n    return datetime.datetime.now()\n</code></pre>\n", "abstract": "If there's a django model for it, you can just stick to django.contrib.admin or django.contrib.databrowse.  If not, then you might manage by skipping the django template altogether.  example: But of course you wanted to avoid even writing that much, so instead of doing html, we can use plain text and the pprint module: edit: Hmm... this seems like something a view decorator should handle: "}, {"id": 1639340, "score": 1, "vote": 0, "content": "<p>I don't see you getting away from writing templates, especially if you would want to format it, even slightly.</p>\n<p>However you can re-use basic templates, for e.g, create a generic object_list.html and object_detail.html</p>\n<p>that will basically contain the information to loop over the object list and present it, and show the object detail.  You could use these \"Generic\" templates across the entire app if need be.</p>\n", "abstract": "I don't see you getting away from writing templates, especially if you would want to format it, even slightly. However you can re-use basic templates, for e.g, create a generic object_list.html and object_detail.html that will basically contain the information to loop over the object list and present it, and show the object detail.  You could use these \"Generic\" templates across the entire app if need be."}]}, {"link": "https://stackoverflow.com/questions/63951023/django-and-stripe-module-stripe-has-no-customer-member", "question": {"id": "63951023", "title": "Django and Stripe, Module &#39;stripe&#39; has no &#39;Customer&#39; member", "content": "<p>so I'm trying to create a customer in stripe using django, according to the documentation in stripe, the code stripe.Customer.create should work, but it just appears this error, can someone tell me why is this happening?</p>\n<p>views.py</p>\n<pre><code class=\"python\">from django.shortcuts import render, redirect\nfrom django.urls import reverse\nfrom django.http import JsonResponse\n\nimport stripe\n# Create your views here.\nstripe.api_key = \"xxxx\"\n\ndef index(request):\n    return render(request, 'sales/index.html')\n\ndef charge(request):\n    amount = 5\n    if request.method == 'POST':\n        print('Data', request.POST)\n\n        stripe.Customer.create(\n            email=request.POST['email']\n        )\n\n    return redirect(reverse('success', args=[amount]))\n\ndef successMsg(request, args):\n    amount = args\n    return render(request, 'sales/success.html', {'amount':amount})\n\n\n</code></pre>\n<p>Traceback</p>\n<pre><code class=\"python\">Traceback (most recent call last):\n  File \"C:\\Users\\snin2\\anaconda3\\envs\\MyDjangoEnv\\lib\\site-packages\\django\\core\\handlers\\exception.py\", line 47, in inner\n    response = get_response(request)\n  File \"C:\\Users\\snin2\\anaconda3\\envs\\MyDjangoEnv\\lib\\site-packages\\django\\core\\handlers\\base.py\", line 179, in _get_response\n    response = wrapped_callback(request, *callback_args, **callback_kwargs)\n  File \"C:\\Users\\snin2\\Desktop\\django braintree\\stripe\\sales\\views.py\", line 17, in charge\n    stripe.Customer.create(\nAttributeError: module 'stripe' has no attribute 'Customer'\n[18/Sep/2020 08:36:39] \"POST /charge/ HTTP/1.1\" 500 66773\n\n\n</code></pre>\n", "abstract": "so I'm trying to create a customer in stripe using django, according to the documentation in stripe, the code stripe.Customer.create should work, but it just appears this error, can someone tell me why is this happening? views.py Traceback"}, "answers": [{"id": 63989155, "score": 5, "vote": 0, "content": "<p>The one and only reason for this error is <em><strong>you might have either a <code>stripe.py</code> file or a module in your project directory.</strong></em></p>\n<p>and, yes, you have a <em><strong>package</strong></em> named <code>stripe</code> under <strong><code>django braintree</code></strong> directory.<pre><code class=\"python\">\\django braintree<b>\\stripe\\</b>sales\\views.py</code></pre></p>\n<h2>How can we verify that?</h2>\n<p>You can check the <em><strong>location of the module</strong></em> by inspecting the <a href=\"https://stackoverflow.com/questions/1506459/what-does-file-mean\"><strong><code>.__file__</code></strong></a> attribute of the module.</p>\n<pre><code class=\"python\">import stripe\nprint(stripe<b>.__file__</b>)\n           <b> ^^^^^^^^^^^</b></code></pre>\n<h3>References</h3>\n<ol>\n<li><a href=\"https://stackoverflow.com/questions/20830784/python-stripe-module-object-has-no-attribute-charge\">Python Stripe: 'module' object has no attribute 'Charge' -- (StackOverlofw)</a></li>\n<li><a href=\"https://github.com/stripe/stripe-python/issues/226\" rel=\"noreferrer\"> AttributeError: 'module' object has no attribute 'Charge' -- (GitHub)</a></li>\n</ol>\n", "abstract": "The one and only reason for this error is you might have either a stripe.py file or a module in your project directory. and, yes, you have a package named stripe under django braintree directory.\\django braintree\\stripe\\sales\\views.py You can check the location of the module by inspecting the .__file__ attribute of the module."}, {"id": 70739199, "score": 0, "vote": 0, "content": "<p>You have named your project/app as <strong>stripe</strong> which makes conflict with the stripe package you installed</p>\n<p>Change you project/app name to a different name and try again</p>\n<p>NOTE: avoid using package name as app name or project name, this will create issues during referencing</p>\n", "abstract": "You have named your project/app as stripe which makes conflict with the stripe package you installed Change you project/app name to a different name and try again NOTE: avoid using package name as app name or project name, this will create issues during referencing"}]}, {"link": "https://stackoverflow.com/questions/38356766/pyside-installation-failed-to-find-the-msvc-compiler-version-10-0-on-your-syste", "question": {"id": "38356766", "title": "Pyside Installation &quot;Failed to find the MSVC compiler version 10.0 on your system&quot;", "content": "<p>I'm currently in the process of developing a gui for my python script and want to do that by using PySide.</p>\n<p>Right now I just can't get it up and running. PIP alwyas exits with this error: </p>\n<pre><code class=\"python\">nmake not found. Trying to initialize the MSVC env... \nSearching MSVC compiler version 10.0 error: Failed to find the MSVC compiler version 10.0 on your system.\n</code></pre>\n<p>I have the following components installed: \nPython 3.4.4 (64Bit)\nQT 5.6 / 5.7 \nPycharm Community Edition</p>\n<p>Windows 7 64Bit</p>\n<p>I can run PIP and Python from the terminal without having to cd into the python directory. So my PATH Variables are set correctly.</p>\n<p>Does anybody have the same issues or maybe a solution? </p>\n<p>Best \nJo</p>\n", "abstract": "I'm currently in the process of developing a gui for my python script and want to do that by using PySide. Right now I just can't get it up and running. PIP alwyas exits with this error:  I have the following components installed: \nPython 3.4.4 (64Bit)\nQT 5.6 / 5.7 \nPycharm Community Edition Windows 7 64Bit I can run PIP and Python from the terminal without having to cd into the python directory. So my PATH Variables are set correctly. Does anybody have the same issues or maybe a solution?  Best \nJo"}, "answers": [{"id": 38357171, "score": 5, "vote": 0, "content": "<blockquote>\n<p>PySide requires Python 2.6 or later and Qt 4.6 or better.</p>\n<p>Qt 5.x is currently not supported.</p>\n</blockquote>\n<p>From: <a href=\"https://pypi.python.org/pypi/PySide/1.2.4#installing-pyside-on-a-windows-system\" rel=\"noreferrer\">https://pypi.python.org/pypi/PySide/1.2.4#installing-pyside-on-a-windows-system</a></p>\n<p>So maybe using qt4.x(&gt;=4.6) instead of qt5.x can fix your problem.</p>\n<hr/>\n<p>I think the reason is that pip on your system install PySide from source package so you need a c/c++ complier.</p>\n<p>Maybe you can install PySide binary version directly following this:</p>\n<pre><code class=\"python\">pip install PySide --only-binary :all:\n</code></pre>\n<hr/>\n<p>If it doesn't work, please try to download \".exe\" file, and run it instead of using pip.</p>\n<p>\".exe\" from: <a href=\"https://download.qt.io/official_releases/pyside/\" rel=\"noreferrer\">https://download.qt.io/official_releases/pyside/</a></p>\n", "abstract": "PySide requires Python 2.6 or later and Qt 4.6 or better. Qt 5.x is currently not supported. From: https://pypi.python.org/pypi/PySide/1.2.4#installing-pyside-on-a-windows-system So maybe using qt4.x(>=4.6) instead of qt5.x can fix your problem. I think the reason is that pip on your system install PySide from source package so you need a c/c++ complier. Maybe you can install PySide binary version directly following this: If it doesn't work, please try to download \".exe\" file, and run it instead of using pip. \".exe\" from: https://download.qt.io/official_releases/pyside/"}]}, {"link": "https://stackoverflow.com/questions/10153890/python-framework-for-a-beginner", "question": {"id": "10153890", "title": "Python framework for a beginner", "content": "<p>I am new to python and only have read the Byte of Python ebook, but want to move to the web. I am tired of being a CMS tweaker and after I tried python, ruby and php, the python language makes more sense (if that makes any \"sense\" for the real programmers). I heard a lot of good things about Django, Pyramid, etc, but I dont want to pick the most used or the one with the most magic. Instead I was thinking about one that could \"teach\" me python along the way. My plan is to rebuild my portfolio using python and a framework and also benefit my python learning along the way. </p>\n<p>Thanks in advance. </p>\n", "abstract": "I am new to python and only have read the Byte of Python ebook, but want to move to the web. I am tired of being a CMS tweaker and after I tried python, ruby and php, the python language makes more sense (if that makes any \"sense\" for the real programmers). I heard a lot of good things about Django, Pyramid, etc, but I dont want to pick the most used or the one with the most magic. Instead I was thinking about one that could \"teach\" me python along the way. My plan is to rebuild my portfolio using python and a framework and also benefit my python learning along the way.  Thanks in advance. "}, "answers": [{"id": 10153923, "score": 3, "vote": 0, "content": "<p>Something lightweight/minimal like <a href=\"http://webpy.org/\" rel=\"nofollow\">web.py</a> or <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">flask</a> is IMO a much better place to start than Django if your focus is on learning and avoiding \"magic\" (I have used all three).</p>\n<p>You may have to wire up your own DB/persistence/ORM layer and even a templating system (web.py), but this will help you understand what is going on under the hood - there is documentation for both frameworks that walks you through this so dont worry.</p>\n<p>You should also learn about concepts like <a href=\"http://webpython.codepoint.net/wsgi_tutorial\" rel=\"nofollow\">WSGI</a>/middleware and <a href=\"http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller\" rel=\"nofollow\">MVC</a> if they are new to you. </p>\n<p>If you really want to learn from the core you can just straight-up write a plain WSGI/CGI app and wire up your components:</p>\n<ul>\n<li>URL routing </li>\n<li>Database persistence/ORM</li>\n<li>HTML Templating System</li>\n<li>Any other middleware</li>\n</ul>\n<p>If this is too difficult, you might want to come back to it later after playing with a more \"automatic\" framework like web.py or flask. Similarly if you find even those frameworks to be too difficult/minimal to use, then just start with Django (which has excellent documentation/tutorials); there is a lot of automatic \"magic\", but you just need to build familiarity with the domain of web development; all concepts translate pretty easily between different frameworks</p>\n", "abstract": "Something lightweight/minimal like web.py or flask is IMO a much better place to start than Django if your focus is on learning and avoiding \"magic\" (I have used all three). You may have to wire up your own DB/persistence/ORM layer and even a templating system (web.py), but this will help you understand what is going on under the hood - there is documentation for both frameworks that walks you through this so dont worry. You should also learn about concepts like WSGI/middleware and MVC if they are new to you.  If you really want to learn from the core you can just straight-up write a plain WSGI/CGI app and wire up your components: If this is too difficult, you might want to come back to it later after playing with a more \"automatic\" framework like web.py or flask. Similarly if you find even those frameworks to be too difficult/minimal to use, then just start with Django (which has excellent documentation/tutorials); there is a lot of automatic \"magic\", but you just need to build familiarity with the domain of web development; all concepts translate pretty easily between different frameworks"}, {"id": 10153909, "score": 2, "vote": 0, "content": "<p>Learning Python is a great idea; however, it will be an effort at the same time.</p>\n<p>Work through the Python tutorial over at <a href=\"http://docs.python.org/tutorial/\" rel=\"nofollow\">http://docs.python.org/tutorial/</a> before diving into one of the many web frameworks.</p>\n<p>I can personally recommend Django (https://www.djangoproject.com/) but you will require a solid foundation of Python before understanding its design/principles.</p>\n", "abstract": "Learning Python is a great idea; however, it will be an effort at the same time. Work through the Python tutorial over at http://docs.python.org/tutorial/ before diving into one of the many web frameworks. I can personally recommend Django (https://www.djangoproject.com/) but you will require a solid foundation of Python before understanding its design/principles."}]}, {"link": "https://stackoverflow.com/questions/4708482/start-with-some-c-framework-or-python", "question": {"id": "4708482", "title": "Start with some C++ framework or python", "content": "<p>I am thinking about to learn new language or framework. Now I deal with C# and WPF, WCF, Winforms. I have some free time so I would like get new skills.</p>\n<p>But I have dilema, start with some C++ framework (such as Platinum, Reason, Evocosm, ACF)\nor try Python / python framework.</p>\n<p>I you are on my place which possibility you choose?</p>\n<p>I am 17 years student, I have basic skills in C++ (OOP, little with STL), with Python I haven\u2019t any experience.</p>\n<p>What would be your choice and why?</p>\n", "abstract": "I am thinking about to learn new language or framework. Now I deal with C# and WPF, WCF, Winforms. I have some free time so I would like get new skills. But I have dilema, start with some C++ framework (such as Platinum, Reason, Evocosm, ACF)\nor try Python / python framework. I you are on my place which possibility you choose? I am 17 years student, I have basic skills in C++ (OOP, little with STL), with Python I haven\u2019t any experience. What would be your choice and why?"}, "answers": [{"id": 4708721, "score": 4, "vote": 0, "content": "<p>Python is incredibly easy to learn, very powerful, and very useful (especially for web development IMO).</p>\n<p>C++ is very widespread and is similar to other languages like C# and Java. Python's syntax is quite unique and AFAIK is not very similar to any other languages. Nonetheless, Python syntax is far easier to read and cleaner to write than C++.\nPython is also fairly widespread and is used by huge companies like Google.</p>\n<p>C++ has some wonderful libraries that can really help development, like Boost and Qt. Python also has excellent libraries like Django (for web development) and Twisted (for networking stuff). I find that C++ libraries tend to be broader in scope than Python libraries do, but the Python standard library is far better than the STL, IMO.</p>\n<p>Python recently had a backwards-incompatible release (Python 3), and most libraries haven't caught up yet, so you might have to use Python 2 to take advantage of some of Python's libraries.</p>\n<p>C++ is a lot faster than Python in terms of execution speed, but Python more than makes up for it in terms of development speed. Plus, Python allows you to write performance-critical parts of your application in C or C++.</p>\n<p>Overall, I'd say go with Python, mostly because it's easy to learn and use, and <a href=\"http://xkcd.com/353/\" rel=\"nofollow\">makes programming simple and fun</a>.</p>\n", "abstract": "Python is incredibly easy to learn, very powerful, and very useful (especially for web development IMO). C++ is very widespread and is similar to other languages like C# and Java. Python's syntax is quite unique and AFAIK is not very similar to any other languages. Nonetheless, Python syntax is far easier to read and cleaner to write than C++.\nPython is also fairly widespread and is used by huge companies like Google. C++ has some wonderful libraries that can really help development, like Boost and Qt. Python also has excellent libraries like Django (for web development) and Twisted (for networking stuff). I find that C++ libraries tend to be broader in scope than Python libraries do, but the Python standard library is far better than the STL, IMO. Python recently had a backwards-incompatible release (Python 3), and most libraries haven't caught up yet, so you might have to use Python 2 to take advantage of some of Python's libraries. C++ is a lot faster than Python in terms of execution speed, but Python more than makes up for it in terms of development speed. Plus, Python allows you to write performance-critical parts of your application in C or C++. Overall, I'd say go with Python, mostly because it's easy to learn and use, and makes programming simple and fun."}, {"id": 4708519, "score": 1, "vote": 0, "content": "<p>I recommend you to keep learning C++. Before you started looking for framework learn some popular search algorithm and try implement them. After that try implement some structures, like <code>queues</code>, <code>list</code>, <code>stack</code>, <code>binary trees</code> and some operation on them. Meanwhile play with <code>I/O</code> (for example, try write your stack to file and read it back to stack - in plain text and binary). </p>\n<p>It was my university tour on programming class. C++ is good choice because it is hard and multiparadigmats language so in future u will find much in common with other languages and you will be familiar with memory management system.</p>\n", "abstract": "I recommend you to keep learning C++. Before you started looking for framework learn some popular search algorithm and try implement them. After that try implement some structures, like queues, list, stack, binary trees and some operation on them. Meanwhile play with I/O (for example, try write your stack to file and read it back to stack - in plain text and binary).  It was my university tour on programming class. C++ is good choice because it is hard and multiparadigmats language so in future u will find much in common with other languages and you will be familiar with memory management system."}, {"id": 4708502, "score": 0, "vote": 0, "content": "<p>Personally I prefer Python, but profesionally, that is if you want a good job C++ is a better choice.</p>\n", "abstract": "Personally I prefer Python, but profesionally, that is if you want a good job C++ is a better choice."}, {"id": 4708606, "score": 0, "vote": 0, "content": "<p>I'd pick C++ for the sole reason that it's nothing like the languages you already know, even though it shares some syntax.</p>\n", "abstract": "I'd pick C++ for the sole reason that it's nothing like the languages you already know, even though it shares some syntax."}, {"id": 4708812, "score": 0, "vote": 0, "content": "<p>I strongly recommend you at least learn a bit of Python first, even if you decide stay in C++.</p>\n<p>One may say C++ is the most powerful program language.\nHowever, for a starter, there are too many traps and pitfalls.</p>\n<p>In your situation, Python is something that can let you know more about programming.\nSince you have no experience in Python, It's very easy to learn at the beginning.\nAnd it will show its effect very quickly.</p>\n<p>Plus, learning it will help you understand C++ more, like STL and Boost, they all have similarities with Python. Qt even has PyQt as a Python bindings. They have the same API, while the syntax in Python is clean and elegant.</p>\n<p>Here is a remarkable tutorial for Python: <a href=\"http://diveintopython3.org/\" rel=\"nofollow\">http://diveintopython3.org/</a></p>\n<p>I suggest you just try it a bit, it wouldn't hurt.</p>\n", "abstract": "I strongly recommend you at least learn a bit of Python first, even if you decide stay in C++. One may say C++ is the most powerful program language.\nHowever, for a starter, there are too many traps and pitfalls. In your situation, Python is something that can let you know more about programming.\nSince you have no experience in Python, It's very easy to learn at the beginning.\nAnd it will show its effect very quickly. Plus, learning it will help you understand C++ more, like STL and Boost, they all have similarities with Python. Qt even has PyQt as a Python bindings. They have the same API, while the syntax in Python is clean and elegant. Here is a remarkable tutorial for Python: http://diveintopython3.org/ I suggest you just try it a bit, it wouldn't hurt."}, {"id": 4708899, "score": 0, "vote": 0, "content": "<p>Well. Learning Python basics will take a week, and you will save the time spent in a year since it is such a good language for small hacks and scripts. So I suggest you learn it first.</p>\n<p>Learning C++ well will take you five to ten years, so there is not the same immediate benefit :)</p>\n", "abstract": "Well. Learning Python basics will take a week, and you will save the time spent in a year since it is such a good language for small hacks and scripts. So I suggest you learn it first. Learning C++ well will take you five to ten years, so there is not the same immediate benefit :)"}]}, {"link": "https://stackoverflow.com/questions/39072269/how-to-wrap-child-methods-multiple-times-in-an-inheritance-tree", "question": {"id": "39072269", "title": "How to wrap child methods multiple times in an inheritance tree?", "content": "<p>In a framework, I often want to provide a base class that the framework user sub classes. The base class provides controlled access to the base class. One way to accomplish this is to provide unimplemented methods with different names, for example by adding an underscore as prefix:</p>\n<pre><code class=\"python\">class Base:\n\n    def method(self, arg):\n        # ...\n        result = self._method(arg)\n        # ...\n        return result\n\n    def _method(self, arg):\n        raise NotImplementedError\n</code></pre>\n<p>However, this scheme only works for one level of inheritance. For more levels, the different method names make it hard to keep an overview of what's going on. Moreover, the framework user has to override different methods depending on the base class he chooses:</p>\n<pre><code class=\"python\">class Base:\n\n    def method(self, arg):\n        # ...\n        result = self._method_sub(arg)\n        # ...\n        return result\n\n    def _method_sub(self, arg):\n        raise NotImplementedError\n\nclass Intermediate(Base):\n\n    def _method_sub(self, arg):\n        # ...\n        result = self._method_sub_sub(arg)\n        # ...\n        return result\n\n    def _method_sub_sub(self, arg):\n        raise NotImplementedError\n</code></pre>\n<p>Calling super methods does not help when the base method needs to access return values of the child method. I feel object orientation is slightly flawed, missing a <code>child</code> keyword that allows to forward calls to the child class. What solutions exist to solve this problem?</p>\n", "abstract": "In a framework, I often want to provide a base class that the framework user sub classes. The base class provides controlled access to the base class. One way to accomplish this is to provide unimplemented methods with different names, for example by adding an underscore as prefix: However, this scheme only works for one level of inheritance. For more levels, the different method names make it hard to keep an overview of what's going on. Moreover, the framework user has to override different methods depending on the base class he chooses: Calling super methods does not help when the base method needs to access return values of the child method. I feel object orientation is slightly flawed, missing a child keyword that allows to forward calls to the child class. What solutions exist to solve this problem?"}, "answers": [{"id": 39074114, "score": 2, "vote": 0, "content": "<p>Does this give you what you want?</p>\n<pre><code class=\"python\">import abc\n\nclass Base(object):\n    __metaclass__ = abc.ABCMeta\n\n    def calculate(self):\n        result = self.doCalculate()\n        if 3 &lt; result &lt; 7: # do whatever validation you want\n            return result\n        else:\n            raise ValueError()\n\n    @abc.abstractmethod\n    def doCalculate(self):\n        pass\n\nclass Intermediate(Base):\n    __metaclass__ = abc.ABCMeta\n\nclass Leaf(Intermediate):\n    def doCalculate(self):\n        return 5\n\nleaf = Leaf()\nprint leaf.calculate()\n</code></pre>\n", "abstract": "Does this give you what you want?"}, {"id": 39074497, "score": 1, "vote": 0, "content": "<p>I think the question focuses on different points where behavior extension in an intermediate class can happen. The intermediate class obviously shall refine the \"<em>control</em>\" part here. </p>\n<h1>1st Solution</h1>\n<p>Mostly this can be done the classical way by just overriding  the \"safe\" method - particularly when \"<em>both Base and Intermediate are abstract classes provided by the framework</em>\", things can be organized so. \nThe final \"silly\" implementation class which does the spade work overrides the unsafe method. </p>\n<p>Think of this example:</p>\n<pre><code class=\"python\">class DoublePositive:\n    def double(self, x):\n        assert x &gt; 0\n        return self._double(x)\n    def _double(self, x):\n        raise NotImplementedError\n\nclass DoubleIntPositive(DoublePositive):\n    def double(self, x):\n        assert isinstance(x, int)\n        return DoublePositive.double(self, x)\n\nclass DoubleImplementation(DoubleIntPositive):\n    def _double(self, x):\n        return 2 * x\n</code></pre>\n<hr/>\n<h1>2nd Solution</h1>\n<p><strong>Calling virtual child class methods</strong>, thus behavior extension at \"inner\" execution points in a non-classical manner, could be done by introspection in Python - by stepping down the class <code>__bases__</code> or method resolution order <code>__mro__</code> with a helper function.</p>\n<p>Example:</p>\n<pre><code class=\"python\">def child_method(cls, meth, _scls=None):\n    scls = _scls or meth.__self__.__class__\n    for base in scls.__bases__:\n        if base is cls:\n            cmeth = getattr(scls, meth.__name__, None)\n            if cmeth.__func__ is getattr(cls, meth.__name__, None).__func__:\n                return child_method(scls, meth)  # next child\n            if cmeth:\n                return cmeth.__get__(meth.__self__)\n    for base in scls.__bases__:\n        r = child_method(cls, meth, base)  # next base\n        if r is not None:\n            return r\n    if _scls is None:\n        raise AttributeError(\"child method %r missing\" % meth.__name__)    \n    return None\n\nclass Base(object):\n    def double(self, x):\n        assert x &gt; 0\n        return Base._double(self, x)\n    def _double(self, x):\n        return child_method(Base, self._double)(x)        \nclass Inter(Base):\n    def _double(self, x):\n        assert isinstance(x, float)\n        return child_method(Inter, self._double)(x)\nclass Impl(Inter):\n    def _double(self, x):\n        return 2.0 * x\n</code></pre>\n<p>The helper function <code>child_method()</code> here is thus kind of opposite of Python's <code>super()</code>.</p>\n<hr/>\n<h1>3rd solution</h1>\n<p>If calls should be chainable flexibly, things can be organized as a kind of handler chain explicitly. Think of <code>self.addHandler(self.__privmeth)</code> in the <code>__init__()</code> chain   - or even via a tricky meta class.  Study e.g. the urllib2 handler chains.</p>\n", "abstract": "I think the question focuses on different points where behavior extension in an intermediate class can happen. The intermediate class obviously shall refine the \"control\" part here.  Mostly this can be done the classical way by just overriding  the \"safe\" method - particularly when \"both Base and Intermediate are abstract classes provided by the framework\", things can be organized so. \nThe final \"silly\" implementation class which does the spade work overrides the unsafe method.  Think of this example: Calling virtual child class methods, thus behavior extension at \"inner\" execution points in a non-classical manner, could be done by introspection in Python - by stepping down the class __bases__ or method resolution order __mro__ with a helper function. Example: The helper function child_method() here is thus kind of opposite of Python's super(). If calls should be chainable flexibly, things can be organized as a kind of handler chain explicitly. Think of self.addHandler(self.__privmeth) in the __init__() chain   - or even via a tricky meta class.  Study e.g. the urllib2 handler chains."}]}, {"link": "https://stackoverflow.com/questions/36179724/pass-a-robot-variable-by-reference-to-a-python-function", "question": {"id": "36179724", "title": "Pass a robot variable by reference to a python function", "content": "<p>I use my own python function in Robot Framework. I give 3 parameters, these parameters are Robot Framework variables. When I modify the variables in my function, it is not modified in Robot Framework. So I deduce the variables are passed by value and not by reference... Is there a way to pass the variable by reference ? Or else to return the 3 variables as a result ?</p>\n<p>Here is an example of Robot Framework code :</p>\n<pre><code class=\"python\">** Settings ***\n Library    OperatingSystem\n Library    myLib.MyLib    WITH NAME    MyLib\n\n Suite TearDown  teardown\n ** Variables **\n ${var}  azerty\n\n ** Test Cases **\n My test case\n         log     ${var}\n         myFunction    ${var}\n         log     ${var}\n</code></pre>\n<p>With my python library :</p>\n<pre><code class=\"python\">import sys\n\n class MyLib(object):\n     def __init__(self):\n         return\n\n     def myFunction(self,var):\n         var=\"another value\"\n</code></pre>\n<p>But as I said, the variable var remains \"azerty\" when I log it, and I would like the second log to print \"another value\" (as the function should change the value)</p>\n<p>Thank for your help !</p>\n", "abstract": "I use my own python function in Robot Framework. I give 3 parameters, these parameters are Robot Framework variables. When I modify the variables in my function, it is not modified in Robot Framework. So I deduce the variables are passed by value and not by reference... Is there a way to pass the variable by reference ? Or else to return the 3 variables as a result ? Here is an example of Robot Framework code : With my python library : But as I said, the variable var remains \"azerty\" when I log it, and I would like the second log to print \"another value\" (as the function should change the value) Thank for your help !"}, "answers": [{"id": 36180218, "score": 3, "vote": 0, "content": "<p>All values are essentially passed by reference. If you change the value, you change it everywhere, but if you assign a different value to the variable, you're just making that variable point at a different value, not changing the original value.</p>\n<p>For example:</p>\n<pre><code class=\"python\">def foo(d):\n    d['bar'] = 'baz'\nmy_dict = {}\nfoo(my_dict)\n</code></pre>\n<p>Here, <code>my_dict</code> will be altered as a side effect of calling <code>foo(my_dict)</code>.</p>\n<p>However:</p>\n<pre><code class=\"python\">def foo(d):\n    d = {'foo': 'bar'}\nmy_dict = {}\nfoo(my_dict)\n</code></pre>\n<p>Here, <code>my_dict</code> isn't changed. <code>d</code> is a local variable inside <code>foo</code>, and it's changed to point to a new dictionary instead of <code>my_dict</code>.</p>\n<p>You also need to be aware that in python, you have <em>mutable</em> and <em>immutable</em> values. Strings, for example, are <em>immutable</em>. You'll never be able to change a string, you can only use a string to construct new strings (and often you'll assign these new values back to the same variable so it'll have a similar effect); having a side effect of a function be changing one of the values that's passed in can only work if they are mutable values.</p>\n<p>It is generally a bad idea for your functions to change their arguments though. A better approach, is to have them return new values, which the caller can then do what they want with.</p>\n<pre><code class=\"python\">def myFunction(self, var):\n    var = \"another value\" # I assume that another values is based somehow on the original\n    return var\n</code></pre>\n<p>Alternatively, you could use attributes on your class:</p>\n<pre><code class=\"python\">class MyLib(object):\n    def __init__(self):\n        self.var = \"initial value\"\n    def myFunction(self):\n        self.var = \"another value\"\n</code></pre>\n", "abstract": "All values are essentially passed by reference. If you change the value, you change it everywhere, but if you assign a different value to the variable, you're just making that variable point at a different value, not changing the original value. For example: Here, my_dict will be altered as a side effect of calling foo(my_dict). However: Here, my_dict isn't changed. d is a local variable inside foo, and it's changed to point to a new dictionary instead of my_dict. You also need to be aware that in python, you have mutable and immutable values. Strings, for example, are immutable. You'll never be able to change a string, you can only use a string to construct new strings (and often you'll assign these new values back to the same variable so it'll have a similar effect); having a side effect of a function be changing one of the values that's passed in can only work if they are mutable values. It is generally a bad idea for your functions to change their arguments though. A better approach, is to have them return new values, which the caller can then do what they want with. Alternatively, you could use attributes on your class:"}, {"id": 36179963, "score": 0, "vote": 0, "content": "<p>The var in your python code is an local variable.</p>\n<pre><code class=\"python\">import sys\n\nclass MyLib(object):\n   def __init__(self):\n       return\n\n   def myFunction(self,var):\n       var=\"another value\"\n</code></pre>\n<p>This gives a variable in the myfunction  scope the name var and prevents the global variable from being read.\nif you want a function to change a global variable you need to declare it a global variable in the scope.\nlike this:</p>\n<pre><code class=\"python\">import sys\n\nclass MyLib(object):\n   def __init__(self):\n       return\n\n   def myFunction(self,var):\n       global var\n       var=\"another value\"\n</code></pre>\n<p>This should change the global variable into the another value string.</p>\n", "abstract": "The var in your python code is an local variable. This gives a variable in the myfunction  scope the name var and prevents the global variable from being read.\nif you want a function to change a global variable you need to declare it a global variable in the scope.\nlike this: This should change the global variable into the another value string."}]}, {"link": "https://stackoverflow.com/questions/7158952/which-web-application-framework-to-use-with-existing-database", "question": {"id": "7158952", "title": "Which web application framework to use with existing database?", "content": "<p>My company wants to start mobile web application development, as an addition to our own ERP software. We do not have any expert knowledge about this, that is why I have to research which tools/frameworks/languages we are going to use.</p>\n<p>We already have an existing database, and want to be able to quickly build an extra simple web app, to deploy some handy mobile functionality for our customers. For example, we want to start with making the agenda in our software available for mobile/tablet.</p>\n<p>We want to set it up like the following:</p>\n<ul>\n<li>we host the web application internally</li>\n<li>the web application remotely accesses to the customer's database (Advantage Database Server, can be query'd remotely through JSON), which can also be multiple customer's databases</li>\n</ul>\n<p>We develop our desktop software in Delphi, and therefore are not experienced web developers. A framework should meet the following needs:</p>\n<ul>\n<li>IDE available, maybe some other handy tools</li>\n<li>Preferably small learning curve</li>\n<li>Good documentation/support</li>\n<li>suited for mobile web development</li>\n<li>suited for simple and small web apps, there won't be any need for developing web apps with lots of functionality (most likely aimed at being able to perform two or three tasks)</li>\n</ul>\n<p>We will be making a choice for a direction for the coming years, so any possible guarantee about the framework being continued for a period of time is also nice.</p>\n<p>So far I've learned that we most likely won't need an ORM, since we  definitely won't change our database structure to suit the web app.</p>\n<p>So my question is:\nwhich frameworks should I take a closer look at, and which can already be ruled out?</p>\n<p>BTW: I'm not looking for an answer for a designer's framework such as Sencha Touch, JQueryMobile etc.</p>\n<p>Thanks in advance!</p>\n", "abstract": "My company wants to start mobile web application development, as an addition to our own ERP software. We do not have any expert knowledge about this, that is why I have to research which tools/frameworks/languages we are going to use. We already have an existing database, and want to be able to quickly build an extra simple web app, to deploy some handy mobile functionality for our customers. For example, we want to start with making the agenda in our software available for mobile/tablet. We want to set it up like the following: We develop our desktop software in Delphi, and therefore are not experienced web developers. A framework should meet the following needs: We will be making a choice for a direction for the coming years, so any possible guarantee about the framework being continued for a period of time is also nice. So far I've learned that we most likely won't need an ORM, since we  definitely won't change our database structure to suit the web app. So my question is:\nwhich frameworks should I take a closer look at, and which can already be ruled out? BTW: I'm not looking for an answer for a designer's framework such as Sencha Touch, JQueryMobile etc. Thanks in advance!"}, "answers": [{"id": 7159958, "score": 2, "vote": 0, "content": "<blockquote>\n<p>We develop our desktop software in Delphi, and therefore are not experienced web developers.</p>\n</blockquote>\n<p>In that case, I think you are solving the wrong problem:</p>\n<p>Hire a team lead who is (even if it is just as a contract role for the first project or two). You need to have someone on board who is aware of all the technologies involved (HTML, JavaScript, CSS, HTTP, SSL) and how to use them appropriately and securely. </p>\n<p>Let them determine what tools the team uses \u2014 they will have to support the team as it learns to use them.</p>\n<p>(If I was going to name a framework, it would be <a href=\"http://perldancer.org/\" rel=\"nofollow\">Dancer</a> as that meets most of your requirements)</p>\n", "abstract": "We develop our desktop software in Delphi, and therefore are not experienced web developers. In that case, I think you are solving the wrong problem: Hire a team lead who is (even if it is just as a contract role for the first project or two). You need to have someone on board who is aware of all the technologies involved (HTML, JavaScript, CSS, HTTP, SSL) and how to use them appropriately and securely.  Let them determine what tools the team uses \u2014 they will have to support the team as it learns to use them. (If I was going to name a framework, it would be Dancer as that meets most of your requirements)"}, {"id": 7160081, "score": 1, "vote": 0, "content": "<p>I have experience with many PHP frameworks (Zend, CakePHP, Kohana, CodeIgniter, Akelos and 2 in-house solutions). Also having some experience with Python's Django framework and lot's of experience with PHP Yii framework, I can recommend Yii both hands up. Even though every robust framework has quite some learning curve, I can say that Yii was the easiest to learn and I was left with most pleasure developing with it.</p>\n<ul>\n<li>It is PHP 5 framework, event driven, with support for callback closures and other PHP 5.3 features.</li>\n<li>Exceptionally well documented</li>\n<li>Extremely fast, due to the fact its component based - you can use only few basic components that you need, also it doesn't have hundreds of abstractions like in Zend so you won't get lost in object references</li>\n<li>Very friendly community - I have never been left without an answer if I explain my question well</li>\n<li>You can use Active Record ORM models but this is absolutely your own choice. You can go with its DAO (basically PDO wrapper) and write plain SQL. I would rarely do that. Using AR in most cases can save you lots of work and at least in Yii it wouldn't mind any kind of table schema. So I don't see a valid reason to not use AR except for complex queries.</li>\n<li>It is themeable, both simple views and widgets/modules - I've been amazed how easy it is to make a mobile version of a website just by creating a new theme.</li>\n<li>It has great support of i18n - its easy to make a multilingual web applications if at some point you need it</li>\n<li>Both Eclipse PDT and Netbeans 7 for PHP are great web development tools that have some additional support for Yii (though with them it was easy to develop such web apps even before their Yii support).</li>\n<li>It's comes with jQuery for it's core widgets for common tasks, yet you are free to use any JS framework you prefer (you probably would never use most of those core widgets for mobile too much anyway).</li>\n</ul>\n<p>There is even more to say, but go ahead and check its website:\n<a href=\"http://www.yiiframework.com/\" rel=\"nofollow\">http://www.yiiframework.com/</a></p>\n<p>No matter what framework you choose, most of the work for a successful mobile web app is left for you. </p>\n", "abstract": "I have experience with many PHP frameworks (Zend, CakePHP, Kohana, CodeIgniter, Akelos and 2 in-house solutions). Also having some experience with Python's Django framework and lot's of experience with PHP Yii framework, I can recommend Yii both hands up. Even though every robust framework has quite some learning curve, I can say that Yii was the easiest to learn and I was left with most pleasure developing with it. There is even more to say, but go ahead and check its website:\nhttp://www.yiiframework.com/ No matter what framework you choose, most of the work for a successful mobile web app is left for you. "}, {"id": 7166709, "score": 0, "vote": 0, "content": "<p>Check out <a href=\"http://www.web2py.com\" rel=\"nofollow\">web2py</a>, as it is probably one of the <a href=\"http://web2py.com/book/default/chapter/00\" rel=\"nofollow\">easiest to set up, learn, and use</a>. You can use it with any IDE or editor, but it also includes its own web-based IDE and administrative interface for application management and basic editing (see <a href=\"http://www.web2py.com/demo_admin/default/site\" rel=\"nofollow\">demo</a>). It has great <a href=\"http://web2py.com/book/\" rel=\"nofollow\">documentation</a>, and there's a very active and response <a href=\"https://groups.google.com/forum/?fromgroups&amp;pli=1#!forum/web2py\" rel=\"nofollow\">mailing list</a> if you need any help.</p>\n<p>Rather than an ORM, it includes a <a href=\"http://web2py.com/book/default/chapter/06\" rel=\"nofollow\">database abstraction layer</a> (DAL), which is a little closer to SQL and should provide some extra flexibility (it also includes some scripts to auto-generate web2py DAL models for existing <a href=\"http://code.google.com/p/web2py/source/browse/scripts/extract_mysql_models.py\" rel=\"nofollow\">MySQL</a> and <a href=\"http://code.google.com/p/web2py/source/browse/scripts/extract_pgsql_models.py\" rel=\"nofollow\">PostgreSQL</a> database tables). It <a href=\"http://web2py.com/book/default/chapter/10\" rel=\"nofollow\">includes jQuery</a>, and there's a <a href=\"http://web2py.com/plugins/plugin_jqmobile/about\" rel=\"nofollow\">plugin for jQuery Mobile</a>.</p>\n<p>web2py has been around for about four years and is still very actively developed, with new releases every month (yet it has maintained backward compatibility of the documented API since the beginning, and will continue to do so).</p>\n<p>InfoWorld recently published a review of six Python web frameworks, including web2py:</p>\n<ul>\n<li><a href=\"http://www.infoworld.com/d/application-development/pillars-python-six-python-web-frameworks-compared-169442\" rel=\"nofollow\">Overview/Comparison</a></li>\n<li><a href=\"http://www.infoworld.com/d/application-development/pillars-python-web2py-web-framework-168920?page=0,0&amp;1313029958=\" rel=\"nofollow\">web2py\nIn-Depth</a></li>\n</ul>\n", "abstract": "Check out web2py, as it is probably one of the easiest to set up, learn, and use. You can use it with any IDE or editor, but it also includes its own web-based IDE and administrative interface for application management and basic editing (see demo). It has great documentation, and there's a very active and response mailing list if you need any help. Rather than an ORM, it includes a database abstraction layer (DAL), which is a little closer to SQL and should provide some extra flexibility (it also includes some scripts to auto-generate web2py DAL models for existing MySQL and PostgreSQL database tables). It includes jQuery, and there's a plugin for jQuery Mobile. web2py has been around for about four years and is still very actively developed, with new releases every month (yet it has maintained backward compatibility of the documented API since the beginning, and will continue to do so). InfoWorld recently published a review of six Python web frameworks, including web2py:"}]}, {"link": "https://stackoverflow.com/questions/55071890/is-it-possible-to-program-web-app-using-python-without-any-framework", "question": {"id": "55071890", "title": "Is it possible to program web app using python without &quot;any&quot; framework?", "content": "<p>I'm worked on PHP previously and want to know python web programming. But everything for me is ambiguous.</p>\n<p>Is it possible to program web app using python without \"any\" framework?</p>\n<p>I know frameworks make everything easy for us and even if it is possible program web app without framework , it is not logical for big projects. But my target is just learning because I think start programming with frameworks is not good idea and we should know some information about pure python in web applications. So Imagine I want make very very simple webpage like hello world or small counter or small api. please do not offer me lightweight frameworks like flask. I just want know can pure python create webpages?</p>\n", "abstract": "I'm worked on PHP previously and want to know python web programming. But everything for me is ambiguous. Is it possible to program web app using python without \"any\" framework? I know frameworks make everything easy for us and even if it is possible program web app without framework , it is not logical for big projects. But my target is just learning because I think start programming with frameworks is not good idea and we should know some information about pure python in web applications. So Imagine I want make very very simple webpage like hello world or small counter or small api. please do not offer me lightweight frameworks like flask. I just want know can pure python create webpages?"}, "answers": [{"id": 55072052, "score": 2, "vote": 0, "content": "<p>Yes, technically, you can create a webpage with \"pure python,\" but you certainly wouldn't want to!  The most beautiful part of programming is the fact that there are millions of others who have worked hard to create \"frameworks,\" such as <code>Flask</code> or <code>Django</code>, that massively simplify the work that is required to make an application. </p>\n<p>If your goal is \"just learning\" then using a framework that you are unfamiliar with is a great way to start.  Learning programming is not about the technical knowledge required to run every aspect of your code, rather it is all about knowing <em>how to ask the right questions</em> for the particular application you are trying to build.</p>\n<p>Programmers are <strong>lazy</strong>.  If there is a shortcut that can be taken in code, you should take it (unless you have a really good reason not to).</p>\n<p>Think of this example:</p>\n<p>I have a list that was converted to a string:</p>\n<pre><code class=\"python\">myStringList = \"['foo', 'bar', 'foobar']\"\n</code></pre>\n<p>How can I convert this string to a format that my computer can interpret as a list?</p>\n<p>I <em>could</em> make a function like this:</p>\n<pre><code class=\"python\">def stringToList(node_or_string):\n    if isinstance(node_or_string, str):\n        node_or_string = parse(node_or_string, mode='eval')\n    if isinstance(node_or_string, Expression):\n        node_or_string = node_or_string.body\n    def _convert_num(node):\n        if isinstance(node, Constant):\n            if isinstance(node.value, (int, float, complex)):\n                return node.value\n        elif isinstance(node, Num):\n            return node.n\n        raise ValueError('malformed node or string: ' + repr(node))\n    def _convert_signed_num(node):\n        if isinstance(node, UnaryOp) and isinstance(node.op, (UAdd, USub)):\n            operand = _convert_num(node.operand)\n            if isinstance(node.op, UAdd):\n                return + operand\n            else:\n                return - operand\n        return _convert_num(node)\n    def _convert(node):\n        if isinstance(node, Constant):\n            return node.value\n        elif isinstance(node, (Str, Bytes)):\n            return node.s\n        elif isinstance(node, Num):\n            return node.n\n        elif isinstance(node, Tuple):\n            return tuple(map(_convert, node.elts))\n        elif isinstance(node, List):\n            return list(map(_convert, node.elts))\n        elif isinstance(node, Set):\n            return set(map(_convert, node.elts))\n        elif isinstance(node, Dict):\n            return dict(zip(map(_convert, node.keys),\n                            map(_convert, node.values)))\n        elif isinstance(node, NameConstant):\n            return node.value\n        elif isinstance(node, BinOp) and isinstance(node.op, (Add, Sub)):\n            left = _convert_signed_num(node.left)\n            right = _convert_num(node.right)\n            if isinstance(left, (int, float)) and isinstance(right, complex):\n                if isinstance(node.op, Add):\n                    return left + right\n                else:\n                    return left - right\n        return _convert_signed_num(node)\n    return _convert(node_or_string)\n</code></pre>\n<p>And call it like this:</p>\n<pre><code class=\"python\">myList = stringToList(myStringList)\n\nprint(myStringList[0] # [\nprint(myList[0]) # foo\n</code></pre>\n<p>Or I could simply use the wonderful <code>ast</code> package in the default python library and achieve the same results:</p>\n<pre><code class=\"python\">import ast\n\nmyList = ast.literal_eval(myStringList)\n\nprint(myList[0]) # foo\n</code></pre>\n<p>All credit for the <code>stringToList</code> function goes to the creators of the <a href=\"https://docs.python.org/3/library/ast.html\" rel=\"nofollow noreferrer\">ast package</a>, as I merely copied it from source code.</p>\n<p>To add an example of a \"good reason\" to create your own package/framework, lets say I need to use the <code>eval</code> function for whatever reason.  As we all know, <code>eval</code> is <a href=\"https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html\" rel=\"nofollow noreferrer\">dangerous</a> and, generally speaking, shouldn't be used.  If I really need to use it, and there aren't any alternatives (cough cough, <code>literal_eval</code>), the only solution would be to create my own version of the <code>eval</code> function, to avoid having exploitable code.</p>\n", "abstract": "Yes, technically, you can create a webpage with \"pure python,\" but you certainly wouldn't want to!  The most beautiful part of programming is the fact that there are millions of others who have worked hard to create \"frameworks,\" such as Flask or Django, that massively simplify the work that is required to make an application.  If your goal is \"just learning\" then using a framework that you are unfamiliar with is a great way to start.  Learning programming is not about the technical knowledge required to run every aspect of your code, rather it is all about knowing how to ask the right questions for the particular application you are trying to build. Programmers are lazy.  If there is a shortcut that can be taken in code, you should take it (unless you have a really good reason not to). Think of this example: I have a list that was converted to a string: How can I convert this string to a format that my computer can interpret as a list? I could make a function like this: And call it like this: Or I could simply use the wonderful ast package in the default python library and achieve the same results: All credit for the stringToList function goes to the creators of the ast package, as I merely copied it from source code. To add an example of a \"good reason\" to create your own package/framework, lets say I need to use the eval function for whatever reason.  As we all know, eval is dangerous and, generally speaking, shouldn't be used.  If I really need to use it, and there aren't any alternatives (cough cough, literal_eval), the only solution would be to create my own version of the eval function, to avoid having exploitable code."}]}, {"link": "https://stackoverflow.com/questions/12101926/how-can-i-crawl-an-html5-website-and-convert-its-html-content-to-pdf-using-a-py", "question": {"id": "12101926", "title": "How can I crawl an HTML5 website and convert its HTML content to PDF (using a Python or Ruby library)?", "content": "<p>I'm looking for an engine/solution/framework/gem/egg/lib/whatever for either Ruby or Python to log into a website, crawl HTML5 content (mainly charts on a canvas), and be able to convert it into a PDF file (or image).</p>\n<p>I'm able to write crawling scripts in mechanize so I can log onto the website and crawl the data, but mechanize does not understand complex JavaScript + HTML5.</p>\n<p>So basically I'm looking for an HTML5/JavaScript interpreter.</p>\n", "abstract": "I'm looking for an engine/solution/framework/gem/egg/lib/whatever for either Ruby or Python to log into a website, crawl HTML5 content (mainly charts on a canvas), and be able to convert it into a PDF file (or image). I'm able to write crawling scripts in mechanize so I can log onto the website and crawl the data, but mechanize does not understand complex JavaScript + HTML5. So basically I'm looking for an HTML5/JavaScript interpreter."}, "answers": [{"id": 12103074, "score": 2, "vote": 0, "content": "<p>This question is a bit confusing... sorry re-read my answer after reading the question again.</p>\n<p>Your question has two parts:</p>\n<p><strong>1. How can I crawl a website</strong></p>\n<p>Crawling can be done using Mechinize, but as you said, it doesn't do Javascript very well. So one alternative is to use Capybara-webkit or Selenium (firefox / chrome).</p>\n<p>Usually this is used for testing, but you may be able to drive it using Ruby code to navigate the various pages.</p>\n<p><strong>2. How can I convert the output to PDF</strong></p>\n<p>If you need to convert the crawled content to PDF, I don't think there is a way to do that. You may be able to take a screenshot (useful for testing) using Capybara-webkit or Selenium, but converting that to PDF may be just a matter of pumping it through some command line utility.</p>\n<p>If you're looking for a true HTML to PDF converter (usually used to generate reports from views in a rails app), then use <a href=\"https://github.com/pdfkit/PDFKit\" rel=\"nofollow\">PDFKit</a></p>\n<p>Basically it's a WebKit browser that can output to PDF. Really simple to run with.</p>\n", "abstract": "This question is a bit confusing... sorry re-read my answer after reading the question again. Your question has two parts: 1. How can I crawl a website Crawling can be done using Mechinize, but as you said, it doesn't do Javascript very well. So one alternative is to use Capybara-webkit or Selenium (firefox / chrome). Usually this is used for testing, but you may be able to drive it using Ruby code to navigate the various pages. 2. How can I convert the output to PDF If you need to convert the crawled content to PDF, I don't think there is a way to do that. You may be able to take a screenshot (useful for testing) using Capybara-webkit or Selenium, but converting that to PDF may be just a matter of pumping it through some command line utility. If you're looking for a true HTML to PDF converter (usually used to generate reports from views in a rails app), then use PDFKit Basically it's a WebKit browser that can output to PDF. Really simple to run with."}]}, {"link": "https://stackoverflow.com/questions/8261640/what-frameworks-represent-a-paradigm-different-than-the-mvc", "question": {"id": "8261640", "title": "What Frameworks represent a paradigm different than the MVC?", "content": "<p>We hear a lot about frameworks like Django, ROR and CodeIgniter in Python, ruby and PHP respectively, all of them represents the MVC paradigm, is there other paradigm different than MVC represented with a framework?, what's the framework name, the paradigm and the differences?</p>\n", "abstract": "We hear a lot about frameworks like Django, ROR and CodeIgniter in Python, ruby and PHP respectively, all of them represents the MVC paradigm, is there other paradigm different than MVC represented with a framework?, what's the framework name, the paradigm and the differences?"}, "answers": [{"id": 8261716, "score": 1, "vote": 0, "content": "<p><a href=\"http://en.wikipedia.org/wiki/Lift_%28web_framework%29\" rel=\"nofollow\">Lift</a></p>\n<p>from <a href=\"http://liftweb.net/lift_overview\" rel=\"nofollow\">http://liftweb.net/lift_overview</a></p>\n<blockquote>\n<p>So, Lift is not just another me-too MVC framework. It's a framework\n  that's got some core design principals behind it that have matured\n  very well. It's a framework that gives the dual advantages of security\n  and developer productivity. Lift is a framework that's built in layers\n  and gives the developer the right choices based on their needs...\n  choices for view generation, choices for persistence, etc.</p>\n</blockquote>\n", "abstract": "Lift from http://liftweb.net/lift_overview So, Lift is not just another me-too MVC framework. It's a framework\n  that's got some core design principals behind it that have matured\n  very well. It's a framework that gives the dual advantages of security\n  and developer productivity. Lift is a framework that's built in layers\n  and gives the developer the right choices based on their needs...\n  choices for view generation, choices for persistence, etc."}, {"id": 8261755, "score": 1, "vote": 0, "content": "<p>First of all neither RoR nor CodeIgniter is implementing MVC. They are using MVP pattern .. and are pretty bad at it too ( <a href=\"https://stackoverflow.com/questions/7621832/architecture-more-suitable-for-web-apps-than-mvc/7622038#7622038\">here is a small comment about how they are different</a> ).</p>\n<p>Alternative paradigms are:</p>\n<ul>\n<li><a href=\"http://c2.com/cgi/wiki?EventDrivenProgramming\" rel=\"nofollow noreferrer\">event driven programming</a></li>\n<li><a href=\"http://en.wikipedia.org/wiki/Data,_context_and_interaction\" rel=\"nofollow noreferrer\">data, context and interaction</a> or DCI</li>\n</ul>\n<p>... and there is n-Tier, but i am pretty clueless about where it stands in the pecking order.</p>\n", "abstract": "First of all neither RoR nor CodeIgniter is implementing MVC. They are using MVP pattern .. and are pretty bad at it too ( here is a small comment about how they are different ). Alternative paradigms are: ... and there is n-Tier, but i am pretty clueless about where it stands in the pecking order."}]}, {"link": "https://stackoverflow.com/questions/6144309/python-web-framework-async-tasks-long-polling-not-django", "question": {"id": "6144309", "title": "Python web framework + [a]sync tasks; long polling: not Django", "content": "<p>I need to create a project that has a web frontend to manage synchronous task execution (ala fabric), async tasks (AMQP), and long-polling/ajax for tabular viewing of results and queues/large, frequently changing datasets (think <code>tail -f syslog</code>).  I have an existing Python codebase for a lot of the implementation-specific stuff.  </p>\n<p>After looking at a bunch of existing frameworks, the obvious answer appears to be Django+Celery.  However, I do <em>not</em> want to \"learn Django\", nor do I need 95% of it's functionality.  I just need simple auth, maybe sqlalchemy, easy ajax, amqp, xmlrpc would be helpful.</p>\n<p>I would consider using Mongrel2, but I have a strong preference for RabbitMQ over 0MQ (for a few implementation-specific reasons).</p>\n<p>I originally spent a great deal of time learning Twisted, and ended up getting a few hundred useful LOC out of it, but I found that I was twisting (lol) too much of my platform code to fit it's callback model.  It actually 'fit the bill' very well (except with it's own amqp implementation), but it was so frustrating, and I went through so many iterations of code (one for each 'twisted ahah moment'), that it's 100% out.</p>\n<p>Can somebody please help me wade through the mire?  Tornado?  <strike>Pylons? repoze?</strike> Pyramid?  Flask?  Bottle?  CherryPy?  Web2py?  Paster/Webob? Anything else@ <a href=\"http://wiki.python.org/moin/WebFrameworks\" rel=\"nofollow\">http://wiki.python.org/moin/WebFrameworks</a>?</p>\n<p>Edit:</p>\n<p>To be clear, integration with RabbitMQ (or another amqp provider) is of the utmost importance, and is really the crux of problem.</p>\n", "abstract": "I need to create a project that has a web frontend to manage synchronous task execution (ala fabric), async tasks (AMQP), and long-polling/ajax for tabular viewing of results and queues/large, frequently changing datasets (think tail -f syslog).  I have an existing Python codebase for a lot of the implementation-specific stuff.   After looking at a bunch of existing frameworks, the obvious answer appears to be Django+Celery.  However, I do not want to \"learn Django\", nor do I need 95% of it's functionality.  I just need simple auth, maybe sqlalchemy, easy ajax, amqp, xmlrpc would be helpful. I would consider using Mongrel2, but I have a strong preference for RabbitMQ over 0MQ (for a few implementation-specific reasons). I originally spent a great deal of time learning Twisted, and ended up getting a few hundred useful LOC out of it, but I found that I was twisting (lol) too much of my platform code to fit it's callback model.  It actually 'fit the bill' very well (except with it's own amqp implementation), but it was so frustrating, and I went through so many iterations of code (one for each 'twisted ahah moment'), that it's 100% out. Can somebody please help me wade through the mire?  Tornado?  Pylons? repoze? Pyramid?  Flask?  Bottle?  CherryPy?  Web2py?  Paster/Webob? Anything else@ http://wiki.python.org/moin/WebFrameworks? Edit: To be clear, integration with RabbitMQ (or another amqp provider) is of the utmost importance, and is really the crux of problem."}, "answers": [{"id": 6144688, "score": 2, "vote": 0, "content": "<p>I don't have a full vision of python web frameworks but just want to share my point of view on 2 of them : </p>\n<ul>\n<li><p>Bottle is light and works fine. If you want something easy to learn and easy to use that may be the right choice. I used it for quite simple front-end apps running locally and i liked it very much.</p></li>\n<li><p>Tornado seems to me as a very good non-blocking server for real-time web app. Combined with <a href=\"https://github.com/MrJoes/tornadio\" rel=\"nofollow\">tornadio</a> it makes ajax-long-polling quite easy. However, it may be a little harder to learn than Bottle. I would recommend to have a look to the chat app in the example folder of tornadio.</p></li>\n</ul>\n<p>I hope it helps</p>\n", "abstract": "I don't have a full vision of python web frameworks but just want to share my point of view on 2 of them :  Bottle is light and works fine. If you want something easy to learn and easy to use that may be the right choice. I used it for quite simple front-end apps running locally and i liked it very much. Tornado seems to me as a very good non-blocking server for real-time web app. Combined with tornadio it makes ajax-long-polling quite easy. However, it may be a little harder to learn than Bottle. I would recommend to have a look to the chat app in the example folder of tornadio. I hope it helps"}, {"id": 6183031, "score": 1, "vote": 0, "content": "<p>If you are going to use AMQP long term then I would steer clear of Celery because they use AMQP in a wierd way that suggests the developers did not understand the AMQP model.</p>\n<p>bottle is a nice framework for knocking together RESTful apps (I use it to create mock servers for testing) and if you already have the code that does the real work, you may be surprised at how short a bottle app can be.</p>\n<p>I'm currently building Python apps using RabbitMQ and using amqplib by way of kombu. I originally chose kombu in case I wanted to swap libraries and use pika or something else, but now I wish that I had just gone with amqplib and built a proper Pythonic AMQP model on top of that.</p>\n<p>Do spend some time on the RabbitMQ site reading some of the blogs and slide presentations on AMQP before you get too deep into coding or you won't really understand the AMQP model and will make things harder for yourself.</p>\n<p>Please don't use xmlrpc unless you have to talk to other apps. Bottle makes simple RESTful apps so simple, that XMLRPC is just uneccessary complexity.</p>\n", "abstract": "If you are going to use AMQP long term then I would steer clear of Celery because they use AMQP in a wierd way that suggests the developers did not understand the AMQP model. bottle is a nice framework for knocking together RESTful apps (I use it to create mock servers for testing) and if you already have the code that does the real work, you may be surprised at how short a bottle app can be. I'm currently building Python apps using RabbitMQ and using amqplib by way of kombu. I originally chose kombu in case I wanted to swap libraries and use pika or something else, but now I wish that I had just gone with amqplib and built a proper Pythonic AMQP model on top of that. Do spend some time on the RabbitMQ site reading some of the blogs and slide presentations on AMQP before you get too deep into coding or you won't really understand the AMQP model and will make things harder for yourself. Please don't use xmlrpc unless you have to talk to other apps. Bottle makes simple RESTful apps so simple, that XMLRPC is just uneccessary complexity."}, {"id": 6144451, "score": -1, "vote": 0, "content": "<p>A couple of suggestions.</p>\n<p><a href=\"http://www.cherrypy.org/\" rel=\"nofollow\">CherryPy</a> is a great low level framework.  It doesn't provide a lot of functionality, but it provide a very easy system for mapping http requests to function calls.</p>\n<p><a href=\"http://www.cherrypy.org/\" rel=\"nofollow\">web.py</a> is another extremely lightweight and easy to use framework.  It is more comprehensive than CherryPy, including templates and other features.</p>\n<p>Plain <a href=\"http://wsgi.org/wsgi/\" rel=\"nofollow\">wsgi</a> is not a bad choice if your needs are extremely simple.  It is a little more complicated to do simple stuff than CherryPy or Web.py. WSGI is the lowest common denominator, these days most web frameworks are built on top of it.</p>\n", "abstract": "A couple of suggestions. CherryPy is a great low level framework.  It doesn't provide a lot of functionality, but it provide a very easy system for mapping http requests to function calls. web.py is another extremely lightweight and easy to use framework.  It is more comprehensive than CherryPy, including templates and other features. Plain wsgi is not a bad choice if your needs are extremely simple.  It is a little more complicated to do simple stuff than CherryPy or Web.py. WSGI is the lowest common denominator, these days most web frameworks are built on top of it."}]}, {"link": "https://stackoverflow.com/questions/50165061/masonite-typeerror-cant-convert-undefined-object-to-str-implicitly", "question": {"id": "50165061", "title": "Masonite - TypeError: Can&#39;t convert &#39;Undefined&#39; object to str implicitly", "content": "<p>I'm using the Masonite framework and I'm getting an error when registering a user after running the <code>craft auth</code> command in Masonite 1.6. The end of the stack trace looks like:</p>\n<p><code>{% for i, line in enumerate(open(stack.filename)) %}</code></p>\n<p><code>TypeError: Can't convert 'Undefined' object to str implicitly</code></p>\n", "abstract": "I'm using the Masonite framework and I'm getting an error when registering a user after running the craft auth command in Masonite 1.6. The end of the stack trace looks like: {% for i, line in enumerate(open(stack.filename)) %} TypeError: Can't convert 'Undefined' object to str implicitly"}, "answers": [{"id": 50165092, "score": 1, "vote": 0, "content": "<p>This was fixed in Masonite 1.6.3. The problem was that there was a bug with passwords not being decoded back into a string after being hashed with bcrypt. Apparently MySQL converts bytes into a string before inserting into the database but Postgres and SQLite does not. </p>\n<h2>Upgrade</h2>\n<p>The fix is to upgrade Masonite by running:</p>\n<p><code>pip install --upgrade -r requirements.txt</code></p>\n<p>to upgrade to the latest version (so <code>craft auth</code> will not create a controller with this bug again)</p>\n<h2>Patch</h2>\n<p>and to patch the current application by changing ~line 20 in your RegisterController to:</p>\n<pre><code class=\"python\">password = bytes(bcrypt.hashpw(\n    bytes(Request.input('password'), 'utf-8'), bcrypt.gensalt()\n)).decode('utf-8')\n</code></pre>\n", "abstract": "This was fixed in Masonite 1.6.3. The problem was that there was a bug with passwords not being decoded back into a string after being hashed with bcrypt. Apparently MySQL converts bytes into a string before inserting into the database but Postgres and SQLite does not.  The fix is to upgrade Masonite by running: pip install --upgrade -r requirements.txt to upgrade to the latest version (so craft auth will not create a controller with this bug again) and to patch the current application by changing ~line 20 in your RegisterController to:"}]}, {"link": "https://stackoverflow.com/questions/2719752/best-framework-on-gaepython-like-jquery-on-javascript-has-it", "question": {"id": "2719752", "title": "best framework on gae(python) ,like jquery on javascript ? has it?", "content": "<p>i want to find a framework to make my work simple on gae ,</p>\n<p>has it ?</p>\n<p>thanks</p>\n<p>i found  one, but not very good <a href=\"http://code.google.com/p/appengine-framework/\" rel=\"nofollow noreferrer\">http://code.google.com/p/appengine-framework/</a></p>\n", "abstract": "i want to find a framework to make my work simple on gae , has it ? thanks i found  one, but not very good http://code.google.com/p/appengine-framework/"}, "answers": [{"id": 2720062, "score": 1, "vote": 0, "content": "<p>There are a large number of frameworks you can use on App Engine - both those custom designed for it, and those that are general purpose and work fine on App Engine. If you've used a Python framework in the past, some small amount of searching will tell you if it will work on App Engine with or without modifications. Common frameworks that do work on App Engine include Django, web2py and Pylons.</p>\n<p>There's a fairly comprehensive list or open source tools <a href=\"http://groups.google.com/group/google-appengine/web/google-app-engine-open-source-projects\" rel=\"nofollow noreferrer\">here</a>.</p>\n", "abstract": "There are a large number of frameworks you can use on App Engine - both those custom designed for it, and those that are general purpose and work fine on App Engine. If you've used a Python framework in the past, some small amount of searching will tell you if it will work on App Engine with or without modifications. Common frameworks that do work on App Engine include Django, web2py and Pylons. There's a fairly comprehensive list or open source tools here."}]}, {"link": "https://stackoverflow.com/questions/73863350/streamlit-sessions-state-for-nested-buttons", "question": {"id": "73863350", "title": "Streamlit Sessions State for Nested Buttons", "content": "<p>I am trying to use session state in streamlit to have a two nested button in which first button click shows recommended movies and second submit button submits a review by user on which a model of sentiment analysis is working. But nested buttons require session state so i tried session state but always getting an error.  Below is the code.</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">if 'rec_btn' not in st.session_state:\n        st.session_state.rec_btn= False\n    \n    def callback():\n        st.session_state.rec_btn = True\n    \n    if st.button('RECOMMEND',key = 'rec_btn'):\n      col1, col2, col3 = st.columns(3)\n     \n      with col1:\n          st.image(output_images[0])\n          st.markdown(output_names[0].upper())\n          review = st.text_input(f\"How much you liked the movie {output_names[0]}\")\n          if st.button('submit',on_click=callback):\n                review = re.sub('[^a-zA-Z0-9 ]','',review)\n                review = tf_idf_vectorizer.transform([review])\n                ans = model_sentiment.predict(review)\n                if  ans == 0:\n                    review = 'Thanks for your positive review'\n                else:\n                    review = 'Sorry for your negative review'\n                st.write(review)\n</code></pre>\n<p>I am always getting error:</p>\n<pre><code class=\"python\">StreamlitAPIException: Values for st.button, st.download_button, st.file_uploader, \nand st.form cannot be set using st.session_state.\n</code></pre>\n", "abstract": "I am trying to use session state in streamlit to have a two nested button in which first button click shows recommended movies and second submit button submits a review by user on which a model of sentiment analysis is working. But nested buttons require session state so i tried session state but always getting an error.  Below is the code. I am always getting error:"}, "answers": [{"id": 73864763, "score": 0, "vote": 0, "content": "<p>The problem was with how i was using session state for button. Which i was able to understand using this code below. In this way nested button can work together.</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">import streamlit as st\nbutton1 = st.button('Recommend')\nif st.session_state.get('button') != True:\n\n    st.session_state['button'] = button1 # Saved the state\n\nif st.session_state['button'] == True:\n\n    st.write(\"button1 is True\")\n\n    if st.button('Check 2'):\n\n        st.write(\"Do your logic here\")\n</code></pre>\n", "abstract": "The problem was with how i was using session state for button. Which i was able to understand using this code below. In this way nested button can work together."}]}, {"link": "https://stackoverflow.com/questions/65272942/django-how-to-display-posts-from-specific-categories-on-a-page", "question": {"id": "65272942", "title": "Django: How to display posts from specific categories on a page", "content": "<p>i am building a blog in Django and where register user can write blog articles . I want to display posts that are associated with certain categories on one page. i tried to do that but it does not show the post associated to the article. here is my files</p>\n<p><strong>models.py</strong></p>\n<pre><code class=\"python\">    from django.db import models\nfrom django.contrib.auth.models import User\nfrom django.urls import reverse\nfrom datetime import datetime, date\n\n\nclass Category(models.Model):\n    name = models.CharField(max_length=255)\n\n    def __str__(self):\n        return self.name\n\n    def get_absolute_url(self):\n        # return reverse('article', args=(str(self.id)))\n        return reverse('home') # go to home page after article submission\n\n\nclass Post(models.Model):\n    title = models.CharField(max_length=255)\n    tags = models.CharField(max_length=255, default=\"Ryan's World\")\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\n    body = models.TextField()\n    post_date = models.DateField(auto_now_add=True)\n    category = models.CharField(max_length=255, default=\"uncategorized\")\n\n    def __str__(self):\n        return self.title+' | '+str(self.author)\n\n    def get_absolute_url(self):\n        # return reverse('article', args=(str(self.id)))\n        return reverse('home') # go to home page after article submission\n</code></pre>\n<p><strong>views.py</strong>\ncreated function based view</p>\n<pre><code class=\"python\"> from django.shortcuts import render\nfrom django.views.generic import ListView, DetailView, CreateView, UpdateView, DeleteView\nfrom .models import Post, Category\nfrom .forms import PostForm, EditForm\nfrom django.urls import reverse_lazy\n\n\nclass HomeView(ListView):\n    model = Post\n    template_name = 'home.html'\n    ordering = ['-id']\n\ndef CategoryView(request, cats):\n    category_posts = Post.objects.filter(category=cats)\n    return render(request, 'categories.html', {'cats':cats ,'category_posts': category_posts })\n\n    . . . \n</code></pre>\n<p><strong>urls.py</strong></p>\n<pre><code class=\"python\">from django.urls import path\n# from . import views\nfrom .views import HomeView, ArticleDetailView, AddPostView, UpdatePostView, DeletePostView, AddCategoryView, CategoryView\n\nurlpatterns = [\n    # path('', views.home , name='home'),\n    path('', HomeView.as_view(), name=\"home\"),\n    path('article/&lt;int:pk&gt;', ArticleDetailView.as_view(), name=\"article\"),\n    path('add_post/', AddPostView.as_view(), name='add_post'),\n    path('add_category/', AddCategoryView.as_view(), name='add_category'),\n    path('article/edit/&lt;int:pk&gt;', UpdatePostView.as_view(), name=\"updatearticle\"),\n    path('article/&lt;int:pk&gt;/remove', DeletePostView.as_view(), name=\"deletearticle\"),\n    path('category/&lt;str:cats&gt;/', CategoryView, name='category')\n</code></pre>\n<p>]</p>\n<p><strong>forms.py</strong></p>\n<pre><code class=\"python\">from django import forms\nfrom .models import Post, Category\n\n\nchoices = Category.objects.all().values_list('name','name')\n\nchoice_list = []\nfor item in choices:\n    choice_list.append(item)\n\nclass PostForm(forms.ModelForm):\n    class Meta:\n        model = Post\n        fields = ('title', 'tags', 'author','category' ,'body')\n\n        widgets = {\n            'title': forms.TextInput(attrs={'class':'form-control', 'placeholder': 'this is placeholder'}),\n            'tags': forms.TextInput(attrs={'class':'form-control'}),\n            'author': forms.Select(attrs={'class':'form-control'}),\n            'category': forms.Select( choices = choice_list, attrs={'class':'form-control'}),\n            'body': forms.Textarea(attrs={'class':'form-control'}),\n\n\n        }\n</code></pre>\n", "abstract": "i am building a blog in Django and where register user can write blog articles . I want to display posts that are associated with certain categories on one page. i tried to do that but it does not show the post associated to the article. here is my files models.py views.py\ncreated function based view urls.py ] forms.py"}, "answers": []}, {"link": "https://stackoverflow.com/questions/8466425/best-python-web-framework-for-my-api-server-needs", "question": {"id": "8466425", "title": "Best Python Web Framework for my API Server Needs", "content": "<p>I am working on developing two systems:  </p>\n<ol>\n<li>A system that will constantly retrieve economic data from a 3rd party data feed and push it into a MySQL DB (using sqlalchemy)  </li>\n<li>A server that will allow anyone to query the data in the db over a JSON AJAX API (similar to Yelp or Yahoo API for example)  </li>\n</ol>\n<p>I have two main questions:  </p>\n<ol>\n<li>Which Python framework should I use in 2)? Pyramid is my first choice, but if you strongly suggest against it or in favor of something else like Django or Pylons I am definitely wiling to consider it.  </li>\n<li>Should I develop the two system separately? Or should 1) be a part of 2), running within the framework (using crontab or celery for example)?   </li>\n</ol>\n", "abstract": "I am working on developing two systems:   I have two main questions:  "}, "answers": [{"id": 8466481, "score": 0, "vote": 0, "content": "<p>Depends on what stage you are at, I would suggest to develop 2 systems because the load to pull data from 3rd party and the load to handle the API would be different.  You can scale them into a different types of nodes if you want.</p>\n<p>Django-Tastypie (https://github.com/toastdriven/django-tastypie) is not bad, it supports all JSON, XML and YAML.  Also you can add OAuth easily.  Though, Django itself maybe a bit heavy for your needs at this time.</p>\n", "abstract": "Depends on what stage you are at, I would suggest to develop 2 systems because the load to pull data from 3rd party and the load to handle the API would be different.  You can scale them into a different types of nodes if you want. Django-Tastypie (https://github.com/toastdriven/django-tastypie) is not bad, it supports all JSON, XML and YAML.  Also you can add OAuth easily.  Though, Django itself maybe a bit heavy for your needs at this time."}, {"id": 8476511, "score": 0, "vote": 0, "content": "<p>You might want to check out <a href=\"http://www.web2py.com\" rel=\"nofollow\">web2py's</a> new functionality for easily generating <a href=\"http://web2py.com/book/default/chapter/09#RESTful-Web-Services\" rel=\"nofollow\">RESTful API's</a>, particularly its <a href=\"http://web2py.com/book/default/chapter/09#parse_as_rest-%28experimental%29\" rel=\"nofollow\">parse_as_rest</a> and <a href=\"http://web2py.com/book/default/chapter/09#smart_query-%28experimental%29\" rel=\"nofollow\">smart_query</a> functions. You might also consider using web2py's <a href=\"http://web2py.com/book/default/chapter/06\" rel=\"nofollow\">database abstraction layer</a> to handle #1.</p>\n<p>If you need any help, ask on the <a href=\"https://groups.google.com/forum/?fromgroups#!forum/web2py\" rel=\"nofollow\">mailing list</a>.</p>\n", "abstract": "You might want to check out web2py's new functionality for easily generating RESTful API's, particularly its parse_as_rest and smart_query functions. You might also consider using web2py's database abstraction layer to handle #1. If you need any help, ask on the mailing list."}, {"id": 13210600, "score": 0, "vote": 0, "content": "<p>I agree with Anthony, you should look at Web2Py. It is very easy to get started, very low learning cure and easy to deploy on many systems including Linux, Windows and Amazon.</p>\n<p>So far I have found nothing that Web2Py can not do. But more importantly it does things how you would think they should be done, so if you are not sure, very often a guess is good enough and it just works. If you do get stuck, it has by far the best and most up to date documentation for any Python Web Framework.</p>\n<p>Even with all it's great features, easy use and up to date documentation, you will also find that the web2py user group on Google, is like having a paid for help desk staffed 24 hours a day. Most questions are answered with a couple minutes and Massimo (The original creator of Web2Py) goes out of his way not only to help, but to implement new ideas, suggestions and bug fixes within days of them being raised in the group.</p>\n", "abstract": "I agree with Anthony, you should look at Web2Py. It is very easy to get started, very low learning cure and easy to deploy on many systems including Linux, Windows and Amazon. So far I have found nothing that Web2Py can not do. But more importantly it does things how you would think they should be done, so if you are not sure, very often a guess is good enough and it just works. If you do get stuck, it has by far the best and most up to date documentation for any Python Web Framework. Even with all it's great features, easy use and up to date documentation, you will also find that the web2py user group on Google, is like having a paid for help desk staffed 24 hours a day. Most questions are answered with a couple minutes and Massimo (The original creator of Web2Py) goes out of his way not only to help, but to implement new ideas, suggestions and bug fixes within days of them being raised in the group."}]}, {"link": "https://stackoverflow.com/questions/7058947/can-you-recommend-a-good-cross-platform-application-development-framework", "question": {"id": "7058947", "title": "Can you recommend a good cross-platform application development framework?", "content": "<p>I am looking to tap into the immense wisdom and experience of the Stackoverflow community to help me choose  a good cross-platform application development framework.</p>\n<p>The target application is a desktop graphics app supporting as many existing desktop environments as reasonable (Linux, BSD, Windows, Mac).  Ideally Open Source, but I do not want to limit the choice of framework so if you know of a closed source framework worth mentioning, please let us know.</p>\n<p>The ideal framework will provide the developers with as many prefabricated building blocks as possible so that they can focus on adding this app's specific functionality on top of the framework, rather than replicate generic functionality common to many apps.</p>\n<p>Requirements:</p>\n<ul>\n<li><p>Target desktop environments (Linux, BSD, Windows, Mac); not mobile\nand not server.</p></li>\n<li><p>Programming language is a given: combination of Python and C++.   </p></li>\n<li><p>The application itself is a graphic app that will require fast\nmanipulation in 3D space of images and data.</p></li>\n</ul>\n<p>The most important building blocks I am looking for are:</p>\n<ul>\n<li><p>GUI Toolkit.  Can be multi-platform or OS-specific, provided that the framework helps me manage OS-specific versions of the app; with a GUI editor that does not scare away the not-so-technically minded graphic designers</p></li>\n<li><p>3D graphics manipulation (OpenGL)</p></li>\n<li><p>Efficient manipulation of large data sets (tables with 50K entries)</p></li>\n<li><p>An efficient build system to manage the different supported operating systems, ideally cross-compiling</p></li>\n</ul>\n<p>Preferences:</p>\n<ul>\n<li><p>Preferably an Open Source Framwork</p></li>\n<li><p>Preferably primary development platform Linux</p></li>\n<li><p>Preferably IDE available as well</p></li>\n</ul>\n<p>Although I ask the question in the context of refactoring an application which has hit a ceiling, I kindly ask you to think of this as a green field to make it relevant also to developers looking to jump start the development of a new app.</p>\n<p>Thanks</p>\n", "abstract": "I am looking to tap into the immense wisdom and experience of the Stackoverflow community to help me choose  a good cross-platform application development framework. The target application is a desktop graphics app supporting as many existing desktop environments as reasonable (Linux, BSD, Windows, Mac).  Ideally Open Source, but I do not want to limit the choice of framework so if you know of a closed source framework worth mentioning, please let us know. The ideal framework will provide the developers with as many prefabricated building blocks as possible so that they can focus on adding this app's specific functionality on top of the framework, rather than replicate generic functionality common to many apps. Requirements: Target desktop environments (Linux, BSD, Windows, Mac); not mobile\nand not server. Programming language is a given: combination of Python and C++.    The application itself is a graphic app that will require fast\nmanipulation in 3D space of images and data. The most important building blocks I am looking for are: GUI Toolkit.  Can be multi-platform or OS-specific, provided that the framework helps me manage OS-specific versions of the app; with a GUI editor that does not scare away the not-so-technically minded graphic designers 3D graphics manipulation (OpenGL) Efficient manipulation of large data sets (tables with 50K entries) An efficient build system to manage the different supported operating systems, ideally cross-compiling Preferences: Preferably an Open Source Framwork Preferably primary development platform Linux Preferably IDE available as well Although I ask the question in the context of refactoring an application which has hit a ceiling, I kindly ask you to think of this as a green field to make it relevant also to developers looking to jump start the development of a new app. Thanks"}, "answers": [{"id": 7058963, "score": 10, "vote": 0, "content": "<p><a href=\"http://qt.nokia.com\" rel=\"nofollow\">Qt</a> covers just about everything:</p>\n<ul>\n<li>is proper open source, with active development and a vibrant community</li>\n<li>the portability aspect is covered: goes from embedded to big systems with everything (particular Windows, Mac OS X, Linux) in between; *BSD should not be an issue either, </li>\n<li>the GUI aspects, </li>\n<li>has good Open GL support</li>\n<li>has Python bindings (3rd party though)</li>\n<li>countless examples, </li>\n<li>very good documentation</li>\n<li>and much more</li>\n</ul>\n<p>That said, the topic has been addressed a few times before so make sure you peruse the old questions.</p>\n", "abstract": "Qt covers just about everything: That said, the topic has been addressed a few times before so make sure you peruse the old questions."}, {"id": 7061117, "score": 2, "vote": 0, "content": "<p>Besides QT, WxWidgets is an option. Now that QT has more aggressive licensing model, it may be less important to some. The big technical difference is WxWidgets actually uses the native toolkit on a given platform where QT provides its own. To some, this makes wxWidget apps feel more native; at least on Windows, Mac, Linux/GTK, or Sun/MOTIF platforms.    </p>\n<p>I've used the C++ side of the library for successful development and it integrates nicely with many different build setups. I have never used wxPython. </p>\n<p><a href=\"http://www.wxWidgets.org\" rel=\"nofollow\">http://www.wxWidgets.org</a></p>\n", "abstract": "Besides QT, WxWidgets is an option. Now that QT has more aggressive licensing model, it may be less important to some. The big technical difference is WxWidgets actually uses the native toolkit on a given platform where QT provides its own. To some, this makes wxWidget apps feel more native; at least on Windows, Mac, Linux/GTK, or Sun/MOTIF platforms.     I've used the C++ side of the library for successful development and it integrates nicely with many different build setups. I have never used wxPython.  http://www.wxWidgets.org"}]}, {"link": "https://stackoverflow.com/questions/1811940/i-want-to-develop-a-framework-in-python-for-desktop-based-applications-how-shou", "question": {"id": "1811940", "title": "I want to develop a framework in Python for desktop based applications. How should I go about it?", "content": "<p>I want to develop a desktop application framework in Python, much like QT, but how to go about it? Any tutorials or links related to it would be helpful!</p>\n", "abstract": "I want to develop a desktop application framework in Python, much like QT, but how to go about it? Any tutorials or links related to it would be helpful!"}, "answers": [{"id": 1811965, "score": 4, "vote": 0, "content": "<p>There is so many great freameworks like <a href=\"http://wxpython.org/download.php#binaries\" rel=\"nofollow noreferrer\">wxPython</a> (<a href=\"http://wiki.wxpython.org/How%20to%20Learn%20wxPython\" rel=\"nofollow noreferrer\">Tutorial</a>), <a href=\"http://www.riverbankcomputing.co.uk/software/pyqt/download\" rel=\"nofollow noreferrer\">PyQt</a> (<a href=\"http://www.diotavelli.net/PyQtWiki/Tutorials\" rel=\"nofollow noreferrer\">Tutorial</a>), <a href=\"http://www.pygtk.org/downloads.html\" rel=\"nofollow noreferrer\">PyGtk</a> (<a href=\"http://www.pygtk.org/tutorial.html\" rel=\"nofollow noreferrer\">Tutorial</a>) already.</p>\n<p>You just need to try your favorite one.</p>\n", "abstract": "There is so many great freameworks like wxPython (Tutorial), PyQt (Tutorial), PyGtk (Tutorial) already. You just need to try your favorite one."}, {"id": 1812027, "score": 3, "vote": 0, "content": "<p>You can get a pretty comprehensive list of Gui programming frameworks for Python here, <a href=\"http://wiki.python.org/moin/GuiProgramming\" rel=\"nofollow noreferrer\"><a href=\"http://wiki.python.org/moin/GuiProgramming\" rel=\"nofollow noreferrer\">http://wiki.python.org/moin/GuiProgramming</a></a> </p>\n", "abstract": "You can get a pretty comprehensive list of Gui programming frameworks for Python here, http://wiki.python.org/moin/GuiProgramming "}, {"id": 1811959, "score": 2, "vote": 0, "content": "<p>theres WxPython tutorial <a href=\"http://www.wxpython.org/tutorial.php\" rel=\"nofollow noreferrer\">http://www.wxpython.org/tutorial.php</a></p>\n<p>or PyQt <a href=\"http://zetcode.com/tutorials/pyqt4/\" rel=\"nofollow noreferrer\">http://zetcode.com/tutorials/pyqt4/</a></p>\n<p>or the ever stylish Tk <a href=\"http://www.pythonware.com/library/tkinter/introduction/\" rel=\"nofollow noreferrer\">http://www.pythonware.com/library/tkinter/introduction/</a></p>\n", "abstract": "theres WxPython tutorial http://www.wxpython.org/tutorial.php or PyQt http://zetcode.com/tutorials/pyqt4/ or the ever stylish Tk http://www.pythonware.com/library/tkinter/introduction/"}, {"id": 1813171, "score": 2, "vote": 0, "content": "<p>Well the best way to start is to look at the source code of the framework the other answers are talking about.</p>\n<p>First, try to use them all to build the same application with the functionalities you expect from a framework. Them, look at how it works under the hood.</p>\n<p>Secondly, build your framework, starting by writing your first widgets, then notice the problems with your current architecture, and re factor. Start again, until you have something stable and usable.</p>\n<p>Eventually, find out this was nice as training experience, but useless as a contribution to the software communities since you will never reach out the qualities of existing tools.</p>\n<p>Then give up and try to code your own MMORPG.</p>\n", "abstract": "Well the best way to start is to look at the source code of the framework the other answers are talking about. First, try to use them all to build the same application with the functionalities you expect from a framework. Them, look at how it works under the hood. Secondly, build your framework, starting by writing your first widgets, then notice the problems with your current architecture, and re factor. Start again, until you have something stable and usable. Eventually, find out this was nice as training experience, but useless as a contribution to the software communities since you will never reach out the qualities of existing tools. Then give up and try to code your own MMORPG."}]}, {"link": "https://stackoverflow.com/questions/8830977/whats-the-popular-and-recommendatory-lightweight-javaor-python-web-applicati", "question": {"id": "8830977", "title": "what&#39;s the popular and recommendatory lightweight java(or python?) web application framework?", "content": "<p>I need to develop a lightweight web application, it will: </p>\n<ol>\n<li>have a simple webgui for administrator to operate; </li>\n<li>have interface to invoke background existing modules for functionality implement, let's assume it has shell invoke interface firstly, it is not clear yet. </li>\n</ol>\n<p>so my question is do we have any popular and  recommendatory lightweight java web application framework? one of my candidate is jboss, do we have the recommendatory jboss version? </p>\n<p>we ever done a similar work which use python/flask, i just want to see if any other appropriate java framework. </p>\n<p>thanks, \nEmre</p>\n", "abstract": "I need to develop a lightweight web application, it will:  so my question is do we have any popular and  recommendatory lightweight java web application framework? one of my candidate is jboss, do we have the recommendatory jboss version?  we ever done a similar work which use python/flask, i just want to see if any other appropriate java framework.  thanks, \nEmre"}, "answers": [{"id": 8831030, "score": 6, "vote": 0, "content": "<p>Take a look at the <a href=\"http://www.playframework.org/\" rel=\"nofollow noreferrer\">Play Framework</a>.</p>\n<p>If you are not sure, maybe this great <a href=\"https://stackoverflow.com/a/5378476/617996\">answer</a> on question \"What is pro and contra of using Play Framework?\" may help you.</p>\n", "abstract": "Take a look at the Play Framework. If you are not sure, maybe this great answer on question \"What is pro and contra of using Play Framework?\" may help you."}, {"id": 8831159, "score": 4, "vote": 0, "content": "<p>For a lightweight Python web framework it's hard to beat Flask:</p>\n<p><a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">http://flask.pocoo.org/</a></p>\n", "abstract": "For a lightweight Python web framework it's hard to beat Flask: http://flask.pocoo.org/"}, {"id": 8831095, "score": 0, "vote": 0, "content": "<p>take a look at <a href=\"http://www.stripesframework.org/display/stripes/Home\" rel=\"nofollow\">apache stripes</a>.</p>\n<p>It is lightweight web application framework on the basis of Java5.0 and COC.</p>\n<p>you can fastly develop web applications and u will have less maintenance work.</p>\n", "abstract": "take a look at apache stripes. It is lightweight web application framework on the basis of Java5.0 and COC. you can fastly develop web applications and u will have less maintenance work."}, {"id": 8831216, "score": 0, "vote": 0, "content": "<p><strong>Spring MVC 3</strong> is in my experience the </p>\n<ul>\n<li>most flexible</li>\n<li>extensible and</li>\n<li>speedy web framework around</li>\n</ul>\n<p>Spring's main purpose was to introduce Dependency Injection for objects.</p>\n<p>Another Java lightweight MVC frameworks is <strong>Wicket</strong>.</p>\n<p><strong>Stripes</strong> framework</p>\n<ul>\n<li>Lightweight</li>\n<li>Action based</li>\n<li>Convention over configuration approach</li>\n<li>No XML</li>\n<li>Smart and fun to use</li>\n<li>Much positive feedback (search on SO)</li>\n</ul>\n", "abstract": "Spring MVC 3 is in my experience the  Spring's main purpose was to introduce Dependency Injection for objects. Another Java lightweight MVC frameworks is Wicket. Stripes framework"}, {"id": 8831308, "score": 0, "vote": 0, "content": "<p>Wonder why Struts has not found place in above list ? Is it too heavy ?</p>\n", "abstract": "Wonder why Struts has not found place in above list ? Is it too heavy ?"}]}, {"link": "https://stackoverflow.com/questions/2852056/simple-python-mvc-framework", "question": {"id": "2852056", "title": "Simple python mvc framework", "content": "<p>Is there any lightweight mvc webframework which is not necessary to install to the server?\nI need something simple, that i could just copy to the shared hosting. And it must handle urls other that <strong>localhost/test.py</strong>, something like this <strong>localhost/Blog/test</strong></p>\n", "abstract": "Is there any lightweight mvc webframework which is not necessary to install to the server?\nI need something simple, that i could just copy to the shared hosting. And it must handle urls other that localhost/test.py, something like this localhost/Blog/test"}, "answers": [{"id": 2852277, "score": 4, "vote": 0, "content": "<p>You should probably check out <a href=\"http://flask.pocoo.org/\" rel=\"nofollow noreferrer\">Flask</a> or <a href=\"http://bottle.paws.de/\" rel=\"nofollow noreferrer\">Bottle</a>, two nice Python microframeworks.  With an appropriate \"main\" Python script (to initialize your app and dispatch requests to it) and <code>mod_rewrite</code> rules in place, you can probably get pretty close to your goal of \"just copy[ing] to the shared hosting\" with nice URLs.</p>\n<p>Flask has <a href=\"http://flask.pocoo.org/docs/deploying/cgi/\" rel=\"nofollow noreferrer\">good documentation on deploying via CGI</a>, which is what you might have to use on your shared host.  (If your host supports FastCGI or <code>mod_wsgi</code>, those deployment options would be preferable.)</p>\n", "abstract": "You should probably check out Flask or Bottle, two nice Python microframeworks.  With an appropriate \"main\" Python script (to initialize your app and dispatch requests to it) and mod_rewrite rules in place, you can probably get pretty close to your goal of \"just copy[ing] to the shared hosting\" with nice URLs. Flask has good documentation on deploying via CGI, which is what you might have to use on your shared host.  (If your host supports FastCGI or mod_wsgi, those deployment options would be preferable.)"}, {"id": 2852087, "score": 3, "vote": 0, "content": "<p>Checkout web2py. Seems to be about the simplest python based webserver I can think of.</p>\n<p>Django might do, it's hefty, but it comes with it's own development server.</p>\n", "abstract": "Checkout web2py. Seems to be about the simplest python based webserver I can think of. Django might do, it's hefty, but it comes with it's own development server."}, {"id": 2853387, "score": 2, "vote": 0, "content": "<p>web2py includes everything (ssl-enabled web server, sqlite sql based transaction safe database, web based Integrated Development Enviroment, web based database interface) in one package. The web2py binaries for windows and mac also include Python itself. web2py does not require configuration or installation and can run off a usb drive. It was originally developed as a teaching tool for MVC.</p>\n", "abstract": "web2py includes everything (ssl-enabled web server, sqlite sql based transaction safe database, web based Integrated Development Enviroment, web based database interface) in one package. The web2py binaries for windows and mac also include Python itself. web2py does not require configuration or installation and can run off a usb drive. It was originally developed as a teaching tool for MVC."}, {"id": 8265865, "score": 1, "vote": 0, "content": "<p>checkout <a href=\"https://github.com/salimane/bottle-mvc\" rel=\"nofollow\">https://github.com/salimane/bottle-mvc</a> or <a href=\"https://github.com/salimane/flask-mvc\" rel=\"nofollow\">https://github.com/salimane/flask-mvc</a> . They are boilerplates that could get you started with controllers, models in separate folders. They are based on bottle and flask micro frameworks, no useless features, they give you the flexibility to plugin whatever modules you want.</p>\n", "abstract": "checkout https://github.com/salimane/bottle-mvc or https://github.com/salimane/flask-mvc . They are boilerplates that could get you started with controllers, models in separate folders. They are based on bottle and flask micro frameworks, no useless features, they give you the flexibility to plugin whatever modules you want."}]}, {"link": "https://stackoverflow.com/questions/221328/how-can-i-write-a-method-within-a-django-model-to-retrieve-related-objects", "question": {"id": "221328", "title": "How can I write a method within a Django model to retrieve related objects?", "content": "<p>I have two models. We'll call them object A and object B. Their design looks something like this:</p>\n<pre><code class=\"python\">class Foo(models.Model):\n     name = models.CharField()\n\nclass Bar(models.Model):\n     title = models.CharField()\n     Foo= models.ForeignKey('myapp.Foo')\n</code></pre>\n<p>Now, suppose I want to make a method within Foo that returns all Bar objects that reference that instance of Foo. How do I do this?</p>\n<pre><code class=\"python\">class Foo(models.Model):\n     name = models.CharField()\n     def returnBars(self):\n         ????\n</code></pre>\n", "abstract": "I have two models. We'll call them object A and object B. Their design looks something like this: Now, suppose I want to make a method within Foo that returns all Bar objects that reference that instance of Foo. How do I do this?"}, "answers": [{"id": 221338, "score": 10, "vote": 0, "content": "<p>You get this for free:</p>\n<p><a href=\"http://docs.djangoproject.com/en/dev/topics/db/queries/#backwards-related-objects\" rel=\"nofollow noreferrer\">http://docs.djangoproject.com/en/dev/topics/db/queries/#backwards-related-objects</a></p>\n<p>By default, you can access a Manager which gives you access to related items through a <code>RELATEDCLASSNAME_set</code> attribute:</p>\n<pre><code class=\"python\">some_foo.bar_set.all()\n</code></pre>\n<p>Or you can use the <code>related_name</code> argument to <code>ForeignKey</code> to specify the attribute which should hold the reverse relationship Manager:</p>\n<pre><code class=\"python\">class Foo(models.Model):\n     name = models.CharField()\n\nclass Bar(models.Model):\n     title = models.CharField()\n     foo = models.ForeignKey(Foo, related_name='bars')\n\n...\n\nsome_foo.bars.all()\n</code></pre>\n", "abstract": "You get this for free: http://docs.djangoproject.com/en/dev/topics/db/queries/#backwards-related-objects By default, you can access a Manager which gives you access to related items through a RELATEDCLASSNAME_set attribute: Or you can use the related_name argument to ForeignKey to specify the attribute which should hold the reverse relationship Manager:"}]}, {"link": "https://stackoverflow.com/questions/3255665/python-framework-for-desktop-database-application", "question": {"id": "3255665", "title": "Python Framework for Desktop Database Application", "content": "<p>Is there a framework to develop Desktop Database applications (some screens with CRUD screens) for Python? I am looking for something similar to Windows Forms, with the ability to associate TextField, Combos and other UI metaphors with <em>datasets</em> connected to relational <em>databases</em> such as MySQL, SQLServer, Oracle or PostgreSQL.\nThanks!</p>\n", "abstract": "Is there a framework to develop Desktop Database applications (some screens with CRUD screens) for Python? I am looking for something similar to Windows Forms, with the ability to associate TextField, Combos and other UI metaphors with datasets connected to relational databases such as MySQL, SQLServer, Oracle or PostgreSQL.\nThanks!"}, "answers": [{"id": 3255709, "score": 5, "vote": 0, "content": "<p><a href=\"http://www.python-camelot.com/\" rel=\"noreferrer\">Camelot</a></p>\n", "abstract": "Camelot"}, {"id": 3255725, "score": 3, "vote": 0, "content": "<p>PyQT should be able to do that, altough I never used it myself (<a href=\"http://www.informit.com/articles/article.aspx?p=30649&amp;seqNum=7\" rel=\"nofollow noreferrer\">See this article</a>)</p>\n", "abstract": "PyQT should be able to do that, altough I never used it myself (See this article)"}]}, {"link": "https://stackoverflow.com/questions/1390868/agile-software-development-in-python", "question": {"id": "1390868", "title": "Agile Software Development in Python", "content": "<p>I have been trying to learn a cross platform language with a fast learning curve, and so it seemed obvious Python was the logical choice.  I've never programmed before but I have been reading on pragmatic programming and agile development for quite some time.  The question comes, \"What is the single best choice to create a desktop software that is built heavily in python and can handle flexibilty of SQL injections, along with rich interface reporting?\" e.g. SQL Alchemy, ReportLabs. </p>\n<p>I have been looking into pyHed found in sourceforge.net.  However, it's on early development stage and is still not well documented.  I checked out Titanium Desktop from Appcelerator and the concept seems exciting, but it's not in stable condition yet.  </p>\n<p>Any suggestions, comments or ideas of what is currently being used? or new technologies out there now? </p>\n", "abstract": "I have been trying to learn a cross platform language with a fast learning curve, and so it seemed obvious Python was the logical choice.  I've never programmed before but I have been reading on pragmatic programming and agile development for quite some time.  The question comes, \"What is the single best choice to create a desktop software that is built heavily in python and can handle flexibilty of SQL injections, along with rich interface reporting?\" e.g. SQL Alchemy, ReportLabs.  I have been looking into pyHed found in sourceforge.net.  However, it's on early development stage and is still not well documented.  I checked out Titanium Desktop from Appcelerator and the concept seems exciting, but it's not in stable condition yet.   Any suggestions, comments or ideas of what is currently being used? or new technologies out there now? "}, "answers": [{"id": 1390905, "score": 3, "vote": 0, "content": "<p>For cross-platform GUI-based desktop software, my preference is <a href=\"http://qt.nokia.com/products/\" rel=\"nofollow noreferrer\">Qt</a> -- solid, mature, rich, great tools, strong underlying event-like approach (signals and slots).  Having Nokia behind it doesn't hurt, of course.</p>\n<p>The mature Python interface to that is <a href=\"http://www.riverbankcomputing.co.uk/software/pyqt/intro\" rel=\"nofollow noreferrer\">PyQt</a>, but if the alternative of GPL or for-pay licenses is a problem for you, <a href=\"http://www.pyside.org/\" rel=\"nofollow noreferrer\">PySide</a> is on the horizon (nowhere as mature as PyQt at this time, but by the time GPL'ing your software could possibly be a problem, PySide should be definitely ready for you;-). PySide is also sponsored by Nokia, according to <a href=\"http://eli.thegreenplace.net/2009/08/19/pyside-nokia-sponsored-lgpl-bindings-to-qt/\" rel=\"nofollow noreferrer\">this</a>.</p>\n<p>Beyond your choice of frameworks for GUI-based cross-platform desktop app development, of course, lie many, many other choices of tools and approaches -- but they're less crucial for solo development than they are for effective team cooperation, so, until teamwork is in prospect for you, it won't hurt to use whatever tools you find simplest (e.g., svn rather than a DVCS: I strongly recommend a DVCS such as hg, git or bazaar for team use, but for a solo developer I guess svn is still quite acceptable, and perhaps simpler to install and use).</p>\n", "abstract": "For cross-platform GUI-based desktop software, my preference is Qt -- solid, mature, rich, great tools, strong underlying event-like approach (signals and slots).  Having Nokia behind it doesn't hurt, of course. The mature Python interface to that is PyQt, but if the alternative of GPL or for-pay licenses is a problem for you, PySide is on the horizon (nowhere as mature as PyQt at this time, but by the time GPL'ing your software could possibly be a problem, PySide should be definitely ready for you;-). PySide is also sponsored by Nokia, according to this. Beyond your choice of frameworks for GUI-based cross-platform desktop app development, of course, lie many, many other choices of tools and approaches -- but they're less crucial for solo development than they are for effective team cooperation, so, until teamwork is in prospect for you, it won't hurt to use whatever tools you find simplest (e.g., svn rather than a DVCS: I strongly recommend a DVCS such as hg, git or bazaar for team use, but for a solo developer I guess svn is still quite acceptable, and perhaps simpler to install and use)."}, {"id": 1390896, "score": 2, "vote": 0, "content": "<p>There are many answers to your question because you raise a number of issues:</p>\n<p>Agile development is methodology and has very little to do with the language or software platform.  It is more a set of principles around which software teams organize themselves.  Refer to the works of Kent Beck for a bit more detail.</p>\n<p>Do you have an existing Python code base?  If you do have an existing Python code base you could get relatively far with pyHed.  Otherwise you could look at something like Java Swing or C#. </p>\n<p>But really you might want to consider moving the application to a web platform - that seems to be the direction almost all desktop apps are heading.  Django is well known Python framework.  Or any number of the Java, C#, Ruby platforms if it strikes your fancy.</p>\n<p>The jquery JavaScript framework is a good tool to provide rich Web interfaces.</p>\n", "abstract": "There are many answers to your question because you raise a number of issues: Agile development is methodology and has very little to do with the language or software platform.  It is more a set of principles around which software teams organize themselves.  Refer to the works of Kent Beck for a bit more detail. Do you have an existing Python code base?  If you do have an existing Python code base you could get relatively far with pyHed.  Otherwise you could look at something like Java Swing or C#.  But really you might want to consider moving the application to a web platform - that seems to be the direction almost all desktop apps are heading.  Django is well known Python framework.  Or any number of the Java, C#, Ruby platforms if it strikes your fancy. The jquery JavaScript framework is a good tool to provide rich Web interfaces."}, {"id": 1693112, "score": 2, "vote": 0, "content": "<p>you could have a look at the camelot framework <a href=\"http://www.conceptive.be/projects/camelot/\" rel=\"nofollow noreferrer\">http://www.conceptive.be/projects/camelot/</a></p>\n<p>It provides a pyqt gui on top of sqlalchemy mapped classes.  If you have questions, you can always\npost on our mailing list.</p>\n<p>Erik</p>\n", "abstract": "you could have a look at the camelot framework http://www.conceptive.be/projects/camelot/ It provides a pyqt gui on top of sqlalchemy mapped classes.  If you have questions, you can always\npost on our mailing list. Erik"}, {"id": 1561751, "score": 1, "vote": 0, "content": "<p>For what is worth, last week with no previous experience in python itself.. I managed to build a basic MVC app in about 4 days.. I used wxpython &amp; wxglade </p>\n<p>I think that if you know what your functional needs are, with a bit of googling &amp; a bunch of reading other peoples code, you can produce very usable stuff in a very short time.</p>\n<p><a href=\"http://www.wxpython.org/\" rel=\"nofollow noreferrer\">http://www.wxpython.org/</a></p>\n", "abstract": "For what is worth, last week with no previous experience in python itself.. I managed to build a basic MVC app in about 4 days.. I used wxpython & wxglade  I think that if you know what your functional needs are, with a bit of googling & a bunch of reading other peoples code, you can produce very usable stuff in a very short time. http://www.wxpython.org/"}, {"id": 1390898, "score": 0, "vote": 0, "content": "<p>You might want to checkout <a href=\"http://dabodev.com/\" rel=\"nofollow noreferrer\">http://dabodev.com/</a> too, I have no personally experience with it, just know of it existence and that there are a couple of enthusiasts.</p>\n<p>I would recommend that you don't concentrate too much about Agile or XP coding, especially when you start out, good old big design up front will save your skin before you burn it with headless hacking. </p>\n<p>That being said, I usually start coding a prototype/proof-of-concept before I actually design it and consequently write unit-tests for the first release.</p>\n<p>But the most important advice I would like to give you is, keep yourself motivated and happy :-)</p>\n", "abstract": "You might want to checkout http://dabodev.com/ too, I have no personally experience with it, just know of it existence and that there are a couple of enthusiasts. I would recommend that you don't concentrate too much about Agile or XP coding, especially when you start out, good old big design up front will save your skin before you burn it with headless hacking.  That being said, I usually start coding a prototype/proof-of-concept before I actually design it and consequently write unit-tests for the first release. But the most important advice I would like to give you is, keep yourself motivated and happy :-)"}, {"id": 1561591, "score": 0, "vote": 0, "content": "<p>I'm one of the developers of pyHed. We know that pyHed's documentation is not very good yet, but we are working very hard in it (it's the main thread of 1.1 version).\nHaving any doubt about pyHed please contact us in our <a href=\"http://www.pyhed.com/forum_us.html\" rel=\"nofollow noreferrer\">forum</a>, your question will be answered imediately...</p>\n<p>Vinicius Berni - pyHed Team</p>\n", "abstract": "I'm one of the developers of pyHed. We know that pyHed's documentation is not very good yet, but we are working very hard in it (it's the main thread of 1.1 version).\nHaving any doubt about pyHed please contact us in our forum, your question will be answered imediately... Vinicius Berni - pyHed Team"}]}, {"link": "https://stackoverflow.com/questions/1510084/is-there-any-framework-like-ror-on-python-3000", "question": {"id": "1510084", "title": "Is there any framework like RoR on Python 3000?", "content": "<p>One of the feature I like in RoR is the db management, it can hide all the sql statement, also, it is very easy to change different db in RoR, is there any similar framework in Python 3000?</p>\n", "abstract": "One of the feature I like in RoR is the db management, it can hide all the sql statement, also, it is very easy to change different db in RoR, is there any similar framework in Python 3000?"}, "answers": [{"id": 1510214, "score": 5, "vote": 0, "content": "<p>This answer was awfully outdated. The current state of afairs is:</p>\n<ul>\n<li><a href=\"https://www.djangoproject.com/weblog/2012/mar/13/py3k/\" rel=\"nofollow noreferrer\">Django is close to supporting Python 3</a></li>\n<li><a href=\"http://www.cherrypy.org/\" rel=\"nofollow noreferrer\">CherryPy</a> <a href=\"http://www.cherrypy.org/wiki/WhatsNewIn32\" rel=\"nofollow noreferrer\">supports Python 3 since version 3.2</a></li>\n<li><a href=\"http://www.pylonsproject.org/\" rel=\"nofollow noreferrer\">Pyramid</a> has <a href=\"http://docs.pylonsproject.org/projects/pyramid/en/1.3-branch/whatsnew-1.3.html\" rel=\"nofollow noreferrer\">Python 3 support since 1.3</a></li>\n<li><a href=\"http://bottlepy.org/docs/dev/\" rel=\"nofollow noreferrer\">Bottle</a>, which is a lightweight WSGI micro web-framework, supports Python 3</li>\n</ul>\n<p>I'm sure this list will keep growing every coming month, specially considering that <a href=\"http://www.python.org/dev/peps/pep-0404/\" rel=\"nofollow noreferrer\">there will never be a Python 2.8</a>.</p>\n<p>2.7 will be the end of the line for Python 2 development, and now the official upgrade path from 2.7 is Python 3.x. I'm sure that with this state of affairs, Python 3 support from web frameworks is only going to get better and better.</p>\n<hr/>\n<p><sub>[OUTDATED]</sub><br/>\nPython 3 is not yet in high deployment. It's still lacking a lot of third party libraries.</p>\n<p>The recommended Python version is 2.6.x, as it's the most current, it's backwards compatible, and has many backported features from 3.1.</p>\n<p>For Python 2.6 you will find quite a few frameworks:</p>\n<ul>\n<li><a href=\"http://wiki.python.org/moin/Django\" rel=\"nofollow noreferrer\">Django</a></li>\n<li><a href=\"http://www.turbogears.org/\" rel=\"nofollow noreferrer\">Turbogears</a></li>\n<li><a href=\"http://wiki.python.org/moin/CherryPy\" rel=\"nofollow noreferrer\">CherryPy</a></li>\n<li><a href=\"http://www.zope.org/\" rel=\"nofollow noreferrer\">Zope</a></li>\n<li><a href=\"http://wiki.python.org/moin/WebFrameworks\" rel=\"nofollow noreferrer\">and many more</a></li>\n</ul>\n", "abstract": "This answer was awfully outdated. The current state of afairs is: I'm sure this list will keep growing every coming month, specially considering that there will never be a Python 2.8. 2.7 will be the end of the line for Python 2 development, and now the official upgrade path from 2.7 is Python 3.x. I'm sure that with this state of affairs, Python 3 support from web frameworks is only going to get better and better. [OUTDATED]\nPython 3 is not yet in high deployment. It's still lacking a lot of third party libraries. The recommended Python version is 2.6.x, as it's the most current, it's backwards compatible, and has many backported features from 3.1. For Python 2.6 you will find quite a few frameworks:"}, {"id": 1512245, "score": 2, "vote": 0, "content": "<p>I believe CherryPy is on the verge of being released for Python 3.X.</p>\n", "abstract": "I believe CherryPy is on the verge of being released for Python 3.X."}, {"id": 1510491, "score": 1, "vote": 0, "content": "<p>Python 3 isn't ready for web applications right now. The WSGI 1.0 specification isn't suitable for Py3k and the related standard libraries are 2to3 hacks that don't work consistently faced with bytes vs. unicode. It's a real mess.</p>\n<p>WEB-SIG are bashing out proposals for a WSGI revision; hopefully it can move forward soon, because although Python 3 isn't mainstream yet it's certainly heading that way, and the brokenness of webdev is rather embarrassing.</p>\n", "abstract": "Python 3 isn't ready for web applications right now. The WSGI 1.0 specification isn't suitable for Py3k and the related standard libraries are 2to3 hacks that don't work consistently faced with bytes vs. unicode. It's a real mess. WEB-SIG are bashing out proposals for a WSGI revision; hopefully it can move forward soon, because although Python 3 isn't mainstream yet it's certainly heading that way, and the brokenness of webdev is rather embarrassing."}, {"id": 1510218, "score": 0, "vote": 0, "content": "<p>Python 3 is not ready for practical use, because there is not yet enough libraries that have been updated to support Python 3. So the answer is: No.</p>\n<p>But there are LOADS of them on Python 2. Tens, at least.</p>\n<p>Django, Turbogears, BFG and of course the old man of the game: Zope. To tell which is best for you, you need to expand your requirements a lot. </p>\n", "abstract": "Python 3 is not ready for practical use, because there is not yet enough libraries that have been updated to support Python 3. So the answer is: No. But there are LOADS of them on Python 2. Tens, at least. Django, Turbogears, BFG and of course the old man of the game: Zope. To tell which is best for you, you need to expand your requirements a lot. "}, {"id": 1510161, "score": -1, "vote": 0, "content": "<p>There's Django but <a href=\"http://docs.djangoproject.com/en/dev/faq/install/#can-i-use-django-with-python-3-0\" rel=\"nofollow noreferrer\">it works with Python 2.3+ only for now</a>.</p>\n", "abstract": "There's Django but it works with Python 2.3+ only for now."}]}, {"link": "https://stackoverflow.com/questions/72060934/is-this-the-correct-way-of-making-primary-keys-in-django", "question": {"id": "72060934", "title": "Is this the correct way of making primary keys in django?", "content": "<pre><code class=\"python\">class profiles(models.model):\n    customer_ID = models.IntegerField().primary_key\n</code></pre>\n<p>Is this the correct way of making a primary key in django??</p>\n", "abstract": "Is this the correct way of making a primary key in django??"}, "answers": [{"id": 72060969, "score": 3, "vote": 0, "content": "<p>The correct syntax for primary key is-:</p>\n<pre><code class=\"python\">class profiles(models.model):\n    customer_ID = models.IntegerField(primary_key=True)\n</code></pre>\n", "abstract": "The correct syntax for primary key is-:"}, {"id": 72061074, "score": 2, "vote": 0, "content": "<blockquote>\n<p>Is this the correct way of making a primary key in django??</p>\n</blockquote>\n<p><strong>No</strong>. You use an <a href=\"https://docs.djangoproject.com/en/dev/ref/models/fields/#autofield\" rel=\"nofollow noreferrer\"><strong><code>AutoField</code></strong>\u00a0<sup>[Django-doc]</sup></a> for a primary key, since then the values are dispatched by the database, so:</p>\n<pre><code class=\"python\">class profiles(models.model):\n    customer_ID = models.<strong>AutoField(primary_key=True, editable=False)</strong></code></pre>\n<p>But you do not have to specify a primary key: if you do not specify one yourself, Django will add one with the name <code>id</code> to the model automatically.</p>\n", "abstract": "Is this the correct way of making a primary key in django?? No. You use an AutoField\u00a0[Django-doc] for a primary key, since then the values are dispatched by the database, so: But you do not have to specify a primary key: if you do not specify one yourself, Django will add one with the name id to the model automatically."}, {"id": 72063192, "score": 1, "vote": 0, "content": "<p>No, That is not the correct way of making a primary key in Django, in fact you don't have to specify a Primary key for your model, because django will automatically add a field to hold the primary key for you.</p>\n<p>In your settings.py file, you will find a line with:</p>\n<p><strong>DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'</strong></p>\n<p>which will automatically creates an 'id' field in all of your models by default. The BigAutoField is a 64bit integer that automatically increments according to available ids from 1 to 9223372036854775807.</p>\n<pre><code class=\"python\">class Profile(models.Model):\n\n    customer_username = models.CharField(max_length=100)\n    customer_email = models.EmailField()\n</code></pre>\n<p>the Profile model will have three fields: <em><strong>id, customer_username, customer_email</strong></em></p>\n<p>but, in case you want to overide the primary key, let's say for instane by using UUIDs instead of regular ids, you can overide it as follows:</p>\n<pre><code class=\"python\">import uuid\n\nclass Profile(models.Model):\n\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4,editable=False)\n    customer_username = models.CharField(max_length=100)\n    customer_email = models.EmailField()\n</code></pre>\n<p>for more details, please refer to the django documentation: <a href=\"https://docs.djangoproject.com/en/4.0/ref/models/fields/#primary-key\" rel=\"nofollow noreferrer\">https://docs.djangoproject.com/en/4.0/ref/models/fields/#primary-key</a></p>\n", "abstract": "No, That is not the correct way of making a primary key in Django, in fact you don't have to specify a Primary key for your model, because django will automatically add a field to hold the primary key for you. In your settings.py file, you will find a line with: DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField' which will automatically creates an 'id' field in all of your models by default. The BigAutoField is a 64bit integer that automatically increments according to available ids from 1 to 9223372036854775807. the Profile model will have three fields: id, customer_username, customer_email but, in case you want to overide the primary key, let's say for instane by using UUIDs instead of regular ids, you can overide it as follows: for more details, please refer to the django documentation: https://docs.djangoproject.com/en/4.0/ref/models/fields/#primary-key"}]}, {"link": "https://stackoverflow.com/questions/6314746/django-js-framework", "question": {"id": "6314746", "title": "Django + js Framework", "content": "<p>I want to develop a web application using Django, but I can't decide which javascript framework to use. May be some of you guys has developed Django + JS Framework application? I personally prefer JQuery because it is easy and fast, but other libraries like Dojo has so cool features and widgets. That I want to switch to it! What do you guys think? Thanks in advance!</p>\n", "abstract": "I want to develop a web application using Django, but I can't decide which javascript framework to use. May be some of you guys has developed Django + JS Framework application? I personally prefer JQuery because it is easy and fast, but other libraries like Dojo has so cool features and widgets. That I want to switch to it! What do you guys think? Thanks in advance!"}, "answers": [{"id": 6321230, "score": 3, "vote": 0, "content": "<p>If you already have experience with jQuery, then go on with <strong>jQuery</strong>!</p>\n<p>I use Django + jQuery + Postgresql for all my projects and couldn't be any happier with this powerful combination.</p>\n", "abstract": "If you already have experience with jQuery, then go on with jQuery! I use Django + jQuery + Postgresql for all my projects and couldn't be any happier with this powerful combination."}, {"id": 6314809, "score": 2, "vote": 0, "content": "<p>jQuery and Scriptaculous are good choices,<br/>\nBut if you want to develop desktop like functionality over the web Qooxdoo helps alot :-)  </p>\n", "abstract": "jQuery and Scriptaculous are good choices,\nBut if you want to develop desktop like functionality over the web Qooxdoo helps alot :-)  "}, {"id": 6314791, "score": 1, "vote": 0, "content": "<p>My vote goes for pyjamas (which I use myself):\n<a href=\"http://pyjs.org/\" rel=\"nofollow\">http://pyjs.org/</a></p>\n<p>It's basically a Python version of GWT. If you're already using Django, you might as well write your entire web-app in python and avoid having to maintain multiple languages.</p>\n<p>Here is a quick Django + Pyjamas tutorial:\n<a href=\"http://code.google.com/p/pyjamas/wiki/DjangoWithPyjamas\" rel=\"nofollow\">http://code.google.com/p/pyjamas/wiki/DjangoWithPyjamas</a></p>\n<p>Don't get me wrong, I love jQuery, but having all my code in Python makes it a lot easier to maintain.</p>\n", "abstract": "My vote goes for pyjamas (which I use myself):\nhttp://pyjs.org/ It's basically a Python version of GWT. If you're already using Django, you might as well write your entire web-app in python and avoid having to maintain multiple languages. Here is a quick Django + Pyjamas tutorial:\nhttp://code.google.com/p/pyjamas/wiki/DjangoWithPyjamas Don't get me wrong, I love jQuery, but having all my code in Python makes it a lot easier to maintain."}]}]