[{"link": "https://stackoverflow.com/questions/2933/create-a-directly-executable-cross-platform-gui-app-using-python", "question": {"id": "2933", "title": "Create a directly-executable cross-platform GUI app using Python", "content": "<p>Python works on multiple platforms and can be used for desktop and web applications, thus I conclude that there is some way to compile it into an executable for Mac, Windows and Linux.</p>\n<p>The problem being I have no idea where to start or how to write a GUI with it, can anybody shed some light on this and point me in the right direction please?</p>\n", "abstract": "Python works on multiple platforms and can be used for desktop and web applications, thus I conclude that there is some way to compile it into an executable for Mac, Windows and Linux. The problem being I have no idea where to start or how to write a GUI with it, can anybody shed some light on this and point me in the right direction please?"}, "answers": [{"id": 2937, "score": 307, "vote": 0, "content": "<p>First you will need some GUI library with Python bindings and then (if you want) some program that will convert your python scripts into standalone executables.</p>\n<p><strong>Cross-platform GUI libraries with Python bindings (Windows, Linux, Mac)</strong></p>\n<p>Of course, there are many, but the most popular that I've seen in wild are:</p>\n<ul>\n<li><a href=\"http://wiki.python.org/moin/TkInter\" rel=\"noreferrer\">Tkinter</a>  - based on <a href=\"http://www.tcl.tk/\" rel=\"noreferrer\">Tk GUI toolkit</a> (de-facto standard GUI library for python, free for commercial projects)</li>\n<li><a href=\"http://www.wxpython.org/\" rel=\"noreferrer\">WxPython</a> - based on <a href=\"http://www.wxwidgets.org/\" rel=\"noreferrer\">WxWidgets</a> (popular, free for commercial projects)</li>\n<li><a href=\"https://www.qt.io\" rel=\"noreferrer\">Qt</a> using the <a href=\"https://riverbankcomputing.com/software/pyqt/intro\" rel=\"noreferrer\">PyQt bindings</a> or <a href=\"https://www.qt.io/qt-for-python\" rel=\"noreferrer\">Qt for Python</a>. The former is not free for commercial projects. The latter is less mature, but can be used for free.</li>\n</ul>\n<p>Complete list is at <a href=\"http://wiki.python.org/moin/GuiProgramming\" rel=\"noreferrer\">http://wiki.python.org/moin/GuiProgramming</a></p>\n<p><strong>Single executable (all platforms)</strong></p>\n<ul>\n<li><a href=\"https://www.pyinstaller.org/\" rel=\"noreferrer\">PyInstaller</a> - the most active(Could also be used with <code>PyQt</code>)</li>\n<li><a href=\"https://build-system.fman.io\" rel=\"noreferrer\">fbs</a> - if you chose Qt above</li>\n</ul>\n<p><strong>Single executable (Windows)</strong></p>\n<ul>\n<li><a href=\"http://www.py2exe.org/\" rel=\"noreferrer\">py2exe</a> - used to be the most popular</li>\n</ul>\n<p><strong>Single executable (Linux)</strong></p>\n<ul>\n<li><a href=\"http://wiki.python.org/moin/Freeze\" rel=\"noreferrer\">Freeze</a> - works the same way like py2exe but targets Linux platform</li>\n</ul>\n<p><strong>Single executable (Mac)</strong></p>\n<ul>\n<li><a href=\"https://pythonhosted.org/py2app/\" rel=\"noreferrer\">py2app</a> - again, works like py2exe but targets Mac OS</li>\n</ul>\n", "abstract": "First you will need some GUI library with Python bindings and then (if you want) some program that will convert your python scripts into standalone executables. Cross-platform GUI libraries with Python bindings (Windows, Linux, Mac) Of course, there are many, but the most popular that I've seen in wild are: Complete list is at http://wiki.python.org/moin/GuiProgramming Single executable (all platforms) Single executable (Windows) Single executable (Linux) Single executable (Mac)"}, {"id": 31859, "score": 60, "vote": 0, "content": "<p>Another system (not mentioned in the accepted answer yet) is PyInstaller, which worked for a PyQt project of mine when py2exe would not. I found it easier to use.</p>\n<p><a href=\"http://www.pyinstaller.org/\" rel=\"noreferrer\">http://www.pyinstaller.org/</a></p>\n<p>Pyinstaller is based on Gordon McMillan's Python Installer. Which is no longer available.</p>\n", "abstract": "Another system (not mentioned in the accepted answer yet) is PyInstaller, which worked for a PyQt project of mine when py2exe would not. I found it easier to use. http://www.pyinstaller.org/ Pyinstaller is based on Gordon McMillan's Python Installer. Which is no longer available."}, {"id": 12166, "score": 15, "vote": 0, "content": "<p>An alternative tool to py2exe is <a href=\"http://pypi.python.org/pypi/bbfreeze/\" rel=\"noreferrer\">bbfreeze</a> which generates executables for windows and linux. It's newer than py2exe and handles eggs quite well. I've found it magically works better without configuration for a wide variety of applications.</p>\n", "abstract": "An alternative tool to py2exe is bbfreeze which generates executables for windows and linux. It's newer than py2exe and handles eggs quite well. I've found it magically works better without configuration for a wide variety of applications."}, {"id": 265570, "score": 11, "vote": 0, "content": "<p>There's also <a href=\"http://pygtk.org/\" rel=\"noreferrer\">PyGTK</a>, which is basically a Python wrapper for the Gnome Toolkit.  I've found it easier to wrap my mind around than Tkinter, coming from pretty much no knowledge of GUI programming previously.  It works pretty well and has some good tutorials.  Unfortunately there isn't an installer for Python 2.6 for Windows yet, and may not be for a while.</p>\n", "abstract": "There's also PyGTK, which is basically a Python wrapper for the Gnome Toolkit.  I've found it easier to wrap my mind around than Tkinter, coming from pretty much no knowledge of GUI programming previously.  It works pretty well and has some good tutorials.  Unfortunately there isn't an installer for Python 2.6 for Windows yet, and may not be for a while."}, {"id": 2980, "score": 6, "vote": 0, "content": "<p>Since python is installed on nearly every non-Windows OS by default now, the only thing you really need to make sure of is that all of the non-standard libraries you use are installed.</p>\n<p>Having said that, it is possible to build executables that include the python interpreter, and any libraries you use.  This is likely to create a large executable, however.</p>\n<p>MacOS X even includes support in the Xcode IDE for creating full standalone GUI apps.  These can be run by any user running OS X.</p>\n", "abstract": "Since python is installed on nearly every non-Windows OS by default now, the only thing you really need to make sure of is that all of the non-standard libraries you use are installed. Having said that, it is possible to build executables that include the python interpreter, and any libraries you use.  This is likely to create a large executable, however. MacOS X even includes support in the Xcode IDE for creating full standalone GUI apps.  These can be run by any user running OS X."}, {"id": 15938, "score": 6, "vote": 0, "content": "<p>For the GUI itself:</p>\n<p><a href=\"http://wiki.python.org/moin/PyQt\" rel=\"noreferrer\">PyQT</a> is pretty much the reference.</p>\n<p>Another way to develop a rapid user interface is to write a web app,\nhave it run locally and display the app in the browser.</p>\n<p>Plus, if you go for the Tkinter option suggested by lubos hasko\nyou may want to try portablepy to have your app run on Windows environment\nwithout Python.</p>\n", "abstract": "For the GUI itself: PyQT is pretty much the reference. Another way to develop a rapid user interface is to write a web app,\nhave it run locally and display the app in the browser. Plus, if you go for the Tkinter option suggested by lubos hasko\nyou may want to try portablepy to have your app run on Windows environment\nwithout Python."}, {"id": 12167, "score": 4, "vote": 0, "content": "<p>I'm not sure that this is the best way to do it, but when I'm deploying Ruby GUI apps (not Python, but has the same \"problem\" as far as .exe's are concerned) on Windows, I just write a short launcher in C# that calls on my main script. It compiles to an executable, and I then have an application executable.</p>\n", "abstract": "I'm not sure that this is the best way to do it, but when I'm deploying Ruby GUI apps (not Python, but has the same \"problem\" as far as .exe's are concerned) on Windows, I just write a short launcher in C# that calls on my main script. It compiles to an executable, and I then have an application executable."}, {"id": 52721116, "score": 3, "vote": 0, "content": "<p>PySimpleGUI wraps tkinter and works on Python 3 and 2.7. It also runs on Qt, WxPython and in a web browser, using the same source code for all platforms.  </p>\n<p>You can make custom GUIs that utilize all of the same widgets that you find in tkinter (sliders, checkboxes, radio buttons, ...).  The code tends to be very compact and readable.</p>\n<pre><code class=\"python\">#!/usr/bin/env python\nimport sys\nif sys.version_info[0] &gt;= 3:\n    import PySimpleGUI as sg\nelse:\n    import PySimpleGUI27 as sg\n\nlayout = [[ sg.Text('My Window') ],\n          [ sg.Button('OK')]]\n\nwindow = sg.Window('My window').Layout(layout)\nbutton, value = window.Read()\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/VCegl.jpg\" rel=\"nofollow noreferrer\"><img alt=\"Image created from posted PySimpleGUI code\" src=\"https://i.stack.imgur.com/VCegl.jpg\"/></a></p>\n<p>As explained in the <a href=\"http://www.PySimpleGUI.org\" rel=\"nofollow noreferrer\">PySimpleGUI Documentation</a>, to <a href=\"https://pysimplegui.readthedocs.io/#creating-a-windows-exe-file\" rel=\"nofollow noreferrer\">build the .EXE file</a> you run:</p>\n<blockquote>\n<p>pyinstaller -wF MyGUIProgram.py</p>\n</blockquote>\n", "abstract": "PySimpleGUI wraps tkinter and works on Python 3 and 2.7. It also runs on Qt, WxPython and in a web browser, using the same source code for all platforms.   You can make custom GUIs that utilize all of the same widgets that you find in tkinter (sliders, checkboxes, radio buttons, ...).  The code tends to be very compact and readable.  As explained in the PySimpleGUI Documentation, to build the .EXE file you run: pyinstaller -wF MyGUIProgram.py"}, {"id": 41966334, "score": 2, "vote": 0, "content": "<pre><code class=\"python\"># I'd use tkinter for python 3\n\nimport tkinter\n\ntk = tkinter.Tk()\ntk.geometry(\"400x300+500+300\")\nl = Label(tk,text=\"\")\nl.pack()\ne = Entry(tk)\ne.pack()\n\ndef click():\n    e['text'] = 'You clicked the button'\n\nb = Button(tk,text=\"Click me\",command=click)\nb.pack()\n\ntk.mainloop()\n\n# After this I would you py2exe\n# search for the use of this module on stakoverflow\n# otherwise I could edit this to let you know how to do it\n</code></pre>\n<h1>py2exe</h1>\nThen you should use py2exe, for example, to bring in one folder all the files needed to run the app, even if the user has not python on his pc (I am talking of windows... for the apple os there is no need of an executable file, I think, as it come with python in it without any need of installing it.\n<h1>Create this file</h1>\n<ol>\n<li>Create a setup.py</li>\n</ol>\n<hr/>\n<p>with this code:</p>\n<pre><code class=\"python\">from distutils.core import setup\nimport py2exe\n\nsetup(console=['l4h.py'])\n</code></pre>\n<h2>save it in a folder</h2>\n<ol start=\"2\">\n<li>Put your program in the same folder of setup.py\nput in this folder the program you want to make it distribuitable:\nes: l4h.py</li>\n</ol>\n<h2>ps: change the name of the file (from l4h to anything you want, that is an example)</h2>\n<ol start=\"3\">\n<li>Run cmd from that folder (on the folder, right click + shift and choose start cmd here)</li>\n<li>write in cmd:&gt;python setup.py py2exe</li>\n<li>in the dist folder there are all the files you need</li>\n<li>you can zip it and distribute it</li>\n</ol>\n<h2>Pyinstaller</h2>\n<h3> Install it from cmd</h3>\n<p>**</p>\n<blockquote>\n<p>pip install pyinstaller</p>\n</blockquote>\n<p>**</p>\n<h3>Run it from the cmd from the folder where the file is</h3>\n**\n<blockquote>\n<p>pyinstaller file.py</p>\n</blockquote>\n<p>**</p>\n<h1>Update</h1>\n<p>Read this post to make an exe on windows with pyinstaller the proper way and with one file and images in it <a href=\"https://pythonprogramming.altervista.org/auto-py-to-exe-only-one-file-with-images-for-our-python-apps/\" rel=\"nofollow noreferrer\">https://pythonprogramming.altervista.org/auto-py-to-exe-only-one-file-with-images-for-our-python-apps/</a></p>\n", "abstract": "with this code: ** pip install pyinstaller ** pyinstaller file.py ** Read this post to make an exe on windows with pyinstaller the proper way and with one file and images in it https://pythonprogramming.altervista.org/auto-py-to-exe-only-one-file-with-images-for-our-python-apps/"}, {"id": 59677113, "score": 2, "vote": 0, "content": "<blockquote>\n<p><strong>!!! KIVY !!!</strong></p>\n</blockquote>\n<p>I was amazed seeing that no one mentioned Kivy!!!</p>\n<p>I have once done a project using Tkinter, although they do advocate that it has improved a lot, it still gives me a feel of windows 98, so I switched to <a href=\"https://kivy.org/#home\" rel=\"nofollow noreferrer\">Kivy</a>.</p>\n<p>I have been following a <a href=\"https://www.youtube.com/playlist?list=PLzMcBGfZo4-kSJVMyYeOQ8CXJ3z1k7gHn\" rel=\"nofollow noreferrer\">tutorial series</a> if it helps...</p>\n<p>Just to give an idea of how kivy looks, see this (The project I am working on):</p>\n<p><a href=\"https://i.stack.imgur.com/IMl67.png\" rel=\"nofollow noreferrer\"><img alt=\"The Project that I am working on\" src=\"https://i.stack.imgur.com/IMl67.png\"/></a></p>\n<p>And I have been working on it for barely a week now !\nThe benefits for Kivy you ask? Check <a href=\"https://www.reddit.com/r/kivy/comments/4omhca/what_exactly_are_the_benefits_of_kivy/\" rel=\"nofollow noreferrer\">this</a></p>\n<p>The reason why I chose this is, its look and that it can be used in mobile as well.</p>\n", "abstract": "!!! KIVY !!! I was amazed seeing that no one mentioned Kivy!!! I have once done a project using Tkinter, although they do advocate that it has improved a lot, it still gives me a feel of windows 98, so I switched to Kivy. I have been following a tutorial series if it helps... Just to give an idea of how kivy looks, see this (The project I am working on):  And I have been working on it for barely a week now !\nThe benefits for Kivy you ask? Check this The reason why I chose this is, its look and that it can be used in mobile as well."}, {"id": 2941, "score": 1, "vote": 0, "content": "<p>You don't need to <em>compile</em> python for Mac/Windows/Linux.  It is an interpreted language, so you simply need to have the Python interpreter installed on the system of your choice (it is available for all three platforms).</p>\n<p>As for a GUI library that works cross platform, Python's <a href=\"http://www.tcl.tk/\" rel=\"nofollow noreferrer\">Tk/Tcl</a> widget library works very well, and I believe is sufficiently cross platform.</p>\n<p><a href=\"http://docs.python.org/lib/module-Tkinter.html\" rel=\"nofollow noreferrer\">Tkinter</a> is the python interface to Tk/Tcl</p>\n<p>From the python project webpage: </p>\n<blockquote>\n<p>Tkinter is not the only GuiProgramming\n  toolkit for Python.  It is however the\n  most commonly used one, and almost the\n  only  one that is portable between\n  Unix, Mac and Windows</p>\n</blockquote>\n", "abstract": "You don't need to compile python for Mac/Windows/Linux.  It is an interpreted language, so you simply need to have the Python interpreter installed on the system of your choice (it is available for all three platforms). As for a GUI library that works cross platform, Python's Tk/Tcl widget library works very well, and I believe is sufficiently cross platform. Tkinter is the python interface to Tk/Tcl From the python project webpage:  Tkinter is not the only GuiProgramming\n  toolkit for Python.  It is however the\n  most commonly used one, and almost the\n  only  one that is portable between\n  Unix, Mac and Windows"}, {"id": 44433045, "score": 1, "vote": 0, "content": "<p>You can use <code>appJar</code> for basic GUI development.</p>\n<pre><code class=\"python\">from appJar import gui\n\nnum=1\n\ndef myfcn(btnName):   \n    global num\n    num +=1\n    win.setLabel(\"mylabel\", num)\n\nwin = gui('Test')\n\nwin.addButtons([\"Set\"],  [myfcn])\nwin.addLabel(\"mylabel\", \"Press the Button\")\n\nwin.go()\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/yin42.jpg\" rel=\"nofollow noreferrer\"><img alt=\"GUI when running\" src=\"https://i.stack.imgur.com/yin42.jpg\"/></a></p>\n<p>See documentation at <a href=\"http://appjar.info\" rel=\"nofollow noreferrer\">appJar site</a>.</p>\n<p>Installation is made with <code>pip install appjar</code> from command line.</p>\n", "abstract": "You can use appJar for basic GUI development.  See documentation at appJar site. Installation is made with pip install appjar from command line."}, {"id": 67035173, "score": 1, "vote": 0, "content": "<p>There's three things you could do:</p>\n<p>The first thing is to find a GUI Designer that can launch its code as standalone applications like .exe files. I use a version of MatDeck (for people using GUI Designers I recommend <a href=\"https://labdeck.com/python-designer/\" rel=\"nofollow noreferrer\">MD Python Designer</a>) as I believe(I use another version so I'm not too sure.) it allows me to convert the code to a standalone applications and by having it as such, there is no need to install the software on every PC that's going to run the program.</p>\n<p>The second option is partially bypassing the problem, launch the GUI as a web page. This would give you the most compatibility as most if not all OS can utilize it. Once again, you would need a GUI Designer that can convert its components into a web compatible format, I've done it once and I used the same version of MatDeck(<a href=\"https://labdeck.com/visionary-deck/\" rel=\"nofollow noreferrer\">Visionary Deck</a>), I would not recommend MD Python Designer this time as I don't know if it can turn its GUIs into websites using web assembly whereas Visionary Deck I've tried and tested. As with all things there are most likely other software this is just one I use frequently because I work a lot with Mathematics and Physics.</p>\n<p>The third option is also kind of bypassing the problem but do it in Tkinter and just ensure you have a Python IDE or just plain old Python and run the code, this will launch the GUI. This is a good solution and maybe the simplest but I wouldn't class it as the shortest or the best. If you only plan to switch between a few operating systems and computers this will probably be your best bet.</p>\n", "abstract": "There's three things you could do: The first thing is to find a GUI Designer that can launch its code as standalone applications like .exe files. I use a version of MatDeck (for people using GUI Designers I recommend MD Python Designer) as I believe(I use another version so I'm not too sure.) it allows me to convert the code to a standalone applications and by having it as such, there is no need to install the software on every PC that's going to run the program. The second option is partially bypassing the problem, launch the GUI as a web page. This would give you the most compatibility as most if not all OS can utilize it. Once again, you would need a GUI Designer that can convert its components into a web compatible format, I've done it once and I used the same version of MatDeck(Visionary Deck), I would not recommend MD Python Designer this time as I don't know if it can turn its GUIs into websites using web assembly whereas Visionary Deck I've tried and tested. As with all things there are most likely other software this is just one I use frequently because I work a lot with Mathematics and Physics. The third option is also kind of bypassing the problem but do it in Tkinter and just ensure you have a Python IDE or just plain old Python and run the code, this will launch the GUI. This is a good solution and maybe the simplest but I wouldn't class it as the shortest or the best. If you only plan to switch between a few operating systems and computers this will probably be your best bet."}]}, {"link": "https://stackoverflow.com/questions/3579568/choosing-a-file-in-python-with-simple-dialog", "question": {"id": "3579568", "title": "Choosing a file in Python with simple Dialog", "content": "<p>I would like to get file path as input in my Python console application.</p>\n<p>Currently I can only ask for full path as an input in the console.</p>\n<p>Is there a way to trigger a simple user interface where users can select file instead of typing the full path?</p>\n", "abstract": "I would like to get file path as input in my Python console application. Currently I can only ask for full path as an input in the console. Is there a way to trigger a simple user interface where users can select file instead of typing the full path?"}, "answers": [{"id": 3579625, "score": 272, "vote": 0, "content": "<p>How about using tkinter?</p>\n<pre><code class=\"python\">from Tkinter import Tk     # from tkinter import Tk for Python 3.x\nfrom tkinter.filedialog import askopenfilename\n\nTk().withdraw() # we don't want a full GUI, so keep the root window from appearing\nfilename = askopenfilename() # show an \"Open\" dialog box and return the path to the selected file\nprint(filename)\n</code></pre>\n<p>Done!</p>\n", "abstract": "How about using tkinter? Done!"}, {"id": 3579783, "score": 105, "vote": 0, "content": "<p>Python 3.x version of Etaoin's answer for completeness:</p>\n<pre><code class=\"python\">from tkinter.filedialog import askopenfilename\nfilename = askopenfilename()\n</code></pre>\n", "abstract": "Python 3.x version of Etaoin's answer for completeness:"}, {"id": 3579747, "score": 44, "vote": 0, "content": "<p>With <a href=\"https://easygui.readthedocs.io/en/master/\" rel=\"noreferrer\">EasyGui</a>:</p>\n<pre><code class=\"python\">import easygui\nprint(easygui.fileopenbox())\n</code></pre>\n<p>To install:</p>\n<pre><code class=\"python\">pip install easygui\n</code></pre>\n<p>Demo:</p>\n<pre><code class=\"python\">import easygui\neasygui.egdemo()\n</code></pre>\n", "abstract": "With EasyGui: To install: Demo:"}, {"id": 3579622, "score": 13, "vote": 0, "content": "<p>In Python 2 use the <code>tkFileDialog</code> module.</p>\n<pre><code class=\"python\">import tkFileDialog\n\ntkFileDialog.askopenfilename()\n</code></pre>\n<p>In Python 3 use the <code>tkinter.filedialog</code> module.</p>\n<pre><code class=\"python\">import tkinter.filedialog\n\ntkinter.filedialog.askopenfilename()\n</code></pre>\n", "abstract": "In Python 2 use the tkFileDialog module. In Python 3 use the tkinter.filedialog module."}, {"id": 67955123, "score": 7, "vote": 0, "content": "<p>This worked for me</p>\n<p>Reference :  <a href=\"https://www.youtube.com/watch?v=H71ts4XxWYU\" rel=\"noreferrer\">https://www.youtube.com/watch?v=H71ts4XxWYU</a></p>\n<pre><code class=\"python\">import  tkinter as tk\nfrom tkinter import filedialog\nroot = tk.Tk()\nroot.withdraw()\nfile_path = filedialog.askopenfilename()\nprint(file_path)\n</code></pre>\n", "abstract": "This worked for me Reference :  https://www.youtube.com/watch?v=H71ts4XxWYU"}, {"id": 16700372, "score": 5, "vote": 0, "content": "<p>Another option to consider is Zenity: <a href=\"http://freecode.com/projects/zenity\" rel=\"noreferrer\">http://freecode.com/projects/zenity</a>. </p>\n<p>I had a situation where I was developing a Python server application (no GUI component) and hence didn't want to introduce a dependency on any python GUI toolkits, but I wanted some of my debug scripts to be parameterized by input files and wanted to visually prompt the user for a file if they didn't specify one on the command line. Zenity was a perfect fit. To achieve this, invoke \"zenity --file-selection\" using the subprocess module and capture the stdout. Of course this solution isn't Python-specific. </p>\n<p>Zenity supports multiple platforms and happened to already be installed on our dev servers so it facilitated our debugging/development without introducing an unwanted dependency. </p>\n", "abstract": "Another option to consider is Zenity: http://freecode.com/projects/zenity.  I had a situation where I was developing a Python server application (no GUI component) and hence didn't want to introduce a dependency on any python GUI toolkits, but I wanted some of my debug scripts to be parameterized by input files and wanted to visually prompt the user for a file if they didn't specify one on the command line. Zenity was a perfect fit. To achieve this, invoke \"zenity --file-selection\" using the subprocess module and capture the stdout. Of course this solution isn't Python-specific.  Zenity supports multiple platforms and happened to already be installed on our dev servers so it facilitated our debugging/development without introducing an unwanted dependency. "}, {"id": 61377499, "score": 4, "vote": 0, "content": "<p>I obtained much better results with wxPython than tkinter, as suggested in this answer to a later duplicate question:</p>\n<p><a href=\"https://stackoverflow.com/a/9319832\">https://stackoverflow.com/a/9319832</a></p>\n<p>The wxPython version produced the file dialog that looked the same as the open file dialog from just about any other application on my OpenSUSE Tumbleweed installation with the xfce desktop, whereas tkinter produced something cramped and hard to read with an unfamiliar side-scrolling interface. </p>\n", "abstract": "I obtained much better results with wxPython than tkinter, as suggested in this answer to a later duplicate question: https://stackoverflow.com/a/9319832 The wxPython version produced the file dialog that looked the same as the open file dialog from just about any other application on my OpenSUSE Tumbleweed installation with the xfce desktop, whereas tkinter produced something cramped and hard to read with an unfamiliar side-scrolling interface. "}, {"id": 68787832, "score": 3, "vote": 0, "content": "<p>The suggested <code>root.withdraw()</code> (also <a href=\"https://stackoverflow.com/questions/9319317/quick-and-easy-file-dialog-in-python\">here</a>) hides the window instead of deleting it, and was causing problems when using interactive console in VS Code (\"duplicate execution\" error).</p>\n<p>Below two snippets to return the file path in \"Open\" or \"Save As\" (python 3 on Windows):</p>\n<pre><code class=\"python\">import tkinter as tk\nfrom tkinter import filedialog\n\nfiletypes = (\n    ('Text files', '*.TXT'),\n    ('All files', '*.*'),\n)\n\n# open-file dialog\nroot = tk.Tk()\nfilename = tk.filedialog.askopenfilename(\n    title='Select a file...',\n    filetypes=filetypes,\n)\nroot.destroy()\nprint(filename)\n\n# save-as dialog\nroot = tk.Tk()\nfilename = tk.filedialog.asksaveasfilename(\n    title='Save as...',\n    filetypes=filetypes,\n    defaultextension='.txt'\n)\nroot.destroy()\nprint(filename)\n# filename == 'path/to/myfilename.txt' if you type 'myfilename'\n# filename == 'path/to/myfilename.abc' if you type 'myfilename.abc'\n</code></pre>\n", "abstract": "The suggested root.withdraw() (also here) hides the window instead of deleting it, and was causing problems when using interactive console in VS Code (\"duplicate execution\" error). Below two snippets to return the file path in \"Open\" or \"Save As\" (python 3 on Windows):"}, {"id": 66517095, "score": 2, "vote": 0, "content": "<p>Here is a simple function to show a file chooser right in the terminal window.\nThis method supports selecting multiple files or directories. This has the added benefit of running even in an environment where GUI is not supported.</p>\n<pre><code class=\"python\">from os.path import join,isdir\nfrom pathlib import Path\nfrom enquiries import choose,confirm\n\ndef dir_chooser(c_dir=getcwd(),selected_dirs=None,multiple=True) :\n    '''\n        This function shows a file chooser to select single or\n        multiple directories.\n    '''\n    selected_dirs = selected_dirs if selected_dirs else set([])\n\n    dirs = { item for item in listdir(c_dir) if isdir(join(c_dir, item)) }\n    dirs = { item for item in dirs if join(c_dir,item) not in selected_dirs and item[0] != \".\" } # Remove item[0] != \".\" if you want to show hidde\n\n    options = [ \"Select This directory\" ]\n    options.extend(dirs)\n    options.append(\"\u2b05\")\n\n    info = f\"You have selected : \\n {','.join(selected_dirs)} \\n\" if len(selected_dirs) &gt; 0 else \"\\n\"\n    choise = choose(f\"{info}You are in {c_dir}\", options)\n\n    if choise == options[0] :\n        selected_dirs.add(c_dir)\n\n        if multiple and confirm(\"Do you want to select more folders?\") :\n            return get_folders(Path(c_dir).parent,selected_dirs,multiple)\n\n        return selected_dirs\n\n    if choise == options[-1] :\n        return get_folders(Path(c_dir).parent,selected_dirs,multiple)\n\n    return get_folders(join(c_dir,choise),selected_dirs,multiple)\n</code></pre>\n<p>To install enquiers do,</p>\n<blockquote>\n<p>pip install enquiries</p>\n</blockquote>\n", "abstract": "Here is a simple function to show a file chooser right in the terminal window.\nThis method supports selecting multiple files or directories. This has the added benefit of running even in an environment where GUI is not supported. To install enquiers do, pip install enquiries"}, {"id": 69393056, "score": 2, "vote": 0, "content": "<p>Using <a href=\"https://github.com/kivy/plyer\" rel=\"nofollow noreferrer\">Plyer</a> you can get a native file picker on Windows, macOS, Linux, and even Android.</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">import plyer\n\nplyer.filechooser.open_file()\n</code></pre>\n<p>There are two other methods, <code>choose_dir</code> and <code>save_file</code>. See details in the docs <a href=\"https://plyer.readthedocs.io/en/latest/#plyer.facades.FileChooser\" rel=\"nofollow noreferrer\">here</a>.</p>\n", "abstract": "Using Plyer you can get a native file picker on Windows, macOS, Linux, and even Android. There are two other methods, choose_dir and save_file. See details in the docs here."}, {"id": 68347357, "score": 0, "vote": 0, "content": "<p>I resolved all problem related to\n<code>from tkinter import * from tkinter import filedialog</code></p>\n<p>by just migrating from <strong>pycharm</strong> IDE to <strong>visual studio code</strong> IDE and every problem is solved.</p>\n", "abstract": "I resolved all problem related to\nfrom tkinter import * from tkinter import filedialog by just migrating from pycharm IDE to visual studio code IDE and every problem is solved."}]}, {"link": "https://stackoverflow.com/questions/3378953/is-there-a-visual-profiler-for-python", "question": {"id": "3378953", "title": "Is there a visual profiler for Python?", "content": "<p>I use <a href=\"http://docs.python.org/library/profile.html\" rel=\"noreferrer\">cProfile</a> now but I find it tedious to write pstats code just to query the statistics data.</p>\n<p>I'm looking for a visual tool that shows me what my Python code is doing in terms of CPU time and memory allocation.</p>\n<p>Some examples from the Java world are <a href=\"https://visualvm.dev.java.net/features.html\" rel=\"noreferrer\">visualvm</a> and <a href=\"http://www.ej-technologies.com/products/jprofiler/top10.html\" rel=\"noreferrer\">JProfiler</a>.</p>\n<ul>\n<li>Does something like this exist?</li>\n<li>Is there an IDE that does this?</li>\n<li>Would <a href=\"http://developer.apple.com/mac/library/documentation/DeveloperTools/Conceptual/InstrumentsUserGuide/ViewingandAnalyzingData/ViewingandAnalyzingData.html#//apple_ref/doc/uid/TP40004652-CH5-SW2\" rel=\"noreferrer\">dtrace</a> help?</li>\n</ul>\n<p>I know about <a href=\"https://stackoverflow.com/questions/1896032/using-cprofile-results-with-kcachegrind\">KCachegrind</a> for Linux, but I would prefer something that I can run on Windows/Mac without installing KDE.</p>\n", "abstract": "I use cProfile now but I find it tedious to write pstats code just to query the statistics data. I'm looking for a visual tool that shows me what my Python code is doing in terms of CPU time and memory allocation. Some examples from the Java world are visualvm and JProfiler. I know about KCachegrind for Linux, but I would prefer something that I can run on Windows/Mac without installing KDE."}, "answers": [{"id": 12557366, "score": 100, "vote": 0, "content": "<p>A friend and I have written a Python profile viewer called <a href=\"http://jiffyclub.github.io/snakeviz/\">SnakeViz</a> that runs in a web browser. If you are already successfully using <a href=\"http://www.vrplumber.com/programming/runsnakerun/\">RunSnakeRun</a> SnakeViz may not add that much value, but SnakeViz is much easier to install.</p>\n<p>Edit: SnakeViz supports Python 2 and 3 and works on all major systems.</p>\n", "abstract": "A friend and I have written a Python profile viewer called SnakeViz that runs in a web browser. If you are already successfully using RunSnakeRun SnakeViz may not add that much value, but SnakeViz is much easier to install. Edit: SnakeViz supports Python 2 and 3 and works on all major systems."}, {"id": 3379134, "score": 42, "vote": 0, "content": "<p>I'm only aware of <a href=\"http://www.vrplumber.com/programming/runsnakerun/\" rel=\"noreferrer\">RunSnakeRun</a>.</p>\n<p>There was also some talk some time ago about an integrated profiler in PyDev (Eclipse), but I don't know if that will ever see the light of day.</p>\n<p>Update: Unfortunately it seems that RunSnakeRun is no longer maintained, and it does not support Python 3.</p>\n", "abstract": "I'm only aware of RunSnakeRun. There was also some talk some time ago about an integrated profiler in PyDev (Eclipse), but I don't know if that will ever see the light of day. Update: Unfortunately it seems that RunSnakeRun is no longer maintained, and it does not support Python 3."}, {"id": 10572769, "score": 17, "vote": 0, "content": "<p>I use gprof2dot.py. The result looks <a href=\"http://log2.ch/misc/profile_tiny_straight_line_preview.png\" rel=\"noreferrer\">like this</a>. I use those commands:</p>\n<pre><code class=\"python\">  python -m cProfile -o profile.dat my_program.py\n  gprof2dot.py -f pstats profile.dat | dot -Tpng -o profile.png\n</code></pre>\n<p>You need <a href=\"http://www.graphviz.org/\" rel=\"noreferrer\">graphviz</a> and <a href=\"http://code.google.com/p/jrfonseca/wiki/Gprof2Dot\" rel=\"noreferrer\">gprof2dot.py</a> installed. You might like a <a href=\"https://github.com/martinxyz/config/blob/master/scripts/pyprof\" rel=\"noreferrer\">convenience shell script</a>.</p>\n", "abstract": "I use gprof2dot.py. The result looks like this. I use those commands: You need graphviz and gprof2dot.py installed. You might like a convenience shell script."}, {"id": 19877128, "score": 8, "vote": 0, "content": "<p><a href=\"https://github.com/spyder-ide/spyder\" rel=\"nofollow noreferrer\">Spyder</a> also provides a pretty nice gui for cProfile:</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/TsTDF.png\"/></p>\n", "abstract": "Spyder also provides a pretty nice gui for cProfile: "}, {"id": 3380462, "score": 4, "vote": 0, "content": "<p>This person created a graphical profile, described <a href=\"http://pyparsing.wikispaces.com/WhosUsingPyparsing#PythonScriptTraceVisualizer\" rel=\"nofollow noreferrer\">here</a>.  Maybe you could use that as a starting point for your own work.</p>\n", "abstract": "This person created a graphical profile, described here.  Maybe you could use that as a starting point for your own work."}, {"id": 16610534, "score": 4, "vote": 0, "content": "<p>Python Tools for Visual Studio contains a very well done graphical profiler: <a href=\"http://www.youtube.com/watch?v=VCx7rlPyEzE&amp;hd=1\" rel=\"nofollow noreferrer\">http://www.youtube.com/watch?v=VCx7rlPyEzE&amp;hd=1</a></p>\n<p><a href=\"http://pytools.codeplex.com/\" rel=\"nofollow noreferrer\">http://pytools.codeplex.com/</a></p>\n", "abstract": "Python Tools for Visual Studio contains a very well done graphical profiler: http://www.youtube.com/watch?v=VCx7rlPyEzE&hd=1 http://pytools.codeplex.com/"}, {"id": 32708791, "score": 4, "vote": 0, "content": "<p>KCacheGrind includes a version called QCacheGrind which does run <a href=\"https://josephscott.org/archives/2013/07/qcachegrind-kcachegrind-on-mac-os-x/\" rel=\"nofollow\">on Mac OS X</a> and <a href=\"http://sourceforge.net/projects/qcachegrindwin/\" rel=\"nofollow\">on Windows</a>.</p>\n", "abstract": "KCacheGrind includes a version called QCacheGrind which does run on Mac OS X and on Windows."}, {"id": 31962108, "score": 3, "vote": 0, "content": "<p>Try out Snakeviz. Very easy to install (via pip) and it's browser based.</p>\n<p><a href=\"https://jiffyclub.github.io/snakeviz/\" rel=\"nofollow\">https://jiffyclub.github.io/snakeviz/</a></p>\n", "abstract": "Try out Snakeviz. Very easy to install (via pip) and it's browser based. https://jiffyclub.github.io/snakeviz/"}, {"id": 12315088, "score": 2, "vote": 0, "content": "<p><a href=\"http://pycallgraph.slowchop.com/\" rel=\"nofollow noreferrer\">Python Call Graph</a> generates pics very similar to those in <a href=\"https://stackoverflow.com/a/10572769/1258041\">maxy's answer</a>. It also shows total time for each function, for some reason it's not reflected in the example graphs.</p>\n", "abstract": "Python Call Graph generates pics very similar to those in maxy's answer. It also shows total time for each function, for some reason it's not reflected in the example graphs."}, {"id": 30283894, "score": 1, "vote": 0, "content": "<p>I've written a browser-based visualization tool, <a href=\"https://pypi.python.org/pypi/ProfileEye/\" rel=\"nofollow\">profile_eye</a>, which operates on the output of <a href=\"https://github.com/jrfonseca/gprof2dot\" rel=\"nofollow\">gprof2dot</a>.</p>\n<p>gprof2dot is great at grokking many profiling-tool outputs, and does a great job at graph-element placement. The final rendering is a static graphic, which is often very cluttered. </p>\n<p>Using <a href=\"http://d3js.org/\" rel=\"nofollow\">d3.js</a> it's possible to remove much of that clutter, through relative fading of unfocused elements, tooltips, and a <a href=\"http://bost.ocks.org/mike/fisheye/\" rel=\"nofollow\">fisheye distortion</a>. </p>\n<p>For comparison, see <a href=\"http://pythonhosted.org//ProfileEye/gprof.html\" rel=\"nofollow\">profile_eye's visualization</a> of the <a href=\"https://github.com/jrfonseca/gprof2dot\" rel=\"nofollow\">canonical example used by gprof2dot</a>. For Python in particular, see <a href=\"http://pythonhosted.org//ProfileEye/recipe_colon.html\" rel=\"nofollow\">a cProfile output example</a>.</p>\n", "abstract": "I've written a browser-based visualization tool, profile_eye, which operates on the output of gprof2dot. gprof2dot is great at grokking many profiling-tool outputs, and does a great job at graph-element placement. The final rendering is a static graphic, which is often very cluttered.  Using d3.js it's possible to remove much of that clutter, through relative fading of unfocused elements, tooltips, and a fisheye distortion.  For comparison, see profile_eye's visualization of the canonical example used by gprof2dot. For Python in particular, see a cProfile output example."}, {"id": 41260241, "score": 1, "vote": 0, "content": "<p>Consider <strong>pyflame + flamegraph</strong></p>\n<p>Pyflame: A Ptracing Profiler For Python + flamegraph</p>\n<p><a href=\"https://github.com/uber/pyflame\" rel=\"nofollow noreferrer\">https://github.com/uber/pyflame</a></p>\n<p>You can trace towards a running python process using pyflame.</p>\n", "abstract": "Consider pyflame + flamegraph Pyflame: A Ptracing Profiler For Python + flamegraph https://github.com/uber/pyflame You can trace towards a running python process using pyflame."}, {"id": 11828128, "score": 0, "vote": 0, "content": "<p>I have used <a href=\"https://github.com/bdarnell/plop\" rel=\"nofollow\">plop</a> and found it to be very light-weight. Gives a quick insight into the perf. </p>\n", "abstract": "I have used plop and found it to be very light-weight. Gives a quick insight into the perf. "}]}, {"link": "https://stackoverflow.com/questions/6183276/how-do-i-run-selenium-in-xvfb", "question": {"id": "6183276", "title": "How do I run Selenium in Xvfb?", "content": "<p>I'm on EC2 instance. So there is no GUI.</p>\n<pre><code class=\"python\">$pip install selenium\n$sudo apt-get install firefox xvfb\n</code></pre>\n<p>Then I do this:</p>\n<pre><code class=\"python\">$Xvfb :1 -screen 0 1024x768x24 2&gt;&amp;1 &gt;/dev/null &amp;\n\n$DISPLAY=:1 java -jar selenium-server-standalone-2.0b3.jar\n05:08:31.227 INFO - Java: Sun Microsystems Inc. 19.0-b09\n05:08:31.229 INFO - OS: Linux 2.6.32-305-ec2 i386\n05:08:31.233 INFO - v2.0 [b3], with Core v2.0 [b3]\n05:08:32.121 INFO - RemoteWebDriver instances should connect to: http://127.0.0.1:4444/wd/hub\n05:08:32.122 INFO - Version Jetty/5.1.x\n05:08:32.123 INFO - Started HttpContext[/selenium-server/driver,/selenium-server/driver]\n05:08:32.124 INFO - Started HttpContext[/selenium-server,/selenium-server]\n05:08:32.124 INFO - Started HttpContext[/,/]\n05:08:32.291 INFO - Started org.openqa.jetty.jetty.servlet.ServletHandler@1186fab\n05:08:32.292 INFO - Started HttpContext[/wd,/wd]\n05:08:32.295 INFO - Started SocketListener on 0.0.0.0:4444\n05:08:32.295 INFO - Started org.openqa.jetty.jetty.Server@1ffb8dc\n</code></pre>\n<p>Great, everything should work now, right?</p>\n<p>When I run my code:</p>\n<pre><code class=\"python\">from selenium import webdriver\nfrom selenium.common.exceptions import NoSuchElementException\nfrom selenium.webdriver.common.keys import Keys\n\nbrowser = webdriver.Firefox() \nbrowser.get(\"http://www.yahoo.com\") \n</code></pre>\n<p>I get this:</p>\n<pre><code class=\"python\">Error: cannot open display: :0\n</code></pre>\n", "abstract": "I'm on EC2 instance. So there is no GUI. Then I do this: Great, everything should work now, right? When I run my code: I get this:"}, "answers": [{"id": 6300672, "score": 179, "vote": 0, "content": "<p>You can use <a href=\"http://pypi.python.org/pypi/PyVirtualDisplay\">PyVirtualDisplay</a> (a Python wrapper for Xvfb) to run headless WebDriver tests.</p>\n<pre><code class=\"python\">#!/usr/bin/env python\n\nfrom pyvirtualdisplay import Display\nfrom selenium import webdriver\n\ndisplay = Display(visible=0, size=(800, 600))\ndisplay.start()\n\n# now Firefox will run in a virtual display. \n# you will not see the browser.\nbrowser = webdriver.Firefox()\nbrowser.get('http://www.google.com')\nprint browser.title\nbrowser.quit()\n\ndisplay.stop()\n</code></pre>\n<p><a href=\"http://coreygoldberg.blogspot.com/2011/06/python-headless-selenium-webdriver.html\">more info</a></p>\n<hr/>\n<p>You can also use <a href=\"https://pypi.python.org/pypi/xvfbwrapper\">xvfbwrapper</a>, which is a similar module (but has no external dependencies):</p>\n<pre><code class=\"python\">from xvfbwrapper import Xvfb\n\nvdisplay = Xvfb()\nvdisplay.start()\n\n# launch stuff inside virtual display here\n\nvdisplay.stop()\n</code></pre>\n<p>or better yet, use it as a context manager:</p>\n<pre><code class=\"python\">from xvfbwrapper import Xvfb\n\nwith Xvfb() as xvfb:\n    # launch stuff inside virtual display here.\n    # It starts/stops in this code block.\n</code></pre>\n", "abstract": "You can use PyVirtualDisplay (a Python wrapper for Xvfb) to run headless WebDriver tests. more info You can also use xvfbwrapper, which is a similar module (but has no external dependencies): or better yet, use it as a context manager:"}, {"id": 11383637, "score": 44, "vote": 0, "content": "<p>The easiest way is probably to use xvfb-run:</p>\n<pre><code class=\"python\">DISPLAY=:1 xvfb-run java -jar selenium-server-standalone-2.0b3.jar\n</code></pre>\n<p>xvfb-run does the whole X authority dance for you, give it a try!</p>\n", "abstract": "The easiest way is probably to use xvfb-run: xvfb-run does the whole X authority dance for you, give it a try!"}, {"id": 6183321, "score": 37, "vote": 0, "content": "<p>open a terminal and run this command  <code>xhost +</code>. This commands needs to be run every time you restart your machine. If everything works fine may be you can add this to startup commands</p>\n<p>Also make sure in your /etc/environment file there is a line </p>\n<pre><code class=\"python\">export DISPLAY=:0.0 \n</code></pre>\n<p>And then, run your tests to see if your issue is resolved.</p>\n<p>All please note the comment from sardathrion below before using this.</p>\n", "abstract": "open a terminal and run this command  xhost +. This commands needs to be run every time you restart your machine. If everything works fine may be you can add this to startup commands Also make sure in your /etc/environment file there is a line  And then, run your tests to see if your issue is resolved. All please note the comment from sardathrion below before using this."}, {"id": 6183775, "score": 22, "vote": 0, "content": "<p>This is the setup I use:</p>\n<p>Before running the tests, execute:</p>\n<pre>export DISPLAY=:99\n/etc/init.d/xvfb start\n</pre>\n<p>And after the tests:</p>\n<pre>/etc/init.d/xvfb stop</pre>\n<p>The <code>init.d</code> file I use looks like this:</p>\n<pre>#!/bin/bash\n\nXVFB=/usr/bin/Xvfb\nXVFBARGS=\"$DISPLAY -ac -screen 0 1024x768x16\"\nPIDFILE=${HOME}/xvfb_${DISPLAY:1}.pid\ncase \"$1\" in\n  start)\n    echo -n \"Starting virtual X frame buffer: Xvfb\"\n    /sbin/start-stop-daemon --start --quiet --pidfile $PIDFILE --make-pidfile --background --exec $XVFB -- $XVFBARGS\n    echo \".\"\n    ;;\n  stop)\n    echo -n \"Stopping virtual X frame buffer: Xvfb\"\n    /sbin/start-stop-daemon --stop --quiet --pidfile $PIDFILE\n    echo \".\"\n    ;;\n  restart)\n    $0 stop\n    $0 start\n    ;;\n  *)\n  echo \"Usage: /etc/init.d/xvfb {start|stop|restart}\"\n  exit 1\nesac\nexit 0</pre>\n", "abstract": "This is the setup I use: Before running the tests, execute: And after the tests: The init.d file I use looks like this:"}, {"id": 33276949, "score": 4, "vote": 0, "content": "<p>If you use Maven, you can use <a href=\"https://github.com/Zetten/xvfb-maven-plugin\" rel=\"nofollow\">xvfb-maven-plugin</a> to start xvfb before tests, run them using related <code>DISPLAY</code> environment variable, and stop xvfb after all.</p>\n", "abstract": "If you use Maven, you can use xvfb-maven-plugin to start xvfb before tests, run them using related DISPLAY environment variable, and stop xvfb after all."}]}, {"link": "https://stackoverflow.com/questions/2400262/how-can-i-schedule-updates-f-e-to-update-a-clock-in-tkinter", "question": {"id": "2400262", "title": "How can I schedule updates (f/e, to update a clock) in tkinter?", "content": "<p>I'm writing a program with Python's tkinter library.</p>\n<p>My major problem is that I don't know how to create a <em>timer</em> or a <em>clock</em> like <code>hh:mm:ss</code>.</p>\n<p>I need it to update itself (that's what I don't know how to do); when I use <code>time.sleep()</code> in a loop the whole GUI freezes.</p>\n", "abstract": "I'm writing a program with Python's tkinter library. My major problem is that I don't know how to create a timer or a clock like hh:mm:ss. I need it to update itself (that's what I don't know how to do); when I use time.sleep() in a loop the whole GUI freezes."}, "answers": [{"id": 2401181, "score": 143, "vote": 0, "content": "<p>Tkinter root windows have a method called <code>after</code> which can be used to schedule a function to be called after a given period of time. If that function itself calls <code>after</code> you've set up an automatically recurring event. </p>\n<p>Here is a working example:</p>\n<pre><code class=\"python\"># for python 3.x use 'tkinter' rather than 'Tkinter'\nimport Tkinter as tk\nimport time\n\nclass App():\n    def __init__(self):\n        self.root = tk.Tk()\n        self.label = tk.Label(text=\"\")\n        self.label.pack()\n        self.update_clock()\n        self.root.mainloop()\n\n    def update_clock(self):\n        now = time.strftime(\"%H:%M:%S\")\n        self.label.configure(text=now)\n        self.root.after(1000, self.update_clock)\n\napp=App()\n</code></pre>\n<p>Bear in mind that <code>after</code> doesn't guarantee the function will run exactly on time. It only <em>schedules</em> the job to be run after a given amount of time. It the app is busy there may be a delay before it is called since Tkinter is single-threaded. The delay is typically measured in microseconds.</p>\n", "abstract": "Tkinter root windows have a method called after which can be used to schedule a function to be called after a given period of time. If that function itself calls after you've set up an automatically recurring event.  Here is a working example: Bear in mind that after doesn't guarantee the function will run exactly on time. It only schedules the job to be run after a given amount of time. It the app is busy there may be a delay before it is called since Tkinter is single-threaded. The delay is typically measured in microseconds."}, {"id": 34022680, "score": 12, "vote": 0, "content": "<p>Python3 clock example using the frame.after() rather than the top level application. Also shows updating the label with a StringVar()</p>\n<pre><code class=\"python\">#!/usr/bin/env python3\n\n# Display UTC.\n# started with https://docs.python.org/3.4/library/tkinter.html#module-tkinter\n\nimport tkinter as tk\nimport time\n\ndef current_iso8601():\n    \"\"\"Get current date and time in ISO8601\"\"\"\n    # https://en.wikipedia.org/wiki/ISO_8601\n    # https://xkcd.com/1179/\n    return time.strftime(\"%Y%m%dT%H%M%SZ\", time.gmtime())\n\nclass Application(tk.Frame):\n    def __init__(self, master=None):\n        tk.Frame.__init__(self, master)\n        self.pack()\n        self.createWidgets()\n\n    def createWidgets(self):\n        self.now = tk.StringVar()\n        self.time = tk.Label(self, font=('Helvetica', 24))\n        self.time.pack(side=\"top\")\n        self.time[\"textvariable\"] = self.now\n\n        self.QUIT = tk.Button(self, text=\"QUIT\", fg=\"red\",\n                                            command=root.destroy)\n        self.QUIT.pack(side=\"bottom\")\n\n        # initial time display\n        self.onUpdate()\n\n    def onUpdate(self):\n        # update displayed time\n        self.now.set(current_iso8601())\n        # schedule timer to call myself after 1 second\n        self.after(1000, self.onUpdate)\n\nroot = tk.Tk()\napp = Application(master=root)\nroot.mainloop()\n</code></pre>\n", "abstract": "Python3 clock example using the frame.after() rather than the top level application. Also shows updating the label with a StringVar()"}, {"id": 46427345, "score": 6, "vote": 0, "content": "<pre><code class=\"python\">from tkinter import *\nimport time\ntk=Tk()\ndef clock():\n    t=time.strftime('%I:%M:%S',time.localtime())\n    if t!='':\n        label1.config(text=t,font='times 25')\n    tk.after(100,clock)\nlabel1=Label(tk,justify='center')\nlabel1.pack()\nclock()\ntk.mainloop()\n</code></pre>\n", "abstract": ""}, {"id": 60296248, "score": 3, "vote": 0, "content": "<p>You should call <code>.after_idle(callback)</code> before the mainloop and <code>.after(ms, callback)</code> at the end of the <code>callback</code> function.</p>\n<p>Example:</p>\n<pre><code class=\"python\">import tkinter as tk\nimport time\n\n\ndef refresh_clock():\n    clock_label.config(\n        text=time.strftime(\"%H:%M:%S\", time.localtime())\n    )\n    root.after(1000, refresh_clock)  # &lt;--\n\n\nroot = tk.Tk()\n\nclock_label = tk.Label(root, font=\"Times 25\", justify=\"center\")\nclock_label.pack()\n\nroot.after_idle(refresh_clock)  # &lt;--\nroot.mainloop()\n</code></pre>\n", "abstract": "You should call .after_idle(callback) before the mainloop and .after(ms, callback) at the end of the callback function. Example:"}, {"id": 58144904, "score": 2, "vote": 0, "content": "<p>I have a simple answer to this problem. I created a thread to update the time. In the thread i run a while loop which gets the time and update it. Check the below code and do not forget to mark it as right answer.</p>\n<pre><code class=\"python\">from tkinter import *\nfrom tkinter import *\nimport _thread\nimport time\n\n\ndef update():\n    while True:\n      t=time.strftime('%I:%M:%S',time.localtime())\n      time_label['text'] = t\n\n\n\nwin = Tk()\nwin.geometry('200x200')\n\ntime_label = Label(win, text='0:0:0', font=('',15))\ntime_label.pack()\n\n\n_thread.start_new_thread(update,())\n\nwin.mainloop()\n</code></pre>\n", "abstract": "I have a simple answer to this problem. I created a thread to update the time. In the thread i run a while loop which gets the time and update it. Check the below code and do not forget to mark it as right answer."}, {"id": 44346895, "score": 1, "vote": 0, "content": "<p>I just created a simple timer using the MVP pattern (however it may be \noverkill for that simple project). It has quit, start/pause and a stop button. Time is displayed in HH:MM:SS format. Time counting is implemented using a thread that is running several times a second and the difference between the time the timer has started and the current time.</p>\n<p><a href=\"https://github.com/Sheogorath2/TKimer\" rel=\"nofollow noreferrer\">Source code on github</a></p>\n", "abstract": "I just created a simple timer using the MVP pattern (however it may be \noverkill for that simple project). It has quit, start/pause and a stop button. Time is displayed in HH:MM:SS format. Time counting is implemented using a thread that is running several times a second and the difference between the time the timer has started and the current time. Source code on github"}, {"id": 60741288, "score": 0, "vote": 0, "content": "<pre><code class=\"python\">from tkinter import *\n\nfrom tkinter import messagebox\n\nroot = Tk()\n\nroot.geometry(\"400x400\")\n\nroot.resizable(0, 0)\n\nroot.title(\"Timer\")\n\nseconds = 21\n\ndef timer():\n\n    global seconds\n    if seconds &gt; 0:\n        seconds = seconds - 1\n        mins = seconds // 60\n        m = str(mins)\n\n        if mins &lt; 10:\n            m = '0' + str(mins)\n        se = seconds - (mins * 60)\n        s = str(se)\n\n        if se &lt; 10:\n            s = '0' + str(se)\n        time.set(m + ':' + s)\n        timer_display.config(textvariable=time)\n        # call this function again in 1,000 milliseconds\n        root.after(1000, timer)\n\n    elif seconds == 0:\n        messagebox.showinfo('Message', 'Time is completed')\n        root.quit()\n\n\nframes = Frame(root, width=500, height=500)\n\nframes.pack()\n\ntime = StringVar()\n\ntimer_display = Label(root, font=('Trebuchet MS', 30, 'bold'))\n\ntimer_display.place(x=145, y=100)\n\ntimer()  # start the timer\n\nroot.mainloop()\n</code></pre>\n", "abstract": ""}, {"id": 74162331, "score": 0, "vote": 0, "content": "<p>You can <a href=\"https://stackoverflow.com/a/74162322/13629335\">emulate <code>time.sleep</code></a> for this in tkinter and call the function after a given amount of time. This may adds readability to your code:</p>\n<pre><code class=\"python\">import tkinter as tk\nimport time\n\ndef tksleep(t):\n    'emulating time.sleep(seconds)'\n    ms = int(t*1000)\n    root = tk._get_default_root()\n    var = tk.IntVar(root)\n    root.after(ms, lambda: var.set(1))\n    root.wait_variable(var)\n\ndef tick():\n    while True:\n        clock.configure(text=time.strftime(\"%H:%M:%S\"))\n        tksleep(0.25) #sleep for 0.25 seconds\n    \n\nroot = tk.Tk()\nclock = tk.Label(root,text='5')\nclock.pack(fill=tk.BOTH,expand=True)\ntick()\nroot.mainloop()\n</code></pre>\n", "abstract": "You can emulate time.sleep for this in tkinter and call the function after a given amount of time. This may adds readability to your code:"}]}, {"link": "https://stackoverflow.com/questions/2398800/linking-a-qtdesigner-ui-file-to-python-pyqt", "question": {"id": "2398800", "title": "Linking a qtDesigner .ui file to python/pyqt?", "content": "<p>So if I go into QtDesigner and build a UI, it'll be saved as a .ui file.  How can I make this as a python file or use this in python?</p>\n", "abstract": "So if I go into QtDesigner and build a UI, it'll be saved as a .ui file.  How can I make this as a python file or use this in python?"}, "answers": [{"id": 2500905, "score": 66, "vote": 0, "content": "<p>Another way to use .ui in your code is:</p>\n<pre><code class=\"python\">from PyQt4 import QtCore, QtGui, uic\nclass MyWidget(QtGui.QWidget)\n    ...\n    #somewhere in constructor:\n    uic.loadUi('MyWidget.ui', self)\n</code></pre>\n<p>both approaches are good. Do not forget, that if you use Qt resource files (extremely useful) for icons and so on, you must compile it too:</p>\n<pre><code class=\"python\">pyrcc4.exe -o ui/images_rc.py ui/images/images.qrc\n</code></pre>\n<p>Note, when <code>uic</code> compiles interface, it adds 'import images_rc' at the end of .py file, so you must compile resources into the file with this name, or rename it in generated code.</p>\n", "abstract": "Another way to use .ui in your code is: both approaches are good. Do not forget, that if you use Qt resource files (extremely useful) for icons and so on, you must compile it too: Note, when uic compiles interface, it adds 'import images_rc' at the end of .py file, so you must compile resources into the file with this name, or rename it in generated code."}, {"id": 17133008, "score": 52, "vote": 0, "content": "<p>Combining <a href=\"https://stackoverflow.com/a/2500905/544059\">Max's answer</a> and <a href=\"http://www.riverbankcomputing.com/pipermail/pyqt/2007-April/015902.html\" rel=\"noreferrer\">Shriramana Sharma's mailing list post</a>, I built a small working example for loading a <code>mywindow.ui</code> file containing a <code>QMainWindow</code> (so just choose to create a Main Window in Qt Designer's <code>File-New</code> dialog).</p>\n<p>This is the code that loads it:</p>\n<pre><code class=\"python\">import sys\nfrom PyQt4 import QtGui, uic\n\nclass MyWindow(QtGui.QMainWindow):\n    def __init__(self):\n        super(MyWindow, self).__init__()\n        uic.loadUi('mywindow.ui', self)\n        self.show()\n\nif __name__ == '__main__':\n    app = QtGui.QApplication(sys.argv)\n    window = MyWindow()\n    sys.exit(app.exec_())\n</code></pre>\n", "abstract": "Combining Max's answer and Shriramana Sharma's mailing list post, I built a small working example for loading a mywindow.ui file containing a QMainWindow (so just choose to create a Main Window in Qt Designer's File-New dialog). This is the code that loads it:"}, {"id": 2399618, "score": 30, "vote": 0, "content": "<p>You need to generate a python file from your ui file with the pyuic tool (site-packages\\pyqt4\\bin)</p>\n<pre><code class=\"python\">pyuic form1.ui &gt; form1.py\n</code></pre>\n<p>with pyqt4</p>\n<pre><code class=\"python\">pyuic4.bat form1.ui &gt; form1.py\n</code></pre>\n<p>Then you can import the form1 into your script.</p>\n", "abstract": "You need to generate a python file from your ui file with the pyuic tool (site-packages\\pyqt4\\bin) with pyqt4 Then you can import the form1 into your script."}, {"id": 9526625, "score": 25, "vote": 0, "content": "<p>I found this article very helpful. </p>\n<p><a href=\"http://talk.maemo.org/archive/index.php/t-43663.html\">http://talk.maemo.org/archive/index.php/t-43663.html</a></p>\n<p>I'll briefly describe the actions to create and change .ui file to .py file, taken from that article.</p>\n<ol>\n<li>Start Qt Designer from your start menu.</li>\n<li>From \"New Form\" window, create \"Main Window\"</li>\n<li>From \"Display Widgets\" towards the bottom of your \"Widget Box Menu\" on the left hand side<br/>\nadd a \"Label Widget\". (Click Drag and Drop)</li>\n<li>Double click on the newly added Label Widget to change its name to \"Hello World\"</li>\n<li>at this point you can use Control + R hotkey to see how it will look.</li>\n<li>Add buttons or text or other widgets by drag and drop if you want.</li>\n<li>Now save your form.. File-&gt;Save As-&gt; \"Hello World.ui\" (Control + S  will also bring up<br/>\nthe \"Save As\" option)  Keep note of the directory where you saved your \"Hello World\" .ui<br/>\nfile. (I saved mine in (C:) for convenience)</li>\n</ol>\n<p>The file is created and saved, now we will Generate the Python code from it using pyuic!</p>\n<ol>\n<li>From your start menu open a command window.</li>\n<li>Now \"cd\" into the directory where you saved your \"Hello World.ui\" For me i just had to \n\"cd\\\" and was at my \"C:&gt;\" prompt, where my \"Hello World.ui\" was saved to.</li>\n<li>When you get to the directory where your file is stored type the following.</li>\n<li>pyuic4 -x helloworld.ui -o helloworld.py</li>\n<li>Congratulations!! You now have a python Qt4 GUI application!! </li>\n<li>Double click your helloworld.py file to run it. ( I use pyscripter and upon double click<br/>\nit opens in pyscripter, then i \"run\" the file from there)</li>\n</ol>\n<p>Hope this helps someone.</p>\n", "abstract": "I found this article very helpful.  http://talk.maemo.org/archive/index.php/t-43663.html I'll briefly describe the actions to create and change .ui file to .py file, taken from that article. The file is created and saved, now we will Generate the Python code from it using pyuic! Hope this helps someone."}, {"id": 31282948, "score": 17, "vote": 0, "content": "<p>You can also use <code>uic</code> in PyQt5 with the following code.</p>\n<pre><code class=\"python\">from PyQt5 import uic, QtWidgets\nimport sys\n\nclass Ui(QtWidgets.QDialog):\n    def __init__(self):\n        super(Ui, self).__init__()\n        uic.loadUi('SomeUi.ui', self)\n        self.show()\n\nif __name__ == '__main__':\n    app = QtWidgets.QApplication(sys.argv)\n    window = Ui()\n    sys.exit(app.exec_())\n</code></pre>\n", "abstract": "You can also use uic in PyQt5 with the following code."}, {"id": 37907101, "score": 13, "vote": 0, "content": "<p>The cleaner way in my opinion is to first export to .py as aforementioned: </p>\n<pre><code class=\"python\">pyuic4 foo.ui &gt; foo.py\n</code></pre>\n<p>And then use it inside your code (e.g <code>main.py</code>), like:</p>\n<pre><code class=\"python\">from foo import Ui_MyWindow\n\n\nclass MyWindow(QtGui.QDialog):\n    def __init__(self):\n        super(MyWindow, self).__init__()\n\n        self.ui = Ui_MyWindow()\n        self.ui.setupUi(self)\n\n        # go on setting up your handlers like:\n        # self.ui.okButton.clicked.connect(function_name)\n        # etc...\n\ndef main():\n    app = QtGui.QApplication(sys.argv)\n    w = MyWindow()\n    w.show()\n    sys.exit(app.exec_())\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>\n<p>This way gives the ability to other people who don't use qt-designer to read the code, and also keeps your functionality code outside <code>foo.py</code> that could be overwritten by designer. You just reference <code>ui</code> through <code>MyWindow</code> class as seen above.</p>\n", "abstract": "The cleaner way in my opinion is to first export to .py as aforementioned:  And then use it inside your code (e.g main.py), like: This way gives the ability to other people who don't use qt-designer to read the code, and also keeps your functionality code outside foo.py that could be overwritten by designer. You just reference ui through MyWindow class as seen above."}, {"id": 2401814, "score": 9, "vote": 0, "content": "<p>You can convert your .ui files to an executable python file using the below command..</p>\n<pre><code class=\"python\">pyuic4 -x form1.ui &gt; form1.py\n</code></pre>\n<p>Now you can straightaway execute the python file as</p>\n<pre><code class=\"python\">python3(whatever version) form1.py\n</code></pre>\n<p>You can import this file and you can use it.</p>\n", "abstract": "You can convert your .ui files to an executable python file using the below command.. Now you can straightaway execute the python file as You can import this file and you can use it."}, {"id": 21524726, "score": 5, "vote": 0, "content": "<p>you can compile the ui files like this</p>\n<pre><code class=\"python\">pyuic4 -x helloworld.ui -o helloworld.py\n</code></pre>\n", "abstract": "you can compile the ui files like this"}, {"id": 26037792, "score": 4, "vote": 0, "content": "<p>In order to compile .ui files to .py files, I did:</p>\n<pre><code class=\"python\">python pyuic.py form1.ui &gt; form1.py\n</code></pre>\n<p>Att.</p>\n", "abstract": "In order to compile .ui files to .py files, I did: Att."}, {"id": 54119368, "score": 3, "vote": 0, "content": "<p>in pyqt5 to convert from a ui file to .py file</p>\n<p><code>pyuic5.exe youruifile.ui -o outputpyfile.py -x</code></p>\n", "abstract": "in pyqt5 to convert from a ui file to .py file pyuic5.exe youruifile.ui -o outputpyfile.py -x"}, {"id": 64746502, "score": 1, "vote": 0, "content": "<p>(<strong>November 2020</strong>) This worked for me (<strong>UBUNTU 20.04</strong>):</p>\n<pre><code class=\"python\">pyuic5 /home/someuser/Documents/untitled.ui &gt; /home/someuser/Documents/untitled.py\n</code></pre>\n", "abstract": "(November 2020) This worked for me (UBUNTU 20.04):"}, {"id": 52304139, "score": 0, "vote": 0, "content": "<p>Using Anaconda3 (September 2018) and QT designer 5.9.5.\nIn QT designer, save your file as ui.\nOpen Anaconda prompt. Search for your file: cd C:.... (copy/paste the access path of your file).\nThen write: pyuic5 -x helloworld.ui -o helloworld.py (helloworld = name of your file). Enter.\nLaunch Spyder. Open your file .py.</p>\n", "abstract": "Using Anaconda3 (September 2018) and QT designer 5.9.5.\nIn QT designer, save your file as ui.\nOpen Anaconda prompt. Search for your file: cd C:.... (copy/paste the access path of your file).\nThen write: pyuic5 -x helloworld.ui -o helloworld.py (helloworld = name of your file). Enter.\nLaunch Spyder. Open your file .py."}]}, {"link": "https://stackoverflow.com/questions/1101750/tkinter-attributeerror-nonetype-object-has-no-attribute-attribute-name", "question": {"id": "1101750", "title": "Tkinter: AttributeError: NoneType object has no attribute &lt;attribute name&gt;", "content": "<p>I've created this simple GUI:</p>\n<pre><code class=\"python\">from tkinter import *\n\nroot = Tk()\n\ndef grabText(event):\n    print(entryBox.get())    \n\nentryBox = Entry(root, width=60).grid(row=2, column=1, sticky=W)\n\ngrabBtn = Button(root, text=\"Grab\")\ngrabBtn.grid(row=8, column=1)\ngrabBtn.bind('&lt;Button-1&gt;', grabText)\n\nroot.mainloop()\n</code></pre>\n<p>I get the UI up and running. When I click on the <code>Grab</code> button, I get the following error on the console:</p>\n<pre><code class=\"python\">C:\\Python&gt; python.exe myFiles\\testBed.py\nException in Tkinter callback\nTraceback (most recent call last):\n  File \"C:\\Python\\lib\\lib-tk\\Tkinter.py\", line 1403, in __call__\n    return self.func(*args)\n  File \"myFiles\\testBed.py\", line 10, in grabText\n    if entryBox.get().strip()==\"\":\nAttributeError: 'NoneType' object has no attribute 'get'\n</code></pre>\n<p>Why is <code>entryBox</code> set to <code>None</code>?</p>\n", "abstract": "I've created this simple GUI: I get the UI up and running. When I click on the Grab button, I get the following error on the console: Why is entryBox set to None?"}, "answers": [{"id": 1101765, "score": 138, "vote": 0, "content": "<p>The <code>grid</code>, <code>pack</code> and <code>place</code> functions of the <code>Entry</code> object and of all other widgets returns <code>None</code>. In python when you do <code>a().b()</code>, the result of the expression is whatever <code>b()</code> returns, therefore <code>Entry(...).grid(...)</code> will return <code>None</code>. </p>\n<p>You should split that on to two lines like this:</p>\n<pre><code class=\"python\">entryBox = Entry(root, width=60)\nentryBox.grid(row=2, column=1, sticky=W)\n</code></pre>\n<p>That way you get your <code>Entry</code> reference stored in <code>entryBox</code> and it's laid out like you expect. This has a bonus side effect of making your layout easier to understand and maintain if you collect all of your <code>grid</code> and/or <code>pack</code> statements in blocks.</p>\n", "abstract": "The grid, pack and place functions of the Entry object and of all other widgets returns None. In python when you do a().b(), the result of the expression is whatever b() returns, therefore Entry(...).grid(...) will return None.  You should split that on to two lines like this: That way you get your Entry reference stored in entryBox and it's laid out like you expect. This has a bonus side effect of making your layout easier to understand and maintain if you collect all of your grid and/or pack statements in blocks."}, {"id": 1102053, "score": 16, "vote": 0, "content": "<p>Change this line:</p>\n<pre><code class=\"python\">entryBox=Entry(root,width=60).grid(row=2, column=1,sticky=W)\n</code></pre>\n<p>into these two lines:</p>\n<pre><code class=\"python\">entryBox=Entry(root,width=60)\nentryBox.grid(row=2, column=1,sticky=W)\n</code></pre>\n<p>Just as you already correctly do for <code>grabBtn</code>!</p>\n", "abstract": "Change this line: into these two lines: Just as you already correctly do for grabBtn!"}, {"id": 68782288, "score": 5, "vote": 0, "content": "<p>Alternative solution for <code>Python3.8+</code> versions that allows to put all of this in one line using the <a href=\"https://www.python.org/dev/peps/pep-0572/\" rel=\"nofollow noreferrer\"><code>walrus operator</code></a>:</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">(entryBox := Entry(root, width=60)).grid(row=2, column=1, sticky=W)\n</code></pre>\n<p>Now <code>entryBox</code> will refer to the <code>Entry</code> widget and also get packed.</p>\n<p>For characters per line management I can suggest something like this:</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">(var := Button(\n    text='fine', command=some_func, width=20, height=15, activebackground='grey'\n)).grid(row=0, column=0, columnspan=0, rowspan=0, sticky='news')\n</code></pre>\n<p>But at that point might as well just do this \"normally\" (as suggested by other answers)</p>\n<p>Sources:</p>\n<ul>\n<li><a href=\"https://www.python.org/dev/peps/pep-0572/\" rel=\"nofollow noreferrer\">PEP 572 -- Assignment Expressions</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=KN2TTiGpDvM\" rel=\"nofollow noreferrer\">IMO great video explanation about <code>walrus operator</code></a></li>\n</ul>\n", "abstract": "Alternative solution for Python3.8+ versions that allows to put all of this in one line using the walrus operator: Now entryBox will refer to the Entry widget and also get packed. For characters per line management I can suggest something like this: But at that point might as well just do this \"normally\" (as suggested by other answers) Sources:"}, {"id": 62545078, "score": 3, "vote": 0, "content": "<p>For <code>entryBox.get()</code> to access <code>get()</code> method you need <strong>Entry</strong> object but <code>Entry(root, width=60).grid(row=2, column=1, sticky=W)</code> returns None.</p>\n<p><code>entryBox = Entry(root, width=60)</code> creates a new Entry Object.</p>\n<p>Moreover, you won't need\n<code>entryBox = entryBox.grid(row=2, column=1, sticky=W)</code> as it will rewrite <code>entryBox</code> with None</p>\n<hr/>\n<p>Just replace <code>entryBox = entryBox.grid(row=2, column=1, sticky=W)</code>\nwith</p>\n<pre><code class=\"python\">entryBox = Entry(root, width=60)\nentryBox.grid(row=2, column=1, sticky=W)\n</code></pre>\n", "abstract": "For entryBox.get() to access get() method you need Entry object but Entry(root, width=60).grid(row=2, column=1, sticky=W) returns None. entryBox = Entry(root, width=60) creates a new Entry Object. Moreover, you won't need\nentryBox = entryBox.grid(row=2, column=1, sticky=W) as it will rewrite entryBox with None Just replace entryBox = entryBox.grid(row=2, column=1, sticky=W)\nwith"}]}, {"link": "https://stackoverflow.com/questions/10636024/python-pandas-gui-for-viewing-a-dataframe-or-matrix", "question": {"id": "10636024", "title": "Python / Pandas - GUI for viewing a DataFrame or Matrix", "content": "<p>I'm using the Pandas package and it creates a DataFrame object, which is basically a labeled matrix. Often I have columns that have long string fields, or dataframes with many columns, so the simple print command doesn't work well. I've written some text output functions, but they aren't great.</p>\n<p>What I'd really love is a simple GUI that lets me interact with a dataframe / matrix / table. Just like you would find in a SQL tool. Basically a window that has a read-only spreadsheet like view into the data. I can expand columns, page up and down through long tables, etc.</p>\n<p>I would suspect something like this exists, but I must be Googling with the wrong terms. It would be great if it is pandas specific, but I would guess I could use any matrix-accepting tool. (BTW - I'm on Windows.)</p>\n<p>Any pointers?</p>\n<p>Or, conversely, if someone knows this space well and knows this probably doesn't exist, any suggestions on if there is a simple GUI framework / widget I could use to roll my own? (But since my needs are limited, I'm reluctant to have to learn a big GUI framework and do a bunch of coding for this one piece.)</p>\n", "abstract": "I'm using the Pandas package and it creates a DataFrame object, which is basically a labeled matrix. Often I have columns that have long string fields, or dataframes with many columns, so the simple print command doesn't work well. I've written some text output functions, but they aren't great. What I'd really love is a simple GUI that lets me interact with a dataframe / matrix / table. Just like you would find in a SQL tool. Basically a window that has a read-only spreadsheet like view into the data. I can expand columns, page up and down through long tables, etc. I would suspect something like this exists, but I must be Googling with the wrong terms. It would be great if it is pandas specific, but I would guess I could use any matrix-accepting tool. (BTW - I'm on Windows.) Any pointers? Or, conversely, if someone knows this space well and knows this probably doesn't exist, any suggestions on if there is a simple GUI framework / widget I could use to roll my own? (But since my needs are limited, I'm reluctant to have to learn a big GUI framework and do a bunch of coding for this one piece.)"}, "answers": [{"id": 37447530, "score": 57, "vote": 0, "content": "<p><strong>2019 update:</strong> I'm currently working on a successor <a href=\"https://github.com/bluenote10/tabloo\" rel=\"noreferrer\">tabloo</a>.</p>\n<hr/>\n<p>I wasn't fully satisfied with some other GUIs, so I created my own, which I'm now maintaining <a href=\"https://github.com/bluenote10/PandasDataFrameGUI\" rel=\"noreferrer\">on Github</a>. Example:</p>\n<p><a href=\"https://i.stack.imgur.com/rtB25.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/rtB25.png\"/></a></p>\n<p>Apart from the basic table + plot functionality, I wanted to have a specific way to filter data:</p>\n<ul>\n<li>select a column to filter from a combo box</li>\n<li>write an \"underscore expression\" to filter on that column using arbitrary Python code. For example: <code>_ &gt; 0</code> to filter positive values only, or more complex expressions like <code>(_ &gt;= date(2016, 1, 1)) &amp; (_ &lt;= date(2016, 1, 31))</code> e.g. for datetime columns.</li>\n</ul>\n", "abstract": "2019 update: I'm currently working on a successor tabloo. I wasn't fully satisfied with some other GUIs, so I created my own, which I'm now maintaining on Github. Example:  Apart from the basic table + plot functionality, I wanted to have a specific way to filter data:"}, {"id": 12036847, "score": 24, "vote": 0, "content": "<p>I use <code>QTableWidget</code> from PyQt to display a <code>DataFrame</code>. I create a <code>QTableWidgetObject</code> and then populate with <code>QTableWidgetItems</code> created with <code>DataFrame</code> values.\nFollowing is the snippet of code that reads a CSV file ,create a <code>DataFrame</code>, then display in a GUI:</p>\n<pre><code class=\"python\">df  = read_csv(filename, index_col = 0,header = 0)\nself.datatable = QtGui.QTableWidget(parent=self)\nself.datatable.setColumnCount(len(df.columns))\nself.datatable.setRowCount(len(df.index))\nfor i in range(len(df.index)):\n    for j in range(len(df.columns)):\n        self.datatable.setItem(i,j,QtGui.QTableWidgetItem(str(df.iget_value(i, j))))\n</code></pre>\n<p><strong>Update:</strong></p>\n<p>As this answer was quite old, it deserves an update. There are many options available now to view the dataframes in GUI.</p>\n<ol>\n<li>As others have pointed out, Python IDEs such as Spyder\ncome with dataframe viewers.</li>\n<li><a href=\"https://github.com/quantopian/qgrid\" rel=\"noreferrer\">qgrid</a> is\nanother option for the jupyter notebook widget that renders the dataframes within the notebook.</li>\n</ol>\n<p>If someone still wants to code a simple GUI to view the dataframes within Jupyter, following is the complete , minimal example using Pyqt5 . </p>\n<pre><code class=\"python\">%gui qt5 \nfrom PyQt5.QtWidgets import QWidget,QScrollArea, QTableWidget, QVBoxLayout,QTableWidgetItem\nimport pandas as pd\n\nwin = QWidget()\nscroll = QScrollArea()\nlayout = QVBoxLayout()\ntable = QTableWidget()\nscroll.setWidget(table)\nlayout.addWidget(table)\nwin.setLayout(layout)    \n\n\ndf = pd.DataFrame({\"a\" : [4 ,5, 6],\"b\" : [7, 8, 9],\"c\" : [10, 11, 12]},index = [1, 2, 3])\ntable.setColumnCount(len(df.columns))\ntable.setRowCount(len(df.index))\nfor i in range(len(df.index)):\n    for j in range(len(df.columns)):\n        table.setItem(i,j,QTableWidgetItem(str(df.iloc[i, j])))\n\nwin.show()\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/edZpV.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/edZpV.png\"/></a></p>\n", "abstract": "I use QTableWidget from PyQt to display a DataFrame. I create a QTableWidgetObject and then populate with QTableWidgetItems created with DataFrame values.\nFollowing is the snippet of code that reads a CSV file ,create a DataFrame, then display in a GUI: Update: As this answer was quite old, it deserves an update. There are many options available now to view the dataframes in GUI. If someone still wants to code a simple GUI to view the dataframes within Jupyter, following is the complete , minimal example using Pyqt5 .  "}, {"id": 40414264, "score": 19, "vote": 0, "content": "<p>The question was post in 2012 and other answers may be too old to apply.</p>\n<p>The answer in 2016 is, we should use Pycharm and it's shipped with <code>DataFrame</code> viewer.</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/8xQof.png\"/></p>\n<p><a href=\"https://i.stack.imgur.com/OvYIm.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/OvYIm.png\"/></a></p>\n", "abstract": "The question was post in 2012 and other answers may be too old to apply. The answer in 2016 is, we should use Pycharm and it's shipped with DataFrame viewer.  "}, {"id": 22166224, "score": 11, "vote": 0, "content": "<p>Pandas 0.13 provides as an experimental feature:</p>\n<p>PySide support for the qtpandas <code>DataFrameModel</code> and <code>DataFrameWidget</code></p>\n<p>see <a href=\"https://github.com/pydata/pandas/blob/master/doc/source/faq.rst\" rel=\"noreferrer\">https://github.com/pydata/pandas/blob/master/doc/source/faq.rst</a></p>\n<p>you can add this feature using</p>\n<pre><code class=\"python\">from pandas.sandbox.qtpandas import DataFrameModel, DataFrameWidget\n</code></pre>\n", "abstract": "Pandas 0.13 provides as an experimental feature: PySide support for the qtpandas DataFrameModel and DataFrameWidget see https://github.com/pydata/pandas/blob/master/doc/source/faq.rst you can add this feature using"}, {"id": 38938538, "score": 9, "vote": 0, "content": "<p>In addition to all the valuable answers, I would like to mention that the Spyder IDE (<a href=\"https://github.com/spyder-ide\" rel=\"noreferrer\">https://github.com/spyder-ide</a>) has this feature as you can see in my printscreen below:</p>\n<p><a href=\"https://i.stack.imgur.com/J4WP7.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/J4WP7.png\"/></a></p>\n<p>This is just an objective fact and not advertisement for any IDE :) I don't want to trigger any debate on this question. </p>\n", "abstract": "In addition to all the valuable answers, I would like to mention that the Spyder IDE (https://github.com/spyder-ide) has this feature as you can see in my printscreen below:  This is just an objective fact and not advertisement for any IDE :) I don't want to trigger any debate on this question. "}, {"id": 16884805, "score": 8, "vote": 0, "content": "<p>You could use the to_html() dataframe method to convert the dataframe to html and display it in your browser. Here is an example assuming you have a dataframe called df. You should check the documentation to see what other options are available in the to_html() method.</p>\n<pre><code class=\"python\"># Format floating point numbers with 2 decimal places.\ndata_table = df.to_html(float_format=lambda x: '%6.2f' % x,\n    classes=\"table display\")\n# The to_html() method forces a html table border of 1 pixel.\n# I use 0  in my table so I  change the html, since there is no \n# border argument in the to_html() method.\ndata_table = data_table.replace('border=\"1\"','border=\"0\"')\n# I alson like to display blanks instead on nan.\ndata_table = data_table.replace('nan', '')\n</code></pre>\n<p>If you want to get the table to be nicely formatted and scrollable then you can use the datatables plug-in for jQuery <a href=\"http://www.datatables.net/\" rel=\"noreferrer\">www.datatables.net</a>. Here is the javascript I use to display a table the scrolls in both x and y directiions.</p>\n<pre><code class=\"python\">$('.table').dataTable({\n    \"bPaginate\": true,\n    \"bLengthChange\": true,\n    \"bSort\": false,\n    \"bStateSave\": true,\n    \"sScrollY\": 900,\n    \"sScrollX\": 1000,\n    \"aLengthMenu\": [[50, 100, 250, 500, 1000, -1], [50, 100, 250, 500, 1000, \"All\"]],\n    \"iDisplayLength\": 100,\n});\n</code></pre>\n", "abstract": "You could use the to_html() dataframe method to convert the dataframe to html and display it in your browser. Here is an example assuming you have a dataframe called df. You should check the documentation to see what other options are available in the to_html() method. If you want to get the table to be nicely formatted and scrollable then you can use the datatables plug-in for jQuery www.datatables.net. Here is the javascript I use to display a table the scrolls in both x and y directiions."}, {"id": 49658677, "score": 8, "vote": 0, "content": "<p>The dataframe's to_clipboard() method can be used to quickly copy, and then paste the dataframe into a spreadsheet:</p>\n<pre><code class=\"python\">df.to_clipboard()\n</code></pre>\n", "abstract": "The dataframe's to_clipboard() method can be used to quickly copy, and then paste the dataframe into a spreadsheet:"}, {"id": 26790060, "score": 6, "vote": 0, "content": "<p>There's <a href=\"https://code.google.com/p/tkintertable/\" rel=\"noreferrer\">tkintertable</a> for python2.7 and <a href=\"https://code.google.com/p/pandastable/wiki/Usage\" rel=\"noreferrer\">pandastable</a> for python3. </p>\n", "abstract": "There's tkintertable for python2.7 and pandastable for python3. "}, {"id": 31236612, "score": 6, "vote": 0, "content": "<p>The nicest solution I've found is using <code>qgrid</code> (see <a href=\"https://github.com/quantopian/qgrid\" rel=\"noreferrer\">here</a>, and also mentioned in the <a href=\"http://pandas-docs.github.io/pandas-docs-travis/ecosystem.html\" rel=\"noreferrer\">pandas docs</a>). You can install by</p>\n<pre><code class=\"python\">pip install qgrid\n</code></pre>\n<p>and then you need to do a further install (just once) in your <code>IPython</code> notebook</p>\n<pre><code class=\"python\">qgrid.nbinstall()\n</code></pre>\n<p>Afterwards, it's as easy as taking your <code>pandas</code> <code>df</code> and running</p>\n<pre><code class=\"python\">qgrid.show_grid(df)\n</code></pre>\n<p>The other nice thing is that it renders in <code>nbviewer</code> too. See it in action <a href=\"http://nbviewer.ipython.org/github/quantopian/qgrid/blob/master/qgrid_demo.ipynb\" rel=\"noreferrer\">here</a></p>\n", "abstract": "The nicest solution I've found is using qgrid (see here, and also mentioned in the pandas docs). You can install by and then you need to do a further install (just once) in your IPython notebook Afterwards, it's as easy as taking your pandas df and running The other nice thing is that it renders in nbviewer too. See it in action here"}, {"id": 10746190, "score": 3, "vote": 0, "content": "<p>It seems there is no easy solution. So, below is a little function to open a dataframe in Excel. It's probably not production quality code, but it works for me!</p>\n<pre><code class=\"python\">def open_in_excel(df, index=True, excel_path=\"excel.exe\", tmp_path='.'):\n    \"\"\"Open dataframe df in excel.\n\n    excel_path - path to your copy of excel\n    index=True - export the index of the dataframe as the first columns\n    tmp_path    - directory to save the file in\n\n\n    This creates a temporary file name, exports the dataframe to a csv of that file name,\n    and then tells excel to open the file (in read only mode). (It uses df.to_csv instead\n    of to_excel because if you don't have excel, you still get the csv.)\n\n    Note - this does NOT delete the file when you exit. \n    \"\"\"\n\n    f=tempfile.NamedTemporaryFile(delete=False, dir=tmp_path, suffix='.csv', prefix='tmp_')\n    tmp_name=f.name\n    f.close()\n\n    df.to_csv(tmp_name, index=index)\n    cmd=[excel_path, '/r', '/e', tmp_name]\n    try:\n        ret_val=subprocess.Popen(cmd).pid\n    except:\n        print \"open_in_excel(): failed to open excel\"\n        print \"filename = \", tmp_name\n        print \"command line = \", cmd\n        print \"Unexpected error:\", sys.exc_info()[0]\n\n    return\n</code></pre>\n", "abstract": "It seems there is no easy solution. So, below is a little function to open a dataframe in Excel. It's probably not production quality code, but it works for me!"}, {"id": 16875192, "score": 2, "vote": 0, "content": "<p>I use ipython notebooks to drive pandas -- notebooks provide a nice clean way of incrementally building and interacting with pandas data structures, including HTML-ized display of dataframes:  <a href=\"http://ipython.org/notebook.html\" rel=\"nofollow\">http://ipython.org/notebook.html</a></p>\n", "abstract": "I use ipython notebooks to drive pandas -- notebooks provide a nice clean way of incrementally building and interacting with pandas data structures, including HTML-ized display of dataframes:  http://ipython.org/notebook.html"}, {"id": 27888278, "score": 2, "vote": 0, "content": "<p>I've been working on a PyQt GUI for pandas DataFrame you might find useful.  It includes copying, filtering, and sorting.</p>\n<p><a href=\"https://gist.github.com/jsexauer/f2bb0cc876828b54f2ed\" rel=\"nofollow\">https://gist.github.com/jsexauer/f2bb0cc876828b54f2ed</a></p>\n", "abstract": "I've been working on a PyQt GUI for pandas DataFrame you might find useful.  It includes copying, filtering, and sorting. https://gist.github.com/jsexauer/f2bb0cc876828b54f2ed"}, {"id": 45262758, "score": 2, "vote": 0, "content": "<p>I highly recommend you use <strong>QTableView</strong> not <strong>QTableWidget</strong>. <strong>QTableView</strong> is based on model-view programming.</p>\n<blockquote>\n<p>There are 2 different ways how these widgets can access their data. The traditional way involves widgets which include internal containers for storing data. This approach is very intuitive, however, in many non-trivial applications, it leads to data synchronization issues. The second approach is model/view programming, in which widgets do not maintain internal data containers</p>\n</blockquote>\n<p>I wrote a model for <strong>pandas dataframe</strong>. </p>\n<pre><code class=\"python\"># -*- coding: utf-8 -*-\nfrom PyQt5 import QtCore\nfrom PyQt5 import QtWidgets\nfrom PyQt5 import QtGui\nimport matplotlib.pyplot as plt\n\nclass PandasModel(QtCore.QAbstractTableModel):\n    \"\"\"\n    Class to populate a table view with a pandas dataframe\n    \"\"\"\n\n    def __init__(self, data, parent=None):\n        QtCore.QAbstractTableModel.__init__(self, parent)\n        self._data = data\n\n    def rowCount(self, parent=None):\n        return len(self._data.values)\n\n    def columnCount(self, parent=None):\n        return self._data.columns.size\n\n    def data(self, index, role=QtCore.Qt.DisplayRole):\n        if index.isValid():\n            if role == QtCore.Qt.DisplayRole:\n                if(index.column() != 0):\n                    return str('%.2f'%self._data.values[index.row()][index.column()])\n                else:\n                    return str(self._data.values[index.row()][index.column()])\n        return None\n\n    def headerData(self, section, orientation, role):\n        if orientation == QtCore.Qt.Horizontal and role == QtCore.Qt.DisplayRole:\n            return self._data.columns[section]\n        elif orientation == QtCore.Qt.Vertical and role == QtCore.Qt.DisplayRole:\n            return str(self._data.index[section])\n        return None\n\n    def flags(self, index):\n        flags = super(self.__class__,self).flags(index)\n        flags |= QtCore.Qt.ItemIsSelectable\n        flags |= QtCore.Qt.ItemIsEnabled\n        return flags\n\n\nif __name__=='__main__':\n    import pandas as pd\n    import numpy as np\n    df = pd.DataFrame()\n    df['Field1']=np.arange(0,10,.5)\n    df['Field2']=np.arange(0,10,.5)\n    app = QtWidgets.QApplication([])\n    table = QtWidgets.QTableView()\n    mymodel = PandasModel(df)\n    table.setModel(mymodel)\n    table.show()\n    app.exec_()\n</code></pre>\n<p>You can easily change the model to edit or show the elements nicely based on your need. For more information refer to  <a href=\"http://doc.qt.io/qt-5/modelview.html\" rel=\"nofollow noreferrer\">modelview</a></p>\n<p><a href=\"https://i.stack.imgur.com/TqQkT.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/TqQkT.png\"/></a></p>\n", "abstract": "I highly recommend you use QTableView not QTableWidget. QTableView is based on model-view programming. There are 2 different ways how these widgets can access their data. The traditional way involves widgets which include internal containers for storing data. This approach is very intuitive, however, in many non-trivial applications, it leads to data synchronization issues. The second approach is model/view programming, in which widgets do not maintain internal data containers I wrote a model for pandas dataframe.  You can easily change the model to edit or show the elements nicely based on your need. For more information refer to  modelview "}, {"id": 46747232, "score": 2, "vote": 0, "content": "<p>I tested many of the suggestions here and none of them seem to run or install easily, especially for Python 3, but now I've written a function which is basically accomplishing what I wanted. Need to have these dataframes full-screen, and scrollable sometimes.</p>\n<p>So in a Linux environment using Libreoffice Calc, inspired by <a href=\"https://unix.stackexchange.com/a/220829/188451\">this answer</a> from Unix and Linux StackExchange, here's what you can do in Python 3:</p>\n<pre><code class=\"python\">import pandas as pd\nimport os\n\ndef viewDF(*dfs):\n    filelist = \"\"\n    for c, df in enumerate(dfs):    \n        filename = 'tmp_df' + str(c) + '.csv'\n        odsfile = 'tmp_df' + str(c) + '.ods'\n        df.to_csv(filename)\n        os.system(\"soffice --headless --convert-to ods  {}\".format(filename))     \n        filelist += odsfile + \" \"\n    os.system(\"soffice --view {}\".format(filelist)) \n    os.system(\"rm {}\".format('tmp_df*'))\n</code></pre>\n<p>Use it like this:</p>\n<pre><code class=\"python\">viewDF(df1, df2, df3)\n</code></pre>\n<p>I learned something there, which is the Python 3 substitution syntax <code>{}\".format</code> The opened files are read-only, in any case they are files which are later deleted, so it's effectively a GUI for dataframes. It will spawn multiple instances of Libreoffice Calc for each dataframe you give it, which you can view fullscreen on separate screens, and then once you close Calc, it cleans up after itself. </p>\n", "abstract": "I tested many of the suggestions here and none of them seem to run or install easily, especially for Python 3, but now I've written a function which is basically accomplishing what I wanted. Need to have these dataframes full-screen, and scrollable sometimes. So in a Linux environment using Libreoffice Calc, inspired by this answer from Unix and Linux StackExchange, here's what you can do in Python 3: Use it like this: I learned something there, which is the Python 3 substitution syntax {}\".format The opened files are read-only, in any case they are files which are later deleted, so it's effectively a GUI for dataframes. It will spawn multiple instances of Libreoffice Calc for each dataframe you give it, which you can view fullscreen on separate screens, and then once you close Calc, it cleans up after itself. "}, {"id": 54660955, "score": 1, "vote": 0, "content": "<p>I've also been searching very simple gui. I was surprised that no one mentioned <code>gtabview</code>.</p>\n<p>It is easy to install (just <code>pip3 install gtabview</code> ), and it loads data blazingly fast.\nI recommend using gtabview if you are not using spyder or Pycharm.</p>\n", "abstract": "I've also been searching very simple gui. I was surprised that no one mentioned gtabview. It is easy to install (just pip3 install gtabview ), and it loads data blazingly fast.\nI recommend using gtabview if you are not using spyder or Pycharm."}, {"id": 59108143, "score": 1, "vote": 0, "content": "<p>One very simple way is to use <a href=\"https://www.xlwings.org/\" rel=\"nofollow noreferrer\">xlwings</a> to view the dataframe in Excel. It has excellent treatment of Pandas dataframes. Install as usual using</p>\n<pre><code class=\"python\">pip install xlwings\n</code></pre>\n<p>then just have Excel open while you are working  and</p>\n<pre><code class=\"python\">import xlwings as xw\nxw.sheets.active.range(\"A1\").value = df         # put df in currently active sheet\n</code></pre>\n<p>More sophisticated you can use <code>app = xw.App()</code> to open Excel and/or <code>xw.Book()</code> to create a new workbook from Excel. To create/switch between sheets I usually use a small custom function</p>\n<pre><code class=\"python\">def addActivate(wb, sheet, after=None, before=None):\n    try:\n        wb.sheets.add(sheet, after=after, before=before)\n    except ValueError:\n        wb.sheets(sheet).activate()\n\naddActivate(xw.books.active, \"newSheet\")\nxw.sheets.active.range(\"A1\").value = df\n</code></pre>\n", "abstract": "One very simple way is to use xlwings to view the dataframe in Excel. It has excellent treatment of Pandas dataframes. Install as usual using then just have Excel open while you are working  and More sophisticated you can use app = xw.App() to open Excel and/or xw.Book() to create a new workbook from Excel. To create/switch between sheets I usually use a small custom function"}, {"id": 10636141, "score": 0, "vote": 0, "content": "<p>I'm not a Pandas user myself, but a quick search for \"pandas gui\" turns up the Pandas project's <a href=\"http://pandas.pydata.org/summerofcode2012.html\" rel=\"nofollow\">GSOC 2012 proposal</a>:</p>\n<blockquote>\n<p>Currently the only way to interact with these objects is through the API. This project proposes to add a simple Qt or Tk GUI with which to view and manipulate these objects.</p>\n</blockquote>\n<p>So, there's no GUI, but if you'd write one using Qt or Tk, the project might be interested in your code.</p>\n", "abstract": "I'm not a Pandas user myself, but a quick search for \"pandas gui\" turns up the Pandas project's GSOC 2012 proposal: Currently the only way to interact with these objects is through the API. This project proposes to add a simple Qt or Tk GUI with which to view and manipulate these objects. So, there's no GUI, but if you'd write one using Qt or Tk, the project might be interested in your code."}, {"id": 42412745, "score": 0, "vote": 0, "content": "<p>You can use GitHub Atom with Hydrogen plugin. In Mac you can use Cmd+Shift keys to execute line by line. Even you can select only the variable and see inside. DataFrames are nicely display and you can even copy. I wrote a blog to show the way to configure these.\n<a href=\"http://ojitha.blogspot.com.au/2016/08/atom-as-spark-editor.html\" rel=\"nofollow noreferrer\">http://ojitha.blogspot.com.au/2016/08/atom-as-spark-editor.html</a></p>\n", "abstract": "You can use GitHub Atom with Hydrogen plugin. In Mac you can use Cmd+Shift keys to execute line by line. Even you can select only the variable and see inside. DataFrames are nicely display and you can even copy. I wrote a blog to show the way to configure these.\nhttp://ojitha.blogspot.com.au/2016/08/atom-as-spark-editor.html"}, {"id": 59047208, "score": 0, "vote": 0, "content": "<p>Can I propose <code>pivotablejs</code>?</p>\n<p>It provides horizontal and vertical pivoting, filtering, graphing, sorting, and lots of different aggregations all in just a few lines in a Jupyter notebook (tip: right-click the [pop out] link and open in a new tab for increased flexibility)</p>\n<pre><code class=\"python\">!pip install pivottablejs\nfrom pivottablejs import pivot_ui\n\npivot_ui(df, outfile_path='pivottablejs.html')\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/sxyJU.png\" rel=\"nofollow noreferrer\"><img alt=\"Graphic pivoting example\" src=\"https://i.stack.imgur.com/sxyJU.png\"/></a></p>\n<p><a href=\"https://towardsdatascience.com/two-essential-pandas-add-ons-499c1c9b65de\" rel=\"nofollow noreferrer\">https://towardsdatascience.com/two-essential-pandas-add-ons-499c1c9b65de</a></p>\n", "abstract": "Can I propose pivotablejs? It provides horizontal and vertical pivoting, filtering, graphing, sorting, and lots of different aggregations all in just a few lines in a Jupyter notebook (tip: right-click the [pop out] link and open in a new tab for increased flexibility)  https://towardsdatascience.com/two-essential-pandas-add-ons-499c1c9b65de"}, {"id": 59555266, "score": 0, "vote": 0, "content": "<p>you can also use pandastable library</p>\n<p><a href=\"https://github.com/dmnfarrell/pandastable\" rel=\"nofollow noreferrer\">https://github.com/dmnfarrell/pandastable</a></p>\n<p>I found it very useful for my application</p>\n<p>you can simply install pandastable using 'pip install pandastable'</p>\n<p>my application works on pandas==0.23.4 and this version of pandas works well with pandastable</p>\n", "abstract": "you can also use pandastable library https://github.com/dmnfarrell/pandastable I found it very useful for my application you can simply install pandastable using 'pip install pandastable' my application works on pandas==0.23.4 and this version of pandas works well with pandastable"}]}, {"link": "https://stackoverflow.com/questions/7102378/what-gui-library-is-used-by-sublime-text-editor", "question": {"id": "7102378", "title": "What gui library is used by sublime text editor?", "content": "<p>I've downloaded an editor of <a href=\"http://www.sublimetext.com/\" rel=\"noreferrer\">sublimetext</a> and I want to know what GUI library is used in there.</p>\n<p>The filenames of files that are in the editor executables directory are:</p>\n<pre><code class=\"python\">bz2.pyd\nMicrosoft.VC90.CRT.manifest   \nmsvcp90.dll\nmsvcr90.dll                   \nPackageSetup.py\nPackageSetup.pyc              \npyexpat.pyd                   \npython26.dll\npython26.zip                  \nselect.pyd\nsublimeplugin.py              \nsublimeplugin.pyc\nsublimetext.exe               \nunicodedata.pyd\nunins000.dat                  \nunins000.exe\n_ctypes.pyd                   \n_elementtree.pyd\n_hashlib.pyd                  \n_socket.pyd\n_ssl.pyd     \n</code></pre>\n<p>Can I find the information from the file names?</p>\n", "abstract": "I've downloaded an editor of sublimetext and I want to know what GUI library is used in there. The filenames of files that are in the editor executables directory are: Can I find the information from the file names?"}, "answers": [{"id": 9201645, "score": 138, "vote": 0, "content": "<p>Sublime Text 2 is mostly coded in C++ and uses a custom UI toolkit. Here is the author, Jon Skinner, explaining it: <a href=\"http://news.ycombinator.com/item?id=2822114\">http://news.ycombinator.com/item?id=2822114</a>.</p>\n<blockquote>\n<p>I keep meaning to write a blog post with some details on this, but as\n  with many things, I usually end up coding instead. Sublime Text 2 is\n  almost entirely C++ (with a smattering of Objective C for Cocoa and\n  Python for plugins). Coding is generally fairly straight forward: code\n  on one platform (mostly Linux at the moment, but I switch around\n  frequently), and then make sure it still compiles elsewhere. Sublime\n  Text 2 itself uses a custom UI toolkit. There are a lot of apps where\n  this may not make sense, but it's not such an unreasonable choice for\n  Sublime Text, where I always knew that a lot of the UI controls were\n  going to have to be custom no matter the toolkit (e.g., the text\n  control and tab controls). The UI toolkit sits on top of a cross\n  platform abstraction layer, which is more a union of platform\n  functionality rather than lowest common denominator.</p>\n</blockquote>\n", "abstract": "Sublime Text 2 is mostly coded in C++ and uses a custom UI toolkit. Here is the author, Jon Skinner, explaining it: http://news.ycombinator.com/item?id=2822114. I keep meaning to write a blog post with some details on this, but as\n  with many things, I usually end up coding instead. Sublime Text 2 is\n  almost entirely C++ (with a smattering of Objective C for Cocoa and\n  Python for plugins). Coding is generally fairly straight forward: code\n  on one platform (mostly Linux at the moment, but I switch around\n  frequently), and then make sure it still compiles elsewhere. Sublime\n  Text 2 itself uses a custom UI toolkit. There are a lot of apps where\n  this may not make sense, but it's not such an unreasonable choice for\n  Sublime Text, where I always knew that a lot of the UI controls were\n  going to have to be custom no matter the toolkit (e.g., the text\n  control and tab controls). The UI toolkit sits on top of a cross\n  platform abstraction layer, which is more a union of platform\n  functionality rather than lowest common denominator."}, {"id": 7102527, "score": 28, "vote": 0, "content": "<p>a little Googling suggested it is using the Sublime GUI, which judging by the Debian source package is written in C++.</p>\n<p>then again, running <code>strings</code> on the Linux <code>sublime_text</code> binary shows the following shared libraries (equivalent of Windows DLLs) which might suggest gtk:</p>\n<pre><code class=\"python\">/lib/ld-linux.so.2\nlibgtk-x11-2.0.so.0\nlibgdk-x11-2.0.so.0\nlibatk-1.0.so.0\nlibgio-2.0.so.0\nlibpangoft2-1.0.so.0\nlibpangocairo-1.0.so.0\nlibgdk_pixbuf-2.0.so.0\nlibcairo.so.2\nlibpng12.so.0\nlibpango-1.0.so.0\nlibfreetype.so.6\nlibfontconfig.so.1\nlibgobject-2.0.so.0\nlibgmodule-2.0.so.0\nlibgthread-2.0.so.0\nlibrt.so.1\nlibglib-2.0.so.0\nlibpthread.so.0\nlibdl.so.2\nlibutil.so.1\nlibm.so.6\nlibX11.so.6\nlibstdc++.so.6\nlibgcc_s.so.1\nlibc.so.6\nlibgio-2.0.so\nlibgio-2.0.so.0\nmodule.so\n</code></pre>\n<p><a href=\"http://www.sublimetext.com/forum/viewtopic.php?f=2&amp;t=2524&amp;start=0\" rel=\"noreferrer\">this also</a> suggests gtk.</p>\n", "abstract": "a little Googling suggested it is using the Sublime GUI, which judging by the Debian source package is written in C++. then again, running strings on the Linux sublime_text binary shows the following shared libraries (equivalent of Windows DLLs) which might suggest gtk: this also suggests gtk."}, {"id": 7135574, "score": 16, "vote": 0, "content": "<p>It might not be written in Python. The reason you see Python code is users can write scripts/plugin in Pythons to extend Sublime Text. I suspect it is written in C++ with GTK as GUI toolkit.  </p>\n", "abstract": "It might not be written in Python. The reason you see Python code is users can write scripts/plugin in Pythons to extend Sublime Text. I suspect it is written in C++ with GTK as GUI toolkit.  "}]}, {"link": "https://stackoverflow.com/questions/20996193/is-there-a-tutorial-specifically-for-pyqt5", "question": {"id": "20996193", "title": "Is there a tutorial specifically for PyQt5?", "content": "<p>I am looking for a PyQt5 tutorial. It is rather complicated to start GUI development with Python for the first time without a tutorial.</p>\n<p>I only found some PyQt4 tutorials so far, and since something changed from Qt4 to Qt5, for example the fact <code>SIGNAL</code> and <code>SLOT</code> are no more supported in Qt5, it would be nice to have specific tutorials for PyQt5.</p>\n<p>Can someone please provide a tutorial on how to start GUI development with PyQt5?</p>\n", "abstract": "I am looking for a PyQt5 tutorial. It is rather complicated to start GUI development with Python for the first time without a tutorial. I only found some PyQt4 tutorials so far, and since something changed from Qt4 to Qt5, for example the fact SIGNAL and SLOT are no more supported in Qt5, it would be nice to have specific tutorials for PyQt5. Can someone please provide a tutorial on how to start GUI development with PyQt5?"}, "answers": [{"id": 24673008, "score": 78, "vote": 0, "content": "<p>As my travels into the depths of PyQt5 continue, so shall I continue to update this answer with some of the shinier treasures I find. </p>\n<p>That being said, I am now taking a \"rough draft\" stab at a quick intro to PyQt5. I will also provide links to helpful resources. I am new to this framework as well, and I will elaborate on what I believe to be a good strategy for using it, as I figure that strategy out. There are likely other good strategies, so if anyone has anything to add, then please leave a comment. This is very much a work in progress.</p>\n<hr/>\n<h2>Strategy</h2>\n<p>I've learned much from the example code as suggested in the other answer, but something the examples don't help with is PyQt5's deep magic. Frameworks with a lot of magic in them (PyQt5, Django, SQLAlchemy, ...) are great because an enormous amount of drudgery is abstracted away from you. On the flip side, it is not always clear what the hell is going on, or what you're supposed to do about it. </p>\n<p>Luckily, it seems we have options:</p>\n<ul>\n<li><p><a href=\"http://qt-project.org/doc/qt-5/designer-quick-start.html\">QtDesigner</a>: For those days when your keyboard catches fire, there's a rockin' GUI-Builder called in the installation package. When you see the code this produces (perhaps only in the community version?), you'll see why this <em>may</em> not be the panacea it seems.</p></li>\n<li><p><a href=\"http://qt-project.org/doc/qt-5/qmlfirststeps.html\">QML</a>: Another candidate for panacea: declarative GUI building from formatted JSON. Yum.</p></li>\n<li><p><a href=\"http://qt-project.org/doc/qt-5/qtquick-index.html\">Qt Quick</a>: The framework for QML. By this point, it may seem tantalizingly easy, but don't get sucked in by this stuff just yet. <em>It always seems to come down to learning it by hand.</em> </p></li>\n<li><p><a href=\"http://qt-project.org/doc/qt-5/model-view-programming.html\">The Model-View Framework<sup>(1)</sup></a>: Model-View (not MVC) separates the code that deals with presentation/interaction from the code that manages the data, with the aim of providing modularity. </p></li>\n</ul>\n<p>Coding in PyQt5 is greatly simplified by using the set of classes that implement the <em>Model-View design pattern</em>. Model-View is an evolution of Model-View-Controller (MVC), in which the Controller has been reunited with the View. They seem like strange bedfellows, but, most of the program's logic <em>is</em> dealing with either the user, or data: it seems to make a certain sense, at least at a stratospheric level. </p>\n<p>From a bird's eye:</p>\n<h2>Architecture(s)</h2>\n<p><strong>Model-View-Controller</strong></p>\n<p>This widely-used design pattern separates the application into 3 layers:</p>\n<ol>\n<li><strong><em>Model</em></strong>  ~&gt;  Encapsulates the data. Notifies View and Controller of any changes to the underlying data. This causes updates to the display of output or available commands, respectively.</li>\n<li><strong><em>View</em></strong>  ~&gt;  Displays the relevant output from the Model to the user.</li>\n<li><strong><em>Controller</em></strong>  ~&gt;  Encapsulates user interaction, and notifies the Model and View of relevant events.</li>\n</ol>\n<p><strong>Model-View</strong></p>\n<ul>\n<li><a href=\"http://qt-project.org/doc/qt-5/graphicsview.html\">The Graphics View Framework<sup>(1)</sup></a>  ~&gt;  Represent everything (including embedded QWidgets, etc) inside a QGraphicsScene as a QGraphicsItem (or derivative thereof), including proxy classes for embedding widgets. The items are supposedly highly optimized, and integrating OpenGL support is a one-liner, which is nice. </li>\n</ul>\n<p>This design pattern puts the Controller inside the View. This way, the view is capable of handling the entirety of the user's interaction. In concrete terms, these are the Signals and Slots mechanisms.</p>\n<h2>User Interaction Management</h2>\n<p>Callbacks</p>\n<p>Signals and Slots</p>\n<p>..... ** I'm sorry, but I must sign off now. I'll be back to continue to add to this. **</p>\n<h2>Practical Example(s)</h2>\n<p>Like, for instance, you can take a tree view from the <code>itemviews/editabletreemodel</code> example, then swap in a file system model (<code>QFileSystemModel</code>) from the <code>itemviews/dirview</code> example and you've got a full (working) view of your directory tree. Pretty snazzy. </p>\n<p>So, you would take the code from the editabletreemodel example:</p>\n<pre><code class=\"python\">headers = (\"Title\", \"Description\")\n\nfile = QFile(':/default.txt')\nfile.open(QIODevice.ReadOnly)\nmodel = TreeModel(headers, file.readAll())\nfile.close()\n\nself.view.setModel(model)\n</code></pre>\n<p>...and swap in the model from dirview:</p>\n<pre><code class=\"python\">model = QFileSystemModel()\nmodel.setRootPath('')\nself.view.setModel(model)\n</code></pre>\n<p>...and it just works. Amazing. </p>\n<p>The next step (in my case) (*I think) is implementing a custom model which I will then use several views concurrently, but I don't know if that kinda thing fits your use case.</p>\n<h2>Resources</h2>\n<p>Here are some gems I found on my travels. Hopefully they help you on yours.</p>\n<p><a href=\"http://qt-project.org/doc/qt-5/model-view-programming.html\">This is a tutorial on Model-View for Qt5.<sup>(1)</sup></a> It is a very detailed document from the official Qt5 docs. A good deal of useful documentation can be found at the Qt5 site. Keep in mind, it's for Qt5 (the C++ library), but the difference is trivial to read through (and the PyQt5 official docs point there anyway).</p>\n<p><a href=\"http://qt-project.org/doc/qt-5/designer-quick-start.html\">This PDF contains a quick high-level to PyQt4's Model-View framework.</a> Note that is it for PyQt4 (not PyQt5), but it is actually for Python (as opposed to C++), and I found it very quickly taught me a lot. </p>\n<p>I am just starting to play with the Graphics View, and am finding <a href=\"http://qt-project.org/doc/qt-5/graphicsview.html\">this tutorial on the Graphics View Framework</a> very helpful. This is the same View that is used in the <code>qtdemo</code> example code to generate some slick effects. I'll be updating this in a bit. </p>\n<p><a href=\"http://qt-project.org/doc/qt-5/qtmodules.html\">This is a complete list of all of the Qt5 Modules.</a></p>\n<p><a href=\"http://qt-project.org/doc/qt-5/classes.html\">This is a complete list of all of the Qt5 Classes.</a></p>\n<p><a href=\"http://qt-project.org/doc/qt-5/functions.html\">This is a complete list of all functions in the Qt5 API.</a></p>\n<p>As katsh pointed out in another answer's comments, <a href=\"https://github.com/baoboa/pyqt5/tree/master/examples\">here is a link to the example code for PyQt5.2.1 on GitHub</a></p>\n<p>Additionally, a copy of the example code comes packaged with your distribution and can be found at: </p>\n<pre><code class=\"python\">%PYTHON_HOME%\\Lib\\site-packages\\PyQt5\\examples\n</code></pre>\n<p>If you're using PyDev (Eclipse), you can run examples by simply right-clicking an example's main module file in PyDev Package Explorer or Navigator =:&gt; Run As =:&gt; Python Run</p>\n<p>The best one, in my (not so) humble opinion, is:</p>\n<pre><code class=\"python\">%PYTHON_HOME%\\Lib\\site-packages\\PyQt5\\examples\\qtdemo\\qtdemo.py\n</code></pre>\n<p>Among my current projects, I'm in the process of reverse engineering this example. If you check it out, you'll see why. To be continued.. ;)</p>\n<p>Enjoy!</p>\n", "abstract": "As my travels into the depths of PyQt5 continue, so shall I continue to update this answer with some of the shinier treasures I find.  That being said, I am now taking a \"rough draft\" stab at a quick intro to PyQt5. I will also provide links to helpful resources. I am new to this framework as well, and I will elaborate on what I believe to be a good strategy for using it, as I figure that strategy out. There are likely other good strategies, so if anyone has anything to add, then please leave a comment. This is very much a work in progress. I've learned much from the example code as suggested in the other answer, but something the examples don't help with is PyQt5's deep magic. Frameworks with a lot of magic in them (PyQt5, Django, SQLAlchemy, ...) are great because an enormous amount of drudgery is abstracted away from you. On the flip side, it is not always clear what the hell is going on, or what you're supposed to do about it.  Luckily, it seems we have options: QtDesigner: For those days when your keyboard catches fire, there's a rockin' GUI-Builder called in the installation package. When you see the code this produces (perhaps only in the community version?), you'll see why this may not be the panacea it seems. QML: Another candidate for panacea: declarative GUI building from formatted JSON. Yum. Qt Quick: The framework for QML. By this point, it may seem tantalizingly easy, but don't get sucked in by this stuff just yet. It always seems to come down to learning it by hand.  The Model-View Framework(1): Model-View (not MVC) separates the code that deals with presentation/interaction from the code that manages the data, with the aim of providing modularity.  Coding in PyQt5 is greatly simplified by using the set of classes that implement the Model-View design pattern. Model-View is an evolution of Model-View-Controller (MVC), in which the Controller has been reunited with the View. They seem like strange bedfellows, but, most of the program's logic is dealing with either the user, or data: it seems to make a certain sense, at least at a stratospheric level.  From a bird's eye: Model-View-Controller This widely-used design pattern separates the application into 3 layers: Model-View This design pattern puts the Controller inside the View. This way, the view is capable of handling the entirety of the user's interaction. In concrete terms, these are the Signals and Slots mechanisms. Callbacks Signals and Slots ..... ** I'm sorry, but I must sign off now. I'll be back to continue to add to this. ** Like, for instance, you can take a tree view from the itemviews/editabletreemodel example, then swap in a file system model (QFileSystemModel) from the itemviews/dirview example and you've got a full (working) view of your directory tree. Pretty snazzy.  So, you would take the code from the editabletreemodel example: ...and swap in the model from dirview: ...and it just works. Amazing.  The next step (in my case) (*I think) is implementing a custom model which I will then use several views concurrently, but I don't know if that kinda thing fits your use case. Here are some gems I found on my travels. Hopefully they help you on yours. This is a tutorial on Model-View for Qt5.(1) It is a very detailed document from the official Qt5 docs. A good deal of useful documentation can be found at the Qt5 site. Keep in mind, it's for Qt5 (the C++ library), but the difference is trivial to read through (and the PyQt5 official docs point there anyway). This PDF contains a quick high-level to PyQt4's Model-View framework. Note that is it for PyQt4 (not PyQt5), but it is actually for Python (as opposed to C++), and I found it very quickly taught me a lot.  I am just starting to play with the Graphics View, and am finding this tutorial on the Graphics View Framework very helpful. This is the same View that is used in the qtdemo example code to generate some slick effects. I'll be updating this in a bit.  This is a complete list of all of the Qt5 Modules. This is a complete list of all of the Qt5 Classes. This is a complete list of all functions in the Qt5 API. As katsh pointed out in another answer's comments, here is a link to the example code for PyQt5.2.1 on GitHub Additionally, a copy of the example code comes packaged with your distribution and can be found at:  If you're using PyDev (Eclipse), you can run examples by simply right-clicking an example's main module file in PyDev Package Explorer or Navigator =:> Run As =:> Python Run The best one, in my (not so) humble opinion, is: Among my current projects, I'm in the process of reverse engineering this example. If you check it out, you'll see why. To be continued.. ;) Enjoy!"}, {"id": 21359084, "score": 29, "vote": 0, "content": "<p>Been looking for PyQt5 tutorials for some time? Look no further! You won't find many around the internet. </p>\n<p>Not really tutorials, but <em>pretty self-explanatory basic scripts</em> under the following path:</p>\n<blockquote>\n<p>/python/lib/site-packages/PyQt5/examples </p>\n</blockquote>\n<p>you will find about <code>100</code> examples in <code>30</code> folders ranging from beginner to advanced, covering basic windows, menus, tabs, layouts, network, OpenGL, etc.</p>\n", "abstract": "Been looking for PyQt5 tutorials for some time? Look no further! You won't find many around the internet.  Not really tutorials, but pretty self-explanatory basic scripts under the following path: /python/lib/site-packages/PyQt5/examples  you will find about 100 examples in 30 folders ranging from beginner to advanced, covering basic windows, menus, tabs, layouts, network, OpenGL, etc."}, {"id": 21327117, "score": 9, "vote": 0, "content": "<p>Have a look at <a href=\"http://www.thehackeruniversity.com/2014/01/23/pyqt5-beginner-tutorial/\">http://www.thehackeruniversity.com/2014/01/23/pyqt5-beginner-tutorial/</a> This is a newbie friendly tutorial</p>\n", "abstract": "Have a look at http://www.thehackeruniversity.com/2014/01/23/pyqt5-beginner-tutorial/ This is a newbie friendly tutorial"}]}, {"link": "https://stackoverflow.com/questions/20125967/how-to-set-default-text-for-a-tkinter-entry-widget", "question": {"id": "20125967", "title": "How to set default text for a Tkinter Entry widget", "content": "<p>How do I set the default text for a Tkinter Entry widget in the constructor?  I checked the documentation, but I do not see a something like a <code>\"string=\"</code> option to set in the constructor?</p>\n<p>There is a similar answer out there for using tables and lists, but this is for a simple Entry widget.</p>\n", "abstract": "How do I set the default text for a Tkinter Entry widget in the constructor?  I checked the documentation, but I do not see a something like a \"string=\" option to set in the constructor? There is a similar answer out there for using tables and lists, but this is for a simple Entry widget."}, "answers": [{"id": 20126024, "score": 98, "vote": 0, "content": "<p>Use <a href=\"http://effbot.org/tkinterbook/entry.htm#Tkinter.Entry.insert-method\" rel=\"noreferrer\"><code>Entry.insert</code></a>. For example:</p>\n<pre><code class=\"python\">try:\n    from tkinter import *  # Python 3.x\nexcept Import Error:\n    from Tkinter import *  # Python 2.x\n\nroot = Tk()\ne = Entry(root)\ne.insert(END, 'default text')\ne.pack()\nroot.mainloop()\n</code></pre>\n<p>Or use <a href=\"http://effbot.org/tkinterbook/entry.htm#Tkinter.Entry.config-method\" rel=\"noreferrer\"><code>textvariable</code></a> option:</p>\n<pre><code class=\"python\">try:\n    from tkinter import *  # Python 3.x\nexcept Import Error:\n    from Tkinter import *  # Python 2.x\n\nroot = Tk()\nv = StringVar(root, value='default text')\ne = Entry(root, textvariable=v)\ne.pack()\nroot.mainloop()\n</code></pre>\n", "abstract": "Use Entry.insert. For example: Or use textvariable option:"}, {"id": 67215279, "score": 3, "vote": 0, "content": "<p>For me,</p>\n<pre><code class=\"python\">Entry.insert(END, 'your text')\n</code></pre>\n<p>didn't worked.</p>\n<p>I used <code>Entry.insert(-1, 'your text')</code>.</p>\n<p>Thanks.</p>\n", "abstract": "For me, didn't worked. I used Entry.insert(-1, 'your text'). Thanks."}]}, {"link": "https://stackoverflow.com/questions/9632995/how-to-easily-print-ascii-art-text", "question": {"id": "9632995", "title": "How to easily print ascii-art text?", "content": "<p>I have a program that dumps a lot of output, and <strong>I want some of that output to really stand out</strong>. One way could be to <strong>render important text with ascii art</strong>, like <a href=\"http://patorjk.com/software/taag/\" rel=\"noreferrer\">this web service</a> does for example:</p>\n<pre><code class=\"python\"> #    #   ##   #####  #    # # #    #  ####  \n #    #  #  #  #    # ##   # # ##   # #    # \n #    # #    # #    # # #  # # # #  # #      \n # ## # ###### #####  #  # # # #  # # #  ### \n ##  ## #    # #   #  #   ## # #   ## #    # \n #    # #    # #    # #    # # #    #  ####  \n</code></pre>\n<p><strong>other solutions could be colored or bold output</strong>. So how to do this sort of stuff easily in Python?</p>\n", "abstract": "I have a program that dumps a lot of output, and I want some of that output to really stand out. One way could be to render important text with ascii art, like this web service does for example: other solutions could be colored or bold output. So how to do this sort of stuff easily in Python?"}, "answers": [{"id": 9638532, "score": 104, "vote": 0, "content": "<ul>\n<li><p>pyfiglet - pure Python implementation of <a href=\"http://www.figlet.org\" rel=\"noreferrer\">http://www.figlet.org</a></p>\n<pre><code class=\"python\">pip install pyfiglet\n</code></pre></li>\n<li><p>termcolor - helper functions for ANSI color formatting</p>\n<pre><code class=\"python\">pip install termcolor\n</code></pre></li>\n<li><p>colorama - multiplatform support (Windows)</p>\n<pre><code class=\"python\">pip install colorama\n</code></pre></li>\n</ul>\n<pre><code class=\"python\">import sys\n\nfrom colorama import init\ninit(strip=not sys.stdout.isatty()) # strip colors if stdout is redirected\nfrom termcolor import cprint \nfrom pyfiglet import figlet_format\n\ncprint(figlet_format('missile!', font='starwars'),\n       'yellow', 'on_red', attrs=['bold'])\n</code></pre>\n<h3>Example</h3>\n<pre><code class=\"python\">$ python print-warning.py \n</code></pre>\n<p><img alt=\"missile\" src=\"https://i.stack.imgur.com/ZzkDN.png\"/></p>\n<pre>\n$ python print-warning.py | cat\n.___  ___.  __       _______.     _______. __   __       _______  __\n|   \\/   | |  |     /       |    /       ||  | |  |     |   ____||  |\n|  \\  /  | |  |    |   (----`   |   (----`|  | |  |     |  |__   |  |\n|  |\\/|  | |  |     \\   \\        \\   \\    |  | |  |     |   __|  |  |\n|  |  |  | |  | .----)   |   .----)   |   |  | |  `----.|  |____ |__|\n|__|  |__| |__| |_______/    |_______/    |__| |_______||_______|(__)\n</pre>\n", "abstract": "pyfiglet - pure Python implementation of http://www.figlet.org termcolor - helper functions for ANSI color formatting colorama - multiplatform support (Windows) "}, {"id": 27753869, "score": 35, "vote": 0, "content": "<p>PIL gives a cool way to do this very simple.\nYou can render the text onto a b/w image and convert that bitmap to a string stream replacing the black and white pixels to chars.</p>\n<pre><code class=\"python\">from PIL import Image, ImageFont, ImageDraw\n\nShowText = 'Python PIL'\n\nfont = ImageFont.truetype('arialbd.ttf', 15) #load the font\nsize = font.getsize(ShowText)  #calc the size of text in pixels\nimage = Image.new('1', size, 1)  #create a b/w image\ndraw = ImageDraw.Draw(image)\ndraw.text((0, 0), ShowText, font=font) #render the text to the bitmap\nfor rownum in range(size[1]): \n#scan the bitmap:\n# print ' ' for black pixel and \n# print '#' for white one\n    line = []\n    for colnum in range(size[0]):\n        if image.getpixel((colnum, rownum)): line.append(' '),\n        else: line.append('#'),\n    print ''.join(line)\n \n</code></pre>\n<p>It renders the next result:</p>\n<pre><code class=\"python\"> #######                 ##                              #######   ##  ##\n ##   ###           ##   ##                              ##   ###  ##  ##\n ##    ##           ##   ##                              ##    ##  ##  ##\n ##    ## ##    ## ####  ######     ####    ######       ##    ##  ##  ##\n ##    ##  ##  ###  ##   ###  ##   ##  ##   ###  ##      ##    ##  ##  ##\n ##   ##   ##  ##   ##   ##   ##  ##    ##  ##   ##      ##   ##   ##  ##\n ######    ##  ##   ##   ##   ##  ##    ##  ##   ##      ######    ##  ##\n ##         ## #    ##   ##   ##  ##    ##  ##   ##      ##        ##  ##\n ##         ####    ##   ##   ##  ##    ##  ##   ##      ##        ##  ##\n ##         ####    ##   ##   ##   ##  ##   ##   ##      ##        ##  ##\n ##          ##     ###  ##   ##    ####    ##   ##      ##        ##  ########\n             ##\n             ##\n           ###             \n         ##\n       ###\n</code></pre>\n<p>I made a little more comprehensive example with functional style.</p>\n<pre><code class=\"python\">import Image, ImageFont, ImageDraw\n\nShowText = 'Python PIL'\n\n\nfont = ImageFont.truetype('arialbd.ttf', 15) #load the font\nsize = font.getsize(ShowText)  #calc the size of text in pixels\nimage = Image.new('1', size, 1)  #create a b/w image\ndraw = ImageDraw.Draw(image)\ndraw.text((0, 0), ShowText, font=font) #render the text to the bitmap\n\ndef mapBitToChar(im, col, row):\n    if im.getpixel((col, row)): return ' '\n    else: return '#'\n\nfor r in range(size[1]):\n    print ''.join([mapBitToChar(image, c, r) for c in range(size[0])])\n</code></pre>\n", "abstract": "PIL gives a cool way to do this very simple.\nYou can render the text onto a b/w image and convert that bitmap to a string stream replacing the black and white pixels to chars. It renders the next result: I made a little more comprehensive example with functional style."}, {"id": 51847966, "score": 11, "vote": 0, "content": "<p>This is fun. I've figured out how to use PIL (the \"Pillow\" fork, of course) and Numpy to do this fully \"vectorized\", i.e. without loops:</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">text = \"Hi there\"\nfrom PIL import Image, ImageDraw, ImageFont\nimport numpy as np\nmyfont = ImageFont.truetype(\"verdanab.ttf\", 12)\nsize = myfont.getsize(text)\nimg = Image.new(\"1\",size,\"black\")\ndraw = ImageDraw.Draw(img)\ndraw.text((0, 0), text, \"white\", font=myfont)\npixels = np.array(img, dtype=np.uint8)\nchars = np.array([' ','#'], dtype=\"U1\")[pixels]\nstrings = chars.view('U' + str(chars.shape[1])).flatten()\nprint( \"\\n\".join(strings))\n</code></pre>\n<pre class=\"lang-none prettyprint-override\"><code class=\"python\">           ##           ##                            \n ##    ##  ##      ##   ##                            \n ##    ##          ##   ##                            \n ##    ##  ##     ##### #####    ####   ## ##  ####   \n ##    ##  ##      ##   ##  ##  ##  ##  ##### ##  ##  \n ########  ##      ##   ##  ##  ##  ##  ##    ##  ##  \n ##    ##  ##      ##   ##  ##  ######  ##    ######  \n ##    ##  ##      ##   ##  ##  ##      ##    ##      \n ##    ##  ##      ##   ##  ##  ##   #  ##    ##   #  \n ##    ##  ##       ### ##  ##   ####   ##     ####   \n</code></pre>\n", "abstract": "This is fun. I've figured out how to use PIL (the \"Pillow\" fork, of course) and Numpy to do this fully \"vectorized\", i.e. without loops:"}]}, {"link": "https://stackoverflow.com/questions/4072150/how-to-change-a-widgets-font-style-without-knowing-the-widgets-font-family-siz", "question": {"id": "4072150", "title": "How to change a widget&#39;s font style without knowing the widget&#39;s font family/size?", "content": "<p>Is there a way to change a <em>Tkinter</em> widget's font style without knowing the widget's font family and font size?</p>\n<p>Use case: We create our UI using standard <em>Tkinter</em> widgets (<em>Label</em>, <em>Entry</em>, <em>Text</em>, etc). While our application runs we may want to dynamically change the font style of these widgets to bold and/or italics using the <code>.config()</code> method. Unfortunately there appears to be no way to specify a font spec without specifying the font's family and size.</p>\n<p>The following are examples of what we'd like to do, but neither of these examples work:</p>\n<pre><code class=\"python\">widget.config(font='bold')\n</code></pre>\n<p>or</p>\n<pre><code class=\"python\">widget.config(font=( None, None, 'bold' ))\n</code></pre>\n", "abstract": "Is there a way to change a Tkinter widget's font style without knowing the widget's font family and font size? Use case: We create our UI using standard Tkinter widgets (Label, Entry, Text, etc). While our application runs we may want to dynamically change the font style of these widgets to bold and/or italics using the .config() method. Unfortunately there appears to be no way to specify a font spec without specifying the font's family and size. The following are examples of what we'd like to do, but neither of these examples work: or"}, "answers": [{"id": 4073037, "score": 67, "vote": 0, "content": "<p>There's a much better way than using <code>.config()</code> to change your application font, especially if your goal is to change the font for a whole group of widgets (or all widgets).</p>\n<p>One of the really great features of Tk is the notion of \"named fonts\". The beauty of named fonts is, if you update the font, all widgets that use that font will automatically get updated. So, configure your widgets once to use these custom fonts, then changing the attributes is trivial.</p>\n<p>Here's a quick example:</p>\n<pre><code class=\"python\"># python 2 imports\n# import Tkinter as tk\n# import tkFont\n\n# python 3 imports\nimport tkinter as tk\nimport tkinter.font as tkFont\n\n\nclass App:\n    def __init__(self):\n        root=tk.Tk()\n        # create a custom font\n        self.customFont = tkFont.Font(family=\"Helvetica\", size=12)\n\n        # create a couple widgets that use that font\n        buttonframe = tk.Frame()\n        label = tk.Label(root, text=\"Hello, world\", font=self.customFont)\n        text = tk.Text(root, width=20, height=2, font=self.customFont)\n        buttonframe.pack(side=\"top\", fill=\"x\")\n        label.pack()\n        text.pack()\n        text.insert(\"end\",\"press +/- buttons to change\\nfont size\")\n\n        # create buttons to adjust the font\n        bigger = tk.Button(root, text=\"+\", command=self.OnBigger)\n        smaller = tk.Button(root, text=\"-\", command=self.OnSmaller)\n        bigger.pack(in_=buttonframe, side=\"left\")\n        smaller.pack(in_=buttonframe, side=\"left\")\n\n        root.mainloop()\n\n    def OnBigger(self):\n        '''Make the font 2 points bigger'''\n        size = self.customFont['size']\n        self.customFont.configure(size=size+2)\n\n    def OnSmaller(self):\n        '''Make the font 2 points smaller'''\n        size = self.customFont['size']\n        self.customFont.configure(size=size-2)\n\napp=App()\n</code></pre>\n<p>If you don't like that approach, or if you want to base your custom font on the default font, or if you're just changing one or two fonts to denote state, you can use <code>font.actual</code> to get the actual size of a font for a given widget. For example:</p>\n<pre><code class=\"python\">import Tkinter as tk\nimport tkFont\n\nroot = tk.Tk()\nlabel = tk.Label(root, text=\"Hello, world\")\nfont = tkFont.Font(font=label['font'])\nprint font.actual()\n</code></pre>\n<p>When I run the above I get the following output:</p>\n<pre><code class=\"python\">{'family': 'Lucida Grande', \n 'weight': 'normal', \n 'slant': 'roman', \n 'overstrike': False, \n 'underline': False, \n 'size': 13}\n</code></pre>\n", "abstract": "There's a much better way than using .config() to change your application font, especially if your goal is to change the font for a whole group of widgets (or all widgets). One of the really great features of Tk is the notion of \"named fonts\". The beauty of named fonts is, if you update the font, all widgets that use that font will automatically get updated. So, configure your widgets once to use these custom fonts, then changing the attributes is trivial. Here's a quick example: If you don't like that approach, or if you want to base your custom font on the default font, or if you're just changing one or two fonts to denote state, you can use font.actual to get the actual size of a font for a given widget. For example: When I run the above I get the following output:"}, {"id": 26798185, "score": 35, "vote": 0, "content": "<p>Even shorter for just one Label:</p>\n<pre><code class=\"python\">from Tkinter import *\nimport Tkinter as tk\nroot = tk.Tk()\n\n# font=\"-weight bold\" does your thing\nexample = Label(root, text=\"This is a bold example.\", font=\"-weight bold\")\nexample.pack()\n\nroot.mainloop()\n</code></pre>\n", "abstract": "Even shorter for just one Label:"}, {"id": 28127567, "score": 8, "vote": 0, "content": "<p>just use the basic attributes of a particular widget, suppose you want to change the font of a label. You can use the following syntax:</p>\n<pre><code class=\"python\">mlabel = Label(text=\"Your text\", font=(\"Name of your font\",size))\n</code></pre>\n<p>this code works for python 3.4</p>\n", "abstract": "just use the basic attributes of a particular widget, suppose you want to change the font of a label. You can use the following syntax: this code works for python 3.4"}, {"id": 4072439, "score": 7, "vote": 0, "content": "<p>If you are using a named font, you can use a couple statements to get what you want:</p>\n<pre><code class=\"python\">import tkFont\nwfont = tkFont.nametofont(widget['font'])\nwfont.config(weight='bold')\n</code></pre>\n<p><strong>Edited</strong> to incorporate B. Oakley's comment. </p>\n", "abstract": "If you are using a named font, you can use a couple statements to get what you want: Edited to incorporate B. Oakley's comment. "}, {"id": 48363012, "score": 2, "vote": 0, "content": "<p>To get the default font without touching or having a widget you can use the generic name of the default font.</p>\n<pre><code class=\"python\">#!/usr/bin/env python3\nimport tkinter\nimport tkinter.font  # Python3!\n\ntkinter.Tk()\ndefault_font = tkinter.font.Font(font='TkDefaultFont')\nprint(default_font.actual())\n</code></pre>\n", "abstract": "To get the default font without touching or having a widget you can use the generic name of the default font."}, {"id": 49683407, "score": 2, "vote": 0, "content": "<p>I know this question is really old, but I am still going to answer for the sake of people from google.</p>\n<p>If you just want to make the text a bit bigger, you can do <code>font=15</code>. Note this seems to always set the font size to 15, no matter what number is entered.</p>\n<p>If want an exact size and have not changed the font, you can do <code>font=('TkDefaultFont', 15)</code>.</p>\n<p>(<code>'TkDefaultFont'</code> is the default font for tkinter)</p>\n<p>You can use either of these in the parameters of the widget on creation, or later with <code>.config()</code>.</p>\n<hr/>\n<p>Works in python 3.6.4</p>\n", "abstract": "I know this question is really old, but I am still going to answer for the sake of people from google. If you just want to make the text a bit bigger, you can do font=15. Note this seems to always set the font size to 15, no matter what number is entered. If want an exact size and have not changed the font, you can do font=('TkDefaultFont', 15). ('TkDefaultFont' is the default font for tkinter) You can use either of these in the parameters of the widget on creation, or later with .config(). Works in python 3.6.4"}, {"id": 24245446, "score": 1, "vote": 0, "content": "<p>To boil much of the above information down to a single code snippet:</p>\n<pre><code class=\"python\">lbl = ttk.Label(blah, blah)   # Make a label\nfont = tkFont(lbl['font'])    # Get its font\nfont.config(weight='bold')    # Modify font attributes\nlbl['font'] = font            # Tell the label to use the modified font\n</code></pre>\n<p>This permits font attributes to be changed independent of the font in use (so long as the font supports that attribute).</p>\n<p>You can also do this on the fly, to create truly nauseating font effects.</p>\n", "abstract": "To boil much of the above information down to a single code snippet: This permits font attributes to be changed independent of the font in use (so long as the font supports that attribute). You can also do this on the fly, to create truly nauseating font effects."}, {"id": 47363613, "score": 1, "vote": 0, "content": "<p>Although it's been quite some time since this Q was asked, I recently had to implement a solution to this, which I thought worth sharing.  The function widget_font_config(...) runs on Python 2 and 3.</p>\n<p>In essence, the \"current value\" of the widget's font is grabbed, modified, and then put back.  Named fonts are supported, and the default <strong>inplace_f</strong> value of <strong>True</strong> means that named fonts will be preserved and modified in place.  But the flag can also be set to <strong>False</strong>, which will cause a named font to be replaced with a different named font, in case the user does not wish for the changes in the font of the widget to percolate to all other widgets which use the named font.</p>\n<pre><code class=\"python\">def widget_font_config(widget, inplace_f=True, **kwargs):\n    import sys\n    if sys.version_info[0] == 2:\n        import tkFont as tk_font\n    else:\n        import tkinter.font as tk_font\n    inplace_f = kwargs.pop('inplace', inplace_f)\n    font = None    \n    if widget and 'font' in widget.config():\n        current_font = widget.cget('font') #grabs current value\n        namedfont_f = False\n        try:\n            font = tk_font.nametofont(current_font)\n            namedfont_f = True\n        except:\n            font = current_font\n        if namedfont_f and inplace_f:\n            font.config(**kwargs)\n        else:\n            font_d = tk_font.Font(font=font).actual()\n            font_d.update(**kwargs)\n            font = tk_font.Font(**font_d)\n            widget.config(font=font)\n        widget.update_idletasks()\n    return font\n\nif __name__ == '__main__':\n    import sys\n    pyVers = sys.version_info[0] # .major\n    if pyVers == 2:\n        import Tkinter as tk, tkFont as tk_font\n    else:\n        import tkinter as tk, tkinter.font as tk_font\n    def go():\n        print(widget_font_config(root.label,  slant='roman', underline=1).actual())\n        print(widget_font_config(root.button, overstrike=1).actual())\n    root = tk.Tk()\n    font_s = 'Courier 20 italic'\n    font_d = dict(family='Courier', size=10, weight='normal', slant='italic')\n    font = tk_font.Font(**font_d)\n    root.label = tk.Label(text='Label {}'.format(font_s), font=font_s)\n    root.label.pack()\n    root.button = tk.Button(text='Button {}'.format(font), font=font, command=go)\n    root.button.pack()\n    root.mainloop()\n</code></pre>\n", "abstract": "Although it's been quite some time since this Q was asked, I recently had to implement a solution to this, which I thought worth sharing.  The function widget_font_config(...) runs on Python 2 and 3. In essence, the \"current value\" of the widget's font is grabbed, modified, and then put back.  Named fonts are supported, and the default inplace_f value of True means that named fonts will be preserved and modified in place.  But the flag can also be set to False, which will cause a named font to be replaced with a different named font, in case the user does not wish for the changes in the font of the widget to percolate to all other widgets which use the named font."}]}, {"link": "https://stackoverflow.com/questions/6116564/destroywindow-does-not-close-window-on-mac-using-python-and-opencv", "question": {"id": "6116564", "title": "DestroyWindow does not close window on Mac using Python and OpenCV", "content": "<p>My program generates a series of windows using the following code:</p>\n<pre><code class=\"python\">def display(img, name, fun):\n    global clicked\n\n    cv.NamedWindow(name, 1)\n    cv.ShowImage(name, img)\n    cv.SetMouseCallback(name, fun, img)\n\n    while cv.WaitKey(33) == -1:\n        if clicked == 1:\n            clicked = 0\n            cv.ShowImage(name, img)\n\n    cv.DestroyWindow(name)\n</code></pre>\n<p>I press \"q\" within the gui window to close it. However, the code continues to the next call of the display function and displays a second gui window while not closing the first. I'm using a Mac with OpenCV 2.1, running the program in Terminal. How can I close the gui windows? Thanks.</p>\n", "abstract": "My program generates a series of windows using the following code: I press \"q\" within the gui window to close it. However, the code continues to the next call of the display function and displays a second gui window while not closing the first. I'm using a Mac with OpenCV 2.1, running the program in Terminal. How can I close the gui windows? Thanks."}, "answers": [{"id": 15058451, "score": 42, "vote": 0, "content": "<p>You need to run <code>cv.startWindowThread()</code> after opening the window.\nI had the same issue and now this works for me.</p>\n<p>Hope this helps for future readers. And there is also a <code>cv2</code> binding (I advise to use that instead of <code>cv</code>).</p>\n<p>This code works for me:</p>\n<pre><code class=\"python\">import cv2 as cv\nimport time\n\nWINDOW_NAME = \"win\"\n\nimage = cv.imread(\"ela.jpg\", cv.CV_LOAD_IMAGE_COLOR)\ncv.namedWindow(WINDOW_NAME, cv.CV_WINDOW_AUTOSIZE)\ninitialtime = time.time()\n\ncv.startWindowThread()\n\nwhile (time.time() - initialtime &lt; 5):\n  print \"in first while\"\ncv.imshow(WINDOW_NAME, image)\ncv.waitKey(1000)\n\ncv.waitKey(1)\ncv.destroyAllWindows()\ncv.waitKey(1)\n\ninitialtime = time.time()\nwhile (time.time() - initialtime &lt; 6):\n    print \"in second while\"\n</code></pre>\n<p>The same issue happens with the C++ version, on Linux:\n<a href=\"https://stackoverflow.com/questions/7139968/trying-to-close-opencv-window-has-no-effect\">Trying to close OpenCV window has no effect</a></p>\n", "abstract": "You need to run cv.startWindowThread() after opening the window.\nI had the same issue and now this works for me. Hope this helps for future readers. And there is also a cv2 binding (I advise to use that instead of cv). This code works for me: The same issue happens with the C++ version, on Linux:\nTrying to close OpenCV window has no effect"}, {"id": 6304156, "score": 38, "vote": 0, "content": "<p>There are a few peculiarities with the GUI in OpenCV. The <code>destroyImage</code> call fails to close a window (atleast under Linux, where the default backend was Gtk+ until 2.1.0) unless <code>waitKey</code> was called to pump the events. Adding a <code>waitKey(1)</code> call right after <code>destroyWindow</code> may work.</p>\n<p>Even so, closing is not guaranteed; the the <code>waitKey</code> function is only intercepted if a window has focus, and so if the window didn't have focus at the time you invoked <code>destroyWindow</code>, chances are it'll stay visible till the next <code>destroyWindow</code> call.</p>\n<p>I'm assuming this is a behaviour that stems from Gtk+; the function didn't give me any trouble when I used it under Windows.</p>\n", "abstract": "There are a few peculiarities with the GUI in OpenCV. The destroyImage call fails to close a window (atleast under Linux, where the default backend was Gtk+ until 2.1.0) unless waitKey was called to pump the events. Adding a waitKey(1) call right after destroyWindow may work. Even so, closing is not guaranteed; the the waitKey function is only intercepted if a window has focus, and so if the window didn't have focus at the time you invoked destroyWindow, chances are it'll stay visible till the next destroyWindow call. I'm assuming this is a behaviour that stems from Gtk+; the function didn't give me any trouble when I used it under Windows."}, {"id": 25794701, "score": 25, "vote": 0, "content": "<p>Sayem2603</p>\n<p>I tried your solution and it worked for me - thanks!  I did some trial and error and discovered that looping 4 times did the trick for me... or posting the same code 4 times just the same..</p>\n<p>Further, I drilled down to:</p>\n<pre><code class=\"python\">cv2.destroyAllWindows()\ncv2.waitKey(1)\ncv2.waitKey(1)\ncv2.waitKey(1)\ncv2.waitKey(1)\n</code></pre>\n<p>or simply calling DestroyAllWindows and then looping the waitKey() code 4 times:</p>\n<pre><code class=\"python\">cv2.destroyAllWindows()\nfor i in range (1,5):\n    cv2.waitKey(1)\n</code></pre>\n<p>Worked as well.  I am not savvy enough to know why this works exactly, though I assume it has something to do with the interruption and delay created by looping that code(?)  </p>\n<p>Matth\u00e4us Brandl said, above, that the third waitKey() worked for him, so perhaps it is slightly different on each system?  (I am running Linux Mint with 3.16.1 kernel and python 2.7)</p>\n<p>The delay, alone, doesn't explain it, as simply increasing the delay time on the waitKey() does not do the trick.  (Also looped print(\"Hello\") 1000 times instead of using wiatKey() just to see if the delay that created helped any - it did not.)  Must have something more to do with how waitKey() interacts with window events.</p>\n<p>OpenCV Docs say: <strong>\"This function is the only method in HighGUI that can fetch and handle events, so it needs to be called periodically for normal event processing unless HighGUI is used within an environment that takes care of event processing.\"</strong></p>\n<p>Perhaps it creates an interrupt of sorts in the GUI display that allows the destroyAllWindows() action to process?</p>\n<p>J</p>\n", "abstract": "Sayem2603 I tried your solution and it worked for me - thanks!  I did some trial and error and discovered that looping 4 times did the trick for me... or posting the same code 4 times just the same.. Further, I drilled down to: or simply calling DestroyAllWindows and then looping the waitKey() code 4 times: Worked as well.  I am not savvy enough to know why this works exactly, though I assume it has something to do with the interruption and delay created by looping that code(?)   Matth\u00e4us Brandl said, above, that the third waitKey() worked for him, so perhaps it is slightly different on each system?  (I am running Linux Mint with 3.16.1 kernel and python 2.7) The delay, alone, doesn't explain it, as simply increasing the delay time on the waitKey() does not do the trick.  (Also looped print(\"Hello\") 1000 times instead of using wiatKey() just to see if the delay that created helped any - it did not.)  Must have something more to do with how waitKey() interacts with window events. OpenCV Docs say: \"This function is the only method in HighGUI that can fetch and handle events, so it needs to be called periodically for normal event processing unless HighGUI is used within an environment that takes care of event processing.\" Perhaps it creates an interrupt of sorts in the GUI display that allows the destroyAllWindows() action to process? J"}, {"id": 44446444, "score": 11, "vote": 0, "content": "<p>Here is what worked for me:\n</p>\n<pre><code class=\"python\">cv2.namedWindow(\"image\")\ncv2.imshow('image', img)\ncv2.waitKey(0) # close window when a key press is detected\ncv2.destroyWindow('image')\ncv2.waitKey(1)\n</code></pre>\n", "abstract": "Here is what worked for me:\n"}, {"id": 12710371, "score": 6, "vote": 0, "content": "<p>This solution works for me (under Ubuntu 12.04 with python open in the shell):</p>\n<p>Re-invoke <code>cv.ShowImage</code> after the window is 'destroyed'.</p>\n", "abstract": "This solution works for me (under Ubuntu 12.04 with python open in the shell): Re-invoke cv.ShowImage after the window is 'destroyed'."}, {"id": 25301690, "score": 3, "vote": 0, "content": "<p>I solved the problem by calling <code>cv2.waitKey(1)</code> in a for loop, I don't know why it worked but gets my job done, so I didn't bother myself further.</p>\n<pre><code class=\"python\">for i in range(1,10):\n    cv2.destroyAllWindows()\n    cv2.waitkey(1)\n</code></pre>\n<p>you are welcome to explain.</p>\n", "abstract": "I solved the problem by calling cv2.waitKey(1) in a for loop, I don't know why it worked but gets my job done, so I didn't bother myself further. you are welcome to explain."}, {"id": 38982774, "score": 3, "vote": 0, "content": "<p>If you are using Spyder ( Anaconda Package ) there is the problem.</p>\n<p>None of the solutions worked for me.\nI discovered that the problem wasn't the functions, but a problem on Spyder really. Try to use a texteditor plus running on terminal and you be fine using simply:</p>\n<pre><code class=\"python\">WINDOW_NAME = \"win\"\nimage = cv.imread(\"foto.jpg\", 0)\ncv.namedWindow(WINDOW_NAME, cv.CV_WINDOW_AUTOSIZE)\n\ncv.startWindowThread()\n\ncv.imshow(WINDOW_NAME, image)\ncv.waitKey()\ncv.destroyAllWindows()\n</code></pre>\n", "abstract": "If you are using Spyder ( Anaconda Package ) there is the problem. None of the solutions worked for me.\nI discovered that the problem wasn't the functions, but a problem on Spyder really. Try to use a texteditor plus running on terminal and you be fine using simply:"}, {"id": 50997415, "score": 2, "vote": 0, "content": "<p>It seems that none of the above solutions worked for me if I run it on Jupyter Notebook (the window hangs when closing and you need to force quit Python to close the window). </p>\n<p>I am on macOS High Sierra 10.13.4, Python 3.6.5, OpenCV 3.4.1.</p>\n<p>The below code works if you run it as a .py file (source: <a href=\"https://www.learnopencv.com/read-write-and-display-a-video-using-opencv-cpp-python/\" rel=\"nofollow noreferrer\">https://www.learnopencv.com/read-write-and-display-a-video-using-opencv-cpp-python/</a>). It opens the camera, records the video, closes the window successfully upon pressing 'q', and saves the video in .avi format. </p>\n<pre><code class=\"python\">import cv2\nimport numpy as np\n\n# Create a VideoCapture object\ncap = cv2.VideoCapture(0)\n\n# Check if camera opened successfully\nif (cap.isOpened() == False): \n  print(\"Unable to read camera feed\")\n\n# Default resolutions of the frame are obtained.The default resolutions are system dependent.\n# We convert the resolutions from float to integer.\nframe_width = int(cap.get(3))\nframe_height = int(cap.get(4))\n\n# Define the codec and create VideoWriter object.The output is stored in 'outpy.avi' file.\nout = cv2.VideoWriter('outpy.avi',cv2.VideoWriter_fourcc('M','J','P','G'), 10, (frame_width,frame_height))\n\nwhile(True):\n  ret, frame = cap.read()\n\n  if ret == True: \n\n    # Write the frame into the file 'output.avi'\n    out.write(frame)\n\n    # Display the resulting frame    \n    cv2.imshow('frame',frame)\n\n    # Press Q on keyboard to stop recording\n    if cv2.waitKey(1) &amp; 0xFF == ord('q'):\n      break\n\n  # Break the loop\n  else:\n    break \n\n# When everything done, release the video capture and video write objects\ncap.release()\nout.release()\n\n# Closes all the frames\ncv2.destroyAllWindows() \n</code></pre>\n", "abstract": "It seems that none of the above solutions worked for me if I run it on Jupyter Notebook (the window hangs when closing and you need to force quit Python to close the window).  I am on macOS High Sierra 10.13.4, Python 3.6.5, OpenCV 3.4.1. The below code works if you run it as a .py file (source: https://www.learnopencv.com/read-write-and-display-a-video-using-opencv-cpp-python/). It opens the camera, records the video, closes the window successfully upon pressing 'q', and saves the video in .avi format. "}, {"id": 15610883, "score": 1, "vote": 0, "content": "<p>Fiddling around with this issue in the python console I observed the following behavior:</p>\n<ul>\n<li>issuing a <code>cv2.imshow</code> after <code>cv2.destroyWindow</code> <em>sometimes</em> closes the window. Albeit the old window pops up again with the next <code>highgui</code> call, e.g., <code>cv2.namedWindow</code></li>\n<li>the <strong>third</strong> call of <code>cv2.waitKey</code> after <code>cv2.destroyWindow</code> closed the window every time I tried. Additionally the closed window remained closed, even when using <code>cv2.namedWindow</code> afterwards</li>\n</ul>\n<p>Hope this helps somebody.</p>\n<p>(I used Ubuntu 12.10 with python 2.7.3 but OpenCV 2.4.2 from the 13.04 repos)</p>\n", "abstract": "Fiddling around with this issue in the python console I observed the following behavior: Hope this helps somebody. (I used Ubuntu 12.10 with python 2.7.3 but OpenCV 2.4.2 from the 13.04 repos)"}, {"id": 17879703, "score": 1, "vote": 0, "content": "<p>After searching aroung for some time, none of the solutions provided worked for me so since there's a bug in this function and I did not have time to fix it, I did not have to use the cv2 window to show the frames.  Once a few frames have been saved, you can open the file in a different viewer, like VLC or MoviePlayer ( for linux ).</p>\n<p>Here's how i did mine.</p>\n<pre><code class=\"python\"> import cv2\n\n threadDie = True # change this to false elsewhere to stop getting the video\n def getVideo(Message):\n          print Message\n          print \"Opening url\"\n          video = cv2.VideoCapture(\"rtsp://username:passwordp@IpAddress:554/axis-media/media.amp\")\n\n          print \"Opened url\"\n          fourcc = cv2.cv.CV_FOURCC('X','V','I','D')\n          fps = 25.0 # or 30.0 for a better quality stream\n          writer = cv2.VideoWriter('out.avi', fourcc,fps, (640,480),1)\n          i = 0\n\n          print \"Reading frames \"\n          while threadDie:\n                  ret, img = video.read()\n                  print \"frame number: \",i\n                  i=i+1\n                  writer.write(img)\n          del(video)\n\n\n          print \"Finished capturing video\"\n</code></pre>\n<p>Then open the file with a different viewer, prabably in a nother function, like if you like vlc, you can start it and pass the saved file as a parameter. On the terminal, i would do this</p>\n<pre><code class=\"python\">vlc out.avi #out.avi is my video file being saved by the function above.\n</code></pre>\n<p>This worked for me on arch linux.</p>\n", "abstract": "After searching aroung for some time, none of the solutions provided worked for me so since there's a bug in this function and I did not have time to fix it, I did not have to use the cv2 window to show the frames.  Once a few frames have been saved, you can open the file in a different viewer, like VLC or MoviePlayer ( for linux ). Here's how i did mine. Then open the file with a different viewer, prabably in a nother function, like if you like vlc, you can start it and pass the saved file as a parameter. On the terminal, i would do this This worked for me on arch linux."}, {"id": 60336411, "score": 1, "vote": 0, "content": "<p>I had the same issue. The problem is that while(cap.isOpened()): loop does not finish so that I added below structure. When video has no frame in the following part, it returns ret values as False. Normally, I put destroyAllWindows command out of loop but I moved it into the loop. It works in my code properly. </p>\n<pre><code class=\"python\">while(cap.isOpened()):\n ret, frame = cap.read()  \n if ret == False:\n        cap.release()\n        cv2.waitKey(1)\n        cv2.destroyAllWindows()\n        cv2.waitKey(1)\n</code></pre>\n", "abstract": "I had the same issue. The problem is that while(cap.isOpened()): loop does not finish so that I added below structure. When video has no frame in the following part, it returns ret values as False. Normally, I put destroyAllWindows command out of loop but I moved it into the loop. It works in my code properly. "}, {"id": 53846520, "score": 0, "vote": 0, "content": "<p><em>This worked for me in spyder :</em></p>\n<pre><code class=\"python\">import cv2 as cv\ncv.namedWindow(\"image\")\nimg = cv.imread(\"image_name.jpg\")\ncv.imshow(\"image\",img)\n\ncv.waitKey(5000) # 5 sec delay before image window closes\ncv.destroyWindow(\"image\")\n</code></pre>\n<p><strong>Remember</strong> use only <code>cv.waitKey(positive Integer)</code> for this to work</p>\n", "abstract": "This worked for me in spyder : Remember use only cv.waitKey(positive Integer) for this to work"}, {"id": 72236442, "score": 0, "vote": 0, "content": "<pre><code class=\"python\">cv2.imshow(\"the image I want to show \",img)\ncv2.waitKey(0)\ncv2.destroyAllWindows()\ncv2.waitKey(1)  # to close the window.\n</code></pre>\n<p>The above code worked well for me.\nI'm using Mac and python 3.7 .</p>\n", "abstract": "The above code worked well for me.\nI'm using Mac and python 3.7 ."}, {"id": 72932836, "score": 0, "vote": 0, "content": "<p>Close the terminal, later close the window, it worked for me in Visual Studio Code in Windows; I made a task to compile and run the executable in the terminal, the program used my webcam to capture video and display it in a QT window, when I clicked the close button it didn't close, it reopened itself again and continued with the program until I closed the terminal and later could close the program window without it reopening again.</p>\n", "abstract": "Close the terminal, later close the window, it worked for me in Visual Studio Code in Windows; I made a task to compile and run the executable in the terminal, the program used my webcam to capture video and display it in a QT window, when I clicked the close button it didn't close, it reopened itself again and continued with the program until I closed the terminal and later could close the program window without it reopening again."}]}, {"link": "https://stackoverflow.com/questions/2260235/how-to-clear-the-entry-widget-after-a-button-is-pressed-in-tkinter", "question": {"id": "2260235", "title": "How to clear the Entry widget after a button is pressed in Tkinter?", "content": "<p>I'm trying to clear the <code>Entry</code> widget after the user presses a button using Tkinter. </p>\n<p>I tried using <code>ent.delete(0, END)</code>, but I got an error saying that strings don't have the attribute <em>delete</em>.</p>\n<p>Here is my code, where I'm getting error on <code>real.delete(0, END)</code>:</p>\n<pre><code class=\"python\">secret = randrange(1,100)\nprint(secret)\ndef res(real, secret):\n    if secret==eval(real):\n        showinfo(message='that is right!')\n    real.delete(0, END)\n\ndef guess():\n    ge = Tk()\n    ge.title('guessing game')\n\n    Label(ge, text=\"what is your guess:\").pack(side=TOP)\n\n    ent = Entry(ge)\n    ent.pack(side=TOP)\n\n    btn=Button(ge, text=\"Enter\", command=lambda: res(ent.get(),secret))\n    btn.pack(side=LEFT)\n\n    ge.mainloop()\n</code></pre>\n", "abstract": "I'm trying to clear the Entry widget after the user presses a button using Tkinter.  I tried using ent.delete(0, END), but I got an error saying that strings don't have the attribute delete. Here is my code, where I'm getting error on real.delete(0, END):"}, "answers": [{"id": 2260355, "score": 92, "vote": 0, "content": "<p>After poking around a bit through the <a href=\"http://www.pythonware.com/library/tkinter/introduction/\" rel=\"noreferrer\">Introduction to Tkinter</a>, I came up with the code below, which doesn't do anything except display a text field and clear it when the <code>\"Clear text\"</code> button is pushed:</p>\n<pre><code class=\"python\">import tkinter as tk\n\nclass App(tk.Frame):\n    def __init__(self, master):\n        tk.Frame.__init__(self, master, height=42, width=42)\n        self.entry = tk.Entry(self)\n        self.entry.focus()\n        self.entry.pack()\n        self.clear_button = tk.Button(self, text=\"Clear text\", command=self.clear_text)\n        self.clear_button.pack()\n\n    def clear_text(self):\n        self.entry.delete(0, 'end')\n\ndef main():\n    root = tk.Tk()\n    App(root).pack(expand=True, fill='both')\n    root.mainloop()\n\nif __name__ == \"__main__\":\n    main()\n</code></pre>\n", "abstract": "After poking around a bit through the Introduction to Tkinter, I came up with the code below, which doesn't do anything except display a text field and clear it when the \"Clear text\" button is pushed:"}, {"id": 2260281, "score": 18, "vote": 0, "content": "<p>I'm unclear about your question.  From <a href=\"http://effbot.org/tkinterbook/entry.htm#patterns\" rel=\"noreferrer\">http://effbot.org/tkinterbook/entry.htm#patterns</a>, it\nseems you just need to do an assignment after you called the delete.\nTo add entry text to the widget, use the insert method. To replace the current text, you can call delete before you insert the new text.</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">e = Entry(master)\ne.pack()\n\ne.delete(0, END)\ne.insert(0, \"\")\n</code></pre>\n<p>Could you post a bit more code?</p>\n", "abstract": "I'm unclear about your question.  From http://effbot.org/tkinterbook/entry.htm#patterns, it\nseems you just need to do an assignment after you called the delete.\nTo add entry text to the widget, use the insert method. To replace the current text, you can call delete before you insert the new text. Could you post a bit more code?"}, {"id": 2262084, "score": 5, "vote": 0, "content": "<p><code>real</code> gets the value <code>ent.get()</code> which is just a string.  It has no idea where it came from, and no way to affect the widget.</p>\n<p>Instead of <code>real.delete()</code>, call <code>.delete()</code> on the entry widget itself:</p>\n<pre><code class=\"python\">def res(ent, real, secret):\n    if secret == eval(real):\n        showinfo(message='that is right!')\n    ent.delete(0, END)\n\ndef guess():\n    ...\n    btn = Button(ge, text=\"Enter\", command=lambda: res(ent, ent.get(), secret))\n</code></pre>\n", "abstract": "real gets the value ent.get() which is just a string.  It has no idea where it came from, and no way to affect the widget. Instead of real.delete(), call .delete() on the entry widget itself:"}, {"id": 59899276, "score": 3, "vote": 0, "content": "<p>If in case you are using Python 3.x, you have to use</p>\n<p>txt_entry = Entry(root)</p>\n<p>txt_entry.pack()</p>\n<p>txt_entry.delete(0, tkinter.END)</p>\n", "abstract": "If in case you are using Python 3.x, you have to use txt_entry = Entry(root) txt_entry.pack() txt_entry.delete(0, tkinter.END)"}, {"id": 45522224, "score": 1, "vote": 0, "content": "<p>You shall proceed with <code>ent.delete(0,\"end\")</code> instead of using 'END', use 'end' inside quotation. </p>\n<pre><code class=\"python\"> secret = randrange(1,100)\nprint(secret)\ndef res(real, secret):\n    if secret==eval(real):\n        showinfo(message='that is right!')\n    real.delete(0, END)\n\ndef guess():\n    ge = Tk()\n    ge.title('guessing game')\n\n    Label(ge, text=\"what is your guess:\").pack(side=TOP)\n\n    ent = Entry(ge)\n    ent.pack(side=TOP)\n\n    btn=Button(ge, text=\"Enter\", command=lambda: res(ent.get(),secret))\n    btn.pack(side=LEFT)\n\n    ge.mainloop()\n</code></pre>\n<p>This shall solve your problem</p>\n", "abstract": "You shall proceed with ent.delete(0,\"end\") instead of using 'END', use 'end' inside quotation.  This shall solve your problem"}, {"id": 38112048, "score": 0, "vote": 0, "content": "<p>First of all, make sure the Text is enabled, then delete your tags, and then the content.</p>\n<pre><code class=\"python\">myText.config(state=NORMAL)\nmyText.tag_delete (\"myTags\")\nmyText.delete(1.0, END)\n</code></pre>\n<p>When the Text is \"DISABLE\", the delete does not work because the Text field is in read-only mode.</p>\n", "abstract": "First of all, make sure the Text is enabled, then delete your tags, and then the content. When the Text is \"DISABLE\", the delete does not work because the Text field is in read-only mode."}, {"id": 57071077, "score": 0, "vote": 0, "content": "<pre><code class=\"python\">def clear():                                                                           \n        global input                                                                    \n        abc =  \n        input.set(abc)                                                                     \n\nroot = Tk()                                                               \ninput = StringVar()                                                             \nent = Entry(root,textvariable =                                       input,font=('ariel',23,'bold'),bg='powder                            blue',bd=30,justify='right').grid(columnspan=4,ipady=20)                       \nClear = Button(root,text=\"Clear\",command=clear).pack()                       \n</code></pre>\n<p>Input is set the textvariable in the entry, which is the string variable and when I set the text of the string variable as \"\" this clears the text in the entry </p>\n", "abstract": "Input is set the textvariable in the entry, which is the string variable and when I set the text of the string variable as \"\" this clears the text in the entry "}, {"id": 59415530, "score": 0, "vote": 0, "content": "<p>Simply define a function and set the value of your Combobox to empty/null or whatever you want. Try the following.</p>\n<pre><code class=\"python\">def Reset():\n    cmb.set(\"\")\n</code></pre>\n<p>here, <code>cmb</code> is a variable in which you have assigned the Combobox. Now call that function in a button such as, </p>\n<pre><code class=\"python\">btn2 = ttk.Button(root, text=\"Reset\",command=Reset)\n</code></pre>\n", "abstract": "Simply define a function and set the value of your Combobox to empty/null or whatever you want. Try the following. here, cmb is a variable in which you have assigned the Combobox. Now call that function in a button such as, "}, {"id": 60482455, "score": 0, "vote": 0, "content": "<p>if you add the print code to check the type of real, you will see that real is a string, not an Entry so there is no delete attribute.</p>\n<pre><code class=\"python\">def res(real, secret):\n    print(type(real))\n    if secret==eval(real):\n        showinfo(message='that is right!')\n    real.delete(0, END)\n\n&gt;&gt; output: &lt;class 'str'&gt;\n</code></pre>\n<h1>Solution:</h1>\n<pre><code class=\"python\">secret = randrange(1,100)\nprint(secret)\n\ndef res(real, secret):\n    if secret==eval(real):\n        showinfo(message='that is right!')\n    ent.delete(0, END)    # we call the entry an delete its content\n\ndef guess():\n\n    ge = Tk()\n    ge.title('guessing game')\n\n    Label(ge, text=\"what is your guess:\").pack(side=TOP)\n\n    global ent    # Globalize ent to use it in other function\n    ent = Entry(ge)\n    ent.pack(side=TOP)\n\n    btn=Button(ge, text=\"Enter\", command=lambda: res(ent.get(),secret))\n    btn.pack(side=LEFT)\n\n    ge.mainloop()\n</code></pre>\n<p>It should work.</p>\n", "abstract": "if you add the print code to check the type of real, you will see that real is a string, not an Entry so there is no delete attribute. It should work."}, {"id": 69294006, "score": 0, "vote": 0, "content": "<p>From my experience, <code>Entry.delete(0, END)</code> sometimes didn't work when the state of entry widget is DISABLED. Check the state of Entry when <code>Entry.delete(0, END)</code>, doesn't work and if the value of entry widget remains, call <code>entry.update()</code> to reflect the result of <code>delete(0, END)</code>.</p>\n", "abstract": "From my experience, Entry.delete(0, END) sometimes didn't work when the state of entry widget is DISABLED. Check the state of Entry when Entry.delete(0, END), doesn't work and if the value of entry widget remains, call entry.update() to reflect the result of delete(0, END)."}, {"id": 54617828, "score": -1, "vote": 0, "content": "<p>if none of the above is working you can use this-&gt;</p>\n<p>idAssignedToEntryWidget.delete(first = 0, last = UpperLimitAssignedToEntryWidget)</p>\n<p>for e.g. -&gt; </p>\n<p>id assigned is = en then</p>\n<p>en.delete(first =0, last =100) </p>\n", "abstract": "if none of the above is working you can use this-> idAssignedToEntryWidget.delete(first = 0, last = UpperLimitAssignedToEntryWidget) for e.g. ->  id assigned is = en then en.delete(first =0, last =100) "}, {"id": 21120299, "score": -7, "vote": 0, "content": "<p>Try with this:</p>\n<pre><code class=\"python\">import os\nos.system('clear')\n</code></pre>\n", "abstract": "Try with this:"}]}, {"link": "https://stackoverflow.com/questions/3438531/ipython-workflow-edit-run", "question": {"id": "3438531", "title": "IPython workflow (edit, run)", "content": "<p>Is there a GUI for IPython that allows me to open/run/edit Python files? My way of working in IDLE is to have two windows open: the shell and a .py file. I edit the .py file, run it, and interact with the results in the shell. </p>\n<p>Is it possible to use IPython like this? Or is there an alternative way of working?</p>\n", "abstract": "Is there a GUI for IPython that allows me to open/run/edit Python files? My way of working in IDLE is to have two windows open: the shell and a .py file. I edit the .py file, run it, and interact with the results in the shell.  Is it possible to use IPython like this? Or is there an alternative way of working?"}, "answers": [{"id": 3531548, "score": 55, "vote": 0, "content": "<p>When I'm working with python, I usually have two terminal windows open - one with IPython, and the other with a fairly customized Vim.</p>\n<p>Two good resources: </p>\n<ul>\n<li><a href=\"http://blog.dispatched.ch/2009/05/24/vim-as-python-ide/\" rel=\"noreferrer\">http://blog.dispatched.ch/2009/05/24/vim-as-python-ide/</a></li>\n<li><a href=\"http://dancingpenguinsoflight.com/2009/02/python-and-vim-make-your-own-ide/\" rel=\"noreferrer\">http://dancingpenguinsoflight.com/2009/02/python-and-vim-make-your-own-ide/</a></li>\n</ul>\n<hr/>\n<p>Though it sounds like what you want is IPython's magic function <code>%ed</code>/<code>%edit</code>:</p>\n<p>An example of what you can do:</p>\n<pre><code class=\"python\">In [72]: %ed\nIPython will make a temporary file named: c:\\docume~1\\wjwe312\\locals~1\\temp\\ipython_edit_ar8veu.py\n</code></pre>\n<p>In the file I put:</p>\n<pre><code class=\"python\">x = \"Hello World\"\nprint 3\n</code></pre>\n<p>After saving and quitting the file:</p>\n<pre><code class=\"python\">Editing... done. Executing edited code...\n3\nOut[72]: \"x = 'Hello world'\\nprint 3\\n\"\n\nIn [73]: x\nOut[73]: 'Hello world'\n</code></pre>\n<p>You can define functions or anything else - just remember that the contents of the file will be executed when you close it.</p>\n<p>Another similar workflow is to <code>cd</code> to the directory containing your Python script that you're editing with your favorite editor. Then you can <code>%run</code> the script from within IPython and you'll have access to everything defined in the file. For instance, if you have the following in the file <code>test.py</code> in your <code>/home/myself</code> directory:</p>\n<pre><code class=\"python\">    class Tester(object):\n        def __init__(self):\n            print \"hi\"\n\n    def knightme(name):\n        print \"Hello, Sir \", name\n</code></pre>\n<p>Then you can do the following:</p>\n<pre><code class=\"python\">In [42]: cd /home/myself\n/home/myself\n\nIn [43]: %run test.py # &lt;Tab&gt; autocomplete also works\n\nIn [44]: knightme('John')\nHello, Sir  John\n\nIn [45]: t = Tester()\nHi\n</code></pre>\n<p>Either a mix or one of those workflows should give you something very similar to the way you're used to working in IDLE.</p>\n", "abstract": "When I'm working with python, I usually have two terminal windows open - one with IPython, and the other with a fairly customized Vim. Two good resources:  Though it sounds like what you want is IPython's magic function %ed/%edit: An example of what you can do: In the file I put: After saving and quitting the file: You can define functions or anything else - just remember that the contents of the file will be executed when you close it. Another similar workflow is to cd to the directory containing your Python script that you're editing with your favorite editor. Then you can %run the script from within IPython and you'll have access to everything defined in the file. For instance, if you have the following in the file test.py in your /home/myself directory: Then you can do the following: Either a mix or one of those workflows should give you something very similar to the way you're used to working in IDLE."}, {"id": 3939065, "score": 17, "vote": 0, "content": "<p><a href=\"http://code.google.com/p/spyderlib/\" rel=\"noreferrer\">Spyder</a>, previously known as SPyderlib / Spyder2</p>\n<p>Pretty lightweight, fast and support almost all <a href=\"https://code.google.com/p/spyderlib/wiki/Features\" rel=\"noreferrer\">features</a> you will ever need to work with a python project.  It can edit and run .py files in an embedded IPython instance and then interact with them, set breakpoints, etc.</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/Nzg1H.png\"/> <a href=\"https://i.stack.imgur.com/rb0pK.png\" rel=\"noreferrer\">full-size</a></p>\n", "abstract": "Spyder, previously known as SPyderlib / Spyder2 Pretty lightweight, fast and support almost all features you will ever need to work with a python project.  It can edit and run .py files in an embedded IPython instance and then interact with them, set breakpoints, etc.  full-size"}, {"id": 11456303, "score": 5, "vote": 0, "content": "<p>Try Spyder, I have spent all day trying to find an IDE which has the functionality of ipython and Spyder just kicks it out of the park..</p>\n<p>Autocomplete is top notch right from install, no config files and all that crap, and it has an Ipython terminal in the corner for you to instantly run your code.</p>\n<p>big thumbs up</p>\n", "abstract": "Try Spyder, I have spent all day trying to find an IDE which has the functionality of ipython and Spyder just kicks it out of the park.. Autocomplete is top notch right from install, no config files and all that crap, and it has an Ipython terminal in the corner for you to instantly run your code. big thumbs up"}, {"id": 3952341, "score": 4, "vote": 0, "content": "<p>Take a look at <a href=\"http://dreampie.sourceforge.net/\" rel=\"nofollow\">DreamPie</a>. Might be what you are looking for.</p>\n", "abstract": "Take a look at DreamPie. Might be what you are looking for."}, {"id": 5036681, "score": 3, "vote": 0, "content": "<p>Personally, I like <a href=\"http://code.google.com/p/pyscripter/\" rel=\"nofollow\">PyScripter</a>. Unfortunately, it only works on Windows, but also runs perfectly in Wine. </p>\n", "abstract": "Personally, I like PyScripter. Unfortunately, it only works on Windows, but also runs perfectly in Wine. "}, {"id": 4633463, "score": 2, "vote": 0, "content": "<p>If you like the work-flow under <code>Matlab</code>, then you probably should try the following two:</p>\n<p><strong>1</strong>, <strong>Try the combination of <code>Spyder</code> and <code>Vim</code>.</strong></p>\n<ul>\n<li><p>Edit python files in <code>Vim</code> (<code>Spyder</code> can reload the file automatically)</p>\n</li>\n<li><p>Run the code in <code>Spyder</code> (in the same interpreter, which is important for me):</p>\n</li>\n<li><p>Use <strong><code>F9</code></strong> to run the current file</p>\n</li>\n<li><p><strong><code>Ctrl+F9</code></strong> to run the selected block</p>\n</li>\n</ul>\n<p><strong>2</strong>, <strong>Use <code>Vim</code> + <code>conque-shell</code></strong>. (<a href=\"http://code.google.com/p/conque/\" rel=\"nofollow noreferrer\">on google code</a>)</p>\n<ul>\n<li><p>Open your preferred <code>Python interpreter</code> in <code>Vim</code>,</p>\n<p>e.g., just <strong><code>:ConqueTermSplit python</code></strong>.</p>\n</li>\n<li><p>then visual select some <code>Python</code> code</p>\n</li>\n<li><p>press <strong><code>F9</code></strong> to paste and run it in the <code>Python interpreter buffer</code>.</p>\n</li>\n</ul>\n<p><em>Note: a few more:</em></p>\n<ul>\n<li><p><code>:ConqueTermVSplit python</code>,</p>\n</li>\n<li><p><code>:ConqueTerm python</code></p>\n</li>\n<li><p><code>:ConqueTermVSplit rlwrap python</code></p>\n<p>If your interpretor misses <code>readline</code>, you can use <code>rlwrap</code>.</p>\n</li>\n</ul>\n", "abstract": "If you like the work-flow under Matlab, then you probably should try the following two: 1, Try the combination of Spyder and Vim. Edit python files in Vim (Spyder can reload the file automatically) Run the code in Spyder (in the same interpreter, which is important for me): Use F9 to run the current file Ctrl+F9 to run the selected block 2, Use Vim + conque-shell. (on google code) Open your preferred Python interpreter in Vim, e.g., just :ConqueTermSplit python. then visual select some Python code press F9 to paste and run it in the Python interpreter buffer. Note: a few more: :ConqueTermVSplit python, :ConqueTerm python :ConqueTermVSplit rlwrap python If your interpretor misses readline, you can use rlwrap."}, {"id": 9643234, "score": 2, "vote": 0, "content": "<pre><code class=\"python\">sudo apt-get install ipython\n</code></pre>\n<p>Once you are done with installing ipython.</p>\n<p>Start ipython from terminal (just hit <code>ipython</code> in the ternminal)</p>\n<p>To run <code>ravi.py</code> file all you need to do is</p>\n<pre><code class=\"python\">%run ravi.py\n</code></pre>\n", "abstract": "Once you are done with installing ipython. Start ipython from terminal (just hit ipython in the ternminal) To run ravi.py file all you need to do is"}, {"id": 9868087, "score": 2, "vote": 0, "content": "<p>The latest version of <a href=\"http://idlex.sourceforge.net\" rel=\"nofollow\">IdleX</a> supports IPython within IDLE, as well as the %edit magic. You can run your files from the IDLE editor within the IPython shell many ways, either by F5 (run everything), F9 (run a selection), or Ctrl+Enter (run a subcode).</p>\n", "abstract": "The latest version of IdleX supports IPython within IDLE, as well as the %edit magic. You can run your files from the IDLE editor within the IPython shell many ways, either by F5 (run everything), F9 (run a selection), or Ctrl+Enter (run a subcode)."}, {"id": 6204587, "score": 1, "vote": 0, "content": "<p>You might like <a href=\"http://code.google.com/p/wxpysuite/\" rel=\"nofollow\">PySlices</a>...</p>\n<p>It's kind of a shell/editor hybrid that lets you save your session as special (barely) modified python files called .pyslice files.</p>\n<p>It's now part of <a href=\"http://www.wxpython.org/download.php\" rel=\"nofollow\">wxPython</a>, so just install that (v2.8.11 or later) and run \"python -m wx.py.PySlices\" on the command line to launch it.</p>\n<p>That said, I still end up using an external editor for scripts (geany).</p>\n", "abstract": "You might like PySlices... It's kind of a shell/editor hybrid that lets you save your session as special (barely) modified python files called .pyslice files. It's now part of wxPython, so just install that (v2.8.11 or later) and run \"python -m wx.py.PySlices\" on the command line to launch it. That said, I still end up using an external editor for scripts (geany)."}, {"id": 20009893, "score": 1, "vote": 0, "content": "<p>I want to suggest excellent plugin for vim that makes two-way integration between Vim and IPython: vim-ipython.</p>\n<p>From project page on <a href=\"http://github.com/ivanov/vim-ipython\" rel=\"nofollow\">http://github.com/ivanov/vim-ipython</a>:</p>\n<blockquote>\n<p>Using this plugin, you can send lines or whole files for IPython to execute, and also get back object introspection and word completions in Vim, like what you get with: object? and object. in IPython.</p>\n</blockquote>\n<p>This plugin has one big limitation: it doesn't support python 3 (it's planned).</p>\n", "abstract": "I want to suggest excellent plugin for vim that makes two-way integration between Vim and IPython: vim-ipython. From project page on http://github.com/ivanov/vim-ipython: Using this plugin, you can send lines or whole files for IPython to execute, and also get back object introspection and word completions in Vim, like what you get with: object? and object. in IPython. This plugin has one big limitation: it doesn't support python 3 (it's planned)."}, {"id": 3558862, "score": 0, "vote": 0, "content": "<p>Personally, I use what @Wayne suggested, a combination of vim and ipython...</p>\n<p>However, if you'd prefer a different approach, take a look at <a href=\"http://code.google.com/p/spyderlib/\" rel=\"nofollow noreferrer\">spyder</a>. </p>\n<p>As of the latest version (1.1) ipython should be fully integrated.  If you download an earlier version, things will work fine with ipython as an external shell, but you won't get a few of spyder's nifty features (like viewing all of the currently defined variables in the workspace window). </p>\n<p>Spyder is definitely a bit heavyweight, but it's an interesting project.</p>\n<p>Another (very, very, new) similar project to take a look at is <a href=\"http://code.google.com/p/iep/\" rel=\"nofollow noreferrer\">iep</a>.  It will (sort-of) work with ipython as shell, and I'd be willing to be bet that nicer ipython integration will be along before too long.  At any rate, iep is essentially a more lightweight alternative to spyder.</p>\n<p>Both of these are oriented towards scientific computing, and so have nice integration with things like matplotlib (and thus can automatically run gui main loops in a seperate thread). They're not quite like \"normal\" IDE's but they may fill the niche you're looking for quite nicely.  </p>\n", "abstract": "Personally, I use what @Wayne suggested, a combination of vim and ipython... However, if you'd prefer a different approach, take a look at spyder.  As of the latest version (1.1) ipython should be fully integrated.  If you download an earlier version, things will work fine with ipython as an external shell, but you won't get a few of spyder's nifty features (like viewing all of the currently defined variables in the workspace window).  Spyder is definitely a bit heavyweight, but it's an interesting project. Another (very, very, new) similar project to take a look at is iep.  It will (sort-of) work with ipython as shell, and I'd be willing to be bet that nicer ipython integration will be along before too long.  At any rate, iep is essentially a more lightweight alternative to spyder. Both of these are oriented towards scientific computing, and so have nice integration with things like matplotlib (and thus can automatically run gui main loops in a seperate thread). They're not quite like \"normal\" IDE's but they may fill the niche you're looking for quite nicely.  "}, {"id": 34906093, "score": 0, "vote": 0, "content": "<p>You can use the autoreload module in IPython to automatically reload code.</p>\n<p>Open <code>jupyter qtconsole</code> or <code>jupyter console</code> and type:</p>\n<pre><code class=\"python\">%load_ext autoreload\n%autoreload 2\nfrom your_work_file import *\n</code></pre>\n<p>Now every time you save <code>your_work_file.py</code>, it will be automatically reloaded.</p>\n<p>Hint: if you want this to happen automatically, put the followinglines in your <code>ipython_config.py</code> file:</p>\n<pre><code class=\"python\">c.InteractiveShellApp.extensions = ['autoreload']         \nc.InteractiveShellApp.exec_lines = ['%autoreload 2']\n</code></pre>\n", "abstract": "You can use the autoreload module in IPython to automatically reload code. Open jupyter qtconsole or jupyter console and type: Now every time you save your_work_file.py, it will be automatically reloaded. Hint: if you want this to happen automatically, put the followinglines in your ipython_config.py file:"}, {"id": 48194034, "score": 0, "vote": 0, "content": "<p>Try <code>Ptpython</code>. It has much better integration with <code>VIM</code>. You can directly edit in VIM by just pressing <code>V</code>. It also allows browsing your history.. so you can pretty much code in the shell, and incrementally build up your code.</p>\n<p>If you are already familiar with <code>ipython</code>, you can check the advantages of <code>ptpython</code> here:</p>\n<p><a href=\"https://www.youtube.com/watch?v=XDgIDslyAFM\" rel=\"nofollow noreferrer\">https://www.youtube.com/watch?v=XDgIDslyAFM</a></p>\n", "abstract": "Try Ptpython. It has much better integration with VIM. You can directly edit in VIM by just pressing V. It also allows browsing your history.. so you can pretty much code in the shell, and incrementally build up your code. If you are already familiar with ipython, you can check the advantages of ptpython here: https://www.youtube.com/watch?v=XDgIDslyAFM"}, {"id": 71440168, "score": 0, "vote": 0, "content": "<p>I just use the exclamation mark (<code>!</code>) to run <code>vi</code> as a shell command</p>\n<pre><code class=\"python\">In [1]: !vi myScript.py\n</code></pre>\n<p>and when done with editing I just quit <code>vi</code> to get back to the Ipython shell.</p>\n<p>To run the script one can then use</p>\n<pre><code class=\"python\">In [2]: %run myScript.py\n</code></pre>\n<p>as suggested in <a href=\"https://stackoverflow.com/a/9643234/2314737\">another answer</a> and not <code>!python ...</code> because the Python version in <code>ipython</code> might be different from the one in the underlying shell.</p>\n<p>If you want to dump some code in a file use the <em>magic</em> <code>%%writefile</code></p>\n<pre><code class=\"python\"> In [3]:%%writefile myScript.py\n    ...: print(\"hello\")\n    ...: \n    ...: \n</code></pre>\n<p><strong>Be careful</strong> because this will overwrite <code>myScript.py</code>. To append use <code>%%writefile -a</code>.</p>\n", "abstract": "I just use the exclamation mark (!) to run vi as a shell command and when done with editing I just quit vi to get back to the Ipython shell. To run the script one can then use as suggested in another answer and not !python ... because the Python version in ipython might be different from the one in the underlying shell. If you want to dump some code in a file use the magic %%writefile Be careful because this will overwrite myScript.py. To append use %%writefile -a."}]}, {"link": "https://stackoverflow.com/questions/520015/cross-platform-gui-toolkit-for-deploying-python-applications", "question": {"id": "520015", "title": "Cross-platform gui toolkit for deploying Python applications", "content": "<p>Building on:\n<a href=\"http://www.reddit.com/r/Python/comments/7v5ra/whats_your_favorite_gui_toolkit_and_why/\" rel=\"noreferrer\">http://www.reddit.com/r/Python/comments/7v5ra/whats_your_favorite_gui_toolkit_and_why/</a></p>\n<h1>Merits:</h1>\n<p>1 - ease of design / integration - learning curve</p>\n<p>2 - support / availability for *nix, Windows, Mac, extra points for native l&amp;f, support for mobile or web</p>\n<p>3 - pythonic API</p>\n<p>4 - quality of documentation - I want to do something a bit more complicated, now what?</p>\n<p>5 - light weight packaging so it's not necessary to include a full installer (py2exe, py2app would ideally work as-is and not generate a gazillion MBs file)</p>\n<p>6 - licensing</p>\n<p>7 - others? (specify)</p>\n<hr/>\n<h1>Contenders:</h1>\n<p>1 - tkinter, as currently supported (as of 2.6, 3.0)</p>\n<p>2 - pyttk library</p>\n<p>3 - pyGTK</p>\n<p>4 - pyQt</p>\n<p>5 - wxPython</p>\n<p>6 - HTML-CGI via Python-based framework (Django, Turbogears, web.py, Pylons...) or Paste</p>\n<p>7 - others? (specify)</p>\n", "abstract": "Building on:\nhttp://www.reddit.com/r/Python/comments/7v5ra/whats_your_favorite_gui_toolkit_and_why/ 1 - ease of design / integration - learning curve 2 - support / availability for *nix, Windows, Mac, extra points for native l&f, support for mobile or web 3 - pythonic API 4 - quality of documentation - I want to do something a bit more complicated, now what? 5 - light weight packaging so it's not necessary to include a full installer (py2exe, py2app would ideally work as-is and not generate a gazillion MBs file) 6 - licensing 7 - others? (specify) 1 - tkinter, as currently supported (as of 2.6, 3.0) 2 - pyttk library 3 - pyGTK 4 - pyQt 5 - wxPython 6 - HTML-CGI via Python-based framework (Django, Turbogears, web.py, Pylons...) or Paste 7 - others? (specify)"}, "answers": [{"id": 520055, "score": 50, "vote": 0, "content": "<p>Please don't hesitate to expand this answer.</p>\n<h1><a href=\"http://wiki.python.org/moin/TkInter\" rel=\"noreferrer\">Tkinter</a></h1>\n<p>Tkinter is the toolkit that comes with python. That means you already have everything you need to write a GUI. What that also means is that if you choose to distribute your program, most likely everyone else already has what they need to run your program.</p>\n<p>Tkinter is mature and stable, and is (at least arguably) quite easy to use.I found it easier to use than wxPython, but obviously that's somewhat subjective. </p>\n<p>Tkinter gets a bad rap for looking ugly and out of date. While it's true that it's easy to create ugly GUIs with Tkinter, it's also pretty easy to create nice looking GUIs. Tkinter doesn't hold your hand, but it doesn't much get in the way, either. Tkinter looks best on the Mac and Windows since it uses native widgets there, but it looks OK on linux, too. </p>\n<p>The other point about the look of Tkinter is that, for the most part, look isn't as important as people make it out to be. Most applications written with toolkits such as Tkinter, wxPython, PyQT, etc are special-purpose applications. For the types of applications these toolkits are used for, usability trumps looks. If the look of the application is important, it's easy enough to polish up a Tkinter application.</p>\n<p>Tkinter has some features that other toolkits don't come close to matching. Variable traces, named fonts, geometry (layout) managers, and the way Tkinter processes events are still the standard to which other toolkits should be judged.   </p>\n<p>On the downside, Tkinter is a wrapper around a Tcl interpreter that runs inside python. This is mostly invisible to anyone developing with Tkinter, but it sometimes results in error messages that expose this architecture. You'll get an error complaining about a widget with a name like \".1245485.67345\" which will make almost no sense to anyone unless you're also familiar with how Tcl/tk works.</p>\n<p>Another downside is that Tkinter doesn't have as many pre-built widgets as wxPython. The hierarchical tree widget in Tkinter is a little weak, for example, and there's no built-in table widget. On the other hand, Tkinter's canvas and text widgets are extremely powerful and easy to use. For most types of applications you will write, however, you'll have everything you need. Just don't expect to replicate Microsoft Word or Photoshop with Tkinter. </p>\n<p>I don't know what the license is for Tkinter, I assume the same as for python as a whole. Tcl/tk has a BSD-style license. </p>\n<h1><a href=\"http://www.riverbankcomputing.co.uk/software/pyqt/intro\" rel=\"noreferrer\">PyQt</a></h1>\n<p>It's build on top of <a href=\"http://qt.nokia.com/\" rel=\"noreferrer\">Qt</a>, a C++ framework. It's quite advanced and has some good tools like the Qt Designer to design your applications. You should be aware though, that it doesn't feel like Python 100%, but close to it. The <a href=\"http://doc.qt.nokia.com/4.5/index.html\" rel=\"noreferrer\">documentation</a> is excellent</p>\n<p>This framework is really good. It's being actively developed by Trolltech, who is owned by Nokia. The bindings for Python are developed by Riverbank.</p>\n<p>PyQt is available under the GPL license or a commercial one. The price of a riverbank PyQt license is about 400 euro per developer.</p>\n<p>Qt is not only a GUI-framework but has a lot of other classes too, one can create an application by just using Qt classes. (Like SQL, networking, scripting, \u2026)</p>\n<p>Qt used to emulate GUI elements on every platform but now uses native styles of the platforms (although not native GUI toolkits): see <a href=\"http://doc.qt.nokia.com/4.4/qtmac-as-native.html\" rel=\"noreferrer\">the documentation for Mac OS X</a> and <a href=\"http://doc.qt.nokia.com/4.5/qwindowsxpstyle.html#details\" rel=\"noreferrer\">the windows XP style</a></p>\n<p>Packaging is as simple as running py2exe or pyInstaller. The content of my PyQt app looks like this on windows (I have used InnoSetup on top of it for proper installation):</p>\n<pre>\npyticroque.exe           PyQt4.QtGui.pyd           unicodedata.pyd\nMSVCP71.dll              PyQt4._qt.pyd             unins000.dat\nMSVCR71.dll              python25.dll              unins000.exe\nPyQt4.QtCore.pyd         sip.pyd                   _socket.pyd\n</pre>\n<p>QT comes with a widget designer and even in recent versions with an <a href=\"http://qt.nokia.com/products/developer-tools\" rel=\"noreferrer\">IDE</a> to help design Qt software.</p>\n<h1><a href=\"http://pyside.org\" rel=\"noreferrer\">PySide</a></h1>\n<p>PySide is a LGPL binding to Qt. It's developed by nokia as a replacement for the GPL PyQt.</p>\n<blockquote>\n<p>Although based on a different\n  technology than the existing\n  GPL-licensed PyQt bindings, PySide\n  will initially aim to be\n  API-compatible with them. In addition\n  to the PyQt-compatible API, a more\n  Pythonic API will be provided in the\n  future.</p>\n</blockquote>\n<h1><a href=\"http://www.wxpython.org/\" rel=\"noreferrer\">wxPython</a></h1>\n<p>wxPython is a binding for Python using the <a href=\"http://www.wxwidgets.org/\" rel=\"noreferrer\">wxWidgets</a>-Framework. This framework is under the LGPL licence and is developed by the open source community.</p>\n<p>What I'm really missing is a good tool to design the interface, they have about 3 but none of them is usable.</p>\n<p>One thing I should mention is that I found a bug in the tab-view despite the fact that I didn't use anything advanced. (Only on Mac OS X) I think <a href=\"http://www.wxwidgets.org/\" rel=\"noreferrer\">wxWidgets</a> isn't as polished as <a href=\"http://qt.nokia.com/\" rel=\"noreferrer\">Qt</a>.</p>\n<p>wxPython is really only about the GUI-classes, there isn't much else.</p>\n<p>wxWidgets uses native GUI elements.</p>\n<p>An advantage wxPython has over Tkinter is that wxPython has a much larger library of widgets from which to choose from. </p>\n<h1>Others</h1>\n<p>I haven't got any experience with other GUI frameworks, maybe someone else has.</p>\n", "abstract": "Please don't hesitate to expand this answer. Tkinter is the toolkit that comes with python. That means you already have everything you need to write a GUI. What that also means is that if you choose to distribute your program, most likely everyone else already has what they need to run your program. Tkinter is mature and stable, and is (at least arguably) quite easy to use.I found it easier to use than wxPython, but obviously that's somewhat subjective.  Tkinter gets a bad rap for looking ugly and out of date. While it's true that it's easy to create ugly GUIs with Tkinter, it's also pretty easy to create nice looking GUIs. Tkinter doesn't hold your hand, but it doesn't much get in the way, either. Tkinter looks best on the Mac and Windows since it uses native widgets there, but it looks OK on linux, too.  The other point about the look of Tkinter is that, for the most part, look isn't as important as people make it out to be. Most applications written with toolkits such as Tkinter, wxPython, PyQT, etc are special-purpose applications. For the types of applications these toolkits are used for, usability trumps looks. If the look of the application is important, it's easy enough to polish up a Tkinter application. Tkinter has some features that other toolkits don't come close to matching. Variable traces, named fonts, geometry (layout) managers, and the way Tkinter processes events are still the standard to which other toolkits should be judged.    On the downside, Tkinter is a wrapper around a Tcl interpreter that runs inside python. This is mostly invisible to anyone developing with Tkinter, but it sometimes results in error messages that expose this architecture. You'll get an error complaining about a widget with a name like \".1245485.67345\" which will make almost no sense to anyone unless you're also familiar with how Tcl/tk works. Another downside is that Tkinter doesn't have as many pre-built widgets as wxPython. The hierarchical tree widget in Tkinter is a little weak, for example, and there's no built-in table widget. On the other hand, Tkinter's canvas and text widgets are extremely powerful and easy to use. For most types of applications you will write, however, you'll have everything you need. Just don't expect to replicate Microsoft Word or Photoshop with Tkinter.  I don't know what the license is for Tkinter, I assume the same as for python as a whole. Tcl/tk has a BSD-style license.  It's build on top of Qt, a C++ framework. It's quite advanced and has some good tools like the Qt Designer to design your applications. You should be aware though, that it doesn't feel like Python 100%, but close to it. The documentation is excellent This framework is really good. It's being actively developed by Trolltech, who is owned by Nokia. The bindings for Python are developed by Riverbank. PyQt is available under the GPL license or a commercial one. The price of a riverbank PyQt license is about 400 euro per developer. Qt is not only a GUI-framework but has a lot of other classes too, one can create an application by just using Qt classes. (Like SQL, networking, scripting, \u2026) Qt used to emulate GUI elements on every platform but now uses native styles of the platforms (although not native GUI toolkits): see the documentation for Mac OS X and the windows XP style Packaging is as simple as running py2exe or pyInstaller. The content of my PyQt app looks like this on windows (I have used InnoSetup on top of it for proper installation): QT comes with a widget designer and even in recent versions with an IDE to help design Qt software. PySide is a LGPL binding to Qt. It's developed by nokia as a replacement for the GPL PyQt. Although based on a different\n  technology than the existing\n  GPL-licensed PyQt bindings, PySide\n  will initially aim to be\n  API-compatible with them. In addition\n  to the PyQt-compatible API, a more\n  Pythonic API will be provided in the\n  future. wxPython is a binding for Python using the wxWidgets-Framework. This framework is under the LGPL licence and is developed by the open source community. What I'm really missing is a good tool to design the interface, they have about 3 but none of them is usable. One thing I should mention is that I found a bug in the tab-view despite the fact that I didn't use anything advanced. (Only on Mac OS X) I think wxWidgets isn't as polished as Qt. wxPython is really only about the GUI-classes, there isn't much else. wxWidgets uses native GUI elements. An advantage wxPython has over Tkinter is that wxPython has a much larger library of widgets from which to choose from.  I haven't got any experience with other GUI frameworks, maybe someone else has."}, {"id": 881684, "score": 7, "vote": 0, "content": "<p>I'm just weighing in to say that TKinter sucks. It sadly seems that it is packed with Python because of backwards compatibility. </p>\n<p>The documentation is horrible. It looks horrible. I have run into some bizarre bugs that will actually crash Python.</p>\n", "abstract": "I'm just weighing in to say that TKinter sucks. It sadly seems that it is packed with Python because of backwards compatibility.  The documentation is horrible. It looks horrible. I have run into some bizarre bugs that will actually crash Python."}, {"id": 881659, "score": 6, "vote": 0, "content": "<p><a href=\"http://www.jython.org/Project/\" rel=\"nofollow noreferrer\">Jython</a>.</p>\n<blockquote>\n<p>Jython is an implementation of the\n  high-level, dynamic, object-oriented\n  language Python written in 100% Pure\n  Java, and seamlessly integrated with\n  the Java platform. It thus allows you\n  to run Python on any Java platform.</p>\n</blockquote>\n<p>You can use either Swing, Applet, or other GUI frameworks available to Java platform. See <a href=\"http://java.sun.com/docs/books/tutorial/\" rel=\"nofollow noreferrer\">Java Tutorials</a> for <a href=\"http://java.sun.com/docs/books/tutorial/ui/index.html\" rel=\"nofollow noreferrer\">Graphical User Interfaces</a> and <a href=\"http://java.sun.com/docs/books/tutorial/2d/index.html\" rel=\"nofollow noreferrer\">2D Graphics</a>. There are plenty of books and <a href=\"http://java.sun.com/javase/6/docs/\" rel=\"nofollow noreferrer\">documentation</a> such as <a href=\"http://java.sun.com/javase/6/docs/api/index.html\" rel=\"nofollow noreferrer\">API reference</a>.</p>\n<p>Here's a Hello world Swing application from <a href=\"http://www.javalobby.org/articles/jython/\" rel=\"nofollow noreferrer\">An Introduction to Jython</a>.</p>\n<pre><code class=\"python\">from javax.swing import *\n\nframe = JFrame(\"Hello Jython\")\nlabel = JLabel(\"Hello Jython!\", JLabel.CENTER)\nframe.add(label)\nframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE)\nframe.setSize(300, 300)\nframe.show()\n</code></pre>\n<p>Here's a Jython <a href=\"http://replay.waybackmachine.org/20080724075253/http://www.ditchnet.org/wp/2005/05/10/mulit-threaded-jython-applet/\" rel=\"nofollow noreferrer\">applet by Todd Ditchendorf that demonstrates multi-threaded particle drawing</a> (60 lines).</p>\n<pre><code class=\"python\">from __future__ import nested_scopes\nimport java.lang as lang\nimport java.util as util\nimport java.awt as awt\nimport javax.swing as swing\n\nclass Particle:\n\n    def __init__(self,initX,initY):\n    self.x = initX\n    self.y = initY\n    self.rng = util.Random()\n\n    def move(self):\n    self.x += self.rng.nextInt(10) - 5\n    self.y += self.rng.nextInt(20) - 10\n\n    def draw(self,g2):\n    g2.drawRect(self.x,self.y,10,10)\n\nclass ParticleCanvas(awt.Canvas):\n\n    def __init__(self,newSize):\n    awt.Canvas.__init__(self,size=(newSize,newSize))\n\n    def paint(self,g2):\n    for p in self.particles:\n        p.draw(g2)\n\nclass ParticleApplet(swing.JApplet):\n\n    def init(self):\n    self.canvas = ParticleCanvas(self.getWidth())\n    self.contentPane.add(self.canvas)\n\n    def start(self):\n    n = 10\n    particles = []\n    for i in range(n):\n        particles.append(Particle(150,150))\n    self.canvas.particles = particles\n\n    self.threads = []\n    for i in range(n):\n        self.threads.append(self.makeThread(particles[i]))\n        self.threads[i].start()\n\n    def makeThread(self,p):\n\n    class MyRunnable(lang.Runnable):\n        def run(this):\n        try:\n            while 1:\n            p.move()\n            self.canvas.repaint()\n            lang.Thread.sleep(100)\n        except lang.InterruptedException:\n            return\n\n    return lang.Thread(MyRunnable())\n</code></pre>\n<p>If you are just interested in drawing lines and circles you can probably cut it down to half.</p>\n", "abstract": "Jython. Jython is an implementation of the\n  high-level, dynamic, object-oriented\n  language Python written in 100% Pure\n  Java, and seamlessly integrated with\n  the Java platform. It thus allows you\n  to run Python on any Java platform. You can use either Swing, Applet, or other GUI frameworks available to Java platform. See Java Tutorials for Graphical User Interfaces and 2D Graphics. There are plenty of books and documentation such as API reference. Here's a Hello world Swing application from An Introduction to Jython. Here's a Jython applet by Todd Ditchendorf that demonstrates multi-threaded particle drawing (60 lines). If you are just interested in drawing lines and circles you can probably cut it down to half."}, {"id": 694187, "score": 5, "vote": 0, "content": "<p>I would definitely appreciate it if anyone knows of something better than what's commonly discussed; I see to have headaches finding something appropriate...</p>\n<p>Qt is great, but PyQt doesn't seem to have the same development resources. It seems to have some clever way to generate bindings, but isn't complete (e.g. PyKDE terminal kpart) and there is a dearth of documentation (as the developers admit). Compatibility with Qt's UI designer is nice.</p>\n<p>wxpython - controls aren't as nice looking, widget library isn't as large as KDE.</p>\n<p>OpenGL - doesn't even support fonts by default... pygame is okay, but opengl being a state machine is too annoying (object oriented models prevent making the a call in the wrong state).</p>\n<p>XUL - neat idea, I wish it worked. The <a href=\"http://pyxpcomext.mozdev.org/no_wrap/tutorials/pyxulrunner/python_xulrunner_about.html\" rel=\"nofollow noreferrer\">pyxulrunner</a> tutorial didn't work for me, though -- first I had to add the xulrunner /usr/lib path to LD_LIBRARY_PATH, then it still had problems with \"from xpcom import components\"...</p>\n<p>my wishlist for a ui library would be</p>\n<ul>\n<li>Python integration (i.e. uses builtins like unicode, modules like threading, and language features like closures)</li>\n<li>good intermediate representation (like XUL instead of generating hundreds of lines looking like \"listbox91.addChild(label28)\")</li>\n<li><em>simple</em> mutlithreaded support (automatic locks or event posting so e.g. elt.setText can be called from any thread; let the designer manage locking with Python locks if necessary)</li>\n<li>user-centric features as well - scripting of a sequence of UI events, ability to keybind anything (KDE has dcop, but afaik binding isn't done automatically by the UI library), and intercept events.</li>\n<li>potential for a large, easy-to-contribute standard library.</li>\n<li>documentation, though if the library was well designed and generated enough interest, this would be a given.</li>\n</ul>\n<p>In my experience, html is so much easier to get something good-looking up than UI libraries.</p>\n<p><strong>edit</strong> - after working with PyQt 4 for a while, it gets the job done for simple UI's. I'm currently not developing for end users, so looks don't matter. The QTextBrowser is very useful for displaying basic HTML tables and generating HTML links.</p>\n", "abstract": "I would definitely appreciate it if anyone knows of something better than what's commonly discussed; I see to have headaches finding something appropriate... Qt is great, but PyQt doesn't seem to have the same development resources. It seems to have some clever way to generate bindings, but isn't complete (e.g. PyKDE terminal kpart) and there is a dearth of documentation (as the developers admit). Compatibility with Qt's UI designer is nice. wxpython - controls aren't as nice looking, widget library isn't as large as KDE. OpenGL - doesn't even support fonts by default... pygame is okay, but opengl being a state machine is too annoying (object oriented models prevent making the a call in the wrong state). XUL - neat idea, I wish it worked. The pyxulrunner tutorial didn't work for me, though -- first I had to add the xulrunner /usr/lib path to LD_LIBRARY_PATH, then it still had problems with \"from xpcom import components\"... my wishlist for a ui library would be In my experience, html is so much easier to get something good-looking up than UI libraries. edit - after working with PyQt 4 for a while, it gets the job done for simple UI's. I'm currently not developing for end users, so looks don't matter. The QTextBrowser is very useful for displaying basic HTML tables and generating HTML links."}, {"id": 520961, "score": 0, "vote": 0, "content": "<p>Pro wxPython</p>\n<ul>\n<li>Lots of tutorials</li>\n<li>wxGlade as an Editor: not perfect yet, but usable.</li>\n</ul>\n", "abstract": "Pro wxPython"}]}, {"link": "https://stackoverflow.com/questions/4485610/python-message-box-without-huge-library-dependency", "question": {"id": "4485610", "title": "Python Message Box Without huge library dependency", "content": "<p>Is there a messagebox class where I can just display a simple message box without a huge GUI library or any library upon program success or failure. (My script only does 1 thing). </p>\n<p>Also, I only need it to run on Windows.</p>\n", "abstract": "Is there a messagebox class where I can just display a simple message box without a huge GUI library or any library upon program success or failure. (My script only does 1 thing).  Also, I only need it to run on Windows."}, "answers": [{"id": 4485736, "score": 86, "vote": 0, "content": "<p>You can use the <a href=\"http://docs.python.org/library/ctypes.html\" rel=\"noreferrer\">ctypes</a> library, which comes installed with Python:</p>\n<pre><code class=\"python\">import ctypes\nMessageBox = ctypes.windll.user32.MessageBoxW\nMessageBox(None, 'Hello', 'Window title', 0)\n</code></pre>\n<p>Above code is for Python 3.x. For Python 2.x, use <code>MessageBoxA</code> instead of <code>MessageBoxW</code> as Python 2 uses non-unicode strings by default.</p>\n", "abstract": "You can use the ctypes library, which comes installed with Python: Above code is for Python 3.x. For Python 2.x, use MessageBoxA instead of MessageBoxW as Python 2 uses non-unicode strings by default."}, {"id": 12788744, "score": 18, "vote": 0, "content": "<p>There are also a couple prototyped in the default libraries without using ctypes.</p>\n<p>Simple message box:</p>\n<pre><code class=\"python\">import win32ui\nwin32ui.MessageBox(\"Message\", \"Title\")\n</code></pre>\n<p>Other Options</p>\n<pre><code class=\"python\">if win32ui.MessageBox(\"Message\", \"Title\", win32con.MB_YESNOCANCEL) == win32con.IDYES:\n    win32ui.MessageBox(\"You pressed 'Yes'\")\n</code></pre>\n<p>There's also a roughly equivalent one in win32gui and another in win32api.   Docs for all appear to be in <code>C:\\Python{nn}\\Lib\\site-packages\\PyWin32.chm</code></p>\n", "abstract": "There are also a couple prototyped in the default libraries without using ctypes. Simple message box: Other Options There's also a roughly equivalent one in win32gui and another in win32api.   Docs for all appear to be in C:\\Python{nn}\\Lib\\site-packages\\PyWin32.chm"}, {"id": 42894466, "score": 5, "vote": 0, "content": "<p>The PyMsgBox module uses Python's tkinter, so it doesn't depend on any other third-party modules. You can install it with <code>pip install pymsgbox</code>.</p>\n<p>The function names are similar to JavaScript's <code>alert()</code>, <code>confirm()</code>, and <code>prompt()</code> functions:</p>\n<pre><code class=\"python\">&gt;&gt;&gt; import pymsgbox\n&gt;&gt;&gt; pymsgbox.alert('This is an alert!')\n&gt;&gt;&gt; user_response = pymsgbox.prompt('What is your favorite color?')\n</code></pre>\n", "abstract": "The PyMsgBox module uses Python's tkinter, so it doesn't depend on any other third-party modules. You can install it with pip install pymsgbox. The function names are similar to JavaScript's alert(), confirm(), and prompt() functions:"}, {"id": 29252501, "score": 2, "vote": 0, "content": "<p>A quick and dirty way is to call OS and use \"zenity\" command (subprocess module should be included by default in any python distribution, zenity is also present in all major linux). Try this short example script, it works in my Ubuntu 14.04.</p>\n<pre><code class=\"python\">import subprocess as SP\n# call an OS subprocess $ zenity --entry --text \"some text\"\n# (this will ask OS to open a window with the dialog)\nres=SP.Popen(['zenity','--entry','--text',\n'please write some text'], stdout=SP.PIPE)\n# get the user input string back\nusertext=str(res.communicate()[0][:-1])\n# adjust user input string \ntext=usertext[2:-1]\nprint(\"I got this text from the user: %s\"%text)\n</code></pre>\n<p>See the zenity --help for more complex dialogs</p>\n", "abstract": "A quick and dirty way is to call OS and use \"zenity\" command (subprocess module should be included by default in any python distribution, zenity is also present in all major linux). Try this short example script, it works in my Ubuntu 14.04. See the zenity --help for more complex dialogs"}, {"id": 40915752, "score": 2, "vote": 0, "content": "<p>You can also use the messagebox class from tkinter:\n    <code>from tkinter import messagebox</code>\nunless tkinter is that huge GUI you want to avoid.\nUsage is simple, ie:\n    <code>messagebox.FunctionName(title, message [, options])</code>\nwith FuntionName in (showinfo, showwarning, showerror, askquestion, askokcancel, askyesno, askretrycancel).  </p>\n", "abstract": "You can also use the messagebox class from tkinter:\n    from tkinter import messagebox\nunless tkinter is that huge GUI you want to avoid.\nUsage is simple, ie:\n    messagebox.FunctionName(title, message [, options])\nwith FuntionName in (showinfo, showwarning, showerror, askquestion, askokcancel, askyesno, askretrycancel).  "}, {"id": 57443033, "score": 1, "vote": 0, "content": "<p>This one with tkinter.</p>\n<pre><code class=\"python\">from tkinter import * #required.\nfrom tkinter import messagebox #for messagebox.\n\nApp = Tk() #required.\nApp.withdraw() #for hide window.\n\nprint(\"Message Box in Console\")\nmessagebox.showinfo(\"Notification\", \"Hello World!\") #msgbox\n\nApp.mainloop() #required.\n</code></pre>\n", "abstract": "This one with tkinter."}]}, {"link": "https://stackoverflow.com/questions/7416659/interactive-graph-visualisation", "question": {"id": "7416659", "title": "Interactive graph visualisation", "content": "<h3>Situation</h3>\n<p>Similar to <a href=\"https://stackoverflow.com/questions/5718204/interactive-python-network-graph-modeling\">this question</a>, I'm looking for a way to create a GUI where users are able to see a graph (in the <a href=\"http://en.wikipedia.org/wiki/Graph_theory\" rel=\"noreferrer\">graph theory</a> sense) and interact with it. Vehicles will move across the graph from none to node over time. Users should be able to add nodes and edges and add Vehicles and set their destination.</p>\n<p>I have already implemented the underlying graph model and business logic, I just need a GUI for it. This means that I do not need graph algorithm functionality such as Djistra's algorithm.</p>\n<p>If possible, the solution should be platform independent. The underlying model is written in python, so the GUI solution either needs to be python based (which would be preferable), or should easily interface with python (potentially IPC).</p>\n<p>Performance is a concern. It doesn't need to be blindingly fast, but it must be fast enough to keep up with the underlying model. Notionally, there is no limit on the number of nodes, edges and vehicles which may be present in the graph.</p>\n<h3>Possible approaches</h3>\n<p>I have looked at various visualisation libraries:</p>\n<ul>\n<li><a href=\"http://nodebox.net/code/index.php/Graph\" rel=\"noreferrer\">NodeBox</a></li>\n<li><a href=\"http://networkx.lanl.gov/\" rel=\"noreferrer\">NetworkX</a></li>\n<li><a href=\"http://matplotlib.sourceforge.net/\" rel=\"noreferrer\">matplotlib</a></li>\n<li><a href=\"http://www.graphviz.org/\" rel=\"noreferrer\">GraphViz</a></li>\n</ul>\n<p>I have contemplated using <a href=\"http://www.opengl.org/\" rel=\"noreferrer\">OpenGL</a>.</p>\n<p>I have thought about drawing straight to <a href=\"http://www.wxpython.org/\" rel=\"noreferrer\">wxPython</a>.</p>\n<h3>Problems</h3>\n<p>I haven't used any of the graph libraries. I don't know if they are capable of providing the required functionality. For example, matplotlib appears to have a lot of non graph-theory graphs in the gallery. I can't find an example of someone implementing a graph with it aside from through NetworkX. For another example, can NetworkX plot objects travelling along edges?</p>\n<p>An OpenGL solution would almost certainly take more time to implement. I would have to code functions for moving objects across edges myself. I would have to code a function for drawing the edges in the right place, and drawing labels for all of the edges and nodes and vehicles etc. I would need to implement menus and handle interactions from scratch.</p>\n<p>I'm not sure how I would go about implementing this in wxPython. I only know how to use it in conjunction with standard widgets. <strong>Update:</strong> I found <a href=\"https://stackoverflow.com/questions/4447658/wxpython-network-graph-clickable-with-context-menu-any-pkgs\">this question</a> which has an answer which points to <a href=\"http://www.wxpython.org/docs/api/wx.lib.ogl-module.html\" rel=\"noreferrer\">wx.lib.ogl</a> or <a href=\"http://www.wxpython.org/docs/api/wx.lib.floatcanvas-module.html\" rel=\"noreferrer\">wx.lib.floatcanvas</a> as a mechanism for implementing a solution in pure wxPython.</p>\n<h3>Questions</h3>\n<p>Do any of the visualisation libraries meet my requirements? Of those that do, which are most suited? Are there other libraries I have missed which would meet my requirements? Something like <a href=\"https://www.jgraph.com/jgraph.html\" rel=\"noreferrer\">JGraph</a> but for Python instead of Java would be suitable.</p>\n<p>What is your opinion on implementing this in OpenGL or wxPython as opposed to one of these libraries?</p>\n<p>Are there other approaches I haven't considered that you think would be appropriate?</p>\n", "abstract": "Similar to this question, I'm looking for a way to create a GUI where users are able to see a graph (in the graph theory sense) and interact with it. Vehicles will move across the graph from none to node over time. Users should be able to add nodes and edges and add Vehicles and set their destination. I have already implemented the underlying graph model and business logic, I just need a GUI for it. This means that I do not need graph algorithm functionality such as Djistra's algorithm. If possible, the solution should be platform independent. The underlying model is written in python, so the GUI solution either needs to be python based (which would be preferable), or should easily interface with python (potentially IPC). Performance is a concern. It doesn't need to be blindingly fast, but it must be fast enough to keep up with the underlying model. Notionally, there is no limit on the number of nodes, edges and vehicles which may be present in the graph. I have looked at various visualisation libraries: I have contemplated using OpenGL. I have thought about drawing straight to wxPython. I haven't used any of the graph libraries. I don't know if they are capable of providing the required functionality. For example, matplotlib appears to have a lot of non graph-theory graphs in the gallery. I can't find an example of someone implementing a graph with it aside from through NetworkX. For another example, can NetworkX plot objects travelling along edges? An OpenGL solution would almost certainly take more time to implement. I would have to code functions for moving objects across edges myself. I would have to code a function for drawing the edges in the right place, and drawing labels for all of the edges and nodes and vehicles etc. I would need to implement menus and handle interactions from scratch. I'm not sure how I would go about implementing this in wxPython. I only know how to use it in conjunction with standard widgets. Update: I found this question which has an answer which points to wx.lib.ogl or wx.lib.floatcanvas as a mechanism for implementing a solution in pure wxPython. Do any of the visualisation libraries meet my requirements? Of those that do, which are most suited? Are there other libraries I have missed which would meet my requirements? Something like JGraph but for Python instead of Java would be suitable. What is your opinion on implementing this in OpenGL or wxPython as opposed to one of these libraries? Are there other approaches I haven't considered that you think would be appropriate?"}, "answers": [{"id": 14774590, "score": 8, "vote": 0, "content": "<p>You might consider the JavaScript library <a href=\"http://d3js.org/\">d3</a>. It has some fantastic interactive graph visualisations, and being written in JavaScript it's great for Web UI</p>\n<p>I'm uncertain of the live graph building capabilities, but presume simple node  and edge addition/removal would be trivial to implement on top of your chosen visualisation type.</p>\n<p>Of course, you'd require something like <a href=\"http://pyjs.org/\">pyjs</a> to interface d3 with your python code, so it might not be suitable.</p>\n<p>Regarding nmichaels' answer: having used GraphViz extensively, I wouldn't recommend it for your purpose. It generates beautiful static diagrams but is strictly non-interactive.</p>\n", "abstract": "You might consider the JavaScript library d3. It has some fantastic interactive graph visualisations, and being written in JavaScript it's great for Web UI I'm uncertain of the live graph building capabilities, but presume simple node  and edge addition/removal would be trivial to implement on top of your chosen visualisation type. Of course, you'd require something like pyjs to interface d3 with your python code, so it might not be suitable. Regarding nmichaels' answer: having used GraphViz extensively, I wouldn't recommend it for your purpose. It generates beautiful static diagrams but is strictly non-interactive."}, {"id": 7416811, "score": 4, "vote": 0, "content": "<p>My gut says that using something like graphviz to render the graphs themselves and wx to deal with your UI is a good way to go. Reimplementing all the graph drawing bits in OpenGL seems like a huge waste of effort. <a href=\"http://networkx.lanl.gov/pygraphviz/index.html\" rel=\"nofollow\">pyGraphViz</a> is very easy to use, so you could probably get something functional quickly and tune as necessary for performance.</p>\n", "abstract": "My gut says that using something like graphviz to render the graphs themselves and wx to deal with your UI is a good way to go. Reimplementing all the graph drawing bits in OpenGL seems like a huge waste of effort. pyGraphViz is very easy to use, so you could probably get something functional quickly and tune as necessary for performance."}, {"id": 26307096, "score": 1, "vote": 0, "content": "<p>You might also want to consider networkx_viewer: \n<a href=\"https://github.com/jsexauer/networkx_viewer\" rel=\"nofollow\">https://github.com/jsexauer/networkx_viewer</a></p>\n", "abstract": "You might also want to consider networkx_viewer: \nhttps://github.com/jsexauer/networkx_viewer"}, {"id": 32602918, "score": 1, "vote": 0, "content": "<p>I ended up finding that the visualisation libraries that I considered were not able to animate objects travelling along edges.</p>\n<p>I experimented with <strong>wxPython</strong>, and its <strong>floatcanvas</strong>, and found that fairly straight forward to use (substantially simpler than the OpenGL solution would have been). This gave me the freedom to animate as I needed, but didn't give me any wrappers around displaying connected nodes - I had to write that myself.</p>\n<p>This is quite an old question, so there may be other libraries out there now that fulfil this requirement, or it might be that the libraries I considered have advanced and can now do this. If I had to implement it from scratch today, I would be inclined to experiment with a web based UI, potentially utilising web sockets to keep up with the back end in terms of data rate. I don't know how well the animation would scale though - I've found Canvas and SVG get choppy when animating large numbers of things at once. Maybe WebGL would suit better.</p>\n", "abstract": "I ended up finding that the visualisation libraries that I considered were not able to animate objects travelling along edges. I experimented with wxPython, and its floatcanvas, and found that fairly straight forward to use (substantially simpler than the OpenGL solution would have been). This gave me the freedom to animate as I needed, but didn't give me any wrappers around displaying connected nodes - I had to write that myself. This is quite an old question, so there may be other libraries out there now that fulfil this requirement, or it might be that the libraries I considered have advanced and can now do this. If I had to implement it from scratch today, I would be inclined to experiment with a web based UI, potentially utilising web sockets to keep up with the back end in terms of data rate. I don't know how well the animation would scale though - I've found Canvas and SVG get choppy when animating large numbers of things at once. Maybe WebGL would suit better."}]}, {"link": "https://stackoverflow.com/questions/800849/nice-ide-with-gui-designer-for-wxpython-or-tkinter", "question": {"id": "800849", "title": "Nice IDE with GUI designer for wxPython or Tkinter", "content": "<p>I have a little experience developing small command-line applications with Python. I want to move on to developing GUIs with Python. From the available GUI toolkits for Python, the ones I feel the most inclined to are <em>wxPython</em> and <em>Tkinter</em>; but I don't want to code all of the GUI by myself all of the time.</p>\n<p>Are there any good GUI IDEs for any of these toolkits? It doesn't need to be free or open source.</p>\n", "abstract": "I have a little experience developing small command-line applications with Python. I want to move on to developing GUIs with Python. From the available GUI toolkits for Python, the ones I feel the most inclined to are wxPython and Tkinter; but I don't want to code all of the GUI by myself all of the time. Are there any good GUI IDEs for any of these toolkits? It doesn't need to be free or open source."}, "answers": [{"id": 801164, "score": 32, "vote": 0, "content": "<p>I will talk only about WxPython because it's the only toolkit I have experience with. TkInter is nice to write small programs (then it doesn't require a GUI Designer), but is not really appropriate for large application development.</p>\n<ul>\n<li><p><a href=\"http://wxformbuilder.org\" rel=\"noreferrer\">wxFormBuilder</a> is really good: it generates <code>.XRC</code> files you need to load in your program, and it can generate <code>.py</code> files by subclassing them when you use.</p></li>\n<li><p><a href=\"http://www.dialogblocks.com\" rel=\"noreferrer\">DialogBlocks</a> and <a href=\"https://wiki.python.org/moin/WxDesigner\" rel=\"noreferrer\">wxDesigner</a> are two <strong>commercial</strong> software which can generate Python code directly. I didn't tested these much because of their price.</p></li>\n<li><a href=\"http://wxglade.sourceforge.net\" rel=\"noreferrer\">wxGlade</a> is (I think) not yet mature enough for large programs, but it's worth a try.</li>\n</ul>\n<p>After trying all these, I realized they had all <em>flaws</em> and that nothing is better than just writing the GUI in an editor. The problem is the extended learning curve. But then you will be much more faster and your code will be much more flexible than when using a GUI designer.</p>\n<p>Have a look at this <a href=\"http://wiki.wxpython.org/wxPythonPit%20Apps\" rel=\"noreferrer\">list of major applications</a> written with wxPython. You will probably see that none of these use a GUI Designer, there must be a reason for this.</p>\n<p>You then understand <strong>gs</strong> is right when saying that either you switch to PyQt or you write your application by hand. I had a look at Qt Designer in the past and thought this was what I needed. Unfortunately PyQt has some license restrictions.</p>\n", "abstract": "I will talk only about WxPython because it's the only toolkit I have experience with. TkInter is nice to write small programs (then it doesn't require a GUI Designer), but is not really appropriate for large application development. wxFormBuilder is really good: it generates .XRC files you need to load in your program, and it can generate .py files by subclassing them when you use. DialogBlocks and wxDesigner are two commercial software which can generate Python code directly. I didn't tested these much because of their price. After trying all these, I realized they had all flaws and that nothing is better than just writing the GUI in an editor. The problem is the extended learning curve. But then you will be much more faster and your code will be much more flexible than when using a GUI designer. Have a look at this list of major applications written with wxPython. You will probably see that none of these use a GUI Designer, there must be a reason for this. You then understand gs is right when saying that either you switch to PyQt or you write your application by hand. I had a look at Qt Designer in the past and thought this was what I needed. Unfortunately PyQt has some license restrictions."}, {"id": 801177, "score": 16, "vote": 0, "content": "<p>This may not answer your question directly, but I chose <a href=\"http://www.riverbankcomputing.co.uk/software/pyqt/intro\" rel=\"nofollow noreferrer\">PyQt</a> because there were no good UI designers for wxPython.</p>\n<p>Apparently you either write your GUIs by hand or switch to PyQt.</p>\n<p>Because Nokia and Riverbankcomputing couldn't agree on a LGPL solution, Nokia decided to build its own bindings: <a href=\"https://wiki.qt.io/Category:LanguageBindings::PySide\" rel=\"nofollow noreferrer\">PySide</a>.</p>\n", "abstract": "This may not answer your question directly, but I chose PyQt because there were no good UI designers for wxPython. Apparently you either write your GUIs by hand or switch to PyQt. Because Nokia and Riverbankcomputing couldn't agree on a LGPL solution, Nokia decided to build its own bindings: PySide."}, {"id": 803973, "score": 5, "vote": 0, "content": "<p><a href=\"http://boa-constructor.sourceforge.net/\" rel=\"noreferrer\">Boa Constructor </a> has a WxPython GUI builder.</p>\n", "abstract": "Boa Constructor  has a WxPython GUI builder."}, {"id": 801181, "score": 4, "vote": 0, "content": "<p>I use xrced (comes with wxPython). The GUI is defined in xml files, you have an autogenerated python file that automates some initialization then you subclass those autogenerated classes and do the rest of the initialization by hand. I find that this is a good way to blend the elegance of hand-written GUI code with ease of GUI code generation.</p>\n<p>For the code I use <a href=\"http://www.wingware.com/\" rel=\"nofollow noreferrer\">WingIDE</a>, it's helpfull to have a good debuger and good source code completion when dealing with large libraries (or frameworks if you will) like wxPython.</p>\n<p>If you want more automation (and so, uglier code) try the latest version of <a href=\"http://boa-constructor.sourceforge.net/\" rel=\"nofollow noreferrer\">Boa</a>, there are some nice introductory screencasts for it at <a href=\"http://showmedo.com/videos/series?name=wKQrywla5\" rel=\"nofollow noreferrer\">ShowMeDo.com</a></p>\n", "abstract": "I use xrced (comes with wxPython). The GUI is defined in xml files, you have an autogenerated python file that automates some initialization then you subclass those autogenerated classes and do the rest of the initialization by hand. I find that this is a good way to blend the elegance of hand-written GUI code with ease of GUI code generation. For the code I use WingIDE, it's helpfull to have a good debuger and good source code completion when dealing with large libraries (or frameworks if you will) like wxPython. If you want more automation (and so, uglier code) try the latest version of Boa, there are some nice introductory screencasts for it at ShowMeDo.com"}, {"id": 17740395, "score": 2, "vote": 0, "content": "<p>I use Eclipse with PyDev as my Python IDE (Which is probably not the best solution out there, but it is quite decent)</p>\n<p>For GUI developement, I have used wxGlade for a mid-sized project and found it to be quite easy to use one you've grasped the concepts of WxPython. The XML generation is very useful for separating actual GUI design from program logic.</p>\n<p>All of the these are free.</p>\n", "abstract": "I use Eclipse with PyDev as my Python IDE (Which is probably not the best solution out there, but it is quite decent) For GUI developement, I have used wxGlade for a mid-sized project and found it to be quite easy to use one you've grasped the concepts of WxPython. The XML generation is very useful for separating actual GUI design from program logic. All of the these are free."}, {"id": 803939, "score": 1, "vote": 0, "content": "<p>Try <a href=\"http://visualwx.altervista.org/\" rel=\"nofollow noreferrer\">VisualWx</a>. I think the GUI designer is very good; however the IDE is fairly rudimentary (no code completion, debugging, etc.). My work pattern is to have VisualWx and a good editor like Komodo Edit/Netbeans/etc. open at the same time and switch between them as needed. </p>\n", "abstract": "Try VisualWx. I think the GUI designer is very good; however the IDE is fairly rudimentary (no code completion, debugging, etc.). My work pattern is to have VisualWx and a good editor like Komodo Edit/Netbeans/etc. open at the same time and switch between them as needed. "}, {"id": 801176, "score": 0, "vote": 0, "content": "<p>I've used wxGlade for a few mission-critical apps. If you're a little weak in wx, it can be rough, but once you get used to it, its a great tool.</p>\n", "abstract": "I've used wxGlade for a few mission-critical apps. If you're a little weak in wx, it can be rough, but once you get used to it, its a great tool."}, {"id": 6152153, "score": 0, "vote": 0, "content": "<p>Not really a GUI IDE but it leds you define Tkinter GUIs in a JSON file: <a href=\"https://github.com/tmetsch/pytkgen\" rel=\"nofollow\">https://github.com/tmetsch/pytkgen</a></p>\n", "abstract": "Not really a GUI IDE but it leds you define Tkinter GUIs in a JSON file: https://github.com/tmetsch/pytkgen"}]}, {"link": "https://stackoverflow.com/questions/10133856/how-to-add-an-image-in-tkinter", "question": {"id": "10133856", "title": "How to add an image in Tkinter?", "content": "<p>How do I add an image in Tkinter?</p>\n<p>This gave me a syntax error:</p>\n<pre><code class=\"python\">root = tk.Tk()\nimg = ImageTk.PhotoImage(Image.open(path))\npanel = tk.Label(root, image = img)\npanel.pack(side = \"bottom\", fill = \"both\", expand = \"yes\")\nroot.mainloop()\n</code></pre>\n", "abstract": "How do I add an image in Tkinter? This gave me a syntax error:"}, "answers": [{"id": 16536496, "score": 39, "vote": 0, "content": "<p>Python 3.3.1 [MSC v.1600 32 bit (Intel)] on win32 14.May.2013</p>\n<p>This worked for me, by following the code above</p>\n<pre><code class=\"python\">from tkinter import *\nfrom PIL import ImageTk, Image\nimport os\n\nroot = Tk()\nimg = ImageTk.PhotoImage(Image.open(\"True1.gif\"))\npanel = Label(root, image = img)\npanel.pack(side = \"bottom\", fill = \"both\", expand = \"yes\")\nroot.mainloop()\n</code></pre>\n", "abstract": "Python 3.3.1 [MSC v.1600 32 bit (Intel)] on win32 14.May.2013 This worked for me, by following the code above"}, {"id": 10134675, "score": 19, "vote": 0, "content": "<p>There is no \"Syntax Error\" in the code above - it either ocurred in some other line (the above is not all of your code, as there are no imports, neither the declaration of your <code>path</code> variable) or you got some other error type.</p>\n<p>The example above worked fine for me, testing on the interactive interpreter.</p>\n", "abstract": "There is no \"Syntax Error\" in the code above - it either ocurred in some other line (the above is not all of your code, as there are no imports, neither the declaration of your path variable) or you got some other error type. The example above worked fine for me, testing on the interactive interpreter."}, {"id": 43509071, "score": 13, "vote": 0, "content": "<p>Here is an example for Python 3 that you can edit for Python 2 ;)</p>\n<pre><code class=\"python\">from tkinter import *\nfrom PIL import ImageTk, Image\nfrom tkinter import filedialog\nimport os\n\nroot = Tk()\nroot.geometry(\"550x300+300+150\")\nroot.resizable(width=True, height=True)\n\ndef openfn():\n    filename = filedialog.askopenfilename(title='open')\n    return filename\ndef open_img():\n    x = openfn()\n    img = Image.open(x)\n    img = img.resize((250, 250), Image.ANTIALIAS)\n    img = ImageTk.PhotoImage(img)\n    panel = Label(root, image=img)\n    panel.image = img\n    panel.pack()\n\nbtn = Button(root, text='open image', command=open_img).pack()\n\nroot.mainloop()\n</code></pre>\n<p><a href=\"https://i.stack.imgur.com/HWNMM.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/HWNMM.png\"/></a></p>\n", "abstract": "Here is an example for Python 3 that you can edit for Python 2 ;) "}, {"id": 10186488, "score": 8, "vote": 0, "content": "<p>Following code works on my machine</p>\n<ol>\n<li>you probably have something missing in your code.  </li>\n<li>please also check the code files's encoding. </li>\n<li><p>make sure you have PIL package installed</p>\n<pre><code class=\"python\">import Tkinter as tk\nfrom PIL import ImageTk, Image\n\npath = 'C:/xxxx/xxxx.jpg'\n\nroot = tk.Tk()\nimg = ImageTk.PhotoImage(Image.open(path))\npanel = tk.Label(root, image = img)\npanel.pack(side = \"bottom\", fill = \"both\", expand = \"yes\")\nroot.mainloop()\n</code></pre></li>\n</ol>\n", "abstract": "Following code works on my machine make sure you have PIL package installed"}, {"id": 26440856, "score": 6, "vote": 0, "content": "<p>It's not a standard lib of python 2.7. So in order for these to work properly and if you're using Python 2.7 you should download the PIL library first: Direct download link: <a href=\"http://effbot.org/downloads/PIL-1.1.7.win32-py2.7.exe\" rel=\"noreferrer\">http://effbot.org/downloads/PIL-1.1.7.win32-py2.7.exe</a>\nAfter installing it, follow these steps:</p>\n<ol>\n<li>Make sure that your <strong>script.py</strong> is at <strong><em>the same folder with</em></strong> the <strong>image</strong> you want to show.</li>\n<li><p>Edit your <strong>script.py</strong></p>\n<pre><code class=\"python\">from Tkinter import *        \nfrom PIL import ImageTk, Image\n\napp_root = Tk()\n\n#Setting it up\nimg = ImageTk.PhotoImage(Image.open(\"app.png\"))\n\n#Displaying it\nimglabel = Label(app_root, image=img).grid(row=1, column=1)        \n\n\napp_root.mainloop()\n</code></pre></li>\n</ol>\n<p>Hope that helps!</p>\n", "abstract": "It's not a standard lib of python 2.7. So in order for these to work properly and if you're using Python 2.7 you should download the PIL library first: Direct download link: http://effbot.org/downloads/PIL-1.1.7.win32-py2.7.exe\nAfter installing it, follow these steps: Edit your script.py Hope that helps!"}, {"id": 48512362, "score": 6, "vote": 0, "content": "<p>Your actual code may return an error based on the format of the file <code>path</code> points to. That being said, some image formats such as .gif, .pgm (and .png if tk.TkVersion &gt;= 8.6) is already supported by the <a href=\"http://effbot.org/tkinterbook/photoimage.htm\" rel=\"noreferrer\"><code>PhotoImage</code></a> class.</p>\n<p>Below is an example displaying:</p>\n<p><a href=\"https://i.stack.imgur.com/IgD2r.png\" rel=\"noreferrer\"><img alt=\"Lenna (.png)\" src=\"https://i.stack.imgur.com/IgD2r.png\"/></a></p>\n<p>or if <code>tk.TkVersion &lt; 8.6</code>:</p>\n<p><a href=\"https://i.stack.imgur.com/sML82.gif\" rel=\"noreferrer\"><img alt=\"Lenna (.gif)\" src=\"https://i.stack.imgur.com/sML82.gif\"/></a></p>\n<pre><code class=\"python\">try:                        # In order to be able to import tkinter for\n    import tkinter as tk    # either in python 2 or in python 3\nexcept ImportError:\n    import Tkinter as tk\n\n\ndef download_images():\n    # In order to fetch the image online\n    try:\n        import urllib.request as url\n    except ImportError:\n        import urllib as url\n    url.urlretrieve(\"https://i.stack.imgur.com/IgD2r.png\", \"lenna.png\")\n    url.urlretrieve(\"https://i.stack.imgur.com/sML82.gif\", \"lenna.gif\")\n\n\nif __name__ == '__main__':\n    download_images()\n    root = tk.Tk()\n    widget = tk.Label(root, compound='top')\n    widget.lenna_image_png = tk.PhotoImage(file=\"lenna.png\")\n    widget.lenna_image_gif = tk.PhotoImage(file=\"lenna.gif\")\n    try:\n        widget['text'] = \"Lenna.png\"\n        widget['image'] = widget.lenna_image_png\n    except:\n        widget['text'] = \"Lenna.gif\"\n        widget['image'] = widget.lenna_image_gif\n    widget.pack()\n    root.mainloop()\n</code></pre>\n", "abstract": "Your actual code may return an error based on the format of the file path points to. That being said, some image formats such as .gif, .pgm (and .png if tk.TkVersion >= 8.6) is already supported by the PhotoImage class. Below is an example displaying:  or if tk.TkVersion < 8.6: "}, {"id": 57760521, "score": 3, "vote": 0, "content": "<p>This code works for me, also you should consider if you have any other button or labels in that window and you not use <code>.place()</code> it will not work properly.</p>\n<pre><code class=\"python\">from Tkinter import*\nfrom PIL import Image, ImageTk\n\nimg  = Image.open(\"path/x.png\") \nphoto=ImageTk.PhotoImage(img)\nlab=Label(image=photo).place(x=50,y=50)\n</code></pre>\n", "abstract": "This code works for me, also you should consider if you have any other button or labels in that window and you not use .place() it will not work properly."}, {"id": 47081721, "score": 1, "vote": 0, "content": "<p>It's a Python version problem. If you are using the latest, then your old syntax won't work and give you this error. Please follow @Josav09's code and you will be fine. </p>\n", "abstract": "It's a Python version problem. If you are using the latest, then your old syntax won't work and give you this error. Please follow @Josav09's code and you will be fine. "}, {"id": 56856080, "score": 1, "vote": 0, "content": "<p>Just convert the jpg format image into png format. It will work 100%.</p>\n", "abstract": "Just convert the jpg format image into png format. It will work 100%."}]}, {"link": "https://stackoverflow.com/questions/44455257/how-to-create-beautiful-uis-with-python", "question": {"id": "44455257", "title": "How to create beautiful UI&#39;s with Python", "content": "<p>I wonder if it's possible to create good looking desktop UI's with python?\nCould I use JS frameworks like Electron with python? Or are there any python libraries which provide modern looking and easy to use widgets?</p>\n<p>This is what I have in mind for the appearance:</p>\n<p><img alt=\"Something like that.\" src=\"https://i.stack.imgur.com/5veTB.png\"/></p>\n<p><img alt=\"Image Credit: https://dribbble.com/jnhffmnn\" src=\"https://i.stack.imgur.com/Ph3Ou.jpg\"/></p>\n<p>Is this possible and where can I find resources on how to get started?</p>\n", "abstract": "I wonder if it's possible to create good looking desktop UI's with python?\nCould I use JS frameworks like Electron with python? Or are there any python libraries which provide modern looking and easy to use widgets? This is what I have in mind for the appearance:   Is this possible and where can I find resources on how to get started?"}, "answers": [{"id": 44455808, "score": 16, "vote": 0, "content": "<p>Best options I've seen for 'pretty' GUIs with python is Kivy, see the <a href=\"https://kivy.org/#gallery\" rel=\"noreferrer\">gallery of examples</a></p>\n", "abstract": "Best options I've seen for 'pretty' GUIs with python is Kivy, see the gallery of examples"}, {"id": 51468275, "score": 8, "vote": 0, "content": "<p>Like what people have already said, it depends on what you are trying to put inside of your GUI and where you want to put it. But, all of the other GUI programs that others have suggested were hard for me to download and downright difficult to learn. I assume you have used tkinter before (which has disappointing aesthetics), and are unwhelmed by the format of the premade button, entry, and other widgets.</p>\n<p>What I recommend doing is not downloading other libraries and software, but rather sticking with tkinter and only using label widgets and the bind function, which is detailed <a href=\"http://effbot.org/tkinterbook/tkinter-events-and-bindings.htm\" rel=\"noreferrer\">here</a>. What the bind function allows you to do is call an action (function) when a mouse click, keyboard entry, etc... occurs over a certain widget. Essentially, you can make a button by binding the mouse click action with a label. Whenever you click on the label in the GUI, the function is called, however, now you don't have the ugly border around the text and it looks nicer. Similarly, you don't have to use the entry widget, you can bind a keyboard event over an empty label. Then inside your code, you can add whichever keyboard letter/number you press into the stringvar that control the text in the label. The list goes on and on, but essentially you would be using only labels, frames, and canvas' with the bind function to make cooler looking GUI's.</p>\n<p>Here's an example of how I made a nicer looking radiobutton grid...\n<a href=\"https://i.stack.imgur.com/I7dID.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/I7dID.png\"/></a></p>\n<p>With this, I can customize the size of the circles to match the size of the text, change the color of the selected and unselected circles, and change the spacing between the text and the button circles.</p>\n", "abstract": "Like what people have already said, it depends on what you are trying to put inside of your GUI and where you want to put it. But, all of the other GUI programs that others have suggested were hard for me to download and downright difficult to learn. I assume you have used tkinter before (which has disappointing aesthetics), and are unwhelmed by the format of the premade button, entry, and other widgets. What I recommend doing is not downloading other libraries and software, but rather sticking with tkinter and only using label widgets and the bind function, which is detailed here. What the bind function allows you to do is call an action (function) when a mouse click, keyboard entry, etc... occurs over a certain widget. Essentially, you can make a button by binding the mouse click action with a label. Whenever you click on the label in the GUI, the function is called, however, now you don't have the ugly border around the text and it looks nicer. Similarly, you don't have to use the entry widget, you can bind a keyboard event over an empty label. Then inside your code, you can add whichever keyboard letter/number you press into the stringvar that control the text in the label. The list goes on and on, but essentially you would be using only labels, frames, and canvas' with the bind function to make cooler looking GUI's. Here's an example of how I made a nicer looking radiobutton grid...\n With this, I can customize the size of the circles to match the size of the text, change the color of the selected and unselected circles, and change the spacing between the text and the button circles."}, {"id": 44486068, "score": 5, "vote": 0, "content": "<p>Hi it looks like what you are asking is EXACTLY what pysciter is targetting. The only caveat is the fact that this is still new and possibly a bit green</p>\n<p><a href=\"https://github.com/sciter-sdk/pysciter\" rel=\"noreferrer\">https://github.com/sciter-sdk/pysciter</a></p>\n", "abstract": "Hi it looks like what you are asking is EXACTLY what pysciter is targetting. The only caveat is the fact that this is still new and possibly a bit green https://github.com/sciter-sdk/pysciter"}, {"id": 44478779, "score": 4, "vote": 0, "content": "<p>It depends where you want to use these dashboards, for device independent applications for IoT stuff (like Raspberry Pi), I would prefer <a href=\"https://thingsboard.io/\" rel=\"nofollow noreferrer\">Thingsboard</a> as its opensource. Otherwise if you don't care about <a href=\"https://www.losant.com/\" rel=\"nofollow noreferrer\">Losant</a> is also a good choice. \nBut as scotty3785 mentioned, for not webbased applications <a href=\"https://kivy.org/#home\" rel=\"nofollow noreferrer\">Kivy</a> is a very good choice.<br/>\nBut it just depends on your case what you choose.</p>\n", "abstract": "It depends where you want to use these dashboards, for device independent applications for IoT stuff (like Raspberry Pi), I would prefer Thingsboard as its opensource. Otherwise if you don't care about Losant is also a good choice. \nBut as scotty3785 mentioned, for not webbased applications Kivy is a very good choice.\nBut it just depends on your case what you choose."}]}, {"link": "https://stackoverflow.com/questions/7206807/whats-the-recommended-way-to-unittest-python-gui-applications", "question": {"id": "7206807", "title": "What&#39;s the recommended way to unittest Python GUI applications?", "content": "<p>I'm currently foolish enough to try to maintaintain two parallel code bases for a Python desktop application, one using PyGObject introspection for GTK 3 and one using PyGTK for GTK 2. I work mainly on the PyGObject branch and then I port changes over to the PyGTK branch. Due to all the minor differences between these implementations, I often overlook things and cause breakage that I miss and accidentally release, only to be caught by the users.</p>\n<p>I'm trying to figure out a good way to design some unittests that would, preferably, be suitable to run on both code bases. It's not an overly complicated program, (it's essentially a library management tool, imagine like iTunes):</p>\n<pre><code class=\"python\">- Main Window\n  |- Toolbar with some buttons (add/edit/remove items, configure the program)\n  |\n  |- VPaned\n  |--- Top HPaned\n  |------ ListView (listing values by which a library of items can be filtered)\n  |------ ListView (listing the contents of the library\n  |--- Bottom HPaned\n  |------ Image (displaying cover art for the currently selected item in the library)\n  |------ TextView (displaying formatted text describing the currently selected item)\n - Edit dialog\n - Configuration dialog\n - About dialog \n</code></pre>\n<p>I've tried to separate views from models as much as possible. Each of those items is implemented in its own class (well, in classes which inherit from the GTK classes listed). The ListViews are coupled with other classes which inherit from ListStores. The library itself is handled by a different class. Nonetheless, there are interactions between the widgets that need to be tested. For example, if the user selects a particular item in the filter view, filtering the library, and then selects an item from the filtered results, the text view must display the information for the correct library entry, which is semi-complicated due to translating iters between TreeModelFilter and the original ListStore, etc etc.</p>\n<p>So, I ask, what is the recommended way for writing robust unit tests for such a GUI application? I've seen that there are some libraries for this but the main ones for pygtk haven't been updated in years and so they will almost certainly fail with PyGObject introspection. Perhaps I'm not creative enough to figure out a good way to do it using Python's <code>unittest</code> module, so I'm open to suggestions. </p>\n", "abstract": "I'm currently foolish enough to try to maintaintain two parallel code bases for a Python desktop application, one using PyGObject introspection for GTK 3 and one using PyGTK for GTK 2. I work mainly on the PyGObject branch and then I port changes over to the PyGTK branch. Due to all the minor differences between these implementations, I often overlook things and cause breakage that I miss and accidentally release, only to be caught by the users. I'm trying to figure out a good way to design some unittests that would, preferably, be suitable to run on both code bases. It's not an overly complicated program, (it's essentially a library management tool, imagine like iTunes): I've tried to separate views from models as much as possible. Each of those items is implemented in its own class (well, in classes which inherit from the GTK classes listed). The ListViews are coupled with other classes which inherit from ListStores. The library itself is handled by a different class. Nonetheless, there are interactions between the widgets that need to be tested. For example, if the user selects a particular item in the filter view, filtering the library, and then selects an item from the filtered results, the text view must display the information for the correct library entry, which is semi-complicated due to translating iters between TreeModelFilter and the original ListStore, etc etc. So, I ask, what is the recommended way for writing robust unit tests for such a GUI application? I've seen that there are some libraries for this but the main ones for pygtk haven't been updated in years and so they will almost certainly fail with PyGObject introspection. Perhaps I'm not creative enough to figure out a good way to do it using Python's unittest module, so I'm open to suggestions. "}, "answers": [{"id": 7264684, "score": 8, "vote": 0, "content": "<p>Are you sure you want to <em>unit</em> test the GUI? Your example of complexity involves more than 1 unit and is therefore an integration test.</p>\n<p>If you really want to unit test, you should be able to instantiate a single class providing mocks or stubs for its dependencies, then call methods on it like the GUI framework would for e.g. a user click. This can be tedious and you have to know exactly how the GUI framework dispatches user input to your classes.</p>\n<p>My advice is to put even more stuff in models. For your given example you could create a FilterManager which abstracts all the filter/select/display stuff behind a single method. Then unit test it.</p>\n", "abstract": "Are you sure you want to unit test the GUI? Your example of complexity involves more than 1 unit and is therefore an integration test. If you really want to unit test, you should be able to instantiate a single class providing mocks or stubs for its dependencies, then call methods on it like the GUI framework would for e.g. a user click. This can be tedious and you have to know exactly how the GUI framework dispatches user input to your classes. My advice is to put even more stuff in models. For your given example you could create a FilterManager which abstracts all the filter/select/display stuff behind a single method. Then unit test it."}, {"id": 14393844, "score": 6, "vote": 0, "content": "<p>There is a great way to test PyGTK functions and widgets directly, without going through acceptance/functional/integration testing frameworks that clikety their way into oblivion. I learned about this in <a href=\"http://unpythonic.blogspot.ca/2007/03/unit-testing-pygtk.html\" rel=\"nofollow\">this post</a> which is fairly self explanatory. But the basic idea is that you treat your widgets as functions/classes, and you can test them directly. If you need to process callbacks and so on, there's a neat trick that I will reproduce here:</p>\n<pre><code class=\"python\">import time\nimport gtk\n\n# Stolen from Kiwi\ndef refresh_gui(delay=0):\n  while gtk.events_pending():\n      gtk.main_iteration_do(block=False)\n  time.sleep(delay)\n</code></pre>\n<p>As mentionned in the blog post, this code is LGPL. Otherwise, when you think about it, as long as you don't <code>show()</code> windows or widgets, you can test them all you want and they should behave as if they were real because, in a way, they are. They are just not displayed.</p>\n<p>Of course, you need to simulate interaction on buttons and interactive widgets yourself by calling <code>clicked()</code> on a button for example. See again <a href=\"http://unpythonic.blogspot.ca/2007/03/unit-testing-pygtk.html\" rel=\"nofollow\">Ali Afshar's excellent post about unit testing in PyGTK</a>.</p>\n", "abstract": "There is a great way to test PyGTK functions and widgets directly, without going through acceptance/functional/integration testing frameworks that clikety their way into oblivion. I learned about this in this post which is fairly self explanatory. But the basic idea is that you treat your widgets as functions/classes, and you can test them directly. If you need to process callbacks and so on, there's a neat trick that I will reproduce here: As mentionned in the blog post, this code is LGPL. Otherwise, when you think about it, as long as you don't show() windows or widgets, you can test them all you want and they should behave as if they were real because, in a way, they are. They are just not displayed. Of course, you need to simulate interaction on buttons and interactive widgets yourself by calling clicked() on a button for example. See again Ali Afshar's excellent post about unit testing in PyGTK."}, {"id": 9452418, "score": 2, "vote": 0, "content": "<p>In sticking with the theme that J\u00fcrgen was correct in that I'm not interested in <em>unit</em> testing, but actually interested in integration testing, I also found this framework from freedesktop.org:\n<a href=\"http://ldtp.freedesktop.org/wiki/\" rel=\"nofollow\">http://ldtp.freedesktop.org/wiki/</a></p>\n<p>It allows automating a variety of tests for Accessibility-enabled GUI applications (including GTK, Qt, Swing, etc).</p>\n", "abstract": "In sticking with the theme that J\u00fcrgen was correct in that I'm not interested in unit testing, but actually interested in integration testing, I also found this framework from freedesktop.org:\nhttp://ldtp.freedesktop.org/wiki/ It allows automating a variety of tests for Accessibility-enabled GUI applications (including GTK, Qt, Swing, etc)."}, {"id": 23468595, "score": 1, "vote": 0, "content": "<p>You can use a X11 framebuffer:</p>\n<pre><code class=\"python\">Xvfb :119 -screen 0 1024x768x16 &amp;\nexport DISPLAY=:119\n... run your tests\n</code></pre>\n<p>Be sure, to not enter <code>gtk.main()</code>, since this would wait for mouse or keyboard input. You can use this pattern to let gtk handle all events:</p>\n<pre><code class=\"python\">def refresh_gui():\n  while gtk.events_pending():\n      gtk.main_iteration_do(block=False)\n</code></pre>\n<p>AFAIK you can't see your application, but you can test your callbacks.</p>\n", "abstract": "You can use a X11 framebuffer: Be sure, to not enter gtk.main(), since this would wait for mouse or keyboard input. You can use this pattern to let gtk handle all events: AFAIK you can't see your application, but you can test your callbacks."}]}, {"link": "https://stackoverflow.com/questions/38098763/pyside-pyqt-how-to-make-set-qtablewidget-column-width-as-proportion-of-the-a", "question": {"id": "38098763", "title": "PySide - PyQt : How to make set QTableWidget column width as proportion of the available space?", "content": "<p>I'm developing a computer application with <em>PySide</em> and I'm using the QTableWidget. Let's say my table has 3 columns, but the data they contain is very different, like (for each row) a long sentence in the first column, then 3-digit numbers in the two last columns. I'd like <strong>to have my table resize in order to adjust its size to the data</strong>, or at least to be able <strong>to set the column sizes as (say) 70/15/15 % of the available space</strong>.</p>\n<p>What is the best way to do this ?</p>\n<p>I've tried <code>table.horizontalHeader().setResizeMode(QHeaderView.Stretch)</code> after reading <a href=\"https://stackoverflow.com/questions/11839813/how-to-make-qtablewidgets-columns-assume-the-maximum-space\">this question</a> but it makes 3 columns of the same size.</p>\n<p>I've also tried <code>table.horizontalHeader().setResizeMode(QHeaderView.ResizeToContents)</code> thanks to <a href=\"https://stackoverflow.com/users/3770506/fabio\">Fabio</a>'s <a href=\"https://stackoverflow.com/questions/38098763/pyside-pyqt-how-to-make-set-qtablewidget-column-width-as-proportion-of-the-a?noredirect=1#comment63632916_38098763\">comment</a> but it doesn't fill all the available space as needed.</p>\n<p>Neither <code>Interactive</code>, <code>Fixed</code>, <code>Stretch</code>, <code>ResizeToContents</code> from the <a href=\"http://doc.qt.io/qt-4.8/qheaderview.html#ResizeMode-enum\" rel=\"noreferrer\">QHeaderView documentation</a> seem to give me what I need (see second edit).</p>\n<p>Any help would be appreciated, even if it is for <em>Qt/C++</em> ! Thank you very much.</p>\n<hr/>\n<p><strong>EDIT :</strong> I found kind of a workaround but it's still not what I'm looking for :</p>\n<pre><code class=\"python\">header = table.horizontalHeader()\nheader.setResizeMode(QHeaderView.ResizeToContents)\nheader.setStretchLastSection(True)\n</code></pre>\n<p>It would be better if there existed a <code>setStretchFirstSection</code> method, but unfortunately there does not seem to be one.</p>\n<hr/>\n<p><strong>EDIT 2 :</strong></p>\n<p>The only thing that can be modified in the table is the last column, the user can enter a number in it. Red arrows indicates what I'd like to have.</p>\n<p>Here's what happens with <code>Stretch</code><a href=\"https://i.stack.imgur.com/NCFXM.png\" rel=\"noreferrer\"><img alt=\"Stretch\" src=\"https://i.stack.imgur.com/NCFXM.png\"/></a></p>\n<p>Here's what happens with <code>ResizeToContents</code> <a href=\"https://i.stack.imgur.com/DZeGg.png\" rel=\"noreferrer\"><img alt=\"ResizeToContents\" src=\"https://i.stack.imgur.com/DZeGg.png\"/></a></p>\n", "abstract": "I'm developing a computer application with PySide and I'm using the QTableWidget. Let's say my table has 3 columns, but the data they contain is very different, like (for each row) a long sentence in the first column, then 3-digit numbers in the two last columns. I'd like to have my table resize in order to adjust its size to the data, or at least to be able to set the column sizes as (say) 70/15/15 % of the available space. What is the best way to do this ? I've tried table.horizontalHeader().setResizeMode(QHeaderView.Stretch) after reading this question but it makes 3 columns of the same size. I've also tried table.horizontalHeader().setResizeMode(QHeaderView.ResizeToContents) thanks to Fabio's comment but it doesn't fill all the available space as needed. Neither Interactive, Fixed, Stretch, ResizeToContents from the QHeaderView documentation seem to give me what I need (see second edit). Any help would be appreciated, even if it is for Qt/C++ ! Thank you very much. EDIT : I found kind of a workaround but it's still not what I'm looking for : It would be better if there existed a setStretchFirstSection method, but unfortunately there does not seem to be one. EDIT 2 : The only thing that can be modified in the table is the last column, the user can enter a number in it. Red arrows indicates what I'd like to have. Here's what happens with Stretch Here's what happens with ResizeToContents "}, "answers": [{"id": 38129829, "score": 91, "vote": 0, "content": "<p>This can be solved by setting the resize-mode for each column. The first section must stretch to take up the available space, whilst the last two sections just resize to their contents:</p>\n<p>PyQt4:</p>\n<pre><code class=\"python\">header = self.table.horizontalHeader()\nheader.setResizeMode(0, QtGui.QHeaderView.Stretch)\nheader.setResizeMode(1, QtGui.QHeaderView.ResizeToContents)\nheader.setResizeMode(2, QtGui.QHeaderView.ResizeToContents)\n</code></pre>\n<p>PyQt5:</p>\n<pre><code class=\"python\">header = self.table.horizontalHeader()       \nheader.setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)\nheader.setSectionResizeMode(1, QtWidgets.QHeaderView.ResizeToContents)\nheader.setSectionResizeMode(2, QtWidgets.QHeaderView.ResizeToContents)\n</code></pre>\n", "abstract": "This can be solved by setting the resize-mode for each column. The first section must stretch to take up the available space, whilst the last two sections just resize to their contents: PyQt4: PyQt5:"}, {"id": 52665000, "score": 10, "vote": 0, "content": "<p>As mentioned before, you can do this by setting the resize-mode of each column. However, if you have a lot of columns this can be a lot of code. The way I do it is setting the \"general\" resize-mode to \"ResizeToContent\" and than for one (or more) columns to \"Stretch\"!</p>\n<p>Here is the code:</p>\n<p>PyQt4:</p>\n<pre><code class=\"python\">header = self.table.horizontalHeader()\nheader.setResizeMode(QtGui.QHeaderView.ResizeToContents)\nheader.setResizeMode(0, QtGui.QHeaderView.Stretch)\n</code></pre>\n<p>PyQt5:</p>\n<pre><code class=\"python\">header = self.table.horizontalHeader()\nheader.setSectionResizeMode(QtWidgets.QHeaderView.ResizeToContents)       \nheader.setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)\n</code></pre>\n", "abstract": "As mentioned before, you can do this by setting the resize-mode of each column. However, if you have a lot of columns this can be a lot of code. The way I do it is setting the \"general\" resize-mode to \"ResizeToContent\" and than for one (or more) columns to \"Stretch\"! Here is the code: PyQt4: PyQt5:"}, {"id": 47946048, "score": 5, "vote": 0, "content": "<p>PyQt4</p>\n<pre><code class=\"python\">header = self.table.horizontalHeader()\nheader.setResizeMode(0, QtGui.QHeaderView.Stretch)\nheader.setResizeMode(1, QtGui.QHeaderView.ResizeToContents)\nheader.setResizeMode(2, QtGui.QHeaderView.ResizeToContents)\nheader.setResizeMode(3, QtGui.QHeaderView.Stretch)\n</code></pre>\n<p>PyQt5</p>\n<pre><code class=\"python\">header = self.table.horizontalHeader()       \nheader.setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)\nheader.setSectionResizeMode(1, QtWidgets.QHeaderView.ResizeToContents)\nheader.setSectionResizeMode(2, QtWidgets.QHeaderView.ResizeToContents)\nheader.setSectionResizeMode(3, QtWidgets.QHeaderView.Stretch)\n</code></pre>\n", "abstract": "PyQt4 PyQt5"}, {"id": 38107422, "score": 3, "vote": 0, "content": "<p>You can do this with <code>QItemDelegates</code> or <code>QStyledItemDelegates</code>.  If you want to resize to contents <strong>and</strong> have automatic stretch, you'll need to choose which column is the \"stretch\" column.</p>\n<pre><code class=\"python\">class ResizeDelegate(QStyledItemDelegate):\n\n    def __init__(self, table, stretch_column, *args, **kwargs):\n        super(ResizeDelegate, self).__init__(*args, **kwargs)        \n        self.table = table\n        self.stretch_column = stretch_column\n\n    def sizeHint(self, option, index):\n        size = super(ResizeDelegate, self).sizeHint(option, index)\n        if index.column() == self.stretch_column:\n            total_width = self.table.viewport().size().width()\n            calc_width = size.width()\n            for i in range(self.table.columnCount()):\n                if i != index.column():\n                    option_ = QtGui.QStyleOptionViewItem()\n                    index_ = self.table.model().index(index.row(), i)\n                    self.initStyleOption(option_, index_)\n                    size_ = self.sizeHint(option_, index_)\n                    calc_width += size_.width()\n            if calc_width &lt; total_width:\n                size.setWidth(size.width() + total_width - calc_width)\n        return size\n\n...\n\ntable = QTableWidget()\ndelegate = ResizeDelegate(table, 0)\ntable.setItemDelegate(delegate)\n... # Add items to table\ntable.resizeColumnsToContents()\n</code></pre>\n<p>You can set the resize mode to <code>ResizeToContents</code>, or if you want the user to be able to adjust the column width as needed, just call <code>resizeColumnsToContents</code> manually after making changes to the table items.</p>\n<p>You also may need to fudge around with the width calculations a bit because of margins and padding between columns (like add a pixel or two to the <code>calculated_width</code> for each column to account for the cell border).</p>\n", "abstract": "You can do this with QItemDelegates or QStyledItemDelegates.  If you want to resize to contents and have automatic stretch, you'll need to choose which column is the \"stretch\" column. You can set the resize mode to ResizeToContents, or if you want the user to be able to adjust the column width as needed, just call resizeColumnsToContents manually after making changes to the table items. You also may need to fudge around with the width calculations a bit because of margins and padding between columns (like add a pixel or two to the calculated_width for each column to account for the cell border)."}, {"id": 64933680, "score": 3, "vote": 0, "content": "<p>I have used this and setMinumumsectionsize has solved my  problem of Qtableview cell size</p>\n<pre><code class=\"python\">self.questionWidget.tableView.setModel(self.model)\nself.questionWidget.tableView.verticalHeader().setVisible(False)\nself.questionWidget.tableView.horizontalHeader().setMinimumSectionSize(200)\n\n</code></pre>\n", "abstract": "I have used this and setMinumumsectionsize has solved my  problem of Qtableview cell size"}, {"id": 66148134, "score": 2, "vote": 0, "content": "<p>I had to remove the QtWidget to get mine to work.</p>\n<pre><code class=\"python\">        header = self.tag_table.horizontalHeader()\n        header.setSectionResizeMode(QHeaderView.ResizeToContents)\n</code></pre>\n", "abstract": "I had to remove the QtWidget to get mine to work."}, {"id": 73768345, "score": 1, "vote": 0, "content": "<p>PyQt6</p>\n<pre><code class=\"python\">header = self.table.horizontalHeader()       \nheader.setSectionResizeMode(0, QtWidgets.QHeaderView.ResizeMode.Stretch)\nheader.setSectionResizeMode(1, QtWidgets.QHeaderView.ResizeMode.ResizeToContents)\nheader.setSectionResizeMode(2, QtWidgets.QHeaderView.ResizeMode.ResizeToContents)\n</code></pre>\n<p>Resize options are enums of type <code>ResizeMode</code> <br/>\nOther available options are</p>\n<pre><code class=\"python\"> Interactive = ... # type: QHeaderView.ResizeMode\n Fixed = ... # type: QHeaderView.ResizeMode\n Stretch = ... # type: QHeaderView.ResizeMode\n ResizeToContents = ... # type: QHeaderView.ResizeMode\n Custom = ... # type: QHeaderView.ResizeMode\n</code></pre>\n", "abstract": "PyQt6 Resize options are enums of type ResizeMode \nOther available options are"}, {"id": 72099525, "score": 0, "vote": 0, "content": "<p><strong>This worked for me in PyQt5:</strong></p>\n<pre><code class=\"python\">table_name.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.Stretch)\n</code></pre>\n<p>It will auto ajust the size of all columns.</p>\n<p>Here's all my horizontal header settings:</p>\n<pre><code class=\"python\">    table_name.horizontalHeader().setVisible(True)\n    table_name.horizontalHeader().setCascadingSectionResizes(True)\n    table_name.horizontalHeader().setDefaultSectionSize(140)\n    table_name.horizontalHeader().setHighlightSections(False)\n    table_name.horizontalHeader().setMinimumSectionSize(100)\n    table_name.horizontalHeader().setSortIndicatorShown(False)\n    table_name.horizontalHeader().setStretchLastSection(False)\n   table_name.horizontalHeader().setSectionResizeMode(QtWidgets.QHeaderView.Stretch)\n</code></pre>\n", "abstract": "This worked for me in PyQt5: It will auto ajust the size of all columns. Here's all my horizontal header settings:"}]}, {"link": "https://stackoverflow.com/questions/336866/how-to-implement-a-minimal-server-for-ajax-in-python", "question": {"id": "336866", "title": "How to implement a minimal server for AJAX in Python?", "content": "<p>I want to create a very simple HTML/AJAX based GUI for a Python program. So the frontend is a HTML page which communicates with the program via AJAX. Can you give me a minimal implementation for the server-side using the python <code>SimpleHTTPServer.SimpleHTTPRequestHandler</code>?</p>\n<p>A simple example would be a textfield and a button. When the button is pressed the content of the field is send to the server which then sends back a corresponding answer. I am aware that there are many powerful solutions for this in Python, but I would like to keep this very simple.\nI already found some nice examples for such a server (e.g. <a href=\"http://msdl.cs.mcgill.ca/people/julien/04Ajax\" rel=\"noreferrer\">here</a>), but so far I could not come up with a truly minimal one.</p>\n<p>In case you wonder why I want to implement the GUI in such a way: My focus for this application is to display lots of data in a nice layout with only minimal interaction - so using HTML+CSS seems most convenient (and I have been already using it for non-interactive data display).</p>\n", "abstract": "I want to create a very simple HTML/AJAX based GUI for a Python program. So the frontend is a HTML page which communicates with the program via AJAX. Can you give me a minimal implementation for the server-side using the python SimpleHTTPServer.SimpleHTTPRequestHandler? A simple example would be a textfield and a button. When the button is pressed the content of the field is send to the server which then sends back a corresponding answer. I am aware that there are many powerful solutions for this in Python, but I would like to keep this very simple.\nI already found some nice examples for such a server (e.g. here), but so far I could not come up with a truly minimal one. In case you wonder why I want to implement the GUI in such a way: My focus for this application is to display lots of data in a nice layout with only minimal interaction - so using HTML+CSS seems most convenient (and I have been already using it for non-interactive data display)."}, "answers": [{"id": 338519, "score": 53, "vote": 0, "content": "<p>O.K., I think I can now answer my own question. Here is an example implementation for calculating the square of a number on the server. Please let me know if there are any improvements or misconceptions.</p>\n<p>the python server file:</p>\n<pre><code class=\"python\">import threading\nimport webbrowser\nimport BaseHTTPServer\nimport SimpleHTTPServer\n\nFILE = 'frontend.html'\nPORT = 8080\n\n\nclass TestHandler(SimpleHTTPServer.SimpleHTTPRequestHandler):\n    \"\"\"The test example handler.\"\"\"\n\n    def do_POST(self):\n        \"\"\"Handle a post request by returning the square of the number.\"\"\"\n        length = int(self.headers.getheader('content-length'))        \n        data_string = self.rfile.read(length)\n        try:\n            result = int(data_string) ** 2\n        except:\n            result = 'error'\n        self.wfile.write(result)\n\n\ndef open_browser():\n    \"\"\"Start a browser after waiting for half a second.\"\"\"\n    def _open_browser():\n        webbrowser.open('http://localhost:%s/%s' % (PORT, FILE))\n    thread = threading.Timer(0.5, _open_browser)\n    thread.start()\n\ndef start_server():\n    \"\"\"Start the server.\"\"\"\n    server_address = (\"\", PORT)\n    server = BaseHTTPServer.HTTPServer(server_address, TestHandler)\n    server.serve_forever()\n\nif __name__ == \"__main__\":\n    open_browser()\n    start_server()\n</code></pre>\n<p>...and the HTML file (I call it 'frontend.html', unfortunately the name has to appear in the JavaScript code as well):</p>\n<pre><code class=\"python\">&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;AJAX test&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;script type=\"text/javascript\"&gt;\n\nfunction xml_http_post(url, data, callback) {\n    var req = false;\n    try {\n        // Firefox, Opera 8.0+, Safari\n        req = new XMLHttpRequest();\n    }\n    catch (e) {\n        // Internet Explorer\n        try {\n            req = new ActiveXObject(\"Msxml2.XMLHTTP\");\n        }\n        catch (e) {\n            try {\n                req = new ActiveXObject(\"Microsoft.XMLHTTP\");\n            }\n            catch (e) {\n                alert(\"Your browser does not support AJAX!\");\n                return false;\n            }\n        }\n    }\n    req.open(\"POST\", url, true);\n    req.onreadystatechange = function() {\n        if (req.readyState == 4) {\n            callback(req);\n        }\n    }\n    req.send(data);\n}\n\nfunction test_button() {\n    var data = document.test_form.test_text.value;           \n    xml_http_post(\"frontend.html\", data, test_handle)\n}\n\nfunction test_handle(req) {\n    var elem = document.getElementById('test_result')\n    elem.innerHTML =  req.responseText\n}\n\n&lt;/script&gt;\n\n&lt;form name=test_form&gt;\nsqr(\n&lt;input type=\"text\" name=\"test_text\" value=\"0\" size=\"4\"&gt;\n) =\n&lt;span id=\"test_result\"&gt;0&lt;/span&gt;\n&lt;input type=button onClick=\"test_button();\" value=\"start\" title=\"start\"&gt;\n&lt;/form&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p>Of course it would be much more convenient to use <a href=\"http://api.jquery.com/jQuery.ajax/\" rel=\"noreferrer\">jQuery</a> for the XML request, but in the interest of simplicity I'll leave it like that.</p>\n<p>Finally an alternative implementation using WSGI (unfortunately I didn't see a way to fall back on the standard file-serving handler if the request is not a POST):</p>\n<pre><code class=\"python\">import threading\nimport webbrowser\nfrom wsgiref.simple_server import make_server\n\nFILE = 'frontend.html'\nPORT = 8080\n\ndef test_app(environ, start_response):\n    if environ['REQUEST_METHOD'] == 'POST':\n        try:\n            request_body_size = int(environ['CONTENT_LENGTH'])\n            request_body = environ['wsgi.input'].read(request_body_size)\n        except (TypeError, ValueError):\n            request_body = \"0\"\n        try:\n            response_body = str(int(request_body) ** 2)\n        except:\n            response_body = \"error\"\n        status = '200 OK'\n        headers = [('Content-type', 'text/plain')]\n        start_response(status, headers)\n        return [response_body]\n    else:\n        response_body = open(FILE).read()\n        status = '200 OK'\n        headers = [('Content-type', 'text/html'),\n                   ('Content-Length', str(len(response_body)))]\n        start_response(status, headers)\n        return [response_body]\n\ndef open_browser():\n    \"\"\"Start a browser after waiting for half a second.\"\"\"\n    def _open_browser():\n        webbrowser.open('http://localhost:%s/%s' % (PORT, FILE))\n    thread = threading.Timer(0.5, _open_browser)\n    thread.start()\n\ndef start_server():\n    \"\"\"Start the server.\"\"\"\n    httpd = make_server(\"\", PORT, test_app)\n    httpd.serve_forever()\n\nif __name__ == \"__main__\":\n    open_browser()\n    start_server()\n</code></pre>\n", "abstract": "O.K., I think I can now answer my own question. Here is an example implementation for calculating the square of a number on the server. Please let me know if there are any improvements or misconceptions. the python server file: ...and the HTML file (I call it 'frontend.html', unfortunately the name has to appear in the JavaScript code as well): Of course it would be much more convenient to use jQuery for the XML request, but in the interest of simplicity I'll leave it like that. Finally an alternative implementation using WSGI (unfortunately I didn't see a way to fall back on the standard file-serving handler if the request is not a POST):"}, {"id": 336894, "score": 11, "vote": 0, "content": "<p>Use the <a href=\"https://docs.python.org/2/library/wsgiref.html#module-wsgiref.simple_server\" rel=\"nofollow noreferrer\">WSGI reference implementation</a>.  In the long run, you'll be happier.</p>\n<pre><code class=\"python\">from wsgiref.simple_server import make_server, demo_app\n\nhttpd = make_server('', 8000, demo_app)\nprint \"Serving HTTP on port 8000...\"\n\n# Respond to requests until process is killed\nhttpd.serve_forever()\n</code></pre>\n<p>The demo_app is relatively easy to write; it handles your Ajax requests.</p>\n", "abstract": "Use the WSGI reference implementation.  In the long run, you'll be happier. The demo_app is relatively easy to write; it handles your Ajax requests."}, {"id": 46924680, "score": 3, "vote": 0, "content": "<p>Here is a simple example for Python 3\nbased on @nikow's example</p>\n<p>I know this can have errors, comment what those are if you find them.</p>\n<p>The code sends the string \"I sent you this message\" when you click run, python responds with \"I got it\"</p>\n<p>Html Code</p>\n<p>(you're gonna have to use the js console for this)</p>\n<pre><code class=\"python\">&lt;body&gt;\n&lt;button id=\"runButton\"&gt;Run&lt;/button&gt;\n&lt;script type=\"text/javascript\"&gt;\nfunction xml_http_post(url, data) {\nvar req = new XMLHttpRequest();\nreq.open(\"POST\", url, true);\nreq.onreadystatechange = function() {\n    if (req.readyState == 4) {\n    console.log(req.responseText);\n    }\n}\nreq.send(data);\n}\n\nfunction runbuttonfunc() {\n    xml_http_post(\"frontend.html\", \"I sent you this message\")\n}\n\ndocument.getElementById(\"runButton\").onclick = runbuttonfunc;\n&lt;/script&gt;\n&lt;/body&gt;\n</code></pre>\n<p>Python Code:</p>\n<pre><code class=\"python\">import http.server\n\nFILE = 'frontend.html'\nPORT = 8000\n\n\nclass TestHandler(http.server.SimpleHTTPRequestHandler):\n    \"\"\"The test example handler.\"\"\"\n\n    def do_POST(self):\n        \"\"\"Handle a post request by returning the square of the number.\"\"\"\n        print(self.headers)\n        length = int(self.headers.get_all('content-length')[0])\n        print(self.headers.get_all('content-length'))\n        data_string = self.rfile.read(length)\n        print(data_string)\n        self.send_response(200)\n        self.send_header(\"Content-type\", \"text/plain\")\n        self.end_headers()\n        self.flush_headers()\n        self.wfile.write(\"I got it!\".encode())\n\n\ndef start_server():\n    \"\"\"Start the server.\"\"\"\n    server_address = (\"\", PORT)\n    server = http.server.HTTPServer(server_address, TestHandler)\n    server.serve_forever()\n\nstart_server()\n</code></pre>\n", "abstract": "Here is a simple example for Python 3\nbased on @nikow's example I know this can have errors, comment what those are if you find them. The code sends the string \"I sent you this message\" when you click run, python responds with \"I got it\" Html Code (you're gonna have to use the js console for this) Python Code:"}, {"id": 26004385, "score": 0, "vote": 0, "content": "<p>Thanks for a very intuitive example @nikow\nI was trying to follow your example, but did get an error:</p>\n<p>(process:10281): GLib-CRITICAL **: g_slice_set_config: assertion 'sys_page_size == 0' failed</p>\n<p>I modified your code to meet my needs.</p>\n<pre><code class=\"python\">webbrowser.open('file:///home/jon/workspace/webpages/frontend_example/%s' % FILE)\n// skipped the port part\nhttpd = make_server(\"\", 8080, test_app)\n// hardcoded it here.\n</code></pre>\n<p>does my html file has to be put on the webserver ?\nI have not put it there yet !.</p>\n", "abstract": "Thanks for a very intuitive example @nikow\nI was trying to follow your example, but did get an error: (process:10281): GLib-CRITICAL **: g_slice_set_config: assertion 'sys_page_size == 0' failed I modified your code to meet my needs. does my html file has to be put on the webserver ?\nI have not put it there yet !."}]}, {"link": "https://stackoverflow.com/questions/4293889/easiest-way-to-develop-simple-gui-in-python", "question": {"id": "4293889", "title": "Easiest way to develop simple GUI in Python", "content": "<p>I'm done with my class project which I coded using Python. I'm working on the extra credit part i.e. GUI development - Windows platform.</p>\n<p>I need something simple, easy to use, possibly drag-and-drop GUI development tool for Python. GUI needs to look somewhat like google, since all my project does is:</p>\n<p></p>\n<pre><code class=\"python\">input: Company name\noutput: Ethical or Unethical\n</code></pre>\n<p>So, all I need is:</p>\n<ul>\n<li>An attractive image</li>\n<li>Input textbox</li>\n<li>Search button</li>\n<li>Output box</li>\n</ul>\n", "abstract": "I'm done with my class project which I coded using Python. I'm working on the extra credit part i.e. GUI development - Windows platform. I need something simple, easy to use, possibly drag-and-drop GUI development tool for Python. GUI needs to look somewhat like google, since all my project does is:  So, all I need is:"}, "answers": [{"id": 4293903, "score": 26, "vote": 0, "content": "<p>Take your pick <a href=\"http://wiki.python.org/moin/GuiProgramming\">here</a>.</p>\n<p><a href=\"http://wiki.python.org/moin/TkInter\">Tkinter</a> is in the Python stdlib. </p>\n", "abstract": "Take your pick here. Tkinter is in the Python stdlib. "}, {"id": 17764863, "score": 13, "vote": 0, "content": "<p>Try with Kivy! <a href=\"http://kivy.org\" rel=\"noreferrer\">kivy.org</a>\nIt's quite easy, multi platform and a really good documentation</p>\n", "abstract": "Try with Kivy! kivy.org\nIt's quite easy, multi platform and a really good documentation"}, {"id": 4293917, "score": 11, "vote": 0, "content": "<p>Tkinter is simple but is too ugly. PyQT can do everything you want but is too big. Perhaps IronPython will be good for you. Take a look at this: <a href=\"http://wiki.python.org/moin/GuiProgramming\" rel=\"noreferrer\">Python guis</a></p>\n", "abstract": "Tkinter is simple but is too ugly. PyQT can do everything you want but is too big. Perhaps IronPython will be good for you. Take a look at this: Python guis"}, {"id": 4293897, "score": 6, "vote": 0, "content": "<p><a href=\"http://glade.gnome.org/\" rel=\"noreferrer\">Glade</a> or <a href=\"http://wxglade.sourceforge.net/\" rel=\"noreferrer\">wxGlade</a>.</p>\n", "abstract": "Glade or wxGlade."}, {"id": 16148901, "score": 4, "vote": 0, "content": "<p><a href=\"http://easygui.sourceforge.net/tutorial.html\" rel=\"nofollow\">EasyGUI</a> for very easy GUI Development</p>\n", "abstract": "EasyGUI for very easy GUI Development"}, {"id": 16149099, "score": 2, "vote": 0, "content": "<p>I prefer <a href=\"http://www.riverbankcomputing.com/software/pyqt/intro\" rel=\"nofollow\">PyQT</a> although it is pretty big. It has all the features that normal QT has, and that's why it's very usable. I think you can use <a href=\"https://qt-project.org/doc/qt-5.0/qtquick/qtquick-index.html\" rel=\"nofollow\">QML</a> with it too.</p>\n", "abstract": "I prefer PyQT although it is pretty big. It has all the features that normal QT has, and that's why it's very usable. I think you can use QML with it too."}, {"id": 25587956, "score": 1, "vote": 0, "content": "<p>I would recommend wxpython.\nIt's very easy to use and the documentation is pretty good.</p>\n", "abstract": "I would recommend wxpython.\nIt's very easy to use and the documentation is pretty good."}]}, {"link": "https://stackoverflow.com/questions/25753632/tkinter-how-to-use-after-method", "question": {"id": "25753632", "title": "tkinter: how to use after method", "content": "<p>Hey I am new to python and am using tkinter for my gui. I am having trouble using the \"after\" method.\nThe goal is to make a random letter appear every 5 seconds.</p>\n<p>Here is my code:</p>\n<pre><code class=\"python\">import random\nimport time\nfrom tkinter import *\n\n\nroot = Tk()\n\nw = Label(root, text=\"GAME\")\nw.pack()\n\nframe = Frame(root, width=300, height=300)\nframe.pack()\n\nL1 = Label(root, text=\"User Name\")\nL1.pack(side=LEFT)\nE1 = Entry(root, bd =5)\nE1.pack(side=LEFT)\n\n\ntiles_letter = ['a', 'b', 'c', 'd', 'e']\n\n\nwhile len(tiles_letter) &gt; 0:\n    rand = random.choice(tiles_letter)\n    tile_frame = Label(frame, text=rand)\n    tile_frame.pack()\n    frame.after(500)\n    tiles_letter.remove(rand)  # remove that tile from list of tiles\n\nroot.mainloop()\n</code></pre>\n<p>can someone please help me --- the problem is definitely frame.after(500):\ni'm not sure if it is correct to use \"frame\" and I don't know what which argument follows the 500.</p>\n<p>Thanks</p>\n", "abstract": "Hey I am new to python and am using tkinter for my gui. I am having trouble using the \"after\" method.\nThe goal is to make a random letter appear every 5 seconds. Here is my code: can someone please help me --- the problem is definitely frame.after(500):\ni'm not sure if it is correct to use \"frame\" and I don't know what which argument follows the 500. Thanks"}, "answers": [{"id": 25753719, "score": 52, "vote": 0, "content": "<p>You need to give a function to be called after the time delay as the second argument to <a href=\"https://web.archive.org/web/20201112021403id_/https://effbot.org/tkinterbook/widget.htm#Tkinter.Widget.after-method\" rel=\"noreferrer\"><code>after</code></a>:</p>\n<blockquote>\n<p><strong><code>after(delay_ms, callback=None, *args)</code></strong></p>\n<p>Registers an alarm callback that is called after a given time.</p>\n</blockquote>\n<p>So what you really want to do is this:</p>\n<pre><code class=\"python\">tiles_letter = ['a', 'b', 'c', 'd', 'e']\n\ndef add_letter():\n    rand = random.choice(tiles_letter)\n    tile_frame = Label(frame, text=rand)\n    tile_frame.pack()\n    root.after(500, add_letter)\n    tiles_letter.remove(rand)  # remove that tile from list of tiles\n\n\nroot.after(0, add_letter)  # add_letter will run as soon as the mainloop starts.\nroot.mainloop()\n</code></pre>\n<p>You also need to schedule the function to be called again by repeating the call to <code>after</code> inside the callback function, since <code>after</code> only executes the given function once. This is also noted in the documentation:</p>\n<blockquote>\n<p>The callback is only called once for each call to this method. To keep\ncalling the callback, you need to reregister the callback inside\nitself</p>\n</blockquote>\n<p>Note that your example will throw an exception as soon as you've exhausted all the entries in <code>tiles_letter</code>, so you need to change your logic to handle that case whichever way you want. The simplest thing would be to add a check at the beginning of <code>add_letter</code> to make sure the list isn't empty, and just <code>return</code> if it is:</p>\n<pre><code class=\"python\">def add_letter():\n    if not tiles_letter:\n        return\n    rand = random.choice(tiles_letter)\n    tile_frame = Label(frame, text=rand)\n    tile_frame.pack()\n    root.after(500, add_letter)\n    tiles_letter.remove(rand)  # remove that tile from list of tiles\n</code></pre>\n<hr/>\n<p>Live-Demo: <a href=\"https://repl.it/repls/LightgrayUnderstatedScripts\" rel=\"noreferrer\">repl.it</a></p>\n", "abstract": "You need to give a function to be called after the time delay as the second argument to after: after(delay_ms, callback=None, *args) Registers an alarm callback that is called after a given time. So what you really want to do is this: You also need to schedule the function to be called again by repeating the call to after inside the callback function, since after only executes the given function once. This is also noted in the documentation: The callback is only called once for each call to this method. To keep\ncalling the callback, you need to reregister the callback inside\nitself Note that your example will throw an exception as soon as you've exhausted all the entries in tiles_letter, so you need to change your logic to handle that case whichever way you want. The simplest thing would be to add a check at the beginning of add_letter to make sure the list isn't empty, and just return if it is: Live-Demo: repl.it"}, {"id": 65998653, "score": 1, "vote": 0, "content": "<p>I believe, the 500ms run in the background, while the rest of the code continues to execute and empties the list.</p>\n<p>Then after 500ms nothing happens, as no function-call is implemented in the after-callup (same as <code>frame.after(500, function=None)</code>)</p>\n", "abstract": "I believe, the 500ms run in the background, while the rest of the code continues to execute and empties the list. Then after 500ms nothing happens, as no function-call is implemented in the after-callup (same as frame.after(500, function=None))"}]}, {"link": "https://stackoverflow.com/questions/27820178/how-to-add-placeholder-to-an-entry-in-tkinter", "question": {"id": "27820178", "title": "How to add placeholder to an Entry in tkinter?", "content": "<p>I have created a login window in tkinter which has two Entry field, first one is Username and second one is Password.\n<br/>\ncode</p>\n<pre><code class=\"python\">from tkinter import *\n\nui = Tk()\n\ne1 = Entry(ui)\n#i need a placeholder \"Username\" in the above entry field\ne1.pack()\n\nui.mainloop()\n</code></pre>\n<p>I want a placeholder called \"Username\" in the <code>Entry</code>, but if you click inside the entry box, the text should disappear.</p>\n", "abstract": "I have created a login window in tkinter which has two Entry field, first one is Username and second one is Password.\n\ncode I want a placeholder called \"Username\" in the Entry, but if you click inside the entry box, the text should disappear."}, "answers": [{"id": 47928390, "score": 36, "vote": 0, "content": "<p>You can create a class that inherits from <code>Entry</code> like below:</p>\n<pre><code class=\"python\">import tkinter as tk\n\nclass EntryWithPlaceholder(tk.Entry):\n    def __init__(self, master=None, placeholder=\"PLACEHOLDER\", color='grey'):\n        super().__init__(master)\n\n        self.placeholder = placeholder\n        self.placeholder_color = color\n        self.default_fg_color = self['fg']\n\n        self.bind(\"&lt;FocusIn&gt;\", self.foc_in)\n        self.bind(\"&lt;FocusOut&gt;\", self.foc_out)\n\n        self.put_placeholder()\n\n    def put_placeholder(self):\n        self.insert(0, self.placeholder)\n        self['fg'] = self.placeholder_color\n\n    def foc_in(self, *args):\n        if self['fg'] == self.placeholder_color:\n            self.delete('0', 'end')\n            self['fg'] = self.default_fg_color\n\n    def foc_out(self, *args):\n        if not self.get():\n            self.put_placeholder()\n\nif __name__ == \"__main__\": \n    root = tk.Tk() \n    username = EntryWithPlaceholder(root, \"username\")\n    password = EntryWithPlaceholder(root, \"password\", 'blue')\n    username.pack()\n    password.pack()  \n    root.mainloop()\n</code></pre>\n", "abstract": "You can create a class that inherits from Entry like below:"}, {"id": 27821044, "score": 20, "vote": 0, "content": "<p>You need to set a default value for this entry. Like this:</p>\n<pre><code class=\"python\">from tkinter import *\n\nui = Tk()\n\ne1 = Entry(ui)\ne1.insert(0, 'username')\ne1.pack()\n\nui.mainloop()\n</code></pre>\n<p>Then if you want to delete the content when you click the entry, then you have to bind a mouse click event with an event handler method to update content of this entry.\nHere is a <a href=\"https://mail.python.org/pipermail/tutor/2011-August/085092.html\" rel=\"noreferrer\">link</a> for you.</p>\n", "abstract": "You need to set a default value for this entry. Like this: Then if you want to delete the content when you click the entry, then you have to bind a mouse click event with an event handler method to update content of this entry.\nHere is a link for you."}, {"id": 58889385, "score": 14, "vote": 0, "content": "<p><strong>Updated (Improved Answer):</strong></p>\n<ul>\n<li>Use the <code>on_focus_out</code> function to reinsert the placeholder if the text field is empty (if you don't want this to happen, you can use the method from the older code)</li>\n</ul>\n<pre><code class=\"python\">import tkinter as tk\n\n\ndef on_focus_in(entry):\n    if entry.cget('state') == 'disabled':\n        entry.configure(state='normal')\n        entry.delete(0, 'end')\n\n\ndef on_focus_out(entry, placeholder):\n    if entry.get() == \"\":\n        entry.insert(0, placeholder)\n        entry.configure(state='disabled')\n\n\nroot = tk.Tk()\n\nentry_x = tk.Entry(root, width=50)\nentry_x.pack(pady=10)\nentry_x.insert(0, \"Place Holder X\")\nentry_x.configure(state='disabled')\n\nentry_y = tk.Entry(root, width=50)\nentry_y.pack(pady=10)\nentry_y.insert(0, \"Place Holder Y\")\nentry_y.configure(state='disabled')\n\nx_focus_in = entry_x.bind('&lt;Button-1&gt;', lambda x: on_focus_in(entry_x))\nx_focus_out = entry_x.bind(\n    '&lt;FocusOut&gt;', lambda x: on_focus_out(entry_x, 'Place Holder X'))\n\ny_focus_in = entry_y.bind('&lt;Button-1&gt;', lambda x: on_focus_in(entry_y))\ny_focus_out = entry_y.bind(\n    '&lt;FocusOut&gt;', lambda x: on_focus_out(entry_y, 'Place Holder Y'))\n\nroot.mainloop()\n\n</code></pre>\n<p><strong>Note:</strong></p>\n<ul>\n<li>It is discouraged to <code>import *</code>, so we should import like this <code>import tkinter as tk</code>.</li>\n<li>I have created two <code>Entry</code> widgets to depict the changes.</li>\n</ul>\n<p><strong>Old (Not Recommended):</strong></p>\n<p>This will work for any placeholder you want.</p>\n<pre><code class=\"python\">from tkinter import *\nroot = Tk()\n\nmy_entry = Entry(root, width=50)\nmy_entry.pack()\nmy_entry.insert(0, \"Place Holder\")\nmy_entry.configure(state=DISABLED)\n\ndef on_click(event):\n    my_entry.configure(state=NORMAL)\n    my_entry.delete(0, END)\n\n    # make the callback only work once\n    my_entry.unbind('&lt;Button-1&gt;', on_click_id)\n\non_click_id = my_entry.bind('&lt;Button-1&gt;', on_click)\n\nroot.mainloop()\n</code></pre>\n", "abstract": "Updated (Improved Answer): Note: Old (Not Recommended): This will work for any placeholder you want."}, {"id": 68376685, "score": 4, "vote": 0, "content": "<p>My solution is to subclass the <code>tk.Entry</code> and control the content and color, binding the <code>&lt;FocusIn&gt;</code> and <code>&lt;FocusOut&gt;</code> events to methods that fill and clear the text as necessary. This is the behavior:</p>\n<p><a href=\"https://i.stack.imgur.com/qo8Kc.gif\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/qo8Kc.gif\"/></a></p>\n<p>Here the complete example code:</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">import tkinter as tk\n\nclass PlaceholderEntry(tk.Entry):\n    def __init__(self, master=None, placeholder='', cnf={}, fg='black',\n                 fg_placeholder='grey50', *args, **kw):\n        super().__init__(master=None, cnf={}, bg='white', *args, **kw)\n        self.fg = fg\n        self.fg_placeholder = fg_placeholder\n        self.placeholder = placeholder\n        self.bind('&lt;FocusOut&gt;', lambda event: self.fill_placeholder())\n        self.bind('&lt;FocusIn&gt;', lambda event: self.clear_box())\n        self.fill_placeholder()\n\n    def clear_box(self):\n        if not self.get() and super().get():\n            self.config(fg=self.fg)\n            self.delete(0, tk.END)\n\n    def fill_placeholder(self):\n        if not super().get():\n            self.config(fg=self.fg_placeholder)\n            self.insert(0, self.placeholder)\n    \n    def get(self):\n        content = super().get()\n        if content == self.placeholder:\n            return ''\n        return content\n\nclass App(tk.Frame):\n    def __init__(self, master=None):\n        self.root = master\n        super().__init__(master, borderwidth=0, relief=tk.RAISED)\n        \n        self.root.title('Placeholder example')\n        self.pack_propagate(False)\n        self.pack()\n        \n        self.entry = PlaceholderEntry(self.root, placeholder='This text is a placeholder')\n        self.entry.pack()\n        \n        self.btn = tk.Button(self.root, text='Nothing', highlightcolor='cyan')\n        self.btn.pack()\n        \n\nroot = tk.Tk()\napp = App(master=root)\n\napp.root.mainloop()\n</code></pre>\n", "abstract": "My solution is to subclass the tk.Entry and control the content and color, binding the <FocusIn> and <FocusOut> events to methods that fill and clear the text as necessary. This is the behavior:  Here the complete example code:"}, {"id": 64833642, "score": 1, "vote": 0, "content": "<p>A working placeholder class. What this does is that it binds to <code>&lt;FocusIn&gt;</code> and <code>&lt;FocusOut&gt;</code> so that when you put focus on it if there is no text it will insert your <code>placeholder</code> into it. You can also change the color on if it is selected or not.</p>\n<pre><code class=\"python\">class Placeholder:\n    def __init__(self,master,placeholder='',placeholdercolor='grey',color='black',**kwargs):\n        self.e = Entry(master,fg=placeholdercolor,**kwargs)\n        self.e.bind('&lt;FocusIn&gt;',self.focus_in)\n        self.e.bind('&lt;FocusOut&gt;',self.focus_out)\n        self.e.insert(0, placeholder)\n        self.placeholder = placeholder\n        self.placeholdercolor=placeholdercolor\n        self.color = color\n\n    def pack(self,side=None,**kwargs):\n        self.e.pack(side=side,**kwargs)\n\n    def place(self,side=None,**kwargs):\n        self.e.place(side=side,**kwargs)\n\n    def grid(self,column=None,**kwargs):\n        self.e.grid(column=column,**kwargs)\n\n    def focus_in(self,e):\n        if self.e.get() == self.placeholder:\n            self.e.delete(0,END)\n        self.e.configure(fg=self.color)\n\n    def focus_out(self,e):\n        if self.e.get() == '':\n            self.e.configure(fg=self.placeholdercolor)\n            self.e.delete(0,END)\n            self.e.insert(0,self.placeholder)\n</code></pre>\n", "abstract": "A working placeholder class. What this does is that it binds to <FocusIn> and <FocusOut> so that when you put focus on it if there is no text it will insert your placeholder into it. You can also change the color on if it is selected or not."}, {"id": 51067047, "score": 0, "vote": 0, "content": "<pre><code class=\"python\">from tkinter import *\n\nroot=Tk()\nroot.geometry(\"300x200+600+250\")\nroot.config(background=\"#E0FFFF\")\nroot.resizable(False,False)\n\n\ndef userText(event):\n    e1.delete(0,END)\n    usercheck=True\n\ndef passText(event):\n    e2.delete(0, END)\n    passcheck=True\n\n\n\na=StringVar()\nb=StringVar()\nusercheck=False\npasscheck=False\n\n\nLabel(root,text=\"User name\",bg=\"#E0FFFF\").place(x=20,y=50)\ne1= Entry(root,textvariable=a)\ne1.place(x=100,y=50)\ne1.insert(0,\"Enter username\")\ne1.bind(\"&lt;Button&gt;\",userText)\n\n\nLabel(root,text=\"Password\",bg=\"#E0FFFF\").place(x=20,y=95)\ne2= Entry(root,textvariable=b)\ne2.place(x=100,y=95)\ne2.insert(0,\"Enter password\")\ne2.bind(\"&lt;Button&gt;\",passText)\n\n\nroot.mainloop()\n</code></pre>\n", "abstract": ""}, {"id": 65588819, "score": 0, "vote": 0, "content": "<p>For a more compact solution than the above listed, I suggest that you create a function that would erase the text box on a click event (lambda), as shown here.</p>\n<pre><code class=\"python\">from tkinter import *   \n\ndef clear_entry(event, entry):\n    entry.delete(0, END)\n    entry.unbind('&lt;Button-1&gt;', click_event)\n\nui = Tk()\n\nentry = Entry(ui)\n\nentry.pack()\nplaceholder_text = '&lt;enter-placeholder&gt;'\nentry.insert(0, placeholder_text)\n\nentry.bind(\"&lt;Button-1&gt;\", lambda event: clear_entry(event, entry))\n\nui.mainloop()\n\n</code></pre>\n<p>The \"<code>&lt;Button-1&gt;</code>\" stands for when you left-click the entry box, so <strong>do not alter it</strong>, and once you click on the box, it will trigger the event and run the function <code>clear_entry</code>. You have to declare the function and the <code>entry</code> element before defining <code>placeholder_text</code> and using <code>entry.insert</code>. Hopefully, this is a viable solution to this problem.</p>\n", "abstract": "For a more compact solution than the above listed, I suggest that you create a function that would erase the text box on a click event (lambda), as shown here. The \"<Button-1>\" stands for when you left-click the entry box, so do not alter it, and once you click on the box, it will trigger the event and run the function clear_entry. You have to declare the function and the entry element before defining placeholder_text and using entry.insert. Hopefully, this is a viable solution to this problem."}, {"id": 73844650, "score": 0, "vote": 0, "content": "<p>Joining Nae and Stephen Lins solutions with text field</p>\n<pre><code class=\"python\">text = Text(ui)\ntext.pack()\ntext.insert('1.0', 'text placeholder')\ntext.bind(\"&lt;FocusIn&gt;\", lambda args: text.delete('1.0', 'end'))\n</code></pre>\n", "abstract": "Joining Nae and Stephen Lins solutions with text field"}]}, {"link": "https://stackoverflow.com/questions/255476/browser-based-application-or-stand-alone-gui-app", "question": {"id": "255476", "title": "Browser-based application or stand-alone GUI app?", "content": "<p>I'm sure this has been asked before, but I can't find it. </p>\n<p>What are the benefits/limitations of using a browser-based interface for a stand-alone application vs. using a normal GUI framework?</p>\n<p>I'm working on a Python program currently implement with wxPython for the GUI. The application is simply user-entry forms and dialogs. I am considering moving to PyQt because of the widgets it has (for future expansion), then I realized I could probably just use a browser to do much of the same stuff.</p>\n<p>The application currently doesn't require Internet access, though it's a possibility in the future. I was thinking of using <a href=\"http://karrigell.sourceforge.net/\" rel=\"noreferrer\">Karrigell</a> for the web framework if I go browser-based.</p>\n<hr/>\n<p><strong>Edit</strong> For clarification, as of right now the application would be browser-based, not web-based. All the information would be stored locally on the client computer; no server calls would need to be made and no Internet access required (it may come later though). It would simply be a browser GUI instead of a wxPython/PyQt GUI. Hope that makes sense.</p>\n", "abstract": "I'm sure this has been asked before, but I can't find it.  What are the benefits/limitations of using a browser-based interface for a stand-alone application vs. using a normal GUI framework? I'm working on a Python program currently implement with wxPython for the GUI. The application is simply user-entry forms and dialogs. I am considering moving to PyQt because of the widgets it has (for future expansion), then I realized I could probably just use a browser to do much of the same stuff. The application currently doesn't require Internet access, though it's a possibility in the future. I was thinking of using Karrigell for the web framework if I go browser-based. Edit For clarification, as of right now the application would be browser-based, not web-based. All the information would be stored locally on the client computer; no server calls would need to be made and no Internet access required (it may come later though). It would simply be a browser GUI instead of a wxPython/PyQt GUI. Hope that makes sense."}, "answers": [{"id": 255508, "score": 16, "vote": 0, "content": "<p>Let's pretend for a moment that the development/deployment/maintenance effort/cost is equal and we look at it from the application user's perspective:</p>\n<p><em>Which UI is the user going to find more useful?</em></p>\n<p>in terms of</p>\n<ul>\n<li>Ease of use</li>\n<li>Responsiveness</li>\n<li>Familiar navigation/usage patterns</li>\n<li>Most like other tools/applications in use on the platform (ie, native)</li>\n</ul>\n<p>I understand that \"useful\" is subjective.  I personally would never use (as a user, not developer) a web interface again if I could get away with it.  I <strong><em>hate</em></strong> them.</p>\n<p>There are some applications that just don't make sense to develop as browser based apps.</p>\n<p>From a development perspective</p>\n<ul>\n<li>No two browsers available today render <em>exactly</em> the same.</li>\n<li>Even with Ajax, javascript and dynamic, responsive interfaces are non-trivial to implement/debug.</li>\n</ul>\n<p>There are many, many standalone GUI applications that are just terrible, no argument.  Development/deployment and maintenance for a multi-platform GUI is non-trivial.</p>\n<p>Developing good user-interfaces is hard, period.</p>\n<p>The reality is that I've made my living over the last 10 years developing mostly web based applications, because they're faster to develop, easier to deploy and provide enough utility that people will use them if they have to.</p>\n<p>I don't believe that most users would use a web interface if given an alternative.</p>\n<p>IMNSHO</p>\n", "abstract": "Let's pretend for a moment that the development/deployment/maintenance effort/cost is equal and we look at it from the application user's perspective: Which UI is the user going to find more useful? in terms of I understand that \"useful\" is subjective.  I personally would never use (as a user, not developer) a web interface again if I could get away with it.  I hate them. There are some applications that just don't make sense to develop as browser based apps. From a development perspective There are many, many standalone GUI applications that are just terrible, no argument.  Development/deployment and maintenance for a multi-platform GUI is non-trivial. Developing good user-interfaces is hard, period. The reality is that I've made my living over the last 10 years developing mostly web based applications, because they're faster to develop, easier to deploy and provide enough utility that people will use them if they have to. I don't believe that most users would use a web interface if given an alternative. IMNSHO"}, {"id": 255481, "score": 15, "vote": 0, "content": "<p>The obvious advantages to browser-based:</p>\n<ul>\n<li>you can present the same UI regardless of platform</li>\n<li>you can upgrade the application easily, and all users have the same version of the app running</li>\n<li>you know the environment that your application will be running in (the server hardware/OS) which makes for easier testing and support compared to the multitude of operating system/hardware configurations that a GUI app will be installed on.</li>\n</ul>\n<p>And for GUI based:</p>\n<ul>\n<li>some applications (e.g.: image editing) arguably work better in a native GUI application</li>\n<li>doesn't require network access</li>\n</ul>\n<p>Also see my comments on <a href=\"https://stackoverflow.com/questions/115501/is-ruby-any-good-for-gui-development#115638\">this question</a>:</p>\n<blockquote>\n<p>Cross-platform GUIs are an age-old problem. Qt, GTK, wxWindows, Java AWT, Java Swing, XUL -- they all suffer from the same problem: the resulting GUI doesn't look native on every platform. Worse still, every platform has a slightly different look and <strong>feel</strong>, so even if you were somehow able to get a toolkit that looked native on every platform, you'd have to somehow code your app to feel native on each platform.</p>\n<p>It comes down to a decision: do you want to minimise development effort and have a GUI that doesn't look and feel quite right on each platform, or do you want to maximise the user experience? If you choose the second option, you'll need to develop a common backend and a custom UI for each platform. <em>[edit: or use a web application.]</em></p>\n</blockquote>\n<p>Another thought I just had: you also need to consider the kind of data that your application manipulates and where it is stored, and how the users will feel about that. People are obviously okay having their facebook profile data stored on a webserver, but they might feel differently if you're writing a finance application like MYOB and you want to store all their personal financial details on your server. You might be able to get that to work, but it would require a lot of effort to implement the required security and to assure the userbase that their data is safe. In that situation you might decide that the overall effort is lower if you go with a native GUI app.</p>\n", "abstract": "The obvious advantages to browser-based: And for GUI based: Also see my comments on this question: Cross-platform GUIs are an age-old problem. Qt, GTK, wxWindows, Java AWT, Java Swing, XUL -- they all suffer from the same problem: the resulting GUI doesn't look native on every platform. Worse still, every platform has a slightly different look and feel, so even if you were somehow able to get a toolkit that looked native on every platform, you'd have to somehow code your app to feel native on each platform. It comes down to a decision: do you want to minimise development effort and have a GUI that doesn't look and feel quite right on each platform, or do you want to maximise the user experience? If you choose the second option, you'll need to develop a common backend and a custom UI for each platform. [edit: or use a web application.] Another thought I just had: you also need to consider the kind of data that your application manipulates and where it is stored, and how the users will feel about that. People are obviously okay having their facebook profile data stored on a webserver, but they might feel differently if you're writing a finance application like MYOB and you want to store all their personal financial details on your server. You might be able to get that to work, but it would require a lot of effort to implement the required security and to assure the userbase that their data is safe. In that situation you might decide that the overall effort is lower if you go with a native GUI app."}, {"id": 255491, "score": 5, "vote": 0, "content": "<p>When it comes to simple data entry using user-entry forms, I'd argue that using a browser-based solution would probably be easier and faster to develop.</p>\n<p>Unless your core feature is the interface itself (\"<em>If it's a core business function -- do it yourself, no matter what.</em>\" , see <a href=\"http://www.joelonsoftware.com/articles/fog0000000007.html\" rel=\"noreferrer\">In Defense of Not-Invented-Here Syndrome</a> from <a href=\"http://www.joelonsoftware.com/\" rel=\"noreferrer\">Joel on Software</a>), I feel that the browser will be able to perform the form rendering and handling better than having to develop a GUI from scratch. Also, not to mention the it would take a much longer time to code a GUI as opposed to generating HTML forms and processing them after they are POSTed by the browser.</p>\n<p>What I found in the past was that I was asked by a friend to write an application to enter results from a survey. At first, I was writing a Java applet to display the survey itself with all the radio boxes, when it hit me that I would be better off writing a simple HTTP server which would generate the forms and process them.</p>\n<p>What it really comes down is to whether you are either developing:</p>\n<ol>\n<li>the user interface</li>\n<li>data-entry application</li>\n</ol>\n<p>If you are making a data-entry application, then leave the user interface to the browser, and focus on your core functionality.</p>\n", "abstract": "When it comes to simple data entry using user-entry forms, I'd argue that using a browser-based solution would probably be easier and faster to develop. Unless your core feature is the interface itself (\"If it's a core business function -- do it yourself, no matter what.\" , see In Defense of Not-Invented-Here Syndrome from Joel on Software), I feel that the browser will be able to perform the form rendering and handling better than having to develop a GUI from scratch. Also, not to mention the it would take a much longer time to code a GUI as opposed to generating HTML forms and processing them after they are POSTed by the browser. What I found in the past was that I was asked by a friend to write an application to enter results from a survey. At first, I was writing a Java applet to display the survey itself with all the radio boxes, when it hit me that I would be better off writing a simple HTTP server which would generate the forms and process them. What it really comes down is to whether you are either developing: If you are making a data-entry application, then leave the user interface to the browser, and focus on your core functionality."}, {"id": 255501, "score": 3, "vote": 0, "content": "<p>Benefits of browser-based interface:</p>\n<ul>\n<li>Easier to manage: no installation required on user machines, upgrades need only be performed on server side and are immediately available to all users.  Data backup can be performed on a single machine as data won't be spread out across multiple clients.</li>\n<li>Application can be accessed from any machine with a browser.</li>\n<li>Can easily support multiple platforms consistently.</li>\n<li>Memory and CPU requirements may be considerably less on the client side as intensive operations can be performed on the server.</li>\n<li>Increased security: data is stored on a single server instead of multiple client machines and access can be better controlled.</li>\n<li>Many other benefits of a centralized environment including logging, data entered from multiple sources can immediately be available from other clients, etc.</li>\n<li>In my experience, it is often easier to debug and faster to develop web-based solutions.</li>\n</ul>\n<p>Benefits of GUI-based interface:</p>\n<ul>\n<li>May be easier to design a more responsive, fluid interface.</li>\n<li>Can take advantage of OS-specific functionality that may not be available via a browser.</li>\n<li>Doesn't necessarily require network access.</li>\n<li>Don't need to worry about browser compatibility issues.</li>\n<li>No single point of failure if server goes down or becomes unavailable.</li>\n</ul>\n", "abstract": "Benefits of browser-based interface: Benefits of GUI-based interface:"}, {"id": 255505, "score": 2, "vote": 0, "content": "<p>There's pretty good evidence that the trump-card issue in most cases is deployability and supportability. Browser apps are lower overhead in general; implementing and supporting more than a couple dozen users can end up consuming substantial support resources.</p>\n<p>I saw a table a year or two ago that showed something like:</p>\n<p>\n<br/><br/>\n<br/>UI quality                             -        Desktop\n<br/>Granularity of validation               -       Desktop\n<br/>Responsiveness                          -       Desktop\n<br/>User acceptance                         -       Desktop\n<br/>  etc.                                  -       Desktop\n<br/>  etc.                                  -       Desktop\n<br/>Install &amp; Support         -   Browser\n\n<br/>and the Browser wins.</p>\n", "abstract": "There's pretty good evidence that the trump-card issue in most cases is deployability and supportability. Browser apps are lower overhead in general; implementing and supporting more than a couple dozen users can end up consuming substantial support resources. I saw a table a year or two ago that showed something like: \n\nUI quality                             -        Desktop\nGranularity of validation               -       Desktop\nResponsiveness                          -       Desktop\nUser acceptance                         -       Desktop\n  etc.                                  -       Desktop\n  etc.                                  -       Desktop\nInstall & Support         -   Browser\n\nand the Browser wins."}, {"id": 255514, "score": 2, "vote": 0, "content": "<p>For this task (form-based text entry) a browser is great. You don't need anything that being a desktop app will give you (speed, flexibility)</p>\n<p>There are draw-backs to being a web-application, such as..</p>\n<p><strong>It's a web-page. There are things you just cannot (easily) do</strong></p>\n<p>You cannot easily map the ctrl+j key to do something. For example: Google Spreadsheet tries to map keyboard shortcuts and works  <em>most</em> of the time, sometimes the browsers default handling of the shortcut takes over..</p>\n<p>You cannot make Growl alerts (An OS X notification framework). You cannot access the filesystem. It's difficult to allow access while offline.</p>\n<p><strong>Javascript is very CPU-heavy.</strong></p>\n<p>Try resizing a Google Spreadsheet document, or load a page on Digg (a very javascript heavy site) - the browsers CPU usage will be at 100% for a while.. Doing the same in a native desktop application is trivial</p>\n<p><strong>When you perform upgrades, you <em>force</em> them on all your users.</strong>\nWith a desktop application, they have the choice of not upgrading. For example, I didn't like one of the Google Reader upgrades, but I was stuck. Using NetNewsWire (a desktop application), if I don't like a change in the newest version, I can quite easily keep using this one (or try it, and downgrade)</p>\n<p><strong>You web-server <em>must</em> be accessible at all times, for ever</strong></p>\n<p>If the server disappears, your users have no recourse. The application is gone. If it's down for 10 minutes, they cannot use it.</p>\n<hr/>\n<p>With your application, while I'm not too sure what it is, none of the above seems like its going to be an issue.</p>\n<p><em>\"It's a web -page\"</em>: Forms and dialogue boxes are easy to do in HTML and javascript (or even using server-side scripting, for example <code>&lt;?php if($_POST[\"email\"] ==\"\"){echo(\"Are you sure you want to continue?); ?&gt;</code>)</p>\n<p><em>\"Javascript is very CPU-heavy\"</em>: Doesn't sound like your application will require any Javascript (maybe some client-side input-validation when the user clicks \"Submit\", to warn them about any input errors?)</p>\n<p><em>\"Forced upgrades\"</em>: I imagine this may be desirable, as you wouldn't want users inputing data in the old way.</p>\n<p><em>\"Server must be accessible\"</em>: Could be an issue, but I don't think it'll be a large one.. Say you want to store all the users data in a central database, this issue becomes inescapable anyway - keeping a web and database server running isn't much more work than only a database (for the GUIs to connect to)</p>\n<p>Also, you get the benefits others have posted - you develop it once, and it runs identically on every operating system that can run a sane browser.</p>\n", "abstract": "For this task (form-based text entry) a browser is great. You don't need anything that being a desktop app will give you (speed, flexibility) There are draw-backs to being a web-application, such as.. It's a web-page. There are things you just cannot (easily) do You cannot easily map the ctrl+j key to do something. For example: Google Spreadsheet tries to map keyboard shortcuts and works  most of the time, sometimes the browsers default handling of the shortcut takes over.. You cannot make Growl alerts (An OS X notification framework). You cannot access the filesystem. It's difficult to allow access while offline. Javascript is very CPU-heavy. Try resizing a Google Spreadsheet document, or load a page on Digg (a very javascript heavy site) - the browsers CPU usage will be at 100% for a while.. Doing the same in a native desktop application is trivial When you perform upgrades, you force them on all your users.\nWith a desktop application, they have the choice of not upgrading. For example, I didn't like one of the Google Reader upgrades, but I was stuck. Using NetNewsWire (a desktop application), if I don't like a change in the newest version, I can quite easily keep using this one (or try it, and downgrade) You web-server must be accessible at all times, for ever If the server disappears, your users have no recourse. The application is gone. If it's down for 10 minutes, they cannot use it. With your application, while I'm not too sure what it is, none of the above seems like its going to be an issue. \"It's a web -page\": Forms and dialogue boxes are easy to do in HTML and javascript (or even using server-side scripting, for example <?php if($_POST[\"email\"] ==\"\"){echo(\"Are you sure you want to continue?); ?>) \"Javascript is very CPU-heavy\": Doesn't sound like your application will require any Javascript (maybe some client-side input-validation when the user clicks \"Submit\", to warn them about any input errors?) \"Forced upgrades\": I imagine this may be desirable, as you wouldn't want users inputing data in the old way. \"Server must be accessible\": Could be an issue, but I don't think it'll be a large one.. Say you want to store all the users data in a central database, this issue becomes inescapable anyway - keeping a web and database server running isn't much more work than only a database (for the GUIs to connect to) Also, you get the benefits others have posted - you develop it once, and it runs identically on every operating system that can run a sane browser."}, {"id": 266145, "score": 1, "vote": 0, "content": "<p>One of the things I hate about web based UIs is the fact that they run inside another window. Meaning, you have controls -- maybe dozens of them -- that have nothing to do with your application. From a usability point of view this can be confusing though most of us have adapted by \"tuning out\" the extra stuff. </p>\n<p>As I look at my browser window as I type this, the window is perhaps 12 inches tall, but the window in which I type is only maybe 3 inches. And out of that 12 inches overall, perhaps two full inches are taken up with browser toolbars, tabs, rows of bookmarks and the statusbar, none of which have anything to do with the web app I'm interacting with. There's a lot of wasted space (the edit window isn't as wide as the window as a whole, for example), space filled with stuff I don't need, etc. Some of the most fundamental controls (back button, I'm looking at you) can completely break poorly designed web applications.</p>\n<p>Not to mention the fact that if I type a sufficiently long response I now end up with two sets of scrollbars. stackoverflow.com partially addresses that by giving me a resizable text area but I still have to interact with the inner scrollbar to scroll the text I'm editing, then scroll the whole window up or down to access the app controls at the top or bottom of the editing window.</p>\n<p>All in all, a web based application just can't compare to the usability of a desktop application. For me, then, the question simply becomes \"are you more interested in usability, or in making your (as the developer) life easier\".</p>\n<p>If you want usability, go with a desktop application, hands down. If you're concerned with deployment and support a web app is something to consider, but there are still many easy ways to deploy desktop apps, including creating apps that can update themselves over the net at runtime.</p>\n", "abstract": "One of the things I hate about web based UIs is the fact that they run inside another window. Meaning, you have controls -- maybe dozens of them -- that have nothing to do with your application. From a usability point of view this can be confusing though most of us have adapted by \"tuning out\" the extra stuff.  As I look at my browser window as I type this, the window is perhaps 12 inches tall, but the window in which I type is only maybe 3 inches. And out of that 12 inches overall, perhaps two full inches are taken up with browser toolbars, tabs, rows of bookmarks and the statusbar, none of which have anything to do with the web app I'm interacting with. There's a lot of wasted space (the edit window isn't as wide as the window as a whole, for example), space filled with stuff I don't need, etc. Some of the most fundamental controls (back button, I'm looking at you) can completely break poorly designed web applications. Not to mention the fact that if I type a sufficiently long response I now end up with two sets of scrollbars. stackoverflow.com partially addresses that by giving me a resizable text area but I still have to interact with the inner scrollbar to scroll the text I'm editing, then scroll the whole window up or down to access the app controls at the top or bottom of the editing window. All in all, a web based application just can't compare to the usability of a desktop application. For me, then, the question simply becomes \"are you more interested in usability, or in making your (as the developer) life easier\". If you want usability, go with a desktop application, hands down. If you're concerned with deployment and support a web app is something to consider, but there are still many easy ways to deploy desktop apps, including creating apps that can update themselves over the net at runtime."}, {"id": 255484, "score": 0, "vote": 0, "content": "<p>Browsers can be accessed anywhere with internet and you deploy it on the server. The desktop app has to be deployed to their computers and each computer somehow has its own uniqueness even with same OS and same version. This could bring you lots of hassles.\nGo for web.</p>\n", "abstract": "Browsers can be accessed anywhere with internet and you deploy it on the server. The desktop app has to be deployed to their computers and each computer somehow has its own uniqueness even with same OS and same version. This could bring you lots of hassles.\nGo for web."}, {"id": 256770, "score": 0, "vote": 0, "content": "<p>Everything has advantages and disavantages, but:</p>\n<p><em>I have yet to use a single browser-based application on localhost, intranet, or internet that feels nice to use, is responsive, and who's user interface isn't strictly limited by the limitations of HTML/JS/CSS.</em></p>\n<p>Note: Flash/Java-based UI is an exception (but that's even worse in some regards and I don't think it's really what you are talking about here).</p>\n", "abstract": "Everything has advantages and disavantages, but: I have yet to use a single browser-based application on localhost, intranet, or internet that feels nice to use, is responsive, and who's user interface isn't strictly limited by the limitations of HTML/JS/CSS. Note: Flash/Java-based UI is an exception (but that's even worse in some regards and I don't think it's really what you are talking about here)."}, {"id": 574535, "score": 0, "vote": 0, "content": "<p>I think the browser based UI concept is here to stay. There is nothing more portalble than the web itself, and as long as one stays within the boundaries of decent javascript libraries...the rendering would be almost the same. Plus since the rendering is not your headache, you can concern  yourself more with developing the business logic itself.</p>\n<p>I am all for it...</p>\n", "abstract": "I think the browser based UI concept is here to stay. There is nothing more portalble than the web itself, and as long as one stays within the boundaries of decent javascript libraries...the rendering would be almost the same. Plus since the rendering is not your headache, you can concern  yourself more with developing the business logic itself. I am all for it..."}, {"id": 2707352, "score": 0, "vote": 0, "content": "<p>The rich client GUI will generally be faster and better integrated with the look and feel the user is accustomed to deal with - this does not only mean bells and whistles, but also means a lot of time saving features like keyboard shortcuts.</p>\n<p>The web based UI will be more portable since does not bound the development to a single platform, and if the application runs in remote it is easier to update and to test all of it (excluding the GUI...) on a consistent environment (your server).\nBut you should understand that while all of that is great and really groundbreaking, it also comes with some serious drawbacks.\nYou should not only debug the application under all the target systems, but also under each single browser running on each single target system... and don't forget many versions of the same browser may coexists for some time, and that each browser's settings will be probably running different sets (and versions) of popular plugins which makes it behave differently, and probably network settings will be customized by users.\nIf the application is in remote it opens a lot of interesting new problem, starting from different ISP that will drop different problems in the middle, or services downtimes due to network problems of you server, the user's machines or anywhere in the middle.\nA remote application is not an option for all the users in countries where the network service is of low quality, or is not reasonably priced; the same is true for you: you can start providing such a service only if in your country bandwidth is reasonable and reasonably priced.\nAnd if the application has to do something nontrivial on the user's system, you will be probably doomed in creating a lot of platform dependent code anyway.</p>\n<p>As bottom line, today there are advantages and disadvantages in any of the two solutions.\nThere are some applications that really need to be developed under the rich client model, and there are applications that really need to be developed under the web based paradigm.\nIt's good to have both the options, it is critical to have a clear idea of what is the way fitting best our development / deployment / support strategy, and, I may add, it is silly to go after one or the other as if it is the definitive silver bullet following the fashion of the moment.</p>\n", "abstract": "The rich client GUI will generally be faster and better integrated with the look and feel the user is accustomed to deal with - this does not only mean bells and whistles, but also means a lot of time saving features like keyboard shortcuts. The web based UI will be more portable since does not bound the development to a single platform, and if the application runs in remote it is easier to update and to test all of it (excluding the GUI...) on a consistent environment (your server).\nBut you should understand that while all of that is great and really groundbreaking, it also comes with some serious drawbacks.\nYou should not only debug the application under all the target systems, but also under each single browser running on each single target system... and don't forget many versions of the same browser may coexists for some time, and that each browser's settings will be probably running different sets (and versions) of popular plugins which makes it behave differently, and probably network settings will be customized by users.\nIf the application is in remote it opens a lot of interesting new problem, starting from different ISP that will drop different problems in the middle, or services downtimes due to network problems of you server, the user's machines or anywhere in the middle.\nA remote application is not an option for all the users in countries where the network service is of low quality, or is not reasonably priced; the same is true for you: you can start providing such a service only if in your country bandwidth is reasonable and reasonably priced.\nAnd if the application has to do something nontrivial on the user's system, you will be probably doomed in creating a lot of platform dependent code anyway. As bottom line, today there are advantages and disadvantages in any of the two solutions.\nThere are some applications that really need to be developed under the rich client model, and there are applications that really need to be developed under the web based paradigm.\nIt's good to have both the options, it is critical to have a clear idea of what is the way fitting best our development / deployment / support strategy, and, I may add, it is silly to go after one or the other as if it is the definitive silver bullet following the fashion of the moment."}, {"id": 17340205, "score": 0, "vote": 0, "content": "<p>My solution is this</p>\n<ol>\n<li>Website applications obviously go on browsers</li>\n<li>Networked applications that do not need accessing client's computer goes by browser</li>\n<li>Any application that need to be accessed by more than a client at a time goes by browser</li>\n<li>Applications that will be used per client with no obvious need for network stays with gui and this may include software that needs a lot of security on its use (same security can be addressed for browser based though).</li>\n</ol>\n<p>This is something learnt through the hard way. One main reason for this is that customers find it easier to install and manage browser based apps much easier than gui based eg where using JavaWebStart means the client will need to have a minimum JRE and their likes whereas the browser based only needs a link. </p>\n<p>IN all the decision is really yours!. As a Java developer using JavaFX and Swing can solve my problem with this issue.</p>\n", "abstract": "My solution is this This is something learnt through the hard way. One main reason for this is that customers find it easier to install and manage browser based apps much easier than gui based eg where using JavaWebStart means the client will need to have a minimum JRE and their likes whereas the browser based only needs a link.  IN all the decision is really yours!. As a Java developer using JavaFX and Swing can solve my problem with this issue."}]}, {"link": "https://stackoverflow.com/questions/14817210/using-buttons-in-tkinter-to-navigate-to-different-pages-of-the-application", "question": {"id": "14817210", "title": "Using buttons in Tkinter to navigate to different pages of the application?", "content": "<p>I have quite a simple question here. In Tkinter (python), I was wondering who to use a button to go to different pages of my application, e.g a register page, and a login page. I am aware that GUI does not have 'pages' like websites do, I've seen a few different ways, but what is the best way to make links to different pages?</p>\n", "abstract": "I have quite a simple question here. In Tkinter (python), I was wondering who to use a button to go to different pages of my application, e.g a register page, and a login page. I am aware that GUI does not have 'pages' like websites do, I've seen a few different ways, but what is the best way to make links to different pages?"}, "answers": [{"id": 14819141, "score": 51, "vote": 0, "content": "<p>Make each page a frame. Then, all your buttons need to do is hide whatever is visible, then make the desired frame visible.</p>\n<p>A simple method to do this is to stack the frames on top of each other (this is one time when <code>place</code> makes sense) and then ,<code>lift()</code> the frame you want to be visible. This technique works best when all pages are the same size; in fact, it requires that you explicitly set the size of containing frame.</p>\n<p>The following is a contrived example. This isn't the only way to solve the problem, just proof that it's not a particularly hard problem to solve:</p>\n<pre><code class=\"python\">import Tkinter as tk\n\nclass Page(tk.Frame):\n    def __init__(self, *args, **kwargs):\n        tk.Frame.__init__(self, *args, **kwargs)\n    def show(self):\n        self.lift()\n\nclass Page1(Page):\n   def __init__(self, *args, **kwargs):\n       Page.__init__(self, *args, **kwargs)\n       label = tk.Label(self, text=\"This is page 1\")\n       label.pack(side=\"top\", fill=\"both\", expand=True)\n\nclass Page2(Page):\n   def __init__(self, *args, **kwargs):\n       Page.__init__(self, *args, **kwargs)\n       label = tk.Label(self, text=\"This is page 2\")\n       label.pack(side=\"top\", fill=\"both\", expand=True)\n\nclass Page3(Page):\n   def __init__(self, *args, **kwargs):\n       Page.__init__(self, *args, **kwargs)\n       label = tk.Label(self, text=\"This is page 3\")\n       label.pack(side=\"top\", fill=\"both\", expand=True)\n\nclass MainView(tk.Frame):\n    def __init__(self, *args, **kwargs):\n        tk.Frame.__init__(self, *args, **kwargs)\n        p1 = Page1(self)\n        p2 = Page2(self)\n        p3 = Page3(self)\n\n        buttonframe = tk.Frame(self)\n        container = tk.Frame(self)\n        buttonframe.pack(side=\"top\", fill=\"x\", expand=False)\n        container.pack(side=\"top\", fill=\"both\", expand=True)\n\n        p1.place(in_=container, x=0, y=0, relwidth=1, relheight=1)\n        p2.place(in_=container, x=0, y=0, relwidth=1, relheight=1)\n        p3.place(in_=container, x=0, y=0, relwidth=1, relheight=1)\n\n        b1 = tk.Button(buttonframe, text=\"Page 1\", command=p1.show)\n        b2 = tk.Button(buttonframe, text=\"Page 2\", command=p2.show)\n        b3 = tk.Button(buttonframe, text=\"Page 3\", command=p3.show)\n\n        b1.pack(side=\"left\")\n        b2.pack(side=\"left\")\n        b3.pack(side=\"left\")\n\n        p1.show()\n\nif __name__ == \"__main__\":\n    root = tk.Tk()\n    main = MainView(root)\n    main.pack(side=\"top\", fill=\"both\", expand=True)\n    root.wm_geometry(\"400x400\")\n    root.mainloop()\n</code></pre>\n", "abstract": "Make each page a frame. Then, all your buttons need to do is hide whatever is visible, then make the desired frame visible. A simple method to do this is to stack the frames on top of each other (this is one time when place makes sense) and then ,lift() the frame you want to be visible. This technique works best when all pages are the same size; in fact, it requires that you explicitly set the size of containing frame. The following is a contrived example. This isn't the only way to solve the problem, just proof that it's not a particularly hard problem to solve:"}, {"id": 51118034, "score": 7, "vote": 0, "content": "<p>Could you do something like this?</p>\n<pre><code class=\"python\">import tkinter\n\ndef page1():\n    page2text.pack_forget()\n    page1text.pack()\n\ndef page2():\n    page1text.pack_forget()\n    page2text.pack()\n\nwindow = tkinter.Tk()\n\npage1btn = tkinter.Button(window, text=\"Page 1\", command=page1)\npage2btn = tkinter.Button(window, text=\"Page 2\", command=page2)\n\npage1text = tkinter.Label(window, text=\"This is page 1\")\npage2text = tkinter.Label(window, text=\"This is page 2\")\n\npage1btn.pack()\npage2btn.pack()\npage1text.pack()\n</code></pre>\n<p>It seems a lot simpler to me.</p>\n", "abstract": "Could you do something like this? It seems a lot simpler to me."}, {"id": 59266757, "score": -2, "vote": 0, "content": "<pre><code class=\"python\">import tkinter as tk\nroot=tk.Tk()\nroot.geometry(\"360x360\")\n\nframe=tk.Frame(root,bg='lightblue')\nframe.place(relx=0.2,rely=0.2,relheight=0.6,relwidth=0.6)\n\ndef page1():\n    label=tk.Label(frame,text='this is the page1')\n    label.place(relx=0.3,rely=0.4)\n\ndef page2():\n    label=tk.Label(frame,text='this is the page2')\n    label.place(relx=0.3,rely=0.4)\n\ndef page3():\n    label=tk.Label(frame,text='this is the page3')\n    label.place(relx=0.3,rely=0.4)\n\nbt=tk.Button(root,text='page1',command=page1)\nbt.grid(column=0,row=0)\n\nbt1=tk.Button(root,text='page2',command=page2)\nbt1.grid(row=0,column=1)\n\nbt2=tk.Button(root,text='page3',command=page3)\nbt2.grid(row=0,column=2)\n\nroot.mainloop()`\n</code></pre>\n", "abstract": ""}]}, {"link": "https://stackoverflow.com/questions/4401202/when-to-use-pack-or-grid-layouts-in-tkinter", "question": {"id": "4401202", "title": "When to use pack or grid layouts in tkinter?", "content": "<p>Are there any best practice tips regarding when one should use pack vs. grid for their layouts?</p>\n<p>From what I've been reading via google, the concencus seems to be that grid can handle any pack scenario but not vice-versa.</p>\n<p>To start the conversation, it appears that one use case that favors grid vs. pack is when one wants to show/hide widgets.</p>\n", "abstract": "Are there any best practice tips regarding when one should use pack vs. grid for their layouts? From what I've been reading via google, the concencus seems to be that grid can handle any pack scenario but not vice-versa. To start the conversation, it appears that one use case that favors grid vs. pack is when one wants to show/hide widgets."}, "answers": [{"id": 4402589, "score": 19, "vote": 0, "content": "<p>Neither is intrinsically better than the other. Each have strengths and weaknesses. Learn what those are and the choice of which to use becomes obvious.</p>\n<p><code>grid</code> is considerably easier to use if you need to lay things out in a grid. <code>pack</code> is generally easier to use if all you need to do is put some widgets in a single row or single column. There's a whole lot of gray area in-between where neither is necessarily better than the other.</p>\n<p>The other thing to consider is what you said in your question: if you want to show and hide widgets at run-time, <code>grid</code> is probably the best choice because of the <code>grid_remove</code> method which remembers the values of all of the configured attributes in case you want to re-add the widget. </p>\n<p>Personally, my first choice is always to use <code>pack</code> because I first learned Tk back when there was no <code>grid</code> command. If I can't do it easily in <code>pack</code>, or if I'm very clearly laying things out in a grid, I'll use <code>grid</code>.</p>\n", "abstract": "Neither is intrinsically better than the other. Each have strengths and weaknesses. Learn what those are and the choice of which to use becomes obvious. grid is considerably easier to use if you need to lay things out in a grid. pack is generally easier to use if all you need to do is put some widgets in a single row or single column. There's a whole lot of gray area in-between where neither is necessarily better than the other. The other thing to consider is what you said in your question: if you want to show and hide widgets at run-time, grid is probably the best choice because of the grid_remove method which remembers the values of all of the configured attributes in case you want to re-add the widget.  Personally, my first choice is always to use pack because I first learned Tk back when there was no grid command. If I can't do it easily in pack, or if I'm very clearly laying things out in a grid, I'll use grid."}, {"id": 4411675, "score": 10, "vote": 0, "content": "<p>I always recommend grid over pack for polished applications.  There are only a few edge cases where pack is easier and fits the bill (everything in one row or col).  grid has better \"composability\" (e.g. megawidgets or gridding elements of gridded elements).  The reasons to prefer grid are the extra fine-tuning options that it provides.  The use of weight (which effects growing and shrinking btw), minsize and maxsize, as well as convenience features like enforcing uniform rows/columns.</p>\n<p>A fully gridded app of any size will use (significantly) fewer frames than an equivalent packed app, and have better shrink/expand control over inner elements.</p>\n<p>BTW, both pack and grid can show/hide sub-elements, though the syntax differs slightly between the two.  Grid is just slightly better because 'remove' (rather than 'forget') will remember the grid options on the slave widget.</p>\n", "abstract": "I always recommend grid over pack for polished applications.  There are only a few edge cases where pack is easier and fits the bill (everything in one row or col).  grid has better \"composability\" (e.g. megawidgets or gridding elements of gridded elements).  The reasons to prefer grid are the extra fine-tuning options that it provides.  The use of weight (which effects growing and shrinking btw), minsize and maxsize, as well as convenience features like enforcing uniform rows/columns. A fully gridded app of any size will use (significantly) fewer frames than an equivalent packed app, and have better shrink/expand control over inner elements. BTW, both pack and grid can show/hide sub-elements, though the syntax differs slightly between the two.  Grid is just slightly better because 'remove' (rather than 'forget') will remember the grid options on the slave widget."}, {"id": 4401215, "score": 2, "vote": 0, "content": "<p>I personally just think grid is a lot easier to work with, so I would use that. Of course, you've probably read the one thing you should never do is try to use both <s>at the same time</s> in the same container. Thank you Bryan Oakley for making that distinction.</p>\n", "abstract": "I personally just think grid is a lot easier to work with, so I would use that. Of course, you've probably read the one thing you should never do is try to use both at the same time in the same container. Thank you Bryan Oakley for making that distinction."}]}, {"link": "https://stackoverflow.com/questions/4008649/qlistwidget-and-multiple-selection", "question": {"id": "4008649", "title": "QListWidget and Multiple Selection", "content": "<p>I have a regular <code>QListWidget</code> with couple of signals and slots hookedup. Everything works as I expect. I can update, retrieve, clear etc.</p>\n<p>But the UI wont support multiple selections.</p>\n<p>How do I 'enable' multiple selections for <code>QListWidget</code>? My limited experience with PyQt tells me I need to create a custom <code>QListWidget</code> by subclassing .. but what next?</p>\n<p>Google gave me C++ answers but I'm looking for Python</p>\n<p><a href=\"http://www.qtforum.org/article/26320/qlistwidget-multiple-selection.html\" rel=\"noreferrer\">http://www.qtforum.org/article/26320/qlistwidget-multiple-selection.html</a></p>\n<p><a href=\"http://www.qtcentre.org/threads/11721-QListWidget-multi-selection\" rel=\"noreferrer\">http://www.qtcentre.org/threads/11721-QListWidget-multi-selection</a></p>\n", "abstract": "I have a regular QListWidget with couple of signals and slots hookedup. Everything works as I expect. I can update, retrieve, clear etc. But the UI wont support multiple selections. How do I 'enable' multiple selections for QListWidget? My limited experience with PyQt tells me I need to create a custom QListWidget by subclassing .. but what next? Google gave me C++ answers but I'm looking for Python http://www.qtforum.org/article/26320/qlistwidget-multiple-selection.html http://www.qtcentre.org/threads/11721-QListWidget-multi-selection"}, "answers": [{"id": 4009709, "score": 34, "vote": 0, "content": "<p>Unfortunately I can't help with the Python specific syntax but you don't need to create any subclasses. </p>\n<p>After your <code>QListWidget</code> is created, call <code>setSelectionMode()</code> with one of the multiple selection types passed in, probably <code>QAbstractItemView::ExtendedSelection</code> is the one you want. There are a few variations on this mode that you may want to look at.</p>\n<p>In your slot for the <code>itemSelectionChanged()</code> signal, call <code>selectedItems()</code> to get a <code>QList</code> of <code>QListWidgetItem</code> pointers.</p>\n", "abstract": "Unfortunately I can't help with the Python specific syntax but you don't need to create any subclasses.  After your QListWidget is created, call setSelectionMode() with one of the multiple selection types passed in, probably QAbstractItemView::ExtendedSelection is the one you want. There are a few variations on this mode that you may want to look at. In your slot for the itemSelectionChanged() signal, call selectedItems() to get a QList of QListWidgetItem pointers."}, {"id": 24022216, "score": 30, "vote": 0, "content": "<p>For PyQT4 it's</p>\n<pre><code class=\"python\">QListWidget.setSelectionMode(QtGui.QAbstractItemView.ExtendedSelection)\n</code></pre>\n", "abstract": "For PyQT4 it's"}, {"id": 52081334, "score": 13, "vote": 0, "content": "<p>Example of getting multiple selected values in listWidget with multiple selection.\n</p>\n<pre><code class=\"python\">from PyQt5 import QtWidgets, QtCore\nclass Test(QtWidgets.QDialog):\n    def __init__(self, parent=None):\n        super(Test, self).__init__(parent)\n        self.layout = QtWidgets.QVBoxLayout()\n        self.listWidget = QtWidgets.QListWidget()\n        self.listWidget.setSelectionMode(\n            QtWidgets.QAbstractItemView.ExtendedSelection\n        )\n        self.listWidget.setGeometry(QtCore.QRect(10, 10, 211, 291))\n        for i in range(10):\n            item = QtWidgets.QListWidgetItem(\"Item %i\" % i)\n            self.listWidget.addItem(item)\n        self.listWidget.itemClicked.connect(self.printItemText)\n        self.layout.addWidget(self.listWidget)\n        self.setLayout(self.layout)\n\n    def printItemText(self):\n        items = self.listWidget.selectedItems()\n        x = []\n        for i in range(len(items)):\n            x.append(str(self.listWidget.selectedItems()[i].text()))\n\n        print (x)\n\nif __name__ == \"__main__\":\n    import sys\n    app = QtWidgets.QApplication(sys.argv)\n    form = Test()\n    form.show()\n    app.exec_()\n</code></pre>\n<p>output :-</p>\n<p><a href=\"https://i.stack.imgur.com/jAWxM.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/jAWxM.png\"/></a></p>\n", "abstract": "Example of getting multiple selected values in listWidget with multiple selection.\n output :- "}, {"id": 62452632, "score": 5, "vote": 0, "content": "<p>Using PyQt5 you can set the SelectionMode of your QListWidget to allow multiple selections by using:</p>\n<pre><code class=\"python\">from PyQt5 import QtWidgets    \n\n\nQtWidgets.QListWidget.setSelectionMode(2)\n</code></pre>\n<p>where</p>\n<ul>\n<li>SelectionMode = 0 =&gt; NoSelection</li>\n<li>SelectionMode = 1 =&gt; SingleSelection</li>\n<li>SelectionMode = 2 =&gt; MultiSelection</li>\n<li>SelectionMode = 3 =&gt; ExtendedSelection</li>\n<li>SelectionMode = 4 =&gt; ContiguousSelection</li>\n</ul>\n<p><a href=\"https://doc.qt.io/archives/qt-4.8/qabstractitemview.html#SelectionMode-enum\" rel=\"noreferrer\">Reference</a></p>\n<p>In Qt Creator you find this option here:\n<a href=\"https://i.stack.imgur.com/Tr4RK.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/Tr4RK.png\"/></a></p>\n", "abstract": "Using PyQt5 you can set the SelectionMode of your QListWidget to allow multiple selections by using: where Reference In Qt Creator you find this option here:\n"}, {"id": 62204474, "score": 4, "vote": 0, "content": "<p>In addition, you can use list comprehension to get the selected items, for example</p>\n<pre><code class=\"python\">num_ITEMS=[item.text() for item in self.listWidget.selectedItems()]\n</code></pre>\n", "abstract": "In addition, you can use list comprehension to get the selected items, for example"}]}, {"link": "https://stackoverflow.com/questions/2786877/how-to-bind-events-to-canvas-items", "question": {"id": "2786877", "title": "How to bind events to Canvas items?", "content": "<p>If I'm using a canvas to display data and I want the user to be able to click on various items on the canvas in order to  get more information or interact with it in some way, what's the best way of going about this?</p>\n<p>Searching online I can find information about how to bind events to tags but that seems to be more indirect then what I want. I don't want to group items with tags, but rather have specific function calls when the user clicks specific items on the canvas.</p>\n", "abstract": "If I'm using a canvas to display data and I want the user to be able to click on various items on the canvas in order to  get more information or interact with it in some way, what's the best way of going about this? Searching online I can find information about how to bind events to tags but that seems to be more indirect then what I want. I don't want to group items with tags, but rather have specific function calls when the user clicks specific items on the canvas."}, "answers": [{"id": 2790122, "score": 73, "vote": 0, "content": "<p>To interact with objects contained in a <code>Canvas</code> object you need to use <code>tag_bind()</code> which has this format: <code>tag_bind(item, event=None, callback=None, add=None)</code></p>\n<p>The item parameter can be either a tag or an id.</p>\n<p>Here is an example to illustrate the concept:</p>\n<pre><code class=\"python\">from tkinter import * \n\ndef onObjectClick(event):                  \n    print('Got object click', event.x, event.y)\n    print(event.widget.find_closest(event.x, event.y))\n\nroot = Tk()\ncanv = Canvas(root, width=100, height=100)\nobj1Id = canv.create_line(0, 30, 100, 30, width=5, tags=\"obj1Tag\")\nobj2Id = canv.create_text(50, 70, text='Click', tags='obj2Tag')\n\ncanv.tag_bind(obj1Id, '&lt;ButtonPress-1&gt;', onObjectClick)       \ncanv.tag_bind('obj2Tag', '&lt;ButtonPress-1&gt;', onObjectClick)   \nprint('obj1Id: ', obj1Id)\nprint('obj2Id: ', obj2Id)\ncanv.pack()\nroot.mainloop()\n</code></pre>\n", "abstract": "To interact with objects contained in a Canvas object you need to use tag_bind() which has this format: tag_bind(item, event=None, callback=None, add=None) The item parameter can be either a tag or an id. Here is an example to illustrate the concept:"}]}, {"link": "https://stackoverflow.com/questions/12014210/tkinter-app-adding-a-right-click-context-menu", "question": {"id": "12014210", "title": "tkinter app adding a right click context menu?", "content": "<p>I have a python-tkinter gui app that I've been trying to find some way to add in some functionality. I was hoping there would be a way to right-click on an item in the app's listbox area and bring up a context menu.  Is tkinter able to accomplish this? Would I be better off looking into gtk or some other gui-toolkit?</p>\n", "abstract": "I have a python-tkinter gui app that I've been trying to find some way to add in some functionality. I was hoping there would be a way to right-click on an item in the app's listbox area and bring up a context menu.  Is tkinter able to accomplish this? Would I be better off looking into gtk or some other gui-toolkit?"}, "answers": [{"id": 12014379, "score": 48, "vote": 0, "content": "<p>You would create a <a href=\"https://web.archive.org/web/20190524140835/http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/menu.html\" rel=\"noreferrer\">Menu</a> instance and write a function that calls<br/>\nits <a href=\"http://effbot.org/tkinterbook/menu.htm\" rel=\"noreferrer\"><code>post()</code></a> or <a href=\"https://www.tcl.tk/man/tcl8.7/TkCmd/popup.htm\" rel=\"noreferrer\"><code>tk_popup()</code></a> method.  </p>\n<p>The <a href=\"https://docs.python.org/3/library/tkinter.html\" rel=\"noreferrer\">tkinter documentation</a> doesn't currently have any information about <code>tk_popup()</code>.<br/>\nRead the <a href=\"https://www.tcl.tk/man/tcl8.7/TkCmd/contents.htm\" rel=\"noreferrer\">Tk documentation</a> for a description, or the source:</p>\n<p><a href=\"http://core.tcl.tk/tk/artifact/6b33a1452c19b104\" rel=\"noreferrer\"><code>library/menu.tcl</code> in the Tcl/Tk source</a>:</p>\n<pre>\n::tk_popup --\nThis procedure pops up a menu and sets things up for traversing\nthe menu and its submenus.\n\nArguments:\nmenu  - Name of the menu to be popped up.\nx, y  - Root coordinates at which to pop up the menu.  \nentry - Index of a menu entry to center over (x,y).  \n        If omitted or specified as {}, then menu's  \n        upper-left corner goes at (x,y).  \n</pre>\n<p><a href=\"https://github.com/python/cpython/blob/master/Lib/tkinter/__init__.py\" rel=\"noreferrer\"><code>tkinter/__init__.py</code> in the Python source</a>:</p>\n<pre><code class=\"python\">def tk_popup(self, x, y, entry=\"\"):\n    \"\"\"Post the menu at position X,Y with entry ENTRY.\"\"\"\n    self.tk.call('tk_popup', self._w, x, y, entry)\n</code></pre>\n<p>You associate your context menu invoking function with right-click via:<br/>\n<a href=\"https://web.archive.org/web/20190524140835/http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/binding-levels.html\" rel=\"noreferrer\"><code>the_widget_clicked_on.bind(\"&lt;Button-3&gt;\", your_function)</code></a>.</p>\n<p>However, the number associated with right-click is not the same on every platform.</p>\n<p><a href=\"http://core.tcl.tk/tk/artifact/4ff6154cc3cca965\" rel=\"noreferrer\"><code>library/tk.tcl</code> in the Tcl/Tk source</a>:</p>\n<pre>\nOn Darwin/Aqua, buttons from left to right are 1,3,2.  \nOn Darwin/X11 with recent XQuartz as the X server, they are 1,2,3; \nother X servers may differ.\n</pre>\n<p>Here is an example I wrote that adds a context menu to a Listbox:</p>\n<pre><code class=\"python\">import tkinter # Tkinter -&gt; tkinter in Python 3\n\nclass FancyListbox(tkinter.Listbox):\n\n    def __init__(self, parent, *args, **kwargs):\n        tkinter.Listbox.__init__(self, parent, *args, **kwargs)\n\n        self.popup_menu = tkinter.Menu(self, tearoff=0)\n        self.popup_menu.add_command(label=\"Delete\",\n                                    command=self.delete_selected)\n        self.popup_menu.add_command(label=\"Select All\",\n                                    command=self.select_all)\n\n        self.bind(\"&lt;Button-3&gt;\", self.popup) # Button-2 on Aqua\n\n    def popup(self, event):\n        try:\n            self.popup_menu.tk_popup(event.x_root, event.y_root, 0)\n        finally:\n            self.popup_menu.grab_release()\n\n    def delete_selected(self):\n        for i in self.curselection()[::-1]:\n            self.delete(i)\n\n    def select_all(self):\n        self.selection_set(0, 'end')\n\n\nroot = tkinter.Tk()\nflb = FancyListbox(root, selectmode='multiple')\nfor n in range(10):\n    flb.insert('end', n)\nflb.pack()\nroot.mainloop()\n</code></pre>\n<p>The use of <code>grab_release()</code> was observed in <a href=\"http://effbot.org/zone/tkinter-popup-menu.htm\" rel=\"noreferrer\">an example on effbot</a>.<br/>\nIts effect might not be the same on all systems.</p>\n", "abstract": "You would create a Menu instance and write a function that calls\nits post() or tk_popup() method.   The tkinter documentation doesn't currently have any information about tk_popup().\nRead the Tk documentation for a description, or the source: library/menu.tcl in the Tcl/Tk source: tkinter/__init__.py in the Python source: You associate your context menu invoking function with right-click via:\nthe_widget_clicked_on.bind(\"<Button-3>\", your_function). However, the number associated with right-click is not the same on every platform. library/tk.tcl in the Tcl/Tk source: Here is an example I wrote that adds a context menu to a Listbox: The use of grab_release() was observed in an example on effbot.\nIts effect might not be the same on all systems."}, {"id": 41761830, "score": 6, "vote": 0, "content": "<p>I made some changes to the conext menu code above in order to adjust my demand and I think it would be useful to share:</p>\n<p><strong>Version 1:</strong></p>\n<pre><code class=\"python\">import tkinter as tk\nfrom tkinter import ttk\n\nclass Main(tk.Frame):\n    def __init__(self, master):\n        tk.Frame.__init__(self, master)\n        master.geometry('500x350')\n        self.master = master\n        self.tree = ttk.Treeview(self.master, height=15)\n        self.tree.pack(fill='x')\n        self.btn = tk.Button(master, text='click', command=self.clickbtn)\n        self.btn.pack()\n        self.aMenu = tk.Menu(master, tearoff=0)\n        self.aMenu.add_command(label='Delete', command=self.delete)\n        self.aMenu.add_command(label='Say Hello', command=self.hello)\n        self.num = 0\n\n        # attach popup to treeview widget\n        self.tree.bind(\"&lt;Button-3&gt;\", self.popup)\n\n    def clickbtn(self):\n        text = 'Hello ' + str(self.num)\n        self.tree.insert('', 'end', text=text)\n        self.num += 1\n\n    def delete(self):\n        print(self.tree.focus())\n        if self.iid:\n            self.tree.delete(self.iid)\n\n    def hello(self):\n        print ('hello!')\n\n    def popup(self, event):\n        self.iid = self.tree.identify_row(event.y)\n        if self.iid:\n            # mouse pointer over item\n            self.tree.selection_set(self.iid)\n            self.aMenu.post(event.x_root, event.y_root)            \n        else:\n            pass\n\nroot = tk.Tk()\napp=Main(root)\nroot.mainloop()\n</code></pre>\n<p><strong>Version 2:</strong></p>\n<pre><code class=\"python\">import tkinter as tk\nfrom tkinter import ttk\n\nclass Main(tk.Frame):\n    def __init__(self, master):\n        master.geometry('500x350')\n        self.master = master\n        tk.Frame.__init__(self, master)\n        self.tree = ttk.Treeview(self.master, height=15)\n        self.tree.pack(fill='x')\n        self.btn = tk.Button(master, text='click', command=self.clickbtn)\n        self.btn.pack()\n        self.rclick = RightClick(self.master)\n        self.num = 0\n\n        # attach popup to treeview widget\n        self.tree.bind('&lt;Button-3&gt;', self.rclick.popup)\n    def clickbtn(self):\n        text = 'Hello ' + str(self.num)\n        self.tree.insert('', 'end', text=text)\n        self.num += 1\n\nclass RightClick:\n    def __init__(self, master):\n       \n        # create a popup menu\n        self.aMenu = tk.Menu(master, tearoff=0)\n        self.aMenu.add_command(label='Delete', command=self.delete)\n        self.aMenu.add_command(label='Say Hello', command=self.hello)\n\n        self.tree_item = ''\n\n    def delete(self):\n        if self.tree_item:\n            app.tree.delete(self.tree_item)\n\n    def hello(self):\n        print ('hello!')\n\n    def popup(self, event):\n        self.aMenu.post(event.x_root, event.y_root)\n        self.tree_item = app.tree.focus()\n\nroot = tk.Tk()\napp=Main(root)\nroot.mainloop()\n</code></pre>\n", "abstract": "I made some changes to the conext menu code above in order to adjust my demand and I think it would be useful to share: Version 1: Version 2:"}, {"id": 62211134, "score": 1, "vote": 0, "content": "<pre class=\"lang-py prettyprint-override\"><code class=\"python\">from tkinter import *\nroot=Tk()\nroot.geometry(\"500x400+200+100\")\n\nclass Menu_Entry(Entry):\n    def __init__(self,perant,*args,**kwargs):\n        Entry.__init__(self,perant,*args,**kwargs)\n        self.popup_menu=Menu(self,tearoff=0,background='#1c1b1a',fg='white',\n                                     activebackground='#534c5c',\n                             activeforeground='Yellow')\n        self.popup_menu.add_command(label=\"Cut                     \",command=self.Cut,\n                                    accelerator='Ctrl+V')\n        self.popup_menu.add_command(label=\"Copy                    \",command=self.Copy,compound=LEFT,\n                                    accelerator='Ctrl+C')\n    \n        self.popup_menu.add_command(label=\"Paste                   \",command=self.Paste,accelerator='Ctrl+V')\n        self.popup_menu.add_separator()\n        self.popup_menu.add_command(label=\"Select all\",command=self.select_all,accelerator=\"Ctrl+A\")\n        self.popup_menu.add_command(label=\"Delete\",command=self.delete_only,accelerator=\" Delete\")\n        self.popup_menu.add_command(label=\"Delete all\",command=self.delete_selected,accelerator=\"Ctrl+D\")\n        self.bind('&lt;Button-3&gt;',self.popup)\n        self.bind(\"&lt;Control-d&gt;\",self.delete_selected_with_e1)\n        self.bind('&lt;App&gt;',self.popup)\n        self.context_menu = Menu(self, tearoff=0)\n        self.context_menu.add_command(label=\"Cut\")\n        self.context_menu.add_command(label=\"Copy\")\n        self.context_menu.add_command(label=\"Paste\")\n         \n    def popup(self, event):\n      try:\n        self.popup_menu.tk_popup(event.x_root, event.y_root, 0)\n      finally:\n        self.popup_menu.grab_release()\n\n    def Copy(self):\n      self.event_generate('&lt;&lt;Copy&gt;&gt;')\n\n    def Paste(self):\n      self.event_generate('&lt;&lt;Paste&gt;&gt;')\n\n    def Cut(self):\n      self.event_generate('&lt;&lt;Cut&gt;&gt;')\n\n    def delete_selected_with_e1(self,event):\n      self.select_range(0, END)\n      self.focus()\n      self.event_generate(\"&lt;Delete&gt;\")\n\n    def delete_selected(self):\n      self.select_range(0, END)\n      self.focus()\n      self.event_generate(\"&lt;Delete&gt;\")\n\n    def delete_only(self):\n      self.event_generate(\"&lt;BackSpace&gt;\")\n\n    def select_all(self):\n      self.select_range(0, END)\n      self.focus()\n\n\n\nent=Menu_Entry(root)\nent.pack()\n\n\nroot.mainloop()\n</code></pre>\n", "abstract": ""}, {"id": 69902726, "score": 0, "vote": 0, "content": "<p>Important Caveat:</p>\n<p>(Assuming the event argument that contains the coordinates is called \"event\"): Nothing will happen or be visible when you call tk_popup(...) unless you use \"event.x_root\" and \"event.y_root\" as arguments. If you do the obvious of using \"event.x\" and \"event.y\", it won't work, even though the names of the coordinates are \"x\" and \"y\" and there is no mention of \"x_root\" and \"y_root\" anywhere within it.</p>\n<p>As for the grab_release(..), it's not necessary, anywhere. \"tearoff=0\" also isn't necessary, setting it to 1 (which is default), simply adds a dotted line entry to the context menu. If you click on it, it detaches the context menu and makes it its own top-level window with window decorators. tearoff=0 will hide this entry. Moreover, it doesn't matter if you set the menu's master to any specific widget or root, or anything at all.</p>\n", "abstract": "Important Caveat: (Assuming the event argument that contains the coordinates is called \"event\"): Nothing will happen or be visible when you call tk_popup(...) unless you use \"event.x_root\" and \"event.y_root\" as arguments. If you do the obvious of using \"event.x\" and \"event.y\", it won't work, even though the names of the coordinates are \"x\" and \"y\" and there is no mention of \"x_root\" and \"y_root\" anywhere within it. As for the grab_release(..), it's not necessary, anywhere. \"tearoff=0\" also isn't necessary, setting it to 1 (which is default), simply adds a dotted line entry to the context menu. If you click on it, it detaches the context menu and makes it its own top-level window with window decorators. tearoff=0 will hide this entry. Moreover, it doesn't matter if you set the menu's master to any specific widget or root, or anything at all."}]}, {"link": "https://stackoverflow.com/questions/4399180/how-to-set-the-min-and-max-height-or-width-of-a-frame", "question": {"id": "4399180", "title": "How to set the min and max height or width of a Frame?", "content": "<p>The size of Tkinter windows can be controlled via the following methods:</p>\n<pre><code class=\"python\">.minsize()\n.maxsize()\n.resizable()\n</code></pre>\n<p>Are there equivalent ways to control the size of Tkinter or ttk Frames?</p>\n<p>@Bryan: I changed your frame1.pack code to the following:</p>\n<pre><code class=\"python\">frame1.pack(fill='both', expand=True)\nframe1.bind( '&lt;Configure&gt;', maxsize )\n</code></pre>\n<p>And I added this event handler:</p>\n<pre><code class=\"python\"># attempt to prevent frame from growing past a certain size\ndef maxsize( event=None ):\n    print frame1.winfo_width()\n    if frame1.winfo_width() &gt; 200:\n        print 'frame1 wider than 200 pixels'\n        frame1.pack_propagate(0)\n        frame1.config( width=200 )\n        return 'break'\n</code></pre>\n<p>The above event handler detects that a frame's width is too big, but is unable to prevent the increase in size from happening. Is this a limitation of Tkinter or have I misunderstood your explanation?</p>\n", "abstract": "The size of Tkinter windows can be controlled via the following methods: Are there equivalent ways to control the size of Tkinter or ttk Frames? @Bryan: I changed your frame1.pack code to the following: And I added this event handler: The above event handler detects that a frame's width is too big, but is unable to prevent the increase in size from happening. Is this a limitation of Tkinter or have I misunderstood your explanation?"}, "answers": [{"id": 4399545, "score": 33, "vote": 0, "content": "<p>There is no single magic function to force a frame to a minimum or fixed size. However, you can certainly force the size of a frame by giving the frame a width and height. You then have to do potentially two more things: when you put this window in a container you need to make sure the geometry manager doesn't shrink or expand the window. Two, if the frame is a container for other widget, turn grid or pack propagation off so that the frame doesn't shrink or expand to fit its own contents.</p>\n<p>Note, however, that this won't prevent you from resizing a window to be smaller than an internal frame. In that case the frame will just be clipped.</p>\n<pre><code class=\"python\">import Tkinter as tk\n\nroot = tk.Tk()\nframe1 = tk.Frame(root, width=100, height=100, background=\"bisque\")\nframe2 = tk.Frame(root, width=50, height = 50, background=\"#b22222\")\n\nframe1.pack(fill=None, expand=False)\nframe2.place(relx=.5, rely=.5, anchor=\"c\")\n\nroot.mainloop()\n</code></pre>\n", "abstract": "There is no single magic function to force a frame to a minimum or fixed size. However, you can certainly force the size of a frame by giving the frame a width and height. You then have to do potentially two more things: when you put this window in a container you need to make sure the geometry manager doesn't shrink or expand the window. Two, if the frame is a container for other widget, turn grid or pack propagation off so that the frame doesn't shrink or expand to fit its own contents. Note, however, that this won't prevent you from resizing a window to be smaller than an internal frame. In that case the frame will just be clipped."}, {"id": 59663408, "score": 7, "vote": 0, "content": "<p>A workaround - at least for the minimum size: You can use grid to manage the frames contained in root and make them follow the grid size by setting sticky='nsew'. Then you can use root.grid_rowconfigure and root.grid_columnconfigure to set values for minsize like so:</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">from tkinter import Frame, Tk\n\nclass MyApp():\n    def __init__(self):\n        self.root = Tk()\n\n        self.my_frame_red = Frame(self.root, bg='red')\n        self.my_frame_red.grid(row=0, column=0, sticky='nsew')\n\n        self.my_frame_blue = Frame(self.root, bg='blue')\n        self.my_frame_blue.grid(row=0, column=1, sticky='nsew')\n\n        self.root.grid_rowconfigure(0, minsize=200, weight=1)\n        self.root.grid_columnconfigure(0, minsize=200, weight=1)\n        self.root.grid_columnconfigure(1, weight=1)\n\n        self.root.mainloop()\n\nif __name__ == '__main__':\n    app = MyApp()\n</code></pre>\n<p>But as Brian wrote (in 2010 :D) you can still resize the window to be smaller than the frame if you don't limit its minsize.</p>\n", "abstract": "A workaround - at least for the minimum size: You can use grid to manage the frames contained in root and make them follow the grid size by setting sticky='nsew'. Then you can use root.grid_rowconfigure and root.grid_columnconfigure to set values for minsize like so: But as Brian wrote (in 2010 :D) you can still resize the window to be smaller than the frame if you don't limit its minsize."}]}, {"link": "https://stackoverflow.com/questions/4629198/best-way-to-build-an-application-based-on-r", "question": {"id": "4629198", "title": "Best way to build an application based on R?", "content": "<p>I'm looking for suggestions on how to go about building an application that uses <code>R</code> for analytics, table generation, and plotting. What I have in mind is an application that:</p>\n<ul>\n<li>displays various data tables in different tabs, somewhat like in Excel, and the columns should be sortable by clicking. </li>\n<li>takes user input parameters in some dialog windows.</li>\n<li>displays plots dynamically (i.e. user-input-dependent) either in a tab or in a new pop-up window/frame</li>\n</ul>\n<p>Note that I am <em>not</em> talking about a general-purpose fron-end/GUI for exploring data with <code>R</code> (like say <code>Rattle</code>), but a specific application.\nSome questions I'd like to see addressed are:</p>\n<ul>\n<li>Is an entirely R-based approach even possible ( on Windows ) ? The following passage from the <code>Rattle</code> article in <code>R</code>-Journal intrigues me:</li>\n</ul>\n<blockquote>\n<p>It is interesting to note that the\n  first implementation of Rattle\n  actually used Python for implementing\n  the callbacks and R for the\n  statistics, using <code>rpy</code>. The release\n  of <code>RGtk2</code> allowed the interface el-\n  ements of <code>Rattle</code> to be written\n  directly in R so that <code>Rattle</code> is a\n  <strong>fully R-based application</strong></p>\n</blockquote>\n<ul>\n<li><p>If it's better to use another language for the GUI part, which language is best suited for this? I'm looking for a language where it's relatively \"painless\" to build the GUI, and that also integrates very well with <code>R</code>. From this StackOverflow question <a href=\"https://stackoverflow.com/questions/3691944/how-should-i-do-rapid-gui-development-for-r-and-octave-methods-possibly-with-pyt\">How should I do rapid GUI development for R and Octave methods (possibly with Python)?</a> I see that <code>Python</code> + <code>PyQt4</code> + <code>QtDesigner</code> + <code>RPy2</code> seems to be the best combo. Is that the consensus ?</p></li>\n<li><p>Anyone have pointers to specific (open source) applications of the type I describe, as examples that I can learn from? </p></li>\n</ul>\n", "abstract": "I'm looking for suggestions on how to go about building an application that uses R for analytics, table generation, and plotting. What I have in mind is an application that: Note that I am not talking about a general-purpose fron-end/GUI for exploring data with R (like say Rattle), but a specific application.\nSome questions I'd like to see addressed are: It is interesting to note that the\n  first implementation of Rattle\n  actually used Python for implementing\n  the callbacks and R for the\n  statistics, using rpy. The release\n  of RGtk2 allowed the interface el-\n  ements of Rattle to be written\n  directly in R so that Rattle is a\n  fully R-based application If it's better to use another language for the GUI part, which language is best suited for this? I'm looking for a language where it's relatively \"painless\" to build the GUI, and that also integrates very well with R. From this StackOverflow question How should I do rapid GUI development for R and Octave methods (possibly with Python)? I see that Python + PyQt4 + QtDesigner + RPy2 seems to be the best combo. Is that the consensus ? Anyone have pointers to specific (open source) applications of the type I describe, as examples that I can learn from? "}, "answers": [{"id": 4629608, "score": 10, "vote": 0, "content": "<p>There are lots of ways to do this, including the python approach you mention. If you want to do it solely within R and if your aims are modest enough, the gWidgets package can be used. This exposes some of the features of either RGtk2, tcltk or qtbase (see the qtinterfaces project on r-forge) in a manner that is about as painless as can be. If you want more, look at using those packages directly. I'd recommend RGtk2 if you are going to share with others and if not, qtbase or tcltk.</p>\n", "abstract": "There are lots of ways to do this, including the python approach you mention. If you want to do it solely within R and if your aims are modest enough, the gWidgets package can be used. This exposes some of the features of either RGtk2, tcltk or qtbase (see the qtinterfaces project on r-forge) in a manner that is about as painless as can be. If you want more, look at using those packages directly. I'd recommend RGtk2 if you are going to share with others and if not, qtbase or tcltk."}, {"id": 4629949, "score": 7, "vote": 0, "content": "<p>Python + Qt4 + RPy = Much Win.</p>\n<p>For example, see what Carson Farmer has done with Qgis and the ManageR plugin - its a full R interface to geographic data in the Qgis mapping package. </p>\n<p>Depending on how much statistical functionality you need you might even get away without needing it at all, doing all the stats in Python, leveraging such goodies as the Numpy numeric package and the Qwt plotting canvas.</p>\n", "abstract": "Python + Qt4 + RPy = Much Win. For example, see what Carson Farmer has done with Qgis and the ManageR plugin - its a full R interface to geographic data in the Qgis mapping package.  Depending on how much statistical functionality you need you might even get away without needing it at all, doing all the stats in Python, leveraging such goodies as the Numpy numeric package and the Qwt plotting canvas."}, {"id": 4630027, "score": 4, "vote": 0, "content": "<p>How about traditional LAMP + a R backend? Optionally s/MySQL/Postgres and optionally s/PHP/Perl Rapache looks pretty cool too: <a href=\"http://www.rapache.net\" rel=\"nofollow\">rapache.net</a></p>\n", "abstract": "How about traditional LAMP + a R backend? Optionally s/MySQL/Postgres and optionally s/PHP/Perl Rapache looks pretty cool too: rapache.net"}, {"id": 4634571, "score": 1, "vote": 0, "content": "<p>If you go for C++, take a look at <a href=\"http://cran.r-project.org/web/packages/Rcpp/index.html\" rel=\"nofollow\">rcpp</a> and <a href=\"http://dirk.eddelbuettel.com/code/rinside.html\" rel=\"nofollow\">Rinside</a></p>\n<p>Java can be combined with R using <a href=\"http://www.rforge.net/JRI/\" rel=\"nofollow\">JRI</a> </p>\n<p><a href=\"http://www.rforge.net/Rserve/\" rel=\"nofollow\">RServe</a> gives you a TCP/IP protocol to interact with R. There's a Java client and a C++ client, so either of them can be used.</p>\n<p>On a sidenote: Another thing you should be aware of, is that R contains quite some libraries written in Fortran and C, that can be called directly. Same goes for more advanced packages like VGAM, they also contain quite some C routines. Depending on what exactly you want to do, you might try to work with those ones, just to avoid the overhead of the R functions itself.</p>\n<p>I've been looking for an overview of those myself, but AFAIK you'll have to do some effort to get everything. Some things you certainly should look at is The <a href=\"http://www.studiegids.ugent.be/2010/NL/FACULTY/C/MAMA/CNSDAN/CNSDAN.html\" rel=\"nofollow\">R language definition</a> and <a href=\"http://cran.r-project.org/doc/manuals/R-ints.pdf\" rel=\"nofollow\">R Internals</a>.</p>\n", "abstract": "If you go for C++, take a look at rcpp and Rinside Java can be combined with R using JRI  RServe gives you a TCP/IP protocol to interact with R. There's a Java client and a C++ client, so either of them can be used. On a sidenote: Another thing you should be aware of, is that R contains quite some libraries written in Fortran and C, that can be called directly. Same goes for more advanced packages like VGAM, they also contain quite some C routines. Depending on what exactly you want to do, you might try to work with those ones, just to avoid the overhead of the R functions itself. I've been looking for an overview of those myself, but AFAIK you'll have to do some effort to get everything. Some things you certainly should look at is The R language definition and R Internals."}]}, {"link": "https://stackoverflow.com/questions/11643221/are-there-default-icons-in-pyqt-pyside", "question": {"id": "11643221", "title": "Are there default icons in PyQt/PySide?", "content": "<p>I'm reading a tutorial on PySide and I was thinking , do I need to find my own icons for every thing or is there some way to use some built in icons . That way I wouldn't need to find an entire new set of icons if I want my little gui to run on another desktop environment .</p>\n", "abstract": "I'm reading a tutorial on PySide and I was thinking , do I need to find my own icons for every thing or is there some way to use some built in icons . That way I wouldn't need to find an entire new set of icons if I want my little gui to run on another desktop environment ."}, "answers": [{"id": 12288753, "score": 45, "vote": 0, "content": "<p>What you need is Pyside QIcon.fromTheme function. \nBasicaly it creates QIcon object with needed icon from current system theme.</p>\n<p>Usage:</p>\n<p><code>undoicon = QIcon.fromTheme(\"edit-undo\")</code></p>\n<p>\"edit undo\" - name of the icon \"type\"/\"function\" can be found <a href=\"http://standards.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html\" rel=\"noreferrer\">here</a></p>\n<p>This works on X11 systems, for MacOSX and Windows check QIcon documentation\n<a href=\"http://pyside.github.io/docs/pyside/PySide/QtGui/QIcon.html?highlight=qicon#PySide.QtGui.PySide.QtGui.QIcon.fromTheme\" rel=\"noreferrer\">QIcon.fromTheme</a></p>\n<p><strong>Edit</strong> Inserting this from the website, since last time it was a broken link.</p>\n<blockquote>\n<p><em>static</em> PySide.QtGui.QIcon.<strong>fromTheme</strong>(<em>name[, fallback=QIcon()]</em>)</p>\n<p><strong>Parameters:</strong> </p>\n<ul>\n<li><strong>name</strong> \u2013 unicode</li>\n<li><strong>fallback</strong> \u2013 <a href=\"http://pyside.github.io/docs/pyside/PySide/QtGui/QIcon.html?highlight=qicon#PySide.QtGui.QIcon\" rel=\"noreferrer\">PySide.QtGui.QIcon</a></li>\n</ul>\n<p><strong>Return type:</strong></p>\n<p><a href=\"http://pyside.github.io/docs/pyside/PySide/QtGui/QIcon.html?highlight=qicon#PySide.QtGui.QIcon\" rel=\"noreferrer\">PySide.QtGui.QIcon</a></p>\n<p>Returns the <a href=\"http://pyside.github.io/docs/pyside/PySide/QtGui/QIcon.html?highlight=qicon#PySide.QtGui.QIcon\" rel=\"noreferrer\">PySide.QtGui.QIcon</a> corresponding to name in the current icon theme. If no such icon is found in the current theme\n  fallback is returned instead.</p>\n<p>The latest version of the freedesktop icon specification and naming specification can be obtained here:</p>\n<ul>\n<li><a href=\"http://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html\" rel=\"noreferrer\">http://standards.freedesktop.org/icon-theme-spec/icon-theme-spec-latest.html</a></li>\n<li><a href=\"http://standards.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html\" rel=\"noreferrer\">http://standards.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html</a></li>\n</ul>\n<p>To fetch an icon from the current icon theme:</p>\n<pre><code class=\"python\">undoicon = QIcon.fromTheme(\"edit-undo\")\n</code></pre>\n<p>Or if you want to provide a guaranteed fallback for platforms that do not support theme icons, you can use the second argument:</p>\n<pre><code class=\"python\">undoicon = QIcon.fromTheme(\"edit-undo\", QIcon(\":/undo.png\"))\n</code></pre>\n<blockquote>\n<p><strong>Note</strong></p>\n<p>By default, only X11 will support themed icons. In order to use themed icons on Mac and Windows, you will have to bundle a compliant theme in one of your <a href=\"http://pyside.github.io/docs/pyside/PySide/QtGui/QIcon.html?highlight=qicon#PySide.QtGui.PySide.QtGui.QIcon.themeSearchPaths\" rel=\"noreferrer\">PySide.QtGui.QIcon.themeSearchPaths()</a> and set the appropriate <a href=\"http://pyside.github.io/docs/pyside/PySide/QtGui/QIcon.html?highlight=qicon#PySide.QtGui.PySide.QtGui.QIcon.themeName\" rel=\"noreferrer\">PySide.QtGui.QIcon.themeName()</a> .</p>\n<p><strong>See also</strong></p>\n<ul>\n<li><a href=\"http://pyside.github.io/docs/pyside/PySide/QtGui/QIcon.html?highlight=qicon#PySide.QtGui.PySide.QtGui.QIcon.themeName\" rel=\"noreferrer\">PySide.QtGui.QIcon.themeName()</a> </li>\n<li><a href=\"http://pyside.github.io/docs/pyside/PySide/QtGui/QIcon.html?highlight=qicon#PySide.QtGui.PySide.QtGui.QIcon.setThemeName\" rel=\"noreferrer\">PySide.QtGui.QIcon.setThemeName()</a></li>\n<li><a href=\"http://pyside.github.io/docs/pyside/PySide/QtGui/QIcon.html?highlight=qicon#PySide.QtGui.PySide.QtGui.QIcon.themeSearchPaths\" rel=\"noreferrer\">PySide.QtGui.QIcon.themeSearchPaths()</a></li>\n</ul>\n</blockquote>\n</blockquote>\n", "abstract": "What you need is Pyside QIcon.fromTheme function. \nBasicaly it creates QIcon object with needed icon from current system theme. Usage: undoicon = QIcon.fromTheme(\"edit-undo\") \"edit undo\" - name of the icon \"type\"/\"function\" can be found here This works on X11 systems, for MacOSX and Windows check QIcon documentation\nQIcon.fromTheme Edit Inserting this from the website, since last time it was a broken link. static PySide.QtGui.QIcon.fromTheme(name[, fallback=QIcon()]) Parameters:  Return type: PySide.QtGui.QIcon Returns the PySide.QtGui.QIcon corresponding to name in the current icon theme. If no such icon is found in the current theme\n  fallback is returned instead. The latest version of the freedesktop icon specification and naming specification can be obtained here: To fetch an icon from the current icon theme: Or if you want to provide a guaranteed fallback for platforms that do not support theme icons, you can use the second argument: Note By default, only X11 will support themed icons. In order to use themed icons on Mac and Windows, you will have to bundle a compliant theme in one of your PySide.QtGui.QIcon.themeSearchPaths() and set the appropriate PySide.QtGui.QIcon.themeName() . See also"}, {"id": 24151141, "score": 13, "vote": 0, "content": "<p>There is another way to access some of the standard builtin icons in PyQt/PySide using the standard pixmap in the default style. For example, the following creates an icon for opening a file:</p>\n<pre><code class=\"python\">self.style().standardIcon(QtGui.QStyle.SP_DialogOpenButton)\n</code></pre>\n<p>For the full list of standard pixmaps, see:</p>\n<p><a href=\"http://srinikom.github.io/pyside-docs/PySide/QtGui/QStyle.html#PySide.QtGui.PySide.QtGui.QStyle.StandardPixmap\">http://srinikom.github.io/pyside-docs/PySide/QtGui/QStyle.html#PySide.QtGui.PySide.QtGui.QStyle.StandardPixmap</a></p>\n", "abstract": "There is another way to access some of the standard builtin icons in PyQt/PySide using the standard pixmap in the default style. For example, the following creates an icon for opening a file: For the full list of standard pixmaps, see: http://srinikom.github.io/pyside-docs/PySide/QtGui/QStyle.html#PySide.QtGui.PySide.QtGui.QStyle.StandardPixmap"}, {"id": 49580838, "score": 7, "vote": 0, "content": "<p>In <code>PyQt5</code>, here's a simple example of creating a push button with the play icon:</p>\n<pre><code class=\"python\">play_button = QtGui.QPushButton('Play video')\nplay_button.setIcon(QtGui.QApplication.style().standardIcon(QtGui.QStyle.SP_MediaPlay))\n</code></pre>\n<p>The Qt5 documentation provides a list of the possible SP (\"Standard Pixmap\") icons. See <code>enum QStyle::StandardPixmap</code> here: <a href=\"http://doc.qt.io/qt-5/qstyle.html\" rel=\"noreferrer\">http://doc.qt.io/qt-5/qstyle.html</a></p>\n", "abstract": "In PyQt5, here's a simple example of creating a push button with the play icon: The Qt5 documentation provides a list of the possible SP (\"Standard Pixmap\") icons. See enum QStyle::StandardPixmap here: http://doc.qt.io/qt-5/qstyle.html"}, {"id": 32927918, "score": 3, "vote": 0, "content": "<p>I keep having trouble finding images of the standard icons, so for future reference: <a href=\"http://nukesaq88.hatenablog.com/entry/2013/04/12/005525\" rel=\"nofollow\">http://nukesaq88.hatenablog.com/entry/2013/04/12/005525</a></p>\n<p>And the code I'm using (PyQt4, Pyside probably similar):</p>\n<pre><code class=\"python\">    # In method of QMainWindow subclass\n    stdicon = self.style().standardIcon\n    style = QtGui.QStyle\n    reload_foo = QtGui.QAction(stdicon(style.SP_BrowserReload), '&amp;Reload', self)\n</code></pre>\n<p>It would be nice if the (obviously auto-generated) <a href=\"http://doc.qt.io/qt-5/qstyle.html#StandardPixmap-enum\" rel=\"nofollow\">Qt docs</a> had pictures in the standardIcons enum table...</p>\n", "abstract": "I keep having trouble finding images of the standard icons, so for future reference: http://nukesaq88.hatenablog.com/entry/2013/04/12/005525 And the code I'm using (PyQt4, Pyside probably similar): It would be nice if the (obviously auto-generated) Qt docs had pictures in the standardIcons enum table..."}, {"id": 49676733, "score": 2, "vote": 0, "content": "<p>Another PyQt5 example using the <a href=\"http://doc.qt.io/qt-5/qstyle.html#StandardPixmap-enum\" rel=\"nofollow noreferrer\">standard icons</a> (<a href=\"https://stackoverflow.com/users/209246/eqzx\">eqzx</a>'s answer didn't work for me):</p>\n<pre><code class=\"python\"> from PyQt5.QtWidgets import QApplication, QStyle\n from PyQt5.QtGui import QIcon\n\n desktop_icon = QIcon(QApplication.style().standardIcon(QStyle.SP_DesktopIcon)\n</code></pre>\n", "abstract": "Another PyQt5 example using the standard icons (eqzx's answer didn't work for me):"}, {"id": 11693002, "score": 0, "vote": 0, "content": "<p>in PyQt, the window icon is by default the Qt logo. I think you will have to find your own icons for things inside the gui.</p>\n", "abstract": "in PyQt, the window icon is by default the Qt logo. I think you will have to find your own icons for things inside the gui."}, {"id": 70822001, "score": 0, "vote": 0, "content": "<p>A PyQt5 example that will display all built-in icons (the list is from the <a href=\"https://doc.qt.io/qt-5/qstyle.html#StandardPixmap-enum\" rel=\"nofollow noreferrer\">QStyle docs</a>).</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">from PyQt5.QtWidgets import (QApplication, QGridLayout, QPushButton, QStyle, QWidget)\n\nclass Window(QWidget):\n    def __init__(self):\n        super(Window, self).__init__()\n        icons = [\n            'SP_ArrowBack',\n            'SP_ArrowDown',\n            'SP_ArrowForward',\n            'SP_ArrowLeft',\n            'SP_ArrowRight',\n            'SP_ArrowUp',\n            'SP_BrowserReload',\n            'SP_BrowserStop',\n            'SP_CommandLink',\n            'SP_ComputerIcon',\n            'SP_DesktopIcon',\n            'SP_DialogAbortButton',\n            'SP_DialogApplyButton',\n            'SP_DialogCancelButton',\n            'SP_DialogCloseButton',\n            'SP_DialogDiscardButton',\n            'SP_DialogHelpButton',\n            'SP_DialogIgnoreButton',\n            'SP_DialogNoButton',\n            'SP_DialogNoToAllButton',\n            'SP_DialogOkButton',\n            'SP_DialogOpenButton',\n            'SP_DialogResetButton',\n            'SP_DialogRetryButton',\n            'SP_DialogSaveAllButton',\n            'SP_DialogSaveButton',\n            'SP_DialogYesButton',\n            'SP_DialogYesToAllButton',\n            'SP_DirClosedIcon',\n            'SP_DirHomeIcon',\n            'SP_DirIcon',\n            'SP_DirLinkIcon',\n            'SP_DirLinkOpenIcon',\n            'SP_DirOpenIcon',\n            'SP_DockWidgetCloseButton',\n            'SP_DriveCDIcon',\n            'SP_DriveDVDIcon',\n            'SP_DriveFDIcon',\n            'SP_DriveHDIcon',\n            'SP_DriveNetIcon',\n            'SP_FileDialogBack',\n            'SP_FileDialogContentsView',\n            'SP_FileDialogDetailedView',\n            'SP_FileDialogEnd',\n            'SP_FileDialogInfoView',\n            'SP_FileDialogListView',\n            'SP_FileDialogNewFolder',\n            'SP_FileDialogStart',\n            'SP_FileDialogToParent',\n            'SP_FileIcon',\n            'SP_FileLinkIcon',\n            'SP_LineEditClearButton',\n            'SP_MediaPause',\n            'SP_MediaPlay',\n            'SP_MediaSeekBackward',\n            'SP_MediaSeekForward',\n            'SP_MediaSkipBackward',\n            'SP_MediaSkipForward',\n            'SP_MediaStop',\n            'SP_MediaVolume',\n            'SP_MediaVolumeMuted',\n            'SP_MessageBoxCritical',\n            'SP_MessageBoxInformation',\n            'SP_MessageBoxQuestion',\n            'SP_MessageBoxWarning',\n            'SP_RestoreDefaultsButton',\n            'SP_TitleBarCloseButton',\n            'SP_TitleBarContextHelpButton',\n            'SP_TitleBarMaxButton',\n            'SP_TitleBarMenuButton',\n            'SP_TitleBarMinButton',\n            'SP_TitleBarNormalButton',\n            'SP_TitleBarShadeButton',\n            'SP_TitleBarUnshadeButton',\n            'SP_ToolBarHorizontalExtensionButton',\n            'SP_ToolBarVerticalExtensionButton',\n            'SP_TrashIcon',\n            'SP_VistaShield',\n        ]\n\n        layout = QGridLayout()\n\n        for n, name in enumerate(icons):\n            btn = QPushButton(name)\n            pixmapi = getattr(QStyle.StandardPixmap, name)\n            icon = self.style().standardIcon(pixmapi)\n            btn.setIcon(icon)\n            layout.addWidget(btn, int(n / 4), n % 4)\n\n        self.setLayout(layout)\n\napp = QApplication([])\nw = Window()\nw.show()\napp.exec()\n</code></pre>\n", "abstract": "A PyQt5 example that will display all built-in icons (the list is from the QStyle docs)."}]}, {"link": "https://stackoverflow.com/questions/3704568/tkinter-button-command-activates-upon-running-program", "question": {"id": "3704568", "title": "Tkinter button command activates upon running program?", "content": "<p>I'm trying to make a build retrieval form, and seem to have issues with the buttons... I'm a novice at Python/tkinter GUI programming (and GUI programming in general) and borrowed the skeleton of a Hello World app, and sorta built off that.</p>\n<p>In the code below, I've set the \"command\" option of my Browse button to call my class's internal get_dir() function when it's clicked.  However, as soon as I attempt to run the app, the get_dir() function is called and I'm prompted to choose a directory.  Any ideas why this happens, and what I can do to make it behave properly?</p>\n<pre><code class=\"python\">from Tkinter import *\nimport tkFont\nfrom tkFileDialog import askdirectory\n\nclass App:\n\n    def __init__(self, master):\n\n        fontHead = tkFont.Font(family=\"Arial\", size=10, weight=tkFont.BOLD)\n        fontBold = tkFont.Font(family=\"Arial\", size=8, weight=tkFont.BOLD)\n        fontReg =  tkFont.Font(family=\"Arial\", size=8)\n\n        frameN = Frame(master)\n        frameN.grid(row=0,padx=5,pady=5)\n\n        frameXBH = Frame(frameN)\n        frameXBH.grid(row=0,columnspan=5,padx=5)\n\n        Canvas(frameXBH,borderwidth=0,relief=\"flat\",height=1,width=20,background=\"#cccccc\").grid(row=0)\n        Label(frameXBH, text=\"Xbox 360\",font=fontBold,width=9).grid(row=0,column=1)\n        Canvas(frameXBH,borderwidth=0,relief=\"flat\",height=1,width=440,background=\"#cccccc\").grid(row=0,column=2,sticky=\"WE\")\n\n        Label(frameN, text=\"Destination Path:\",font=fontReg).grid(row=1,sticky=\"W\")\n        xbPath = Entry(frameN,width=30,font=fontReg)\n        xbPath.grid(row=1,column=1,sticky=\"W\")\n        xbBrowse = Button(frameN,text=\"Browse...\",font=fontReg,command=self.get_dir(xbPath))\n        xbBrowse.grid(row=1,column=2,sticky=\"W\")\n        xbRel = Checkbutton(frameN,text=\"Release\",font=fontReg)\n        xbRel.grid(row=1,column=3,sticky=\"W\")\n        xbShip = Checkbutton(frameN,text=\"Ship\",font=fontReg)\n        xbShip.grid(row=1,column=4,sticky=\"W\")\n\n        Canvas(frameN,borderwidth=1,relief=\"groove\",width=550,height=0).grid(row=2,columnspan=5,pady=10)\n\n        # SAVE AND CANCEL\n\n        btnSave = Button(frameN,text=\"Save\",width=10)\n        btnSave.grid(row=3,column=3,sticky=\"E\")\n\n        btnCancel = Button(frameN,text=\"Cancel\",width=10)\n        btnCancel.grid(row=3,column=4,sticky=\"W\")\n\n    def get_dir(self,box):\n        tmp = askdirectory(mustexist=1,title=\"Please select a destination\")\n        tmp = tmp.replace(\"/\",\"\\\\\")\n        box.delete(0,END)\n        box.insert(0,tmp)\n\nroot = Tk()\nroot.resizable(0,0)\n\napp = App(root)\n\nroot.mainloop()\n</code></pre>\n", "abstract": "I'm trying to make a build retrieval form, and seem to have issues with the buttons... I'm a novice at Python/tkinter GUI programming (and GUI programming in general) and borrowed the skeleton of a Hello World app, and sorta built off that. In the code below, I've set the \"command\" option of my Browse button to call my class's internal get_dir() function when it's clicked.  However, as soon as I attempt to run the app, the get_dir() function is called and I'm prompted to choose a directory.  Any ideas why this happens, and what I can do to make it behave properly?"}, "answers": [{"id": 5278951, "score": 39, "vote": 0, "content": "<p>Make your event handler a <em>lambda function</em>, which calls your <code>get_dir()</code> with whatever arguments you want:</p>\n<pre><code class=\"python\">xbBrowse = Button(frameN, text=\"Browse...\", font=fontReg, command=lambda : self.get_dir(xbPath))\n</code></pre>\n", "abstract": "Make your event handler a lambda function, which calls your get_dir() with whatever arguments you want:"}, {"id": 3704697, "score": 20, "vote": 0, "content": "<p>In the above code:</p>\n<pre><code class=\"python\">xbBrowse = Button(frameN,text=\"Browse...\",font=fontReg,command=self.get_dir(xbPath))\n</code></pre>\n<p>You are invoking the function already, you should be simply passing the function:</p>\n<pre><code class=\"python\">xbBrowse = Button(frameN,text=\"Browse...\",font=fontReg,command=self.get_dir)\n</code></pre>\n", "abstract": "In the above code: You are invoking the function already, you should be simply passing the function:"}, {"id": 3704726, "score": 9, "vote": 0, "content": "<p>You need to pass a reference of your <code>get_dir</code> method </p>\n<p>so change</p>\n<pre><code class=\"python\">xbBrowse = Button(frameN,text=\"Browse...\",font=fontReg,command=self.get_dir(xbPath))\n</code></pre>\n<p>to </p>\n<pre><code class=\"python\">xbBrowse = Button(frameN,text=\"Browse...\",font=fontReg, command=self.get_dir)\n</code></pre>\n<p>Then make your <code>Entry</code> widget an instance variable so that you can access it in your <code>get_dir</code> method.</p>\n<p>e.g. </p>\n<pre><code class=\"python\">self.xbPath = Entry(frameN,width=30,font=fontReg)\n</code></pre>\n<p>Then your <code>get_dir()</code> method will look like:</p>\n<pre><code class=\"python\">def get_dir(self):\n    tmp = askdirectory(mustexist=1,title=\"Please select a destination\")\n    tmp = tmp.replace(\"/\",\"\\\\\")\n\n    self.xbPath.delete(0,END)\n    self.xbPath.insert(0,tmp)\n</code></pre>\n", "abstract": "You need to pass a reference of your get_dir method  so change to  Then make your Entry widget an instance variable so that you can access it in your get_dir method. e.g.  Then your get_dir() method will look like:"}]}, {"link": "https://stackoverflow.com/questions/10267465/showing-and-hiding-widgets", "question": {"id": "10267465", "title": "Showing and Hiding widgets", "content": "<p>How do you show and hide widgets in Tkinter? I want to have an entry box, but not have it shown at all times.  Can someone show me the functions to show and hide entry widgets and other widgets in tkinter?  I want to be able to do this without having multiple frames.</p>\n", "abstract": "How do you show and hide widgets in Tkinter? I want to have an entry box, but not have it shown at all times.  Can someone show me the functions to show and hide entry widgets and other widgets in tkinter?  I want to be able to do this without having multiple frames."}, "answers": [{"id": 10268076, "score": 41, "vote": 0, "content": "<p><a href=\"https://stackoverflow.com/q/3819354/7432\">This has been answered before on stackoverflow</a>. The short answer is, you can use <a href=\"http://effbot.org/tkinterbook/grid.htm#Tkinter.Grid.grid_remove-method\" rel=\"noreferrer\">grid_remove</a> which will cause the widget to be removed if it was previously added via grid. <code>grid_remove</code> remembers where the widget was, so a simple <code>grid()</code> will put it back without having to re-specify all of the options.</p>\n<p>You can also use <a href=\"http://effbot.org/tkinterbook/pack.htm#Tkinter.Pack.pack_forget-method\" rel=\"noreferrer\">pack_forget</a> (if using pack) and <a href=\"http://effbot.org/tkinterbook/grid.htm#Tkinter.Grid.grid_forget-method\" rel=\"noreferrer\">grid_forget</a> (if using grid). These work similarly to grid_remove except they cause all of the settings to be forgotten, which means you have to explicitly place it back into the proper place on the screen.</p>\n<p>Another option is to take advantage of the stacking order of widgets. You can use the <a href=\"http://effbot.org/tkinterbook/widget.htm#Tkinter.Widget.lower-method\" rel=\"noreferrer\">lower</a> method to hide the widget behind its sibling, and <a href=\"http://effbot.org/tkinterbook/widget.htm#Tkinter.Widget.lift-method\" rel=\"noreferrer\">lift</a> to raise it above. See <a href=\"https://stackoverflow.com/a/5928294/7432\">this answer</a> for an example.</p>\n", "abstract": "This has been answered before on stackoverflow. The short answer is, you can use grid_remove which will cause the widget to be removed if it was previously added via grid. grid_remove remembers where the widget was, so a simple grid() will put it back without having to re-specify all of the options. You can also use pack_forget (if using pack) and grid_forget (if using grid). These work similarly to grid_remove except they cause all of the settings to be forgotten, which means you have to explicitly place it back into the proper place on the screen. Another option is to take advantage of the stacking order of widgets. You can use the lower method to hide the widget behind its sibling, and lift to raise it above. See this answer for an example."}, {"id": 42234925, "score": 7, "vote": 0, "content": "<p>I tried the suggestions that others have posted and noticed that I was making a simple mistake.  You can't call <code>.grid()</code> on the same line that you declare the widget that you're going to hide.</p>\n<p>To clarify, I previously had this:</p>\n<pre><code class=\"python\">self.helpExpansion = ttk.Label(self.helpMenu, text=\"Expansion Widget\").grid(row=1, column=3, sticky=EW)\nself.helpExpansion.grid_remove()\n</code></pre>\n<p>But I got the error <code>AttributeError: 'NoneType' object has no attribute 'grid_remove'</code>.  To fix it, I had to make the call to <code>.grid()</code> on a new line, like this:</p>\n<pre><code class=\"python\">self.helpExpansion = ttk.Label(self.helpMenu, text=\"Help Expansion\")\nself.helpExpansion.grid(row=1, column=3, sticky=EW)\nself.helpExpansion.grid_remove()\n</code></pre>\n<p>Then to toggle between showing and hiding, I just alternated between calling <code>self.helpExpansion.grid()</code> (function arguments not needed) and <code>self.helpExpansion.grid_remove()</code>.</p>\n<p>For me it worked with both <code>tk.Label</code> or <code>ttk.Label</code>.  I'm using Python <code>2.7.13</code>.  Hope that helps!</p>\n", "abstract": "I tried the suggestions that others have posted and noticed that I was making a simple mistake.  You can't call .grid() on the same line that you declare the widget that you're going to hide. To clarify, I previously had this: But I got the error AttributeError: 'NoneType' object has no attribute 'grid_remove'.  To fix it, I had to make the call to .grid() on a new line, like this: Then to toggle between showing and hiding, I just alternated between calling self.helpExpansion.grid() (function arguments not needed) and self.helpExpansion.grid_remove(). For me it worked with both tk.Label or ttk.Label.  I'm using Python 2.7.13.  Hope that helps!"}]}, {"link": "https://stackoverflow.com/questions/21840133/how-to-display-text-on-the-screen-without-a-window-using-python", "question": {"id": "21840133", "title": "How to display text on the screen without a window using Python", "content": "<h2>The Problem:</h2>\n<p>I need to write text directly to the screen without a window. The text needs to appear above all other windows and full-screen applications and should not be clickable or interactable in any way.</p>\n<p>Example:\n<img alt=\"Screenshot of text on the screen.\" src=\"https://i.stack.imgur.com/cbMhX.png\"/>\nThe text doesn't need to have a transparent background as seen in the example. I can use either Python 2 or 3 on Windows 7.</p>\n<h2>My Attempt at a Solution:</h2>\n<p>I tried making a standalone label using Tkinter:</p>\n<p><strong>Edit:</strong> Improved with the help of Christian Rapp</p>\n<pre><code class=\"python\">import Tkinter\nlabel = Tkinter.Label(text='Text on the screen', font=('Times','30'), fg='black', bg='white')\nlabel.master.overrideredirect(True)\nlabel.master.geometry(\"+250+250\")\nlabel.master.lift()\nlabel.master.wm_attributes(\"-topmost\", True)\nlabel.master.wm_attributes(\"-disabled\", True)\nlabel.master.wm_attributes(\"-transparentcolor\", \"white\")\nlabel.pack()\nlabel.mainloop()\n</code></pre>\n<p>What works:</p>\n<ul>\n<li>The text is shown without a window</li>\n<li>The text remains above all other windows</li>\n<li>The background can be transparent</li>\n</ul>\n<p>What doesn't:</p>\n<ul>\n<li>The text does not show above fullscreen applications</li>\n<li>The text blocks click events that occur over it</li>\n<li>Background transparency isn't alpha, so there's hard edges</li>\n</ul>\n", "abstract": "I need to write text directly to the screen without a window. The text needs to appear above all other windows and full-screen applications and should not be clickable or interactable in any way. Example:\n\nThe text doesn't need to have a transparent background as seen in the example. I can use either Python 2 or 3 on Windows 7. I tried making a standalone label using Tkinter: Edit: Improved with the help of Christian Rapp What works: What doesn't:"}, "answers": [{"id": 22105730, "score": 38, "vote": 0, "content": "<p>It turns out there are two entirely different problems here. To show text over windows, you'll need to create an undecorated topmost window and chroma key the background. However, this won't work when there's a full-screen application running (such as a game). The only reliable way to show text over a full-screen application is to use a Direct3D hook.</p>\n<p>I haven't written up a Direct3D hook example, but I'll give two different solutions to the first problem.</p>\n<h1>Solution 1: Tkinter + pywin32</h1>\n<p>In this example, I do the majority of the work with Tkinter and use win32api to prevent the text from blocking mouse clicks. If win32api isn't available to you, then you can just remove that part of the code.</p>\n<pre><code class=\"python\">import Tkinter, win32api, win32con, pywintypes\n\nlabel = Tkinter.Label(text='Text on the screen', font=('Times New Roman','80'), fg='black', bg='white')\nlabel.master.overrideredirect(True)\nlabel.master.geometry(\"+250+250\")\nlabel.master.lift()\nlabel.master.wm_attributes(\"-topmost\", True)\nlabel.master.wm_attributes(\"-disabled\", True)\nlabel.master.wm_attributes(\"-transparentcolor\", \"white\")\n\nhWindow = pywintypes.HANDLE(int(label.master.frame(), 16))\n# http://msdn.microsoft.com/en-us/library/windows/desktop/ff700543(v=vs.85).aspx\n# The WS_EX_TRANSPARENT flag makes events (like mouse clicks) fall through the window.\nexStyle = win32con.WS_EX_COMPOSITED | win32con.WS_EX_LAYERED | win32con.WS_EX_NOACTIVATE | win32con.WS_EX_TOPMOST | win32con.WS_EX_TRANSPARENT\nwin32api.SetWindowLong(hWindow, win32con.GWL_EXSTYLE, exStyle)\n\nlabel.pack()\nlabel.mainloop()\n</code></pre>\n<h1>Solution 2: pywin32</h1>\n<p>This example does everything through pywin32. This makes it more complicated and less portable, but considerably more powerful. I've included links to the relevant parts of the Windows API throughout the code.</p>\n<pre><code class=\"python\">import win32api, win32con, win32gui, win32ui\n\ndef main():\n    hInstance = win32api.GetModuleHandle()\n    className = 'MyWindowClassName'\n\n    # http://msdn.microsoft.com/en-us/library/windows/desktop/ms633576(v=vs.85).aspx\n    # win32gui does not support WNDCLASSEX.\n    wndClass                = win32gui.WNDCLASS()\n    # http://msdn.microsoft.com/en-us/library/windows/desktop/ff729176(v=vs.85).aspx\n    wndClass.style          = win32con.CS_HREDRAW | win32con.CS_VREDRAW\n    wndClass.lpfnWndProc    = wndProc\n    wndClass.hInstance      = hInstance\n    wndClass.hCursor        = win32gui.LoadCursor(None, win32con.IDC_ARROW)\n    wndClass.hbrBackground  = win32gui.GetStockObject(win32con.WHITE_BRUSH)\n    wndClass.lpszClassName  = className\n    # win32gui does not support RegisterClassEx\n    wndClassAtom = win32gui.RegisterClass(wndClass)\n\n    # http://msdn.microsoft.com/en-us/library/windows/desktop/ff700543(v=vs.85).aspx\n    # Consider using: WS_EX_COMPOSITED, WS_EX_LAYERED, WS_EX_NOACTIVATE, WS_EX_TOOLWINDOW, WS_EX_TOPMOST, WS_EX_TRANSPARENT\n    # The WS_EX_TRANSPARENT flag makes events (like mouse clicks) fall through the window.\n    exStyle = win32con.WS_EX_COMPOSITED | win32con.WS_EX_LAYERED | win32con.WS_EX_NOACTIVATE | win32con.WS_EX_TOPMOST | win32con.WS_EX_TRANSPARENT\n\n    # http://msdn.microsoft.com/en-us/library/windows/desktop/ms632600(v=vs.85).aspx\n    # Consider using: WS_DISABLED, WS_POPUP, WS_VISIBLE\n    style = win32con.WS_DISABLED | win32con.WS_POPUP | win32con.WS_VISIBLE\n\n    # http://msdn.microsoft.com/en-us/library/windows/desktop/ms632680(v=vs.85).aspx\n    hWindow = win32gui.CreateWindowEx(\n        exStyle,\n        wndClassAtom,\n        None, # WindowName\n        style,\n        0, # x\n        0, # y\n        win32api.GetSystemMetrics(win32con.SM_CXSCREEN), # width\n        win32api.GetSystemMetrics(win32con.SM_CYSCREEN), # height\n        None, # hWndParent\n        None, # hMenu\n        hInstance,\n        None # lpParam\n    )\n\n    # http://msdn.microsoft.com/en-us/library/windows/desktop/ms633540(v=vs.85).aspx\n    win32gui.SetLayeredWindowAttributes(hWindow, 0x00ffffff, 255, win32con.LWA_COLORKEY | win32con.LWA_ALPHA)\n\n    # http://msdn.microsoft.com/en-us/library/windows/desktop/dd145167(v=vs.85).aspx\n    #win32gui.UpdateWindow(hWindow)\n\n    # http://msdn.microsoft.com/en-us/library/windows/desktop/ms633545(v=vs.85).aspx\n    win32gui.SetWindowPos(hWindow, win32con.HWND_TOPMOST, 0, 0, 0, 0,\n        win32con.SWP_NOACTIVATE | win32con.SWP_NOMOVE | win32con.SWP_NOSIZE | win32con.SWP_SHOWWINDOW)\n\n    # http://msdn.microsoft.com/en-us/library/windows/desktop/ms633548(v=vs.85).aspx\n    #win32gui.ShowWindow(hWindow, win32con.SW_SHOW)\n\n    win32gui.PumpMessages()\n\ndef wndProc(hWnd, message, wParam, lParam):\n    if message == win32con.WM_PAINT:\n        hdc, paintStruct = win32gui.BeginPaint(hWnd)\n\n        dpiScale = win32ui.GetDeviceCaps(hdc, win32con.LOGPIXELSX) / 60.0\n        fontSize = 80\n\n        # http://msdn.microsoft.com/en-us/library/windows/desktop/dd145037(v=vs.85).aspx\n        lf = win32gui.LOGFONT()\n        lf.lfFaceName = \"Times New Roman\"\n        lf.lfHeight = int(round(dpiScale * fontSize))\n        #lf.lfWeight = 150\n        # Use nonantialiased to remove the white edges around the text.\n        # lf.lfQuality = win32con.NONANTIALIASED_QUALITY\n        hf = win32gui.CreateFontIndirect(lf)\n        win32gui.SelectObject(hdc, hf)\n\n        rect = win32gui.GetClientRect(hWnd)\n        # http://msdn.microsoft.com/en-us/library/windows/desktop/dd162498(v=vs.85).aspx\n        win32gui.DrawText(\n            hdc,\n            'Text on the screen',\n            -1,\n            rect,\n            win32con.DT_CENTER | win32con.DT_NOCLIP | win32con.DT_SINGLELINE | win32con.DT_VCENTER\n        )\n        win32gui.EndPaint(hWnd, paintStruct)\n        return 0\n\n    elif message == win32con.WM_DESTROY:\n        print 'Closing the window.'\n        win32gui.PostQuitMessage(0)\n        return 0\n\n    else:\n        return win32gui.DefWindowProc(hWnd, message, wParam, lParam)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n", "abstract": "It turns out there are two entirely different problems here. To show text over windows, you'll need to create an undecorated topmost window and chroma key the background. However, this won't work when there's a full-screen application running (such as a game). The only reliable way to show text over a full-screen application is to use a Direct3D hook. I haven't written up a Direct3D hook example, but I'll give two different solutions to the first problem. In this example, I do the majority of the work with Tkinter and use win32api to prevent the text from blocking mouse clicks. If win32api isn't available to you, then you can just remove that part of the code. This example does everything through pywin32. This makes it more complicated and less portable, but considerably more powerful. I've included links to the relevant parts of the Windows API throughout the code."}, {"id": 54189951, "score": 0, "vote": 0, "content": "<p>I had a similar need and discovered that the <strong>pygame</strong> library did a REALLY good job for what I was seeking.  I was able to generate very large text that would update very fast and without flicker.  See this topic below (first code 'solution' is it):  </p>\n<p><a href=\"https://stackoverflow.com/questions/45427411/simple-way-to-display-text-on-screen-in-python\">Simple way to display text on screen in Python?</a></p>\n<p>I sped it up and it is fast.  Also made the font much larger and that didn't impact speed much at all.  All of that running on a little Orange Pi Lite board (&lt; $20).  You can launch it from the command line w/o GUI (or from a windowed desktop) and in either case it is full-screen and doesn't appear as a \"windowed\" app.</p>\n<p>My assumption, as I'm new to Python and Pygame, is that you could load an image file as the background and then put text atop of that.</p>\n<p>Oh, and I tried the same using the Tkinter example and it was slower, flickered, and the font just didn't look \"right\".  Pygame was clearly the winner.  It's designed to blit things to the screen without \"tearing\" as games need to not flicker when images update.  I was surprised that it wasn't dependent on OpenGL because it was fast.  I don't think OpenGL is supported on the Orange Pi (can't figure out a clear answer on that).  So for 2D stuff, wow, pygame is impressive.!</p>\n", "abstract": "I had a similar need and discovered that the pygame library did a REALLY good job for what I was seeking.  I was able to generate very large text that would update very fast and without flicker.  See this topic below (first code 'solution' is it):   Simple way to display text on screen in Python? I sped it up and it is fast.  Also made the font much larger and that didn't impact speed much at all.  All of that running on a little Orange Pi Lite board (< $20).  You can launch it from the command line w/o GUI (or from a windowed desktop) and in either case it is full-screen and doesn't appear as a \"windowed\" app. My assumption, as I'm new to Python and Pygame, is that you could load an image file as the background and then put text atop of that. Oh, and I tried the same using the Tkinter example and it was slower, flickered, and the font just didn't look \"right\".  Pygame was clearly the winner.  It's designed to blit things to the screen without \"tearing\" as games need to not flicker when images update.  I was surprised that it wasn't dependent on OpenGL because it was fast.  I don't think OpenGL is supported on the Orange Pi (can't figure out a clear answer on that).  So for 2D stuff, wow, pygame is impressive.!"}]}, {"link": "https://stackoverflow.com/questions/4995419/in-python-how-do-i-know-when-a-process-is-finished", "question": {"id": "4995419", "title": "In Python, how do I know when a process is finished?", "content": "<p>From within a Python GUI (PyGTK) I start a process (using multiprocessing).  The process takes a long time (~20 minutes) to finish.  When the process is finished I would like to clean it up (extract the results and join the process).  How do I know when the process has finished?</p>\n<p>My colleague suggested a busy loop within the parent process that checks if the child process has finished.  Surely there is a better way.</p>\n<p>In Unix, when a process is forked, <a href=\"http://users.actcom.co.il/~choo/lupg/tutorials/multi-process/multi-process.html#child_death_async\" rel=\"noreferrer\">a signal handler is called from within the parent process when the child process has finished</a>.  But I cannot see anything like that in Python.  Am I missing something?</p>\n<p>How is it that the end of a child process can be observed from within the parent process?  (Of course, I do not want to call Process.join() as it would freeze up the GUI interface.)</p>\n<p>This question is not limited to multi-processing: I have exactly the same problem with multi-threading.  </p>\n", "abstract": "From within a Python GUI (PyGTK) I start a process (using multiprocessing).  The process takes a long time (~20 minutes) to finish.  When the process is finished I would like to clean it up (extract the results and join the process).  How do I know when the process has finished? My colleague suggested a busy loop within the parent process that checks if the child process has finished.  Surely there is a better way. In Unix, when a process is forked, a signal handler is called from within the parent process when the child process has finished.  But I cannot see anything like that in Python.  Am I missing something? How is it that the end of a child process can be observed from within the parent process?  (Of course, I do not want to call Process.join() as it would freeze up the GUI interface.) This question is not limited to multi-processing: I have exactly the same problem with multi-threading.  "}, "answers": [{"id": 4999697, "score": 11, "vote": 0, "content": "<p>I think as a part of making python multi-platform, simple things like SIGCHLD must be done yourself.  Agreed, this is a little more work when all you want to do is know when the child is done, but it really isn't THAT painful.  Consider the following that uses a child process to do the work, two multiprocessing.Event instances, and a thread to check if the child process is done:</p>\n<pre><code class=\"python\">import threading\nfrom multiprocessing import Process, Event\nfrom time import sleep\n\ndef childsPlay(event):\n    print \"Child started\"\n    for i in range(3):\n        print \"Child is playing...\"\n        sleep(1)\n    print \"Child done\"\n    event.set()\n\ndef checkChild(event, killEvent):\n    event.wait()\n    print \"Child checked, and is done playing\"\n    if raw_input(\"Do again? y/n:\") == \"y\":\n        event.clear()\n        t = threading.Thread(target=checkChild, args=(event, killEvent))\n        t.start()\n        p = Process(target=childsPlay, args=(event,))\n        p.start()\n    else:\n        cleanChild()\n        killEvent.set()\n\ndef cleanChild():\n    print \"Cleaning up the child...\"\n\nif __name__ == '__main__':\n    event = Event()\n    killEvent = Event()\n\n    # process to do work\n    p = Process(target=childsPlay, args=(event,))\n    p.start()\n\n    # thread to check on child process\n    t = threading.Thread(target=checkChild, args=(event, killEvent))\n    t.start()\n\n    try:\n        while not killEvent.is_set():\n            print \"GUI running...\"\n            sleep(1)\n    except KeyboardInterrupt:\n        print \"Quitting...\"\n        exit(0)\n    finally:\n        print \"Main done\"\n</code></pre>\n<h2>EDIT</h2>\n<p>Joining to all processes and threads created is a good practice because it will help indicate when zombie (never-finishing) processes/threads are being created.  I've altered the above code making a ChildChecker class that inherits from threading.Thread.  It's sole purpose is to start a job in a separate process, wait for that process to finish, and then notify the GUI when everything is complete.  Joining on the ChildChecker will also join the process it is \"checking\".  Now, if the process doesn't join after 5 seconds, the thread will force terminate the process.  Enter \"y\" creates starts a child process running \"endlessChildsPlay\" that must demonstrate force termination. </p>\n<pre><code class=\"python\">import threading\nfrom multiprocessing import Process, Event\nfrom time import sleep\n\ndef childsPlay(event):\n    print \"Child started\"\n    for i in range(3):\n        print \"Child is playing...\"\n        sleep(1)\n    print \"Child done\"\n    event.set()\n\ndef endlessChildsPlay(event):\n    print \"Endless child started\"\n    while True:\n        print \"Endless child is playing...\"\n        sleep(1)\n        event.set()\n    print \"Endless child done\"\n\nclass ChildChecker(threading.Thread):\n    def __init__(self, killEvent):\n        super(ChildChecker, self).__init__()\n        self.killEvent = killEvent\n        self.event = Event()\n        self.process = Process(target=childsPlay, args=(self.event,))\n\n    def run(self):\n        self.process.start()\n\n        while not self.killEvent.is_set():\n            self.event.wait()\n            print \"Child checked, and is done playing\"\n            if raw_input(\"Do again? y/n:\") == \"y\":\n                self.event.clear()\n                self.process = Process(target=endlessChildsPlay, args=(self.event,))\n                self.process.start()\n            else:\n                self.cleanChild()\n                self.killEvent.set()\n\n    def join(self):\n        print \"Joining child process\"\n        # Timeout on 5 seconds\n        self.process.join(5)\n\n        if self.process.is_alive():\n            print \"Child did not join!  Killing..\"\n            self.process.terminate()\n        print \"Joining ChildChecker thread\"\n        super(ChildChecker, self).join()\n\n\n    def cleanChild(self):\n        print \"Cleaning up the child...\"\n\nif __name__ == '__main__':\n    killEvent = Event()\n    # thread to check on child process\n    t = ChildChecker(killEvent)\n    t.start()\n\n    try:\n        while not killEvent.is_set():\n            print \"GUI running...\"\n            sleep(1)\n    except KeyboardInterrupt:\n        print \"Quitting...\"\n        exit(0)\n    finally:\n        t.join()\n        print \"Main done\"\n</code></pre>\n", "abstract": "I think as a part of making python multi-platform, simple things like SIGCHLD must be done yourself.  Agreed, this is a little more work when all you want to do is know when the child is done, but it really isn't THAT painful.  Consider the following that uses a child process to do the work, two multiprocessing.Event instances, and a thread to check if the child process is done: Joining to all processes and threads created is a good practice because it will help indicate when zombie (never-finishing) processes/threads are being created.  I've altered the above code making a ChildChecker class that inherits from threading.Thread.  It's sole purpose is to start a job in a separate process, wait for that process to finish, and then notify the GUI when everything is complete.  Joining on the ChildChecker will also join the process it is \"checking\".  Now, if the process doesn't join after 5 seconds, the thread will force terminate the process.  Enter \"y\" creates starts a child process running \"endlessChildsPlay\" that must demonstrate force termination. "}, {"id": 5033049, "score": 5, "vote": 0, "content": "<p>This answer is really simple!  (It just took me <em>days</em> to work it out.)</p>\n<p>Combined with PyGTK's idle_add(), you can create an AutoJoiningThread.  The total code is borderline trivial:</p>\n<pre><code class=\"python\">class AutoJoiningThread(threading.Thread):\n    def run(self):\n        threading.Thread.run(self)\n        gobject.idle_add(self.join)\n</code></pre>\n<p>If you want to do more than just join (such as collecting results) then you can extend the above class to emit signals on completion, as is done in the following example:</p>\n<pre><code class=\"python\">import threading\nimport time\nimport sys\nimport gobject\ngobject.threads_init()\n\nclass Child:\n    def __init__(self):\n        self.result = None\n\n    def play(self, count):\n        print \"Child starting to play.\"\n        for i in range(count):\n            print \"Child playing.\"\n            time.sleep(1)\n        print \"Child finished playing.\"\n        self.result = 42\n\n    def get_result(self, obj):\n        print \"The result was \"+str(self.result)\n\nclass AutoJoiningThread(threading.Thread, gobject.GObject):\n    __gsignals__ = {\n        'finished': (gobject.SIGNAL_RUN_LAST,\n                     gobject.TYPE_NONE,\n                     ())\n        }\n\n    def __init__(self, *args, **kwargs):\n        threading.Thread.__init__(self, *args, **kwargs)\n        gobject.GObject.__init__(self)\n\n    def run(self):\n        threading.Thread.run(self)\n        gobject.idle_add(self.join)\n        gobject.idle_add(self.emit, 'finished')\n\n    def join(self):\n        threading.Thread.join(self)\n        print \"Called Thread.join()\"\n\nif __name__ == '__main__':\n    print \"Creating child\"\n    child = Child()\n    print \"Creating thread\"\n    thread = AutoJoiningThread(target=child.play,\n                               args=(3,))\n    thread.connect('finished', child.get_result)\n    print \"Starting thread\"\n    thread.start()\n    print \"Running mainloop (Ctrl+C to exit)\"\n    mainloop = gobject.MainLoop()\n\n    try:\n        mainloop.run()\n    except KeyboardInterrupt:\n        print \"Received KeyboardInterrupt.  Quiting.\"\n        sys.exit()\n\n    print \"God knows how we got here.  Quiting.\"\n    sys.exit()\n</code></pre>\n<p>The output of the above example will depend on the order the threads are executed, but it will be similar to:</p>\n<pre>Creating child\nCreating thread\nStarting thread\nChild starting to play.\n Child playing.\nRunning mainloop (Ctrl+C to exit)\nChild playing.\nChild playing.\nChild finished playing.\nCalled Thread.join()\nThe result was 42\n^CReceived KeyboardInterrupt.  Quiting.</pre>\n<p>It's not possible to create an AutoJoiningProcess in the same way (because we cannot call idle_add() across two different processes), however we can use an AutoJoiningThread to get what we want:</p>\n<pre><code class=\"python\">class AutoJoiningProcess(multiprocessing.Process):\n    def start(self):\n        thread = AutoJoiningThread(target=self.start_process)\n        thread.start() # automatically joins\n\n    def start_process(self):\n        multiprocessing.Process.start(self)\n        self.join()\n</code></pre>\n<p>To demonstrate AutoJoiningProcess here is another example:</p>\n<pre><code class=\"python\">import threading\nimport multiprocessing\nimport time\nimport sys\nimport gobject\ngobject.threads_init()\n\nclass Child:\n    def __init__(self):\n        self.result = multiprocessing.Manager().list()\n\n    def play(self, count):\n        print \"Child starting to play.\"\n        for i in range(count):\n            print \"Child playing.\"\n            time.sleep(1)\n    print \"Child finished playing.\"\n        self.result.append(42)\n\n    def get_result(self, obj):\n        print \"The result was \"+str(self.result)\n\nclass AutoJoiningThread(threading.Thread, gobject.GObject):\n    __gsignals__ = {\n        'finished': (gobject.SIGNAL_RUN_LAST,\n                     gobject.TYPE_NONE,\n                     ())\n    }\n\n    def __init__(self, *args, **kwargs):\n        threading.Thread.__init__(self, *args, **kwargs)\n        gobject.GObject.__init__(self)\n\n    def run(self):\n        threading.Thread.run(self)\n        gobject.idle_add(self.join)\n        gobject.idle_add(self.emit, 'finished')\n\n    def join(self):\n        threading.Thread.join(self)\n        print \"Called Thread.join()\"\n\nclass AutoJoiningProcess(multiprocessing.Process, gobject.GObject):\n    __gsignals__ = {\n        'finished': (gobject.SIGNAL_RUN_LAST,\n                     gobject.TYPE_NONE,\n                     ())\n        }\n\n    def __init__(self, *args, **kwargs):\n        multiprocessing.Process.__init__(self, *args, **kwargs)\n        gobject.GObject.__init__(self)\n\n    def start(self):\n        thread = AutoJoiningThread(target=self.start_process)\n        thread.start()\n\n    def start_process(self):\n        multiprocessing.Process.start(self)\n        self.join()\n        gobject.idle_add(self.emit, 'finished')\n\n    def join(self):\n        multiprocessing.Process.join(self)\n        print \"Called Process.join()\"\n\nif __name__ == '__main__':\n    print \"Creating child\"\n    child = Child()\n    print \"Creating thread\"\n    process = AutoJoiningProcess(target=child.play,\n                               args=(3,))\n    process.connect('finished',child.get_result)\n    print \"Starting thread\"\n    process.start()\n    print \"Running mainloop (Ctrl+C to exit)\"\n    mainloop = gobject.MainLoop()\n\n    try:\n        mainloop.run()\n    except KeyboardInterrupt:\n        print \"Received KeyboardInterrupt.  Quiting.\"\n        sys.exit()\n\n    print \"God knows how we got here.  Quiting.\"\n    sys.exit()\n</code></pre>\n<p>The resulting output will be very similar to the example above, except this time we have both the process joining and it's attendant thread joining too:</p>\n<pre>Creating child\nCreating thread\nStarting thread\nRunning mainloop (Ctrl+C to exit)\n Child starting to play.\nChild playing.\nChild playing.\nChild playing.\nChild finished playing.\nCalled Process.join()\nThe result was [42]\nCalled Thread.join()\n^CReceived KeyboardInterrupt.  Quiting.</pre>\n<p>Unfortunately:</p>\n<ol>\n<li>This solution is dependent on gobject, due to the use of idle_add().  gobject is used by PyGTK.</li>\n<li>This is not a true parent/child relationship.  If one of these threads is started by another thread, then it will nonetheless be joined by the thread running the mainloop, not the parent thread.  This problem holds true for AutoJoiningProcess too, except there I imagine an exception would be thrown.</li>\n</ol>\n<p>Thus to use this approach, it would be best to only create threads/process from within the mainloop/GUI.</p>\n", "abstract": "This answer is really simple!  (It just took me days to work it out.) Combined with PyGTK's idle_add(), you can create an AutoJoiningThread.  The total code is borderline trivial: If you want to do more than just join (such as collecting results) then you can extend the above class to emit signals on completion, as is done in the following example: The output of the above example will depend on the order the threads are executed, but it will be similar to: It's not possible to create an AutoJoiningProcess in the same way (because we cannot call idle_add() across two different processes), however we can use an AutoJoiningThread to get what we want: To demonstrate AutoJoiningProcess here is another example: The resulting output will be very similar to the example above, except this time we have both the process joining and it's attendant thread joining too: Unfortunately: Thus to use this approach, it would be best to only create threads/process from within the mainloop/GUI."}, {"id": 4995469, "score": 2, "vote": 0, "content": "<p>You can use a <a href=\"http://docs.python.org/library/multiprocessing.html#exchanging-objects-between-processes\" rel=\"nofollow\">queue</a> to communicate with child processes. You can stick intermediate results on it, or messages indicating that milestones have been hit (for progress bars) or just a message indicating that the process is ready to be joined. Polling it with <a href=\"http://docs.python.org/library/multiprocessing.html#multiprocessing.Queue.empty\" rel=\"nofollow\">empty</a> is easy and fast.</p>\n<p>If you really only want to know if it's done, you can watch the <a href=\"http://docs.python.org/library/multiprocessing.html#multiprocessing.Process.exitcode\" rel=\"nofollow\">exitcode</a> of your process or poll <a href=\"http://docs.python.org/library/multiprocessing.html#multiprocessing.Process.is_alive\" rel=\"nofollow\">is_alive()</a>.</p>\n", "abstract": "You can use a queue to communicate with child processes. You can stick intermediate results on it, or messages indicating that milestones have been hit (for progress bars) or just a message indicating that the process is ready to be joined. Polling it with empty is easy and fast. If you really only want to know if it's done, you can watch the exitcode of your process or poll is_alive()."}, {"id": 4997490, "score": 2, "vote": 0, "content": "<p>In my efforts to try to find an answer to my own question, I stumbled across PyGTK's <a href=\"http://www.pygtk.org/pygtk2tutorial/sec-IdleFunctions.html\" rel=\"nofollow\">idle_add() function</a>.  This gives me the following possibility:</p>\n<ol>\n<li>Create a new child process that communicates via a Queue.</li>\n<li>Create a listener thread that listens to the Queue, when the child process sends the listener a message saying that it is finished, the listener calls idle_add() that sets up a callback.</li>\n<li>During the next time around the main loop the parent process will call the callback.</li>\n<li>The callback can extract results, join the child process and join the listener-thread.</li>\n</ol>\n<p>This seems an overly complex way to re-create Unix's call-callback-when-child-process-is-done.</p>\n<p>This must be an uber-common problem with GUIs in Python.  Surely there is a standard pattern to solve this problem?</p>\n", "abstract": "In my efforts to try to find an answer to my own question, I stumbled across PyGTK's idle_add() function.  This gives me the following possibility: This seems an overly complex way to re-create Unix's call-callback-when-child-process-is-done. This must be an uber-common problem with GUIs in Python.  Surely there is a standard pattern to solve this problem?"}, {"id": 4995519, "score": 1, "vote": 0, "content": "<p>have a look at the subprocess module:</p>\n<p><a href=\"http://docs.python.org/library/subprocess.html\" rel=\"nofollow\">http://docs.python.org/library/subprocess.html</a></p>\n<pre><code class=\"python\">import subprocess\nlet pipe = subprocess.Popen(\"ls -l\", stdout=subprocess.PIPE)\nallText = pipe.stdout.read()\npipe.wait()\nretVal = pipe.returncode\n</code></pre>\n", "abstract": "have a look at the subprocess module: http://docs.python.org/library/subprocess.html"}]}, {"link": "https://stackoverflow.com/questions/32019556/matplotlib-crashing-tkinter-application", "question": {"id": "32019556", "title": "Matplotlib Crashing tkinter Application", "content": "<p>I am building an application that embeds a matplotlib figure into the GUI.  The problem is that my app is crashing as soon as I add anything from matplotlib into my code (except for the imports, those work as usual).  The problem occurs in my class <code>Solver_App</code> at <code>tk.Tk.__init__(self, *args, **kwargs)</code>.  When I run the code, I get a massive error and the app crashes.  Here is some of my code:</p>\n<pre><code class=\"python\">import tkinter as tk\nfrom tkinter import ttk\n\nimport matplotlib\nfrom matplotlib import pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nfrom matplotlib.backends.backend_tkagg import FigureCanvasTkAgg, NavigationToolbar2TkAgg\nfrom matplotlib.figure import Figure\n\n# Setting up figures for integration in GUI:\nfig_3D = plt.figure()\nfig_2D = plt.figure()\na_3D = fig_3D.add_subplot(111, projection=\"3d\")\na_2D = fig_2D.add_subplot(111)\na_3D.plot_wireframe([1, 2, 3, 4, 5], [1, 3, 7, 6, 4], [1, 2, 3, 4, 5], color=\"blue\")\n\nclass Solver_App(tk.Tk, ttk.Frame):\n\n    def __init__(self, *args, **kwargs):\n\n        tk.Tk.__init__(self, *args, **kwargs)  # This is where the app crashes.\n\n        # Equation frame holds everything related to the input and configuration of the equations.\n        equation_frame = ttk.Frame(self)\n        equation_frame.pack(side=\"bottom\", fill=\"x\", pady=50, padx=50)\n\n        # More code goes here...\n\n# There are more classes with a similar setup as the one above...\n\napp = Solver_App()\napp.mainloop()\n</code></pre>\n<p>And here is the massive error I get when running the code:</p>\n<pre><code class=\"python\">2015-08-14 15:18:29.142 Python[50796:18837594] -[NSApplication _setup:]: unrecognized selector sent to instance 0x10216a830\n2015-08-14 15:18:29.143 Python[50796:18837594] An uncaught exception was raised\n2015-08-14 15:18:29.143 Python[50796:18837594] -[NSApplication _setup:]: unrecognized selector sent to instance 0x10216a830\n2015-08-14 15:18:29.144 Python[50796:18837594] (\n    0   CoreFoundation                      0x00007fff9901b03c __exceptionPreprocess + 172\n    1   libobjc.A.dylib                     0x00007fff9436476e objc_exception_throw + 43\n    2   CoreFoundation                      0x00007fff9901e0ad -[NSObject(NSObject) doesNotRecognizeSelector:] + 205\n    3   CoreFoundation                      0x00007fff98f63e24 ___forwarding___ + 1028\n    4   CoreFoundation                      0x00007fff98f63998 _CF_forwarding_prep_0 + 120\n    5   Tk                                  0x00000001024ad527 TkpInit + 476\n    6   Tk                                  0x0000000102427aca Tk_Init + 1788\n    7   _tkinter.so                         0x00000001006e5f2d Tcl_AppInit + 77\n    8   _tkinter.so                         0x00000001006e30d6 Tkinter_Create + 934\n    9   Python                              0x00000001000e44ce PyEval_EvalFrameEx + 28894\n    10  Python                              0x00000001000e5ced PyEval_EvalCodeEx + 2349\n    11  Python                              0x000000010003e8ba function_call + 186\n    12  Python                              0x000000010000d3c8 PyObject_Call + 104\n    13  Python                              0x00000001000e0cb9 PyEval_EvalFrameEx + 14537\n    14  Python                              0x00000001000e5ced PyEval_EvalCodeEx + 2349\n    15  Python                              0x000000010003e8ba function_call + 186\n    16  Python                              0x000000010000d3c8 PyObject_Call + 104\n    17  Python                              0x000000010002802c method_call + 140\n    18  Python                              0x000000010000d3c8 PyObject_Call + 104\n    19  Python                              0x000000010007b831 slot_tp_init + 81\n    20  Python                              0x0000000100072d14 type_call + 212\n    21  Python                              0x000000010000d3c8 PyObject_Call + 104\n    22  Python                              0x00000001000e1b09 PyEval_EvalFrameEx + 18201\n    23  Python                              0x00000001000e5ced PyEval_EvalCodeEx + 2349\n    24  Python                              0x00000001000e5daf PyEval_EvalCode + 63\n    25  Python                              0x000000010011048e PyRun_FileExFlags + 206\n    26  Python                              0x000000010011083d PyRun_SimpleFileExFlags + 717\n    27  Python                              0x000000010012810e Py_Main + 3262\n    28  Python                              0x0000000100000e32 Python + 3634\n    29  Python                              0x0000000100000c84 Python + 3204\n    30  ???                                 0x0000000000000002 0x0 + 2\n)\n2015-08-14 15:18:29.144 Python[50796:18837594] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[NSApplication _setup:]: unrecognized selector sent to instance 0x10216a830'\n*** First throw call stack:\n(\n    0   CoreFoundation                      0x00007fff9901b03c __exceptionPreprocess + 172\n    1   libobjc.A.dylib                     0x00007fff9436476e objc_exception_throw + 43\n    2   CoreFoundation                      0x00007fff9901e0ad -[NSObject(NSObject) doesNotRecognizeSelector:] + 205\n    3   CoreFoundation                      0x00007fff98f63e24 ___forwarding___ + 1028\n    4   CoreFoundation                      0x00007fff98f63998 _CF_forwarding_prep_0 + 120\n    5   Tk                                  0x00000001024ad527 TkpInit + 476\n    6   Tk                                  0x0000000102427aca Tk_Init + 1788\n    7   _tkinter.so                         0x00000001006e5f2d Tcl_AppInit + 77\n    8   _tkinter.so                         0x00000001006e30d6 Tkinter_Create + 934\n    9   Python                              0x00000001000e44ce PyEval_EvalFrameEx + 28894\n    10  Python                              0x00000001000e5ced PyEval_EvalCodeEx + 2349\n    11  Python                              0x000000010003e8ba function_call + 186\n    12  Python                              0x000000010000d3c8 PyObject_Call + 104\n    13  Python                              0x00000001000e0cb9 PyEval_EvalFrameEx + 14537\n    14  Python                              0x00000001000e5ced PyEval_EvalCodeEx + 2349\n    15  Python                              0x000000010003e8ba function_call + 186\n    16  Python                              0x000000010000d3c8 PyObject_Call + 104\n    17  Python                              0x000000010002802c method_call + 140\n    18  Python                              0x000000010000d3c8 PyObject_Call + 104\n    19  Python                              0x000000010007b831 slot_tp_init + 81\n    20  Python                              0x0000000100072d14 type_call + 212\n    21  Python                              0x000000010000d3c8 PyObject_Call + 104\n    22  Python                              0x00000001000e1b09 PyEval_EvalFrameEx + 18201\n    23  Python                              0x00000001000e5ced PyEval_EvalCodeEx + 2349\n    24  Python                              0x00000001000e5daf PyEval_EvalCode + 63\n    25  Python                              0x000000010011048e PyRun_FileExFlags + 206\n    26  Python                              0x000000010011083d PyRun_SimpleFileExFlags + 717\n    27  Python                              0x000000010012810e Py_Main + 3262\n    28  Python                              0x0000000100000e32 Python + 3634\n    29  Python                              0x0000000100000c84 Python + 3204\n    30  ???                                 0x0000000000000002 0x0 + 2\n)\nlibc++abi.dylib: terminating with uncaught exception of type NSException\n</code></pre>\n<p>I have been referencing code from a tutorial [found here](<a href=\"http://pythonprogramming.net/how-to-embed-matplotlib-graph-tkinter-gui/\" rel=\"noreferrer\">http://pythonprogramming.net/how-to-embed-matplotlib-graph-tkinter-gui/</a>\"How to embed a Matplotlib graph to your Tkinter GUI\"), but their example seems to work fine.  What is causing this problem and how can it be fixed?</p>\n<ul>\n<li>I am using Python 3.4, matplotlib 1.4.3, and running Mac OS Yosemite.</li>\n</ul>\n", "abstract": "I am building an application that embeds a matplotlib figure into the GUI.  The problem is that my app is crashing as soon as I add anything from matplotlib into my code (except for the imports, those work as usual).  The problem occurs in my class Solver_App at tk.Tk.__init__(self, *args, **kwargs).  When I run the code, I get a massive error and the app crashes.  Here is some of my code: And here is the massive error I get when running the code: I have been referencing code from a tutorial [found here](http://pythonprogramming.net/how-to-embed-matplotlib-graph-tkinter-gui/\"How to embed a Matplotlib graph to your Tkinter GUI\"), but their example seems to work fine.  What is causing this problem and how can it be fixed?"}, "answers": [{"id": 34109240, "score": 65, "vote": 0, "content": "<p>You need to set the TkAgg backend explicitly.  I could reproduce your bug.  With the following code, the problem is resolved.</p>\n<pre><code class=\"python\">import matplotlib\nmatplotlib.use(\"TkAgg\")\nfrom matplotlib import pyplot as plt\n</code></pre>\n<p>Note that setting the TkAgg backend <em>after</em> importing pyplot does not work either; it crashes too. You need to set it before importing pyplot. (Tested with MPL 1.4.3, tkinter.TkVersion 8.6)</p>\n", "abstract": "You need to set the TkAgg backend explicitly.  I could reproduce your bug.  With the following code, the problem is resolved. Note that setting the TkAgg backend after importing pyplot does not work either; it crashes too. You need to set it before importing pyplot. (Tested with MPL 1.4.3, tkinter.TkVersion 8.6)"}, {"id": 54664898, "score": 0, "vote": 0, "content": "<p>If you don't want to edit the code, you can use set the following environment variable that <code>matplotlib</code> is reading:</p>\n<pre><code class=\"python\">MPLBACKEND=TkAgg\n</code></pre>\n<p>This way, no matter when you import <code>pyplot</code>, it'll work</p>\n", "abstract": "If you don't want to edit the code, you can use set the following environment variable that matplotlib is reading: This way, no matter when you import pyplot, it'll work"}, {"id": 72268841, "score": 0, "vote": 0, "content": "<p>After importing matplotlib.pyplot, set the following:</p>\n<pre><code class=\"python\">plt.rcParams['keymap.quit'] = ''\n</code></pre>\n<p>This will avoid a mess to be created if plotting is interrupted.\nIt works for me.</p>\n", "abstract": "After importing matplotlib.pyplot, set the following: This will avoid a mess to be created if plotting is interrupted.\nIt works for me."}, {"id": 72268982, "score": 0, "vote": 0, "content": "<p>After importing matplotlib.pyplot, set the following:</p>\n<pre><code class=\"python\">plt.rcParams['keymap.quit'] = ''\n</code></pre>\n<p>This will avoid a mess to be created if plotting is interrupted. But only with a \"soft\" exit, i.e. with code (keyboard/mouse event, etc.). It doesn't solve the \"mess\" problem if the figure (window) is closed by clicking the \"exit\" button (\"X\"). (This has still to be solved ... I haven't!)</p>\n<p>Example:</p>\n<pre><code class=\"python\">import numpy as np\nfrom matplotlib import pyplot as plt\n\ndef keypress(e):\n  global animation\n  animation = False\n\nplt.connect('key_press_event', keypress)\nplt.rcParams['keymap.quit'] = '' # This will avoid mess if plotting is interrupted!\n\nanimation = True\n\ndelay = 0.5; animation = True\nfor i in range(1,10):\n  if not animation: break\n  y = np.random.normal(loc=0.5, scale=0.4, size=1000)\n  plt.plot(y)\n  plt.pause(delay)\n</code></pre>\n<p>During the animation, pressing any key will stop it smoothly.</p>\n", "abstract": "After importing matplotlib.pyplot, set the following: This will avoid a mess to be created if plotting is interrupted. But only with a \"soft\" exit, i.e. with code (keyboard/mouse event, etc.). It doesn't solve the \"mess\" problem if the figure (window) is closed by clicking the \"exit\" button (\"X\"). (This has still to be solved ... I haven't!) Example: During the animation, pressing any key will stop it smoothly."}, {"id": 59818682, "score": -1, "vote": 0, "content": "<p>@DonCristobal's answer helped me and therefore I tried to upvote or add a comment to it but stackoverflow prevents me from doing any of that citing certain points I must reach before I can comment or upvote. The solution suggested by @DonCristobal worked for my configuration given below:</p>\n<p><code>Mac catalina, python 3.6 &amp; matplotlib 3.0.3</code></p>\n<p>Here is what i did -</p>\n<p>Modified</p>\n<pre><code class=\"python\">import matplotlib.pyplot as plt\n</code></pre>\n<p>to</p>\n<pre><code class=\"python\">import matplotlib\n\nmatplotlib.use(\"TkAgg\")\n\nfrom matplotlib import pyplot as plt\n</code></pre>\n", "abstract": "@DonCristobal's answer helped me and therefore I tried to upvote or add a comment to it but stackoverflow prevents me from doing any of that citing certain points I must reach before I can comment or upvote. The solution suggested by @DonCristobal worked for my configuration given below: Mac catalina, python 3.6 & matplotlib 3.0.3 Here is what i did - Modified to"}, {"id": 60530682, "score": -1, "vote": 0, "content": "<p>I am still getting crashes with this:</p>\n<pre><code class=\"python\">import matplotlib\nmatplotlib.use(\"TkAgg\")\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nx = np.linspace(0, 2 * np.pi, 400)\ny = np.sin(x ** 2)\n\nf = plt.figure()\nplt.plot(x, y)\nf.show()\nplt.pause(0.0001)\n</code></pre>\n<p>The window with a sinappears and then the kernel freezes.\nWindows 10 with Anaconda3</p>\n", "abstract": "I am still getting crashes with this: The window with a sinappears and then the kernel freezes.\nWindows 10 with Anaconda3"}, {"id": 61177974, "score": -1, "vote": 0, "content": "<p>Once i updated to the latest Python environment (3.8.2) this error went away without the need to use matplotlib.use(\"TkAgg\"). </p>\n", "abstract": "Once i updated to the latest Python environment (3.8.2) this error went away without the need to use matplotlib.use(\"TkAgg\"). "}]}, {"link": "https://stackoverflow.com/questions/11825322/python-code-to-automate-desktop-activities-in-windows", "question": {"id": "11825322", "title": "Python code to automate desktop activities in windows", "content": "<p>I want to automate desktop activities in Windows environment using Python. How it can be done? Some examples will also be helpful.</p>\n<p>By desktop activities, I mean actions such as taking control over mouse and keyboard, access active windows properties, double-click on an icon on the desktop, minimize and maximize windows, enter data to an input popup window through keyboard, etc.</p>\n", "abstract": "I want to automate desktop activities in Windows environment using Python. How it can be done? Some examples will also be helpful. By desktop activities, I mean actions such as taking control over mouse and keyboard, access active windows properties, double-click on an icon on the desktop, minimize and maximize windows, enter data to an input popup window through keyboard, etc."}, "answers": [{"id": 11827165, "score": 22, "vote": 0, "content": "<p>Have a look at <a href=\"http://sikuli.org/\" rel=\"noreferrer\">SIKULI</a>.</p>\n<blockquote>\n<p>Sikuli is a visual technology to automate and test graphical user\n  interfaces (GUI) using images (screenshots).</p>\n</blockquote>\n<p>SIKULI uses a very clever combination of taking screenshots, and embedding them into your python (it's <a href=\"http://www.jython.org/\" rel=\"noreferrer\">jython</a>, actually) script.</p>\n<hr/>\n<p>Take screenshots:</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/zqfRS.png\"/></p>\n<p>and use them in your code:</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/1bC42.png\"/></p>\n", "abstract": "Have a look at SIKULI. Sikuli is a visual technology to automate and test graphical user\n  interfaces (GUI) using images (screenshots). SIKULI uses a very clever combination of taking screenshots, and embedding them into your python (it's jython, actually) script. Take screenshots:  and use them in your code: "}, {"id": 11826622, "score": 9, "vote": 0, "content": "<p>There are different ways of automating user interfaces in Windows that can be accessed via Python (using <code>ctypes</code> or some of the Python windows bindings):</p>\n<ol>\n<li><p>Raw windows APIs -- <code>Get/SetCursorPos</code> for the mouse, HWND APIs like <code>GetFocus</code> and <code>GetForegroundWindow</code></p></li>\n<li><p><code>AutoIt</code> -- an automation scripting language: <a href=\"https://stackoverflow.com/questions/3301561/calling-autoit-functions-in-python\">Calling AutoIt Functions in Python</a></p></li>\n<li><p>Microsoft Active Accessibility (<code>MSAA</code>) / WinEvent -- an API for interrogating a UI through the accessibility APIs in Win95.</p></li>\n<li><p>UI/Automation (<code>UIA</code>) -- a replacement for <code>MSAA</code> introduced in Vista (available for XP SP3 IIRC).</p></li>\n</ol>\n<p>Automating a user interface to test it is a non-trivial task. There are a lot of gotchas that can trip you up.</p>\n<p>I would suggest testing your automation framework in an automated way so you can verify that it works on the platforms you are testing (to identify failures in the automation <code>API</code> vs failures in the application).</p>\n<p>Another consideration is how to deal with localization. Note also that the names for Minimize/Maximize/... are localized as well, and can be in a different language to the application (system vs. user locale)!</p>\n<p>In pseudo-code, an <code>MSAA</code> program to minimize an application would look something like:</p>\n<pre><code class=\"python\">window = AccessibleObjectFromWindow(FindWindow(\"My Window\"))\ntitlebar = [x for x in window.AccessibleChildren if x.accRole == TitleBar]\nminimize = [x for x in titlebar[0].AccessibleChildren if x.Name == \"Minimize\"]\nif len(minimize) != 0: # may already be minimized\n    mimimize[0].accDoDefaultAction()\n</code></pre>\n<p><code>MSAA</code> accessible items are stored as <code>(object: IAccessible, childId: int)</code> pairs. Care is needed here to get the calls correct (e.g. <code>get_accChildCount</code> only uses the <code>IAccessible</code>, so when <code>childId</code> is not 0 you must return 0 instead of calling <code>get_accChildCount</code>)!</p>\n<p><code>IAccessible</code> calls can return different error codes to indicate <code>\"this object does not support this property\"</code> -- e.g. <code>DISP_E_MEMBERNOTFOUND</code> or <code>E_NOTIMPL</code>.</p>\n<p>Be aware of the state of the window. If the window is maximized then minimized, restore will restore the window to its maximized state, so you need to restore it again to get it back to the normal/windowed state.</p>\n<p>The <code>MSAA</code> and <code>UIA</code> APIs don't support right mouse button clicks, so you need to use a <code>Win32 API</code> to trigger it.</p>\n<p>The <code>MSAA</code> model does not support treeview heirarchy information -- it displays it as a flat list. On the other hand, <code>UIA</code> will only enumerate elements that are visible so you will not be able to access elements in the <code>UIA</code> tree that are collapsed.</p>\n", "abstract": "There are different ways of automating user interfaces in Windows that can be accessed via Python (using ctypes or some of the Python windows bindings): Raw windows APIs -- Get/SetCursorPos for the mouse, HWND APIs like GetFocus and GetForegroundWindow AutoIt -- an automation scripting language: Calling AutoIt Functions in Python Microsoft Active Accessibility (MSAA) / WinEvent -- an API for interrogating a UI through the accessibility APIs in Win95. UI/Automation (UIA) -- a replacement for MSAA introduced in Vista (available for XP SP3 IIRC). Automating a user interface to test it is a non-trivial task. There are a lot of gotchas that can trip you up. I would suggest testing your automation framework in an automated way so you can verify that it works on the platforms you are testing (to identify failures in the automation API vs failures in the application). Another consideration is how to deal with localization. Note also that the names for Minimize/Maximize/... are localized as well, and can be in a different language to the application (system vs. user locale)! In pseudo-code, an MSAA program to minimize an application would look something like: MSAA accessible items are stored as (object: IAccessible, childId: int) pairs. Care is needed here to get the calls correct (e.g. get_accChildCount only uses the IAccessible, so when childId is not 0 you must return 0 instead of calling get_accChildCount)! IAccessible calls can return different error codes to indicate \"this object does not support this property\" -- e.g. DISP_E_MEMBERNOTFOUND or E_NOTIMPL. Be aware of the state of the window. If the window is maximized then minimized, restore will restore the window to its maximized state, so you need to restore it again to get it back to the normal/windowed state. The MSAA and UIA APIs don't support right mouse button clicks, so you need to use a Win32 API to trigger it. The MSAA model does not support treeview heirarchy information -- it displays it as a flat list. On the other hand, UIA will only enumerate elements that are visible so you will not be able to access elements in the UIA tree that are collapsed."}, {"id": 17759727, "score": 9, "vote": 0, "content": "<p>You can try <a href=\"http://www.getautoma.com/\" rel=\"noreferrer\">Automa</a>.</p>\n<p>It's a Windows GUI automation tool written in Python which is very simple to use. For example, you can do the following:</p>\n<pre><code class=\"python\"># to double click on an icon on the desktop\ndoubleclick(\"Recycle Bin\")\n\n# to maximize\nclick(\"Maximize\")\n\n# to input some text and press ENTER\nwrite(\"Some text\", into=\"Label of the text field\")\npress(ENTER)\n</code></pre>\n<p>The full list of available commands can be found <a href=\"http://www.getautoma.com/docs\" rel=\"noreferrer\">here</a>.</p>\n<p><em>Disclaimer</em>: I'm one of Automa's developers.</p>\n", "abstract": "You can try Automa. It's a Windows GUI automation tool written in Python which is very simple to use. For example, you can do the following: The full list of available commands can be found here. Disclaimer: I'm one of Automa's developers."}, {"id": 48138076, "score": 4, "vote": 0, "content": "<p>You can use <a href=\"https://pyautogui.readthedocs.io/\" rel=\"nofollow noreferrer\">PyAutoGUI</a> which provide a cross-platform Python way to perform GUI automation.</p>\n<h3><a href=\"http://pyautogui.readthedocs.io/en/latest/mouse.html\" rel=\"nofollow noreferrer\">Mouse Control</a></h3>\n<p>Here is a simple code to move the mouse to the middle of the screen:</p>\n<pre><code class=\"python\">import pyautogui\nscreenWidth, screenHeight = pyautogui.size()\npyautogui.moveTo(screenWidth / 2, screenHeight / 2)\n</code></pre>\n<p>Related question: <a href=\"https://stackoverflow.com/q/1181464/55075\">Controlling mouse with Python</a>.</p>\n<h3><a href=\"http://pyautogui.readthedocs.io/en/latest/keyboard.html\" rel=\"nofollow noreferrer\">Keyboard Control</a></h3>\n<p>Example:</p>\n<pre><code class=\"python\">pyautogui.typewrite('Hello world!')                 # prints out \"Hello world!\" instantly\npyautogui.typewrite('Hello world!', interval=0.25)  # prints out \"Hello world!\" with a quarter second delay after each character\n</code></pre>\n<h3><a href=\"https://pyautogui.readthedocs.io/en/latest/msgbox.html\" rel=\"nofollow noreferrer\">Message Box Functions</a></h3>\n<p>It provides JavaScript-style message boxes.</p>\n<p>And other.</p>\n<hr/>\n<p>For other suggestions, check: <a href=\"https://softwarerecs.stackexchange.com/q/42664/3474\">Python GUI automation library for simulating user interaction in apps</a>.</p>\n", "abstract": "You can use PyAutoGUI which provide a cross-platform Python way to perform GUI automation. Here is a simple code to move the mouse to the middle of the screen: Related question: Controlling mouse with Python. Example: It provides JavaScript-style message boxes. And other. For other suggestions, check: Python GUI automation library for simulating user interaction in apps."}, {"id": 68909021, "score": 1, "vote": 0, "content": "<p>Take a look at <a href=\"https://github.com/botcity-dev/botcity-framework-core-python\" rel=\"nofollow noreferrer\">BotCity Framework</a>, an open-source RPA framework.\u00a0</p>\n<p>It's just python (no intermediary code, no jython, etc).</p>\n<p>The example below executes SAP and logs in:</p>\n<pre><code class=\"python\">from botcity.core import DesktopBot\nfrom botcity.maestro import AlertType, AutomationTaskFinishStatus, Column\n\nclass Bot(DesktopBot):\n    def action(self, execution):\n        self.execute(\"saplogon.exe\")\n        \n        # #{image:\"login\"}\n    \n        if not self.find( \"user\", matching=0.97, waiting_time=10000):\n            self.not_found(\"user\")\n        self.click_relative(172, 5)\n        \n        self.paste(user)\n        self.tab()\n        self.paste(pass)\n        self.enter()\n        \nif __name__ == '__main__':\n    Bot.main()\n</code></pre>\n<p>As Sikuli, you have a tool to crop elements and have visual clues about the interface and UI elements. But in this case, it's a tool for editing .py files (not intermediary code) so you can use any python lib in your automation.</p>\n<img src=\"https://i.stack.imgur.com/EX6qi.png\" width=\"420\"/>\n", "abstract": "Take a look at BotCity Framework, an open-source RPA framework.\u00a0 It's just python (no intermediary code, no jython, etc). The example below executes SAP and logs in: As Sikuli, you have a tool to crop elements and have visual clues about the interface and UI elements. But in this case, it's a tool for editing .py files (not intermediary code) so you can use any python lib in your automation."}, {"id": 69542053, "score": 1, "vote": 0, "content": "<p>You can try <a href=\"https://pypi.org/project/ClointFusion\" rel=\"nofollow noreferrer\">ClointFusion</a></p>\n<p>It's again a Python based RPA platform which internally makes use of <a href=\"https://pypi.org/project/PyAutoGUI/\" rel=\"nofollow noreferrer\">PyAutoGUI</a> among other packages.</p>\n<p>It has a friendly Browser based Drag &amp; Drop BOT Builder: <a href=\"http://dost.clointfusion.com\" rel=\"nofollow noreferrer\">DOST</a></p>\n<p>You can find more than 100 easy to use functions:</p>\n<ol>\n<li>6 gui functions to take any input from user</li>\n<li>4 functions on Mouse Operations</li>\n<li>6 functions on Window Operations (works only in Windows OS)</li>\n<li>5 functions on Window Objects (works only in Windows OS)</li>\n<li>8 functions on Folder Operations</li>\n<li>28 functions on Excel Operations</li>\n<li>3 functions on Keyboard Operations</li>\n<li>5 functions on Screenscraping Operations</li>\n<li>11 functions on Browser Operations</li>\n<li>4 functions on Alert Messages</li>\n<li>3 functions on String Operations</li>\n<li>Loads of miscellaneous functions related to emoji, capture photo, flash (pop-up) messages etc</li>\n</ol>\n<p><em>Disclaimer: I'm one of developers of ClointFusion</em></p>\n", "abstract": "You can try ClointFusion It's again a Python based RPA platform which internally makes use of PyAutoGUI among other packages. It has a friendly Browser based Drag & Drop BOT Builder: DOST You can find more than 100 easy to use functions: Disclaimer: I'm one of developers of ClointFusion"}]}, {"link": "https://stackoverflow.com/questions/2038247/integration-of-python-console-into-a-gui-c-application", "question": {"id": "2038247", "title": "Integration of Python console into a GUI C++ application", "content": "<p>I'm going to add a python console widget (into a C++ GUI) below some other controls:\n<img alt=\"Python Console screenshot\" src=\"https://img-fotki.yandex.ru/get/4012/goodrone.0/0_2f2ae_b37ea156_orig\"/></p>\n<p>Many classes are going to be exposed to the python code, including some access to GUI (maybe I'll consider PyQt).</p>\n<blockquote>\n<p>Should I run the Python code in a separate thread?</p>\n</blockquote>\n<p>I think it's a good approach, because GUI won't be frozen while executing long commands. But on the other hand, shouldn't other controls be disabled to preserve objects' state and avoid conflicts?</p>\n", "abstract": "I'm going to add a python console widget (into a C++ GUI) below some other controls:\n Many classes are going to be exposed to the python code, including some access to GUI (maybe I'll consider PyQt). Should I run the Python code in a separate thread? I think it's a good approach, because GUI won't be frozen while executing long commands. But on the other hand, shouldn't other controls be disabled to preserve objects' state and avoid conflicts?"}, "answers": [{"id": 2038319, "score": 14, "vote": 0, "content": "<p>Since you're apparently wanting to embed a Python interpreter to use Python as a scripting language in a what seems to be a Qt application, I suggest you have a look at <a href=\"http://pythonqt.sourceforge.net/\" rel=\"nofollow noreferrer\">PythonQt</a>.</p>\n<p>With the PythonQt module, Python scripts will be able to interact with the GUI of your host application.</p>\n<blockquote>\n<p>Unlike PyQt and Qt Jambi, PythonQt is not designed to provide support for developers writing standalone applications. Instead, it provides facilities to embed a Python interpreter and focuses on making it easy to expose parts of the application to Python.</p>\n</blockquote>\n<p>If I understood your needs correctly, that's all you need.</p>\n<p><a href=\"http://www.riverbankcomputing.co.uk/software/pyqt/intro\" rel=\"nofollow noreferrer\">PyQt</a> and <a href=\"http://www.pyside.org/\" rel=\"nofollow noreferrer\">PySide</a> (officially supported by Nokia) aim at accessing Qt features from a Python program by providing bindings.</p>\n<p>It's possible to embed PyQt in your application (<a href=\"http://wiki.python.org/moin/EmbedingPyQtTutorial\" rel=\"nofollow noreferrer\">even a Qt application</a>) and your Python scripts will be able to provide their own GUI while interacting with your application scripting API.</p>\n<p>About thread safety, Qt offers a thread-safe way of posting events, and signal-slot connections across threads.</p>\n<p>References:</p>\n<ul>\n<li><a href=\"http://doc.qt.io/archives/qq/qq23-pythonqt.html\" rel=\"nofollow noreferrer\">Embedding Python into Qt Applications</a>.</li>\n<li><a href=\"https://vedanamedia.com/2008/11/22/notes-for-embedding-python-in-your-cc-app/\" rel=\"nofollow noreferrer\">Notes for embedding python in your C/C++ app</a></li>\n<li><a href=\"http://wiki.python.org/moin/EmbedingPyQtTutorial\" rel=\"nofollow noreferrer\">EmbedingPyQtTutorial</a></li>\n</ul>\n", "abstract": "Since you're apparently wanting to embed a Python interpreter to use Python as a scripting language in a what seems to be a Qt application, I suggest you have a look at PythonQt. With the PythonQt module, Python scripts will be able to interact with the GUI of your host application. Unlike PyQt and Qt Jambi, PythonQt is not designed to provide support for developers writing standalone applications. Instead, it provides facilities to embed a Python interpreter and focuses on making it easy to expose parts of the application to Python. If I understood your needs correctly, that's all you need. PyQt and PySide (officially supported by Nokia) aim at accessing Qt features from a Python program by providing bindings. It's possible to embed PyQt in your application (even a Qt application) and your Python scripts will be able to provide their own GUI while interacting with your application scripting API. About thread safety, Qt offers a thread-safe way of posting events, and signal-slot connections across threads. References:"}]}, {"link": "https://stackoverflow.com/questions/4770993/how-can-i-make-silent-exceptions-louder-in-tkinter", "question": {"id": "4770993", "title": "How can I make silent exceptions louder in tkinter?", "content": "<p>If I run the following code from a terminal, I get a helpful error message in the terminal:</p>\n<pre><code class=\"python\">import Tkinter as tk\n\nmaster = tk.Tk()\n\ndef callback():\n    raise UserWarning(\"Exception!\")\n\nb = tk.Button(master, text=\"This will raise an exception\", command=callback)\nb.pack()\n\ntk.mainloop()\n</code></pre>\n<p>However, if I run it without a terminal (say, by double-clicking an icon), the error message is suppressed.</p>\n<p>In my real, more complicated Tkinter application, I like that the GUI is a little crash-resistant. I don't like that my users have a hard time giving me useful feedback to fix the resulting unexpected behavior. </p>\n<p>How should I handle this? Is there a standard way to expose tracebacks or stderror or whatnot in a Tkinter application? I'm looking for something more elegant than putting try/except everywhere.</p>\n<p>EDIT: Jochen Ritzel gave an excellent answer below that pops up a warning box, and mentioned attaching it to a class. Just to make this explicit:</p>\n<pre><code class=\"python\">import Tkinter as tk\nimport traceback, tkMessageBox\n\nclass App:\n    def __init__(self, master):\n        master.report_callback_exception = self.report_callback_exception\n        self.frame = tk.Frame(master)\n        self.frame.pack()\n        b = tk.Button(\n            self.frame, text=\"This will cause an exception\",\n            command=self.cause_exception)\n        b.pack()\n\n    def cause_exception(self):\n        a = []\n        a.a = 0 #A traceback makes this easy to catch and fix\n\n    def report_callback_exception(self, *args):\n        err = traceback.format_exception(*args)\n        tkMessageBox.showerror('Exception', err)\n\nroot = tk.Tk()\napp = App(root)\nroot.mainloop()\n</code></pre>\n<p>My remaining confusion: Jochen mentions the possibility of having different exception reporting functions in different frames. I don't yet see how to do that. Is this obvious?</p>\n", "abstract": "If I run the following code from a terminal, I get a helpful error message in the terminal: However, if I run it without a terminal (say, by double-clicking an icon), the error message is suppressed. In my real, more complicated Tkinter application, I like that the GUI is a little crash-resistant. I don't like that my users have a hard time giving me useful feedback to fix the resulting unexpected behavior.  How should I handle this? Is there a standard way to expose tracebacks or stderror or whatnot in a Tkinter application? I'm looking for something more elegant than putting try/except everywhere. EDIT: Jochen Ritzel gave an excellent answer below that pops up a warning box, and mentioned attaching it to a class. Just to make this explicit: My remaining confusion: Jochen mentions the possibility of having different exception reporting functions in different frames. I don't yet see how to do that. Is this obvious?"}, "answers": [{"id": 4771200, "score": 37, "vote": 0, "content": "<p>There is <code>report_callback_exception</code> to do this:</p>\n<pre><code class=\"python\">import traceback\nimport tkMessageBox\n\n# You would normally put that on the App class\ndef show_error(self, *args):\n    err = traceback.format_exception(*args)\n    tkMessageBox.showerror('Exception',err)\n# but this works too\ntk.Tk.report_callback_exception = show_error\n</code></pre>\n<p>If you didn't <code>import Tkinter as tk</code>, then do</p>\n<pre><code class=\"python\">Tkinter.Tk.report_callback_exception = show_error\n</code></pre>\n", "abstract": "There is report_callback_exception to do this: If you didn't import Tkinter as tk, then do"}, {"id": 25837796, "score": 3, "vote": 0, "content": "<p>First a followup: Just today, a patch on the <a href=\"http://bugs.python.org/issue22384\" rel=\"nofollow noreferrer\">CPython tracker</a> for the <code>tkinter.Tk.report_callback_exception</code> docstring made it clear that <a href=\"https://stackoverflow.com/a/4771200/3357935\">Jochen's solution</a> is intended.  The patch also (and primarily) stopped tk from crashing on callback exceptions when run under pythonw on Windows.</p>\n<p>Second: here is a bare-bones beginning of a solution to making <code>stderr</code> function with no console (this should really be a separate SO question).</p>\n<pre><code class=\"python\">import sys, tkinter\n\nroot = tkinter.Tk()\n\nclass Stderr(tkinter.Toplevel):\n    def __init__(self):\n        self.txt = tkinter.Text(root)\n        self.txt.pack()\n    def write(self, s):\n        self.txt.insert('insert', s)\n\nsys.stderr = Stderr()\n\n1/0 # traceback appears in window\n</code></pre>\n<p>More is needed to keep the popup window hidden until needed and then make it visible.  </p>\n", "abstract": "First a followup: Just today, a patch on the CPython tracker for the tkinter.Tk.report_callback_exception docstring made it clear that Jochen's solution is intended.  The patch also (and primarily) stopped tk from crashing on callback exceptions when run under pythonw on Windows. Second: here is a bare-bones beginning of a solution to making stderr function with no console (this should really be a separate SO question). More is needed to keep the popup window hidden until needed and then make it visible.  "}, {"id": 71637717, "score": 1, "vote": 0, "content": "<p>Just too add more value in @Jochen Ritzel's answer, You <code>try except</code> from beginning of your program to catch the python error too.</p>\n<p>for example to detect <code>index out of range</code> error of for loop, you can use:</p>\n<pre><code class=\"python\"># Note import files before the try statement\n\nfrom tkinter import *\nfrom tkinter import messagebox \nimport sys,traceback\ndef show_error(slef, *args):\n    err = traceback.format_exception(*args)\n    messagebox.showerror('Exception',err)\ntry:\n    root=Tk()\n    Tk.report_callback_exception = show_error\n    a=[1,2,3]\n    for i in range(10):\n        print(a[i])\n    exec(input()) # Just used to throw error\n    a=Button(text='s',command=lambda: print(8/0)) # Just used to throw error\n    a.pack()\n    root.mainloop()\nexcept BaseException as e:\n    messagebox.showerror('Exception',e)\n\n</code></pre>\n", "abstract": "Just too add more value in @Jochen Ritzel's answer, You try except from beginning of your program to catch the python error too. for example to detect index out of range error of for loop, you can use:"}, {"id": 71638411, "score": 1, "vote": 0, "content": "<p>Here's my 2 cents \u2014 cut and paste code that will display a dialog whether or not it occurred when <code>tkinter</code> was executing a callback function.</p>\n<pre><code class=\"python\">import sys\nimport tkinter as tk\nfrom tkinter.messagebox import showerror\nimport traceback\n\n\ndef excepthook(exctype, excvalue, tb):\n    \"\"\"Display exception in a dialog box.\"\"\"\n    msg = ('An uncaught exception has occurred!\\n\\n'\n           + '\\n'.join(traceback.format_exception(exctype, excvalue, tb))\n           + '\\nTerminating.')\n    showerror('Error!', msg)\n    sys.exit()\n\nsys.excepthook = excepthook  # Replace default system exception hook.\n\n\nclass MyTk(tk.Tk):\n    \"\"\"Tk subclass with callback exception reporting method that displays the\n    exception is a dialog box.\n    \"\"\"\n    def report_callback_exception(self, exctype, excvalue, tb):\n        excepthook(exctype, excvalue, tb)\n\n\ndef raise_exception():\n    \"\"\"Callback function.\"\"\"\n    x = 1 / 0\n\ndef main():\n    root = MyTk()\n#    y = 1 / 0  # Uncomment to test exception handling in non-callback functions.\n    tk.Button(root, text='Do something', command=raise_exception).pack()\n    root.mainloop()\n\n\nif __name__ == '__main__':\n    main()\n\n</code></pre>\n", "abstract": "Here's my 2 cents \u2014 cut and paste code that will display a dialog whether or not it occurred when tkinter was executing a callback function."}, {"id": 63450312, "score": 0, "vote": 0, "content": "<p>I found this thread while looking to solve the same problem. I had to make some modifications based on current <code>tkinter</code> version methodologies. I also added a customized error message handler since I figured my user wouldn't know what the Tk error message meant.</p>\n<p>In the <code>__init__</code> of your class include:</p>\n<p><code>parent.report_callback_exception = self.report_callback_exception</code></p>\n<p>then in your Tk class:</p>\n<pre><code class=\"python\">    def report_callback_exception(self, exc, val, tb):\n        #Handles tkinter exceptions\n        err_msg = {'Index 0 out of range': 'None found'}\n        try:\n            err = err_msg[str(val)]\n        except KeyError:\n            err = 'Oops, try again'\n        messagebox.showerror('Error Found', err)\n</code></pre>\n<p>You could expand the <code>err_msg</code> dictionary to include whatever else you wanted. In my case I am building a searchable database off an <code>Entry</code> object, so if the user has typed in a string that doesn't exist in the database, it is giving the user a plain language error.</p>\n", "abstract": "I found this thread while looking to solve the same problem. I had to make some modifications based on current tkinter version methodologies. I also added a customized error message handler since I figured my user wouldn't know what the Tk error message meant. In the __init__ of your class include: parent.report_callback_exception = self.report_callback_exception then in your Tk class: You could expand the err_msg dictionary to include whatever else you wanted. In my case I am building a searchable database off an Entry object, so if the user has typed in a string that doesn't exist in the database, it is giving the user a plain language error."}]}, {"link": "https://stackoverflow.com/questions/9698512/driving-a-windows-gui-program-from-a-script", "question": {"id": "9698512", "title": "Driving a Windows GUI program from a script", "content": "<p>I have to use a Windows simulation package to perform a repetitive task with slightly different options each time. </p>\n<p>Since I hate repetitive clicking, on grounds of both laziness and the amount of errors that a human introduces, I would like to drive this program automatically. The program in question doesn't support scripting, there is no API, no COM, nada, nyet, nravin. As far as I can tell, the only way to drive this program automatically is to imitate a human (i.e. keyboard and mouse macros.)</p>\n<p>I am aware of AutoHotKey but I don't think it does what I want. (Or it might do what I want, but its scripting language is horrible.)</p>\n<p>The requirements are:</p>\n<ul>\n<li><p>Must allow time delays between actions, or event detection to trigger actions.</p>\n<p>The simulations can take up to ten minutes to run, so the GUI driver would have to wait until the simulation finishes before starting a new one.</p>\n<p>One way to do this would be to just wait ten minutes and hope that the simulation has finished. An alternative way is to make it event-driven, i.e. watch for the \"Simulation running...\" dialog to disappear and be replaced by a \"Simulation complete\" dialog.</p></li>\n<li><p>Must allow composition of complex keyboard input.</p>\n<p>Some of the keyboard input required is different for each simulation run. For example the simulation description might take the format <code>[Project name][Scenario name][Option 1][Option 2]...</code> and this would have to be entered for each simulation.</p>\n<p>I am aware that AutoHotKey allows a basic level of input customisation, but my casual reading of the documentation makes the scripting language look like some kind of eldritch horror.</p></li>\n<li><p>This is for work, so any solution must be free for commercial use.</p></li>\n</ul>\n<p>I will accept any solution that fits the criteria above, but I have a <strong>strong</strong> preference for something I can drive from Python. However I would also accept automated GUI-testing tools that I could customise to do what I want - possibly a Win32 GUI equivalent of <a href=\"http://seleniumhq.org/\">Selenium</a> for browsers? - keyboard macro recorders that will generate custom output, or anything else that works.</p>\n", "abstract": "I have to use a Windows simulation package to perform a repetitive task with slightly different options each time.  Since I hate repetitive clicking, on grounds of both laziness and the amount of errors that a human introduces, I would like to drive this program automatically. The program in question doesn't support scripting, there is no API, no COM, nada, nyet, nravin. As far as I can tell, the only way to drive this program automatically is to imitate a human (i.e. keyboard and mouse macros.) I am aware of AutoHotKey but I don't think it does what I want. (Or it might do what I want, but its scripting language is horrible.) The requirements are: Must allow time delays between actions, or event detection to trigger actions. The simulations can take up to ten minutes to run, so the GUI driver would have to wait until the simulation finishes before starting a new one. One way to do this would be to just wait ten minutes and hope that the simulation has finished. An alternative way is to make it event-driven, i.e. watch for the \"Simulation running...\" dialog to disappear and be replaced by a \"Simulation complete\" dialog. Must allow composition of complex keyboard input. Some of the keyboard input required is different for each simulation run. For example the simulation description might take the format [Project name][Scenario name][Option 1][Option 2]... and this would have to be entered for each simulation. I am aware that AutoHotKey allows a basic level of input customisation, but my casual reading of the documentation makes the scripting language look like some kind of eldritch horror. This is for work, so any solution must be free for commercial use. I will accept any solution that fits the criteria above, but I have a strong preference for something I can drive from Python. However I would also accept automated GUI-testing tools that I could customise to do what I want - possibly a Win32 GUI equivalent of Selenium for browsers? - keyboard macro recorders that will generate custom output, or anything else that works."}, "answers": [{"id": 9699535, "score": 11, "vote": 0, "content": "<blockquote>\n<p>Sikuli is a visual technology to automate and test graphical user\n  interfaces (GUI) using images (screenshots). Sikuli includes Sikuli\n  Script, a visual scripting API for Jython, and Sikuli IDE, an\n  integrated development environment for writing visual scripts with\n  screenshots easily. Sikuli Script automates anything you see on the\n  screen without internal API's support. You can programmatically\n  control a web page, a Windows/Linux/Mac OS X desktop application, or\n  even an iphone or android application running in a simulator or via\n  VNC.</p>\n</blockquote>\n<p>Look at <a href=\"http://sikuli.org/\" rel=\"noreferrer\">Sikuli</a>, it worked for me.</p>\n", "abstract": "Sikuli is a visual technology to automate and test graphical user\n  interfaces (GUI) using images (screenshots). Sikuli includes Sikuli\n  Script, a visual scripting API for Jython, and Sikuli IDE, an\n  integrated development environment for writing visual scripts with\n  screenshots easily. Sikuli Script automates anything you see on the\n  screen without internal API's support. You can programmatically\n  control a web page, a Windows/Linux/Mac OS X desktop application, or\n  even an iphone or android application running in a simulator or via\n  VNC. Look at Sikuli, it worked for me."}, {"id": 15362282, "score": 6, "vote": 0, "content": "<p>Take a look at <a href=\"http://www.getautoma.com/\">Automa</a> - it is written in Python. It can be used either as a standalone tool or as a Python library in your own scripts:</p>\n<pre><code class=\"python\">from automa.api import *\n</code></pre>\n<p>It allows automation of any Windows application through commands like click, press, write, etc.</p>\n<p>Some examples of the automation scripts can be found at <a href=\"http://www.getautoma.com/blog/category/ui-automation-examples\">http://www.getautoma.com/blog/category/ui-automation-examples</a></p>\n<p><em>Disclaimer</em>: I'm one of Automa's developers.</p>\n", "abstract": "Take a look at Automa - it is written in Python. It can be used either as a standalone tool or as a Python library in your own scripts: It allows automation of any Windows application through commands like click, press, write, etc. Some examples of the automation scripts can be found at http://www.getautoma.com/blog/category/ui-automation-examples Disclaimer: I'm one of Automa's developers."}, {"id": 41529209, "score": 6, "vote": 0, "content": "<p>Look at this\n<a href=\"https://pywinauto.github.io/\" rel=\"noreferrer\">https://pywinauto.github.io/</a></p>\n<p>You can use python script itself to control your windows application. </p>\n<p>Advantage is:</p>\n<ul>\n<li>no need to learn new language/syntax</li>\n<li>integrates easily with other existing script</li>\n</ul>\n", "abstract": "Look at this\nhttps://pywinauto.github.io/ You can use python script itself to control your windows application.  Advantage is:"}, {"id": 9709256, "score": 5, "vote": 0, "content": "<p>Give Autohotkey another look, from you requirements it seems fit for the job.</p>\n<p>Alternatively check UI Automation from Microsoft: <a href=\"http://msdn.microsoft.com/en-us/library/ms747327.aspx\" rel=\"noreferrer\">http://msdn.microsoft.com/en-us/library/ms747327.aspx</a> and also white: <a href=\"http://white.codeplex.com/\" rel=\"noreferrer\">http://white.codeplex.com/</a></p>\n", "abstract": "Give Autohotkey another look, from you requirements it seems fit for the job. Alternatively check UI Automation from Microsoft: http://msdn.microsoft.com/en-us/library/ms747327.aspx and also white: http://white.codeplex.com/"}, {"id": 48138235, "score": 1, "vote": 0, "content": "<p>You can use <a href=\"http://pyautogui.readthedocs.io/en/latest/introduction.html\" rel=\"nofollow noreferrer\">PyAutoGUI library</a> for Python which works on Windows, macOS, and Linux.</p>\n<blockquote>\n<p>Must allow time delays between actions.</p>\n</blockquote>\n<p>Example to type with quarter-second pause in between each key:</p>\n<pre><code class=\"python\">import pyautogui\npyautogui.typewrite('Hello world!', interval=0.25)\n</code></pre>\n<p>Here is the example to set up a 2.5-second pause after each PyAutoGUI call:</p>\n<pre><code class=\"python\">pyautogui.PAUSE = 2.5\n</code></pre>\n<blockquote>\n<p>Must allow composition of complex keyboard input.</p>\n</blockquote>\n<p>Checkout <a href=\"http://pyautogui.readthedocs.io/en/latest/keyboard.html\" rel=\"nofollow noreferrer\">keyboard control functions</a> where you can use <code>pyautogui.typewrite</code> to type something out. You can pass variables to allow a complex keyboard input.</p>\n<blockquote>\n<p>Event detection to trigger actions.</p>\n</blockquote>\n<p>You can use <a href=\"http://pyautogui.readthedocs.io/en/latest/screenshot.html\" rel=\"nofollow noreferrer\">locate functions</a> to visually find something on the screen and make the condition based on that within a simple loop.</p>\n<blockquote>\n<p>Solution must be free for commercial use.</p>\n</blockquote>\n<p>It is licensed under the BSD which allows commercial use.</p>\n<hr/>\n<p>See also:</p>\n<ul>\n<li><a href=\"https://stackoverflow.com/q/2791839/55075\">Which is the easiest way to simulate keyboard and mouse on Python?</a></li>\n<li><a href=\"https://softwarerecs.stackexchange.com/q/42664/3474\">Python GUI automation library for simulating user interaction in apps</a>.</li>\n</ul>\n", "abstract": "You can use PyAutoGUI library for Python which works on Windows, macOS, and Linux. Must allow time delays between actions. Example to type with quarter-second pause in between each key: Here is the example to set up a 2.5-second pause after each PyAutoGUI call: Must allow composition of complex keyboard input. Checkout keyboard control functions where you can use pyautogui.typewrite to type something out. You can pass variables to allow a complex keyboard input. Event detection to trigger actions. You can use locate functions to visually find something on the screen and make the condition based on that within a simple loop. Solution must be free for commercial use. It is licensed under the BSD which allows commercial use. See also:"}, {"id": 16463955, "score": 0, "vote": 0, "content": "<p><a href=\"http://www.cogitek.com/riatest/features/technologies/windows.html\" rel=\"nofollow\">RIATest</a> is not using Python but otherwise fits the bill. It is like Selenium but for Win32 <strong>and</strong> web. </p>\n<p>RIATest uses Windows UI Automation API and can drive any Windows application that exposes its GUI to UI Automation properly (that includes all native and .NET apps).</p>\n<p><em>Disclaimer: I work for Cogitek, the RIATest company.</em></p>\n", "abstract": "RIATest is not using Python but otherwise fits the bill. It is like Selenium but for Win32 and web.  RIATest uses Windows UI Automation API and can drive any Windows application that exposes its GUI to UI Automation properly (that includes all native and .NET apps). Disclaimer: I work for Cogitek, the RIATest company."}]}, {"link": "https://stackoverflow.com/questions/3794268/command-for-clicking-on-the-items-of-a-tkinter-treeview-widget", "question": {"id": "3794268", "title": "Command for clicking on the items of a Tkinter Treeview widget?", "content": "<p>I'm creating a GUI with Tkinter, and a major part of the GUI is two Treeview objects. I need the contents of the <code>Treeview</code> objects to <em>change</em> when an item (i.e. a directory) is <em>clicked twice</em>.</p>\n<p>If Treeview items were buttons, I'd just be able to set <code>command</code> to the appropriate function. But I'm having trouble finding a way to create <code>\"on_click\"</code> behavior for Treeview items.</p>\n<p>What Treeview option, method, etc, enables me to bind a command to particular items and execute that command <code>\"on_click\"</code>?</p>\n", "abstract": "I'm creating a GUI with Tkinter, and a major part of the GUI is two Treeview objects. I need the contents of the Treeview objects to change when an item (i.e. a directory) is clicked twice. If Treeview items were buttons, I'd just be able to set command to the appropriate function. But I'm having trouble finding a way to create \"on_click\" behavior for Treeview items. What Treeview option, method, etc, enables me to bind a command to particular items and execute that command \"on_click\"?"}, "answers": [{"id": 3794505, "score": 44, "vote": 0, "content": "<p>If you want something to happen when the user double-clicks, add a binding to <code>\"&lt;Double-1&gt;\"</code>. Since a single click sets the selection, in your callback you can query the widget to find out what is selected. For example:</p>\n<pre><code class=\"python\">import tkinter as tk\nfrom tkinter import ttk\n\nclass App:\n    def __init__(self):\n        self.root = tk.Tk()\n        self.tree = ttk.Treeview()\n        self.tree.pack()\n        for i in range(10):\n            self.tree.insert(\"\", \"end\", text=\"Item %s\" % i)\n        self.tree.bind(\"&lt;Double-1&gt;\", self.OnDoubleClick)\n        self.root.mainloop()\n\n    def OnDoubleClick(self, event):\n        item = self.tree.selection()[0]\n        print(\"you clicked on\", self.tree.item(item,\"text\"))\n\nif __name__ == \"__main__\":\n    app = App()\n</code></pre>\n", "abstract": "If you want something to happen when the user double-clicks, add a binding to \"<Double-1>\". Since a single click sets the selection, in your callback you can query the widget to find out what is selected. For example:"}, {"id": 14118529, "score": 25, "vote": 0, "content": "<p>The previous solution fails when multiple elements are selected and the user uses <code>SHIFT+CLICK</code> (at least on a Mac). </p>\n<p>Here is a better solution:</p>\n<pre><code class=\"python\">import tkinter as tk\nimport tkinter.ttk as ttk\n\nclass App:\n    def __init__(self):\n        self.root = tk.Tk()\n        self.tree = ttk.Treeview()\n        self.tree.pack()\n        for i in range(10):\n            self.tree.insert(\"\", \"end\", text=\"Item %s\" % i)\n        self.tree.bind(\"&lt;Double-1&gt;\", self.OnDoubleClick)\n        self.root.mainloop()\n\n    def OnDoubleClick(self, event):\n        item = self.tree.identify('item',event.x,event.y)\n        print(\"you clicked on\", self.tree.item(item,\"text\"))\n\nif __name__ == \"__main__\":\n    app = App()\n</code></pre>\n", "abstract": "The previous solution fails when multiple elements are selected and the user uses SHIFT+CLICK (at least on a Mac).  Here is a better solution:"}, {"id": 55578026, "score": 4, "vote": 0, "content": "<p>I know this is old but this code will also print multiple selected item in a treeview.</p>\n<pre><code class=\"python\">def on_double_click(self, event):\n    item = self.tree.selection()\n    for i in item:\n        print(\"you clicked on\", self.tree.item(i, \"values\")[0])\n</code></pre>\n", "abstract": "I know this is old but this code will also print multiple selected item in a treeview."}, {"id": 74185050, "score": 0, "vote": 0, "content": "<p>I was having a similar functionality on a Treeview and overcome the issue with row selection on click by binding the event to be on click release. As you will have to release your click eventually :P my code looks like something below:</p>\n<pre><code class=\"python\">from tkinter import *\nfrom tkinter import ttk\n\n&lt;codehere&gt;\n\nTreeView.bind('&lt;Double-1&gt;', function1) # If you want bind function1 on double click\n    \nTreeView.bind('&lt;ButtonRelease-1&gt;', myfunction2) # If you want bind function2 on single click (on release click)\n</code></pre>\n", "abstract": "I was having a similar functionality on a Treeview and overcome the issue with row selection on click by binding the event to be on click release. As you will have to release your click eventually :P my code looks like something below:"}]}, {"link": "https://stackoverflow.com/questions/47895765/use-asyncio-and-tkinter-or-another-gui-lib-together-without-freezing-the-gui", "question": {"id": "47895765", "title": "Use asyncio and Tkinter (or another GUI lib) together without freezing the GUI", "content": "<p>I want to use <a href=\"https://docs.python.org/3/library/asyncio.html\" rel=\"noreferrer\"><code>asyncio</code></a> in combination with a <a href=\"https://docs.python.org/3/library/tkinter.html\" rel=\"noreferrer\"><code>tkinter</code></a> GUI.\nI am new to <code>asyncio</code> and my understanding of it is not very detailed.\nThe example here starts 10 task when clicking on the first button. The task are just simulating work with a <code>sleep()</code> for some seconds.</p>\n<p>The example code is running fine with Python <code>3.6.4rc1</code>. <strong>But\nthe problem</strong> is that the GUI is freezed. When I press the first button and start the 10 asyncio-tasks I am not able to press the second button in the GUI until all tasks are done. The GUI should never freeze - that is my goal.</p>\n<pre><code class=\"python\">#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nfrom tkinter import *\nfrom tkinter import messagebox\nimport asyncio\nimport random\n\ndef do_freezed():\n    \"\"\" Button-Event-Handler to see if a button on GUI works. \"\"\"\n    messagebox.showinfo(message='Tkinter is reacting.')\n\ndef do_tasks():\n    \"\"\" Button-Event-Handler starting the asyncio part. \"\"\"\n    loop = asyncio.get_event_loop()\n    try:\n        loop.run_until_complete(do_urls())\n    finally:\n        loop.close()\n\nasync def one_url(url):\n    \"\"\" One task. \"\"\"\n    sec = random.randint(1, 15)\n    await asyncio.sleep(sec)\n    return 'url: {}\\tsec: {}'.format(url, sec)\n\nasync def do_urls():\n    \"\"\" Creating and starting 10 tasks. \"\"\"\n    tasks = [\n        one_url(url)\n        for url in range(10)\n    ]\n    completed, pending = await asyncio.wait(tasks)\n    results = [task.result() for task in completed]\n    print('\\n'.join(results))\n\n\nif __name__ == '__main__':\n    root = Tk()\n\n    buttonT = Button(master=root, text='Asyncio Tasks', command=do_tasks)\n    buttonT.pack()\n    buttonX = Button(master=root, text='Freezed???', command=do_freezed)\n    buttonX.pack()\n\n    root.mainloop()\n</code></pre>\n<h2>A _side problem</h2>\n<p>...is that I am not able to run the task a second time because of this error.</p>\n<pre class=\"lang-none prettyprint-override\"><code class=\"python\">Exception in Tkinter callback\nTraceback (most recent call last):\n  File \"/usr/lib/python3.6/tkinter/__init__.py\", line 1699, in __call__\n    return self.func(*args)\n  File \"./tk_simple.py\", line 17, in do_tasks\n    loop.run_until_complete(do_urls())\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 443, in run_until_complete\n    self._check_closed()\n  File \"/usr/lib/python3.6/asyncio/base_events.py\", line 357, in _check_closed\n    raise RuntimeError('Event loop is closed')\nRuntimeError: Event loop is closed\n</code></pre>\n<h2>Multithreading</h2>\n<p>Whould multithreading be a possible solution? Only two threads - each loop has it's own thread?</p>\n<p><strong>EDIT</strong>: After reviewing this question and the answers it is related to nearly all GUI libs (e.g. PygObject/Gtk, wxWidgets, Qt, ...).</p>\n", "abstract": "I want to use asyncio in combination with a tkinter GUI.\nI am new to asyncio and my understanding of it is not very detailed.\nThe example here starts 10 task when clicking on the first button. The task are just simulating work with a sleep() for some seconds. The example code is running fine with Python 3.6.4rc1. But\nthe problem is that the GUI is freezed. When I press the first button and start the 10 asyncio-tasks I am not able to press the second button in the GUI until all tasks are done. The GUI should never freeze - that is my goal. ...is that I am not able to run the task a second time because of this error. Whould multithreading be a possible solution? Only two threads - each loop has it's own thread? EDIT: After reviewing this question and the answers it is related to nearly all GUI libs (e.g. PygObject/Gtk, wxWidgets, Qt, ...)."}, "answers": [{"id": 47896365, "score": 26, "vote": 0, "content": "<p>Trying to run both event loops at the same time is a dubious proposition.  However, since root.mainloop simply calls root.update repeatedly, one can simulate mainloop by calling update repeatedly as an asyncio task.  Here is a test program that does so.  I presume adding asyncio tasks to the tkinter tasks would work.  I checked that it still runs with 3.7.0a2.</p>\n<pre><code class=\"python\">\"\"\"Proof of concept: integrate tkinter, asyncio and async iterator.\n\nTerry Jan Reedy, 2016 July 25\n\"\"\"\n\nimport asyncio\nfrom random import randrange as rr\nimport tkinter as tk\n\n\nclass App(tk.Tk):\n    \n    def __init__(self, loop, interval=1/120):\n        super().__init__()\n        self.loop = loop\n        self.protocol(\"WM_DELETE_WINDOW\", self.close)\n        self.tasks = []\n        self.tasks.append(loop.create_task(self.rotator(1/60, 2)))\n        self.tasks.append(loop.create_task(self.updater(interval)))\n\n    async def rotator(self, interval, d_per_tick):\n        canvas = tk.Canvas(self, height=600, width=600)\n        canvas.pack()\n        deg = 0\n        color = 'black'\n        arc = canvas.create_arc(100, 100, 500, 500, style=tk.CHORD,\n                                start=0, extent=deg, fill=color)\n        while await asyncio.sleep(interval, True):\n            deg, color = deg_color(deg, d_per_tick, color)\n            canvas.itemconfigure(arc, extent=deg, fill=color)\n\n    async def updater(self, interval):\n        while True:\n            self.update()\n            await asyncio.sleep(interval)\n\n    def close(self):\n        for task in self.tasks:\n            task.cancel()\n        self.loop.stop()\n        self.destroy()\n\n\ndef deg_color(deg, d_per_tick, color):\n    deg += d_per_tick\n    if 360 &lt;= deg:\n        deg %= 360\n        color = '#%02x%02x%02x' % (rr(0, 256), rr(0, 256), rr(0, 256))\n    return deg, color\n\nloop = asyncio.get_event_loop()\napp = App(loop)\nloop.run_forever()\nloop.close()\n</code></pre>\n<p>Both the tk update overhead and time resolution increase as the interval is decreased.  For gui updates, as opposed to animations, 20 per second may be enough.</p>\n<p>I recently succeeded in running async def coroutines containing tkinter calls and awaits with mainloop.  The prototype uses asyncio Tasks and Futures, but I don't know if adding normal asyncio tasks would work.  If one wants to run asyncio and tkinter tasks together, I think running tk update with an asyncio loop is a better idea.</p>\n<p>EDIT: A least as used above, exception without async def coroutines kill the coroutine but are somewhere caught and discarded.  Silent error are pretty obnoxious.</p>\n<p>EDIT2: Additional code and comments at\n<a href=\"https://bugs.python.org/issue27546\" rel=\"nofollow noreferrer\">https://bugs.python.org/issue27546</a></p>\n", "abstract": "Trying to run both event loops at the same time is a dubious proposition.  However, since root.mainloop simply calls root.update repeatedly, one can simulate mainloop by calling update repeatedly as an asyncio task.  Here is a test program that does so.  I presume adding asyncio tasks to the tkinter tasks would work.  I checked that it still runs with 3.7.0a2. Both the tk update overhead and time resolution increase as the interval is decreased.  For gui updates, as opposed to animations, 20 per second may be enough. I recently succeeded in running async def coroutines containing tkinter calls and awaits with mainloop.  The prototype uses asyncio Tasks and Futures, but I don't know if adding normal asyncio tasks would work.  If one wants to run asyncio and tkinter tasks together, I think running tk update with an asyncio loop is a better idea. EDIT: A least as used above, exception without async def coroutines kill the coroutine but are somewhere caught and discarded.  Silent error are pretty obnoxious. EDIT2: Additional code and comments at\nhttps://bugs.python.org/issue27546"}, {"id": 47920128, "score": 18, "vote": 0, "content": "<p>In a slight modification to your code, I created the asyncio <code>event_loop</code> in the main thread and passed it as an argument to the asyncio thread. Now Tkinter won't freeze while the urls are fetched.</p>\n<pre><code class=\"python\">from tkinter import *\nfrom tkinter import messagebox\nimport asyncio\nimport threading\nimport random\n\ndef _asyncio_thread(async_loop):\n    async_loop.run_until_complete(do_urls())\n\n\ndef do_tasks(async_loop):\n    \"\"\" Button-Event-Handler starting the asyncio part. \"\"\"\n    threading.Thread(target=_asyncio_thread, args=(async_loop,)).start()\n\n    \nasync def one_url(url):\n    \"\"\" One task. \"\"\"\n    sec = random.randint(1, 8)\n    await asyncio.sleep(sec)\n    return 'url: {}\\tsec: {}'.format(url, sec)\n\nasync def do_urls():\n    \"\"\" Creating and starting 10 tasks. \"\"\"\n    tasks = [one_url(url) for url in range(10)]\n    completed, pending = await asyncio.wait(tasks)\n    results = [task.result() for task in completed]\n    print('\\n'.join(results))\n\n\ndef do_freezed():\n    messagebox.showinfo(message='Tkinter is reacting.')\n\ndef main(async_loop):\n    root = Tk()\n    Button(master=root, text='Asyncio Tasks', command= lambda:do_tasks(async_loop)).pack()\n    Button(master=root, text='Freezed???', command=do_freezed).pack()\n    root.mainloop()\n\nif __name__ == '__main__':\n    async_loop = asyncio.get_event_loop()\n    main(async_loop)\n</code></pre>\n", "abstract": "In a slight modification to your code, I created the asyncio event_loop in the main thread and passed it as an argument to the asyncio thread. Now Tkinter won't freeze while the urls are fetched."}, {"id": 58793529, "score": 3, "vote": 0, "content": "<p>I'm a bit late to the party but if you are not targeting Windows you can use <a href=\"https://pypi.org/project/aiotkinter/\" rel=\"nofollow noreferrer\">aiotkinter</a> to achieve what you want. I modified your code to show you how to use this package:</p>\n<pre><code class=\"python\">from tkinter import *\nfrom tkinter import messagebox\nimport asyncio\nimport random\n\nimport aiotkinter\n\ndef do_freezed():\n    \"\"\" Button-Event-Handler to see if a button on GUI works. \"\"\"\n    messagebox.showinfo(message='Tkinter is reacting.')\n\ndef do_tasks():\n    task = asyncio.ensure_future(do_urls())\n    task.add_done_callback(tasks_done)\n\ndef tasks_done(task):\n    messagebox.showinfo(message='Tasks done.')\n\nasync def one_url(url):\n    \"\"\" One task. \"\"\"\n    sec = random.randint(1, 15)\n    await asyncio.sleep(sec)\n    return 'url: {}\\tsec: {}'.format(url, sec)\n\nasync def do_urls():\n    \"\"\" Creating and starting 10 tasks. \"\"\"\n    tasks = [\n        one_url(url)\n        for url in range(10)\n    ]\n    completed, pending = await asyncio.wait(tasks)\n    results = [task.result() for task in completed]\n    print('\\n'.join(results))\n\nif __name__ == '__main__':\n    asyncio.set_event_loop_policy(aiotkinter.TkinterEventLoopPolicy())\n    loop = asyncio.get_event_loop()\n    root = Tk()\n    buttonT = Button(master=root, text='Asyncio Tasks', command=do_tasks)\n    buttonT.pack()\n    buttonX = Button(master=root, text='Freezed???', command=do_freezed)\n    buttonX.pack()\n    loop.run_forever()\n</code></pre>\n", "abstract": "I'm a bit late to the party but if you are not targeting Windows you can use aiotkinter to achieve what you want. I modified your code to show you how to use this package:"}, {"id": 47896975, "score": 2, "vote": 0, "content": "<p>You can keep the GUI alive after pressing the <code>Button</code> by adding a call to <code>root.update_idletasks()</code> in the right spot:</p>\n<pre><code class=\"python\">from tkinter import *\nfrom tkinter import messagebox\nimport asyncio\nimport random\n\ndef do_freezed():\n    \"\"\" Button-Event-Handler to see if a button on GUI works. \"\"\"\n    messagebox.showinfo(message='Tkinter is reacting.')\n\ndef do_tasks():\n    \"\"\" Button-Event-Handler starting the asyncio part. \"\"\"\n    loop = asyncio.get_event_loop()\n    try:\n        loop.run_until_complete(do_urls())\n    finally:\n        loop.close()\n\nasync def one_url(url):\n    \"\"\" One task. \"\"\"\n    sec = random.randint(1, 15)\n    root.update_idletasks()  # ADDED: Allow tkinter to update gui.\n    await asyncio.sleep(sec)\n    return 'url: {}\\tsec: {}'.format(url, sec)\n\nasync def do_urls():\n    \"\"\" Creating and starting 10 tasks. \"\"\"\n    tasks = [one_url(url) for url in range(10)]\n    completed, pending = await asyncio.wait(tasks)\n    results = [task.result() for task in completed]\n    print('\\n'.join(results))\n\n\nif __name__ == '__main__':\n    root = Tk()\n\n    buttonT = Button(master=root, text='Asyncio Tasks', command=do_tasks)\n    buttonT.pack()\n    buttonX = Button(master=root, text='Freezed???', command=do_freezed)\n    buttonX.pack()\n\n    root.mainloop()\n</code></pre>\n", "abstract": "You can keep the GUI alive after pressing the Button by adding a call to root.update_idletasks() in the right spot:"}, {"id": 62442203, "score": 1, "vote": 0, "content": "<p>I had similar task solved with <a href=\"https://docs.python.org/3/library/multiprocessing.html\" rel=\"nofollow noreferrer\"><code>multiprocessing</code></a>.</p>\n<p>Major parts:</p>\n<ol>\n<li>Main process is <code>Tk</code>'s process with <code>mainloop</code>.</li>\n<li><a href=\"https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Process.daemon\" rel=\"nofollow noreferrer\"><code>daemon=True</code></a> process with <code>aiohttp</code> service that <a href=\"https://docs.aiohttp.org/en/stable/faq.html#can-a-handler-receive-incoming-events-from-different-sources-in-parallel\" rel=\"nofollow noreferrer\">executes commands</a>.</li>\n<li>Intercom using duplex <a href=\"https://docs.python.org/3/library/multiprocessing.html#multiprocessing.Pipe\" rel=\"nofollow noreferrer\"><code>Pipe</code></a> so each process can use it's end.</li>\n</ol>\n<p>Additionaly, I'm making Tk's virtual events to simplify massage tracking on app's side. You will need to <a href=\"https://github.com/python/cpython/pull/7142/files\" rel=\"nofollow noreferrer\">apply patch manually</a>. You can check <a href=\"https://bugs.python.org/issue3405\" rel=\"nofollow noreferrer\">python's bug tracker</a> for details.</p>\n<p>I'm checking <code>Pipe</code> each 0.25 seconds on both sides.</p>\n<pre class=\"lang-sh prettyprint-override\"><code class=\"python\">$ python --version\nPython 3.7.3\n</code></pre>\n<p><em>main.py</em></p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">import asyncio\nimport multiprocessing as mp\n\nfrom ws import main\nfrom app import App\n\n\nclass WebSocketProcess(mp.Process):\n\n    def __init__(self, pipe, *args, **kw):\n        super().__init__(*args, **kw)\n        self.pipe = pipe\n\n    def run(self):\n        loop = asyncio.get_event_loop()\n        loop.create_task(main(self.pipe))\n        loop.run_forever()\n\n\nif __name__ == '__main__':\n    pipe = mp.Pipe()\n    WebSocketProcess(pipe, daemon=True).start()\n    App(pipe).mainloop()\n</code></pre>\n<p><em>app.py</em></p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">import tkinter as tk\n\n\nclass App(tk.Tk):\n\n    def __init__(self, pipe, *args, **kw):\n        super().__init__(*args, **kw)\n        self.app_pipe, _ = pipe\n        self.ws_check_interval = 250;\n        self.after(self.ws_check_interval, self.ws_check)\n\n    def join_channel(self, channel_str):\n        self.app_pipe.send({\n            'command': 'join',\n            'data': {\n                'channel': channel_str\n            }\n        })\n\n    def ws_check(self):\n        while self.app_pipe.poll():\n            msg = self.app_pipe.recv()\n            self.event_generate('&lt;&lt;ws-event&gt;&gt;', data=json.dumps(msg), when='tail')\n        self.after(self.ws_check_interval, self.ws_check)\n</code></pre>\n<p><em>ws.py</em></p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">import asyncio\n\nimport aiohttp\n\n\nasync def read_pipe(session, ws, ws_pipe):\n    while True:\n        while ws_pipe.poll():\n            msg = ws_pipe.recv()\n\n            # web socket send\n            if msg['command'] == 'join':\n                await ws.send_json(msg['data'])\n\n            # html request\n            elif msg['command'] == 'ticker':\n                async with session.get('https://example.com/api/ticker/') as response:\n                    ws_pipe.send({'event': 'ticker', 'data': await response.json()})\n\n        await asyncio.sleep(.25)\n\n\nasync def main(pipe, loop):\n    _, ws_pipe = pipe\n    async with aiohttp.ClientSession() as session:\n        async with session.ws_connect('wss://example.com/') as ws:\n            task = loop.create_task(read_pipe(session, ws, ws_pipe))\n            async for msg in ws:\n                if msg.type == aiohttp.WSMsgType.TEXT:\n                    if msg.data == 'close cmd':\n                        await ws.close()\n                        break\n                    ws_pipe.send(msg.json())\n                elif msg.type == aiohttp.WSMsgType.ERROR:\n                    break\n</code></pre>\n", "abstract": "I had similar task solved with multiprocessing. Major parts: Additionaly, I'm making Tk's virtual events to simplify massage tracking on app's side. You will need to apply patch manually. You can check python's bug tracker for details. I'm checking Pipe each 0.25 seconds on both sides. main.py app.py ws.py"}, {"id": 65580416, "score": 1, "vote": 0, "content": "<p>Using Python3.9, it could be done by making several async functions with one of them responsible to the Tk update(). While in the main loop, ensure_future() can be used to invoke all these async functions before starting the asyncio loop.</p>\n<pre><code class=\"python\">#!/usr/bin/env python3.9\n\nimport aioredis\nimport asyncio\nimport tkinter as tk \nimport tkinter.scrolledtext as st \nimport json\n\nasync def redis_main(logs):\n    redisS = await aioredis.create_connection(('localhost', 6379))  \n    subCh = aioredis.Channel('pylog', is_pattern=False)\n    await redisS.execute_pubsub('subscribe', subCh)\n    while await subCh.wait_message():\n            msg = await subCh.get()\n            jmsg = json.loads(msg.decode('utf-8'))\n            logs.insert(tk.INSERT, jmsg['msg'] + '\\n')\n\nasync def tk_main(root):\n    while True:\n        root.update()\n        await asyncio.sleep(0.05)\n\ndef on_closing():\n    asyncio.get_running_loop().stop()\n\nif __name__ == '__main__':\n    root = tk.Tk()\n    root.protocol(\"WM_DELETE_WINDOW\", on_closing)\n    logs = st.ScrolledText(root, width=30, height=8)\n    logs.grid()\n    \n    tkmain = asyncio.ensure_future(tk_main(root))\n    rdmain = asyncio.ensure_future(redis_main(logs))\n    \n    loop = asyncio.get_event_loop()\n    try:\n        loop.run_forever()\n    except KeyboardInterrupt:\n        pass\n\n    tkmain.cancel()\n    rdmain.cancel()\n</code></pre>\n", "abstract": "Using Python3.9, it could be done by making several async functions with one of them responsible to the Tk update(). While in the main loop, ensure_future() can be used to invoke all these async functions before starting the asyncio loop."}, {"id": 51971341, "score": -1, "vote": 0, "content": "<p>I've had great luck running an I/O loop on another thread, started at the beginning of the app creation, and tossing tasks onto it using <code>asyncio.run_coroutine_threadsafe(..)</code>.  </p>\n<p>I'm kind of surprised that I can make changes to the tkinter widgets on the other asyncio loop/thread, and maybe it's a fluke that it works for me -- but it does work.</p>\n<p>Notice that while the asyncio tasks are happening, the <em>other</em> button is still alive and responding.  I always like to  the disable/enable thing on the other button so you don't fire off multiple tasks accidentally, but that's just a UI thing.</p>\n<pre><code class=\"python\">import threading\nfrom functools import partial\nfrom tkinter import *\nfrom tkinter import messagebox\nimport asyncio\nimport random\n\n\n# Please wrap all this code in a nice App class, of course\n\ndef _run_aio_loop(loop):\n    asyncio.set_event_loop(loop)\n    loop.run_forever()\naioloop = asyncio.new_event_loop()\nt = threading.Thread(target=partial(_run_aio_loop, aioloop))\nt.daemon = True  # Optional depending on how you plan to shutdown the app\nt.start()\n\nbuttonT = None\n\ndef do_freezed():\n    \"\"\" Button-Event-Handler to see if a button on GUI works. \"\"\"\n    messagebox.showinfo(message='Tkinter is reacting.')\n\ndef do_tasks():\n    \"\"\" Button-Event-Handler starting the asyncio part. \"\"\"\n    buttonT.configure(state=DISABLED)\n    asyncio.run_coroutine_threadsafe(do_urls(), aioloop)\n\nasync def one_url(url):\n    \"\"\" One task. \"\"\"\n    sec = random.randint(1, 3)\n    # root.update_idletasks()  # We can delete this now\n    await asyncio.sleep(sec)\n    return 'url: {}\\tsec: {}'.format(url, sec)\n\nasync def do_urls():\n    \"\"\" Creating and starting 10 tasks. \"\"\"\n    tasks = [one_url(url) for url in range(3)]\n    completed, pending = await asyncio.wait(tasks)\n    results = [task.result() for task in completed]\n    print('\\n'.join(results))\n    buttonT.configure(state=NORMAL)  # Tk doesn't seem to care that this is called on another thread\n\n\nif __name__ == '__main__':\n    root = Tk()\n\n    buttonT = Button(master=root, text='Asyncio Tasks', command=do_tasks)\n    buttonT.pack()\n    buttonX = Button(master=root, text='Freezed???', command=do_freezed)\n    buttonX.pack()\n\n    root.mainloop()\n</code></pre>\n", "abstract": "I've had great luck running an I/O loop on another thread, started at the beginning of the app creation, and tossing tasks onto it using asyncio.run_coroutine_threadsafe(..).   I'm kind of surprised that I can make changes to the tkinter widgets on the other asyncio loop/thread, and maybe it's a fluke that it works for me -- but it does work. Notice that while the asyncio tasks are happening, the other button is still alive and responding.  I always like to  the disable/enable thing on the other button so you don't fire off multiple tasks accidentally, but that's just a UI thing."}]}, {"link": "https://stackoverflow.com/questions/1813872/running-a-process-in-pythonw-with-popen-without-a-console", "question": {"id": "1813872", "title": "Running a process in pythonw with Popen without a console", "content": "<p>I have a program with a GUI that runs an external program through a Popen call:</p>\n<pre><code class=\"python\">p = subprocess.Popen(\"&lt;commands&gt;\" , stdout=subprocess.PIPE , stderr=subprocess.PIPE , cwd=os.getcwd())\np.communicate()\n</code></pre>\n<p>But a console pops up, regardless of what I do (I've also tried passing it NUL for the file handle). Is there any way to do that without getting the binary I call to free its console?</p>\n", "abstract": "I have a program with a GUI that runs an external program through a Popen call: But a console pops up, regardless of what I do (I've also tried passing it NUL for the file handle). Is there any way to do that without getting the binary I call to free its console?"}, "answers": [{"id": 1813893, "score": 36, "vote": 0, "content": "<p>From <a href=\"http://code.activestate.com/recipes/409002/\" rel=\"noreferrer\">here</a>:</p>\n<pre><code class=\"python\">import subprocess\n\ndef launchWithoutConsole(command, args):\n    \"\"\"Launches 'command' windowless and waits until finished\"\"\"\n    startupinfo = subprocess.STARTUPINFO()\n    startupinfo.dwFlags |= subprocess.STARTF_USESHOWWINDOW\n    return subprocess.Popen([command] + args, startupinfo=startupinfo).wait()\n\nif __name__ == \"__main__\":\n    # test with \"pythonw.exe\"\n    launchWithoutConsole(\"d:\\\\bin\\\\gzip.exe\", [\"-d\", \"myfile.gz\"])\n</code></pre>\n<p>Note that sometimes suppressing the console makes subprocess calls fail with \"Error 6: invalid handle\". A quick fix is to redirect <code>stdin</code>, as explained here: <a href=\"https://stackoverflow.com/questions/40108816/python-running-as-windows-service-oserror-winerror-6-the-handle-is-invalid\">Python running as Windows Service: OSError: [WinError 6] The handle is invalid</a></p>\n", "abstract": "From here: Note that sometimes suppressing the console makes subprocess calls fail with \"Error 6: invalid handle\". A quick fix is to redirect stdin, as explained here: Python running as Windows Service: OSError: [WinError 6] The handle is invalid"}, {"id": 43425764, "score": 6, "vote": 0, "content": "<p>just do <code>subprocess.Popen([command], shell=True)</code></p>\n", "abstract": "just do subprocess.Popen([command], shell=True)"}, {"id": 53486316, "score": 2, "vote": 0, "content": "<p>According to <a href=\"https://docs.python.org/2/library/subprocess.html\" rel=\"nofollow noreferrer\">Python 2.7 documentation</a> and <a href=\"https://docs.python.org/3/library/subprocess.html#subprocess.CREATE_NO_WINDOW\" rel=\"nofollow noreferrer\">Python 3.7 documentation</a>, you can influence how <code>Popen</code> creates the process by setting <code>creationflags</code>. In particular, the <code>CREATE_NO_WINDOW</code> flag would be useful to you.</p>\n<pre><code class=\"python\">variable = subprocess.Popen(\n   \"CMD COMMAND\", \n   stdout = subprocess.PIPE, creationflags = subprocess.CREATE_NO_WINDOW\n)\n</code></pre>\n", "abstract": "According to Python 2.7 documentation and Python 3.7 documentation, you can influence how Popen creates the process by setting creationflags. In particular, the CREATE_NO_WINDOW flag would be useful to you."}, {"id": 44890694, "score": 1, "vote": 0, "content": "<p>This works nicely in the win32api. The other solutions were not working for me. </p>\n<pre><code class=\"python\">import win32api\nchrome = \"\\\"C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\\\"\"\nargs = \"https://stackoverflow.com\"\n\nwin32api.WinExec(chrome + \" \" + args)\n</code></pre>\n", "abstract": "This works nicely in the win32api. The other solutions were not working for me. "}, {"id": 1814119, "score": -1, "vote": 0, "content": "<p>You might be able to just do <code>subprocess.Popen([command], shell=False)</code>.</p>\n<p>That's what I use anyways.  Saves you all the nonsense of setting flags and whatnot.\nOnce named as a .pyw or run with pythonw it shouldn't open a console.</p>\n", "abstract": "You might be able to just do subprocess.Popen([command], shell=False). That's what I use anyways.  Saves you all the nonsense of setting flags and whatnot.\nOnce named as a .pyw or run with pythonw it shouldn't open a console."}]}, {"link": "https://stackoverflow.com/questions/665566/redirect-command-line-results-to-a-tkinter-gui", "question": {"id": "665566", "title": "Redirect command line results to a tkinter GUI", "content": "<p>I have created a program that prints results on command line.\n(It is server and it prints log on command line.)</p>\n<p>Now, I want to see the same result to GUI .</p>\n<p><strong>How can I redirect command line results to GUI?</strong></p>\n<p>Please, suggest a trick to easily transform console application to simple GUI.</p>\n<p>Note that it should work on Linux and Windows.</p>\n", "abstract": "I have created a program that prints results on command line.\n(It is server and it prints log on command line.) Now, I want to see the same result to GUI . How can I redirect command line results to GUI? Please, suggest a trick to easily transform console application to simple GUI. Note that it should work on Linux and Windows."}, "answers": [{"id": 665598, "score": 17, "vote": 0, "content": "<p>You could create a script wrapper that runs your command line program as a sub process, then add the output to something like a text widget.</p>\n<pre><code class=\"python\">from tkinter import *\nimport subprocess as sub\np = sub.Popen('./script',stdout=sub.PIPE,stderr=sub.PIPE)\noutput, errors = p.communicate()\n\nroot = Tk()\ntext = Text(root)\ntext.pack()\ntext.insert(END, output)\nroot.mainloop()\n</code></pre>\n<p>where script is your program. You can obviously print the errors in a different colour, or something like that.</p>\n", "abstract": "You could create a script wrapper that runs your command line program as a sub process, then add the output to something like a text widget. where script is your program. You can obviously print the errors in a different colour, or something like that."}, {"id": 32682520, "score": 16, "vote": 0, "content": "<p>To display subprocess' output in a GUI <em>while it is still running</em>, a portable stdlib-only solution that works on both Python 2 and 3 has to use a background thread:</p>\n<pre><code class=\"python\">#!/usr/bin/python\n\"\"\"\n- read output from a subprocess in a background thread\n- show the output in the GUI\n\"\"\"\nimport sys\nfrom itertools import islice\nfrom subprocess import Popen, PIPE\nfrom textwrap import dedent\nfrom threading import Thread\n\ntry:\n    import Tkinter as tk\n    from Queue import Queue, Empty\nexcept ImportError:\n    import tkinter as tk # Python 3\n    from queue import Queue, Empty # Python 3\n\ndef iter_except(function, exception):\n    \"\"\"Works like builtin 2-argument `iter()`, but stops on `exception`.\"\"\"\n    try:\n        while True:\n            yield function()\n    except exception:\n        return\n\nclass DisplaySubprocessOutputDemo:\n    def __init__(self, root):\n        self.root = root\n\n        # start dummy subprocess to generate some output\n        self.process = Popen([sys.executable, \"-u\", \"-c\", dedent(\"\"\"\n            import itertools, time\n\n            for i in itertools.count():\n                print(\"%d.%d\" % divmod(i, 10))\n                time.sleep(0.1)\n            \"\"\")], stdout=PIPE)\n\n        # launch thread to read the subprocess output\n        #   (put the subprocess output into the queue in a background thread,\n        #    get output from the queue in the GUI thread.\n        #    Output chain: process.readline -&gt; queue -&gt; label)\n        q = Queue(maxsize=1024)  # limit output buffering (may stall subprocess)\n        t = Thread(target=self.reader_thread, args=[q])\n        t.daemon = True # close pipe if GUI process exits\n        t.start()\n\n        # show subprocess' stdout in GUI\n        self.label = tk.Label(root, text=\"  \", font=(None, 200))\n        self.label.pack(ipadx=4, padx=4, ipady=4, pady=4, fill='both')\n        self.update(q) # start update loop\n\n    def reader_thread(self, q):\n        \"\"\"Read subprocess output and put it into the queue.\"\"\"\n        try:\n            with self.process.stdout as pipe:\n                for line in iter(pipe.readline, b''):\n                    q.put(line)\n        finally:\n            q.put(None)\n\n    def update(self, q):\n        \"\"\"Update GUI with items from the queue.\"\"\"\n        for line in iter_except(q.get_nowait, Empty): # display all content\n            if line is None:\n                self.quit()\n                return\n            else:\n                self.label['text'] = line # update GUI\n                break # display no more than one line per 40 milliseconds\n        self.root.after(40, self.update, q) # schedule next update\n\n    def quit(self):\n        self.process.kill() # exit subprocess if GUI is closed (zombie!)\n        self.root.destroy()\n\n\nroot = tk.Tk()\napp = DisplaySubprocessOutputDemo(root)\nroot.protocol(\"WM_DELETE_WINDOW\", app.quit)\n# center window\nroot.eval('tk::PlaceWindow %s center' % root.winfo_pathname(root.winfo_id()))\nroot.mainloop()\n</code></pre>\n<p>The essence of the solution is:</p>\n<ul>\n<li>put the subprocess output into the queue in a background thread</li>\n<li>get the output from the queue in the GUI thread.</li>\n</ul>\n<p>i.e., call <code>process.readline()</code> in the background thread -&gt; queue -&gt; update GUI label in the main thread. Related <a href=\"https://gist.github.com/zed/42324397516310c86288\" rel=\"noreferrer\"><code>kill-process.py</code></a> (no polling -- a less portable solution that uses <code>event_generate</code> in a background thread).</p>\n", "abstract": "To display subprocess' output in a GUI while it is still running, a portable stdlib-only solution that works on both Python 2 and 3 has to use a background thread: The essence of the solution is: i.e., call process.readline() in the background thread -> queue -> update GUI label in the main thread. Related kill-process.py (no polling -- a less portable solution that uses event_generate in a background thread)."}, {"id": 665847, "score": 6, "vote": 0, "content": "<p>Redirecting stdout to a write() method that updates your gui is one way to go, and probably the quickest - although running a subprocess is probably a more elegant solution. </p>\n<p>Only redirect stderr once you're really confident it's up and working, though!</p>\n<p>Example implimentation (gui file and test script):</p>\n<p>test_gui.py:</p>\n<pre><code class=\"python\">from Tkinter import *\nimport sys\nsys.path.append(\"/path/to/script/file/directory/\")\n\nclass App(Frame):\n    def run_script(self):\n        sys.stdout = self\n        ## sys.stderr = self\n        try:\n            del(sys.modules[\"test_script\"])\n        except:\n            ## Yeah, it's a real ugly solution...\n            pass\n        import test_script\n        test_script.HelloWorld()\n        sys.stdout = sys.__stdout__\n        ## sys.stderr = __stderr__\n\n    def build_widgets(self):\n        self.text1 = Text(self)\n        self.text1.pack(side=TOP)\n        self.button = Button(self)\n        self.button[\"text\"] = \"Trigger script\"\n        self.button[\"command\"] = self.run_script\n        self.button.pack(side=TOP)\n\n    def write(self, txt):\n        self.text1.insert(INSERT, txt)\n\n    def __init__(self, master=None):\n        Frame.__init__(self, master)\n        self.pack()\n        self.build_widgets()\n\nroot = Tk()\napp = App(master = root)\napp.mainloop()\n</code></pre>\n<p>test_script.py:</p>\n<pre><code class=\"python\">print \"Hello world!\"\n\ndef HelloWorld():\n    print \"HelloWorldFromDef!\"\n</code></pre>\n", "abstract": "Redirecting stdout to a write() method that updates your gui is one way to go, and probably the quickest - although running a subprocess is probably a more elegant solution.  Only redirect stderr once you're really confident it's up and working, though! Example implimentation (gui file and test script): test_gui.py: test_script.py:"}, {"id": 49742723, "score": 6, "vote": 0, "content": "<p>Sorry for my bad English. I actually, used a different way to print Command Prompt output into my new Automation tool. \nPlease find those steps below.</p>\n<p>1&gt; Create a Bat File &amp; redirect its output to a LOG file. \nCommand Prompt command: <code>tasklist /svc</code></p>\n<p>2&gt; Make read that file with Python 3.x.\n`processedFile = open('D:\\LOG\\taskLog.txt', 'r')</p>\n<p>3&gt; The Finale step.\n<code>ttk.Label(Tab4, text=[ProcessFile.read()]).place(x=0, y=27)</code></p>\n<p>**Hence please be informed that, I have not include scrollbar into this code yet. </p>\n<p>Posting Screenshot: </p>\n<p><a href=\"https://i.stack.imgur.com/ft3l3.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/ft3l3.png\"/></a></p>\n", "abstract": "Sorry for my bad English. I actually, used a different way to print Command Prompt output into my new Automation tool. \nPlease find those steps below. 1> Create a Bat File & redirect its output to a LOG file. \nCommand Prompt command: tasklist /svc 2> Make read that file with Python 3.x.\n`processedFile = open('D:\\LOG\\taskLog.txt', 'r') 3> The Finale step.\nttk.Label(Tab4, text=[ProcessFile.read()]).place(x=0, y=27) **Hence please be informed that, I have not include scrollbar into this code yet.  Posting Screenshot:  "}]}, {"link": "https://stackoverflow.com/questions/22266802/how-to-convert-a-ui-file-to-py-file", "question": {"id": "22266802", "title": "How to convert a .ui file to .py file", "content": "<p>This .ui file is made by Qt Designer. It's just a simple UI.</p>\n<p>All the commands or codes for doing this on the websites I have looked through are not for windows.</p>\n", "abstract": "This .ui file is made by Qt Designer. It's just a simple UI. All the commands or codes for doing this on the websites I have looked through are not for windows."}, "answers": [{"id": 22274558, "score": 25, "vote": 0, "content": "<p>The pyuic tool works in exactly the same way on all platforms:</p>\n<pre class=\"lang-none prettyprint-override\"><code class=\"python\">C:\\&gt;pyuic4 -h\nUsage: pyuic4 [options] &lt;ui-file&gt;\n\nOptions:\n  --version             show program's version number and exit\n  -h, --help            show this help message and exit\n  -p, --preview         show a preview of the UI instead of generating code\n  -o FILE, --output=FILE\n                        write generated code to FILE instead of stdout\n  -x, --execute         generate extra code to test and display the class\n  -d, --debug           show debug output\n  -i N, --indent=N      set indent width to N spaces, tab if N is 0 [default: 4]\n  -w, --pyqt3-wrapper   generate a PyQt v3 style wrapper\n\n  Code generation options:\n    --from-imports      generate imports relative to '.'\n    --resource-suffix=SUFFIX\n                        append SUFFIX to the basename of resource files\n                        [default: _rc]\n</code></pre>\n<p>I suspect the reason \"it doesn't work\" is that the .ui file you are trying to convert is not in the current directory. So you need to cd to that directory first:</p>\n<pre><code class=\"python\">    C:\\&gt;cd C:\\path\\to\\my\\ui\\files\n</code></pre>\n<p>then run pyuic:</p>\n<pre><code class=\"python\">    C:\\path\\to\\my\\ui\\files\\&gt;pyuic4 -o ui_form.py form.ui\n</code></pre>\n", "abstract": "The pyuic tool works in exactly the same way on all platforms: I suspect the reason \"it doesn't work\" is that the .ui file you are trying to convert is not in the current directory. So you need to cd to that directory first: then run pyuic:"}, {"id": 57951576, "score": 17, "vote": 0, "content": "<p>In pyqt5 you can use:</p>\n<ol>\n<li><p>convert to none-executable python file :</p>\n<p>pyuic5 -o pyfilename.py design.ui</p>\n</li>\n<li><p>convert to executable python file :</p>\n<p>pyuic5 -x -o pyfilename.py design.ui</p>\n</li>\n</ol>\n<p>and also for resource diles(qrc):</p>\n<ol>\n<li><p>convert <code>qrc</code> to python file :</p>\n<p>pyrcc5 -o pyfilename.py res.qrc</p>\n</li>\n</ol>\n<p><code>Note:</code> that if you run the command in the wrong way,your <code>ui</code> file will be lost.So you have to make a copy of your files:)</p>\n", "abstract": "In pyqt5 you can use: convert to none-executable python file : pyuic5 -o pyfilename.py design.ui convert to executable python file : pyuic5 -x -o pyfilename.py design.ui and also for resource diles(qrc): convert qrc to python file : pyrcc5 -o pyfilename.py res.qrc Note: that if you run the command in the wrong way,your ui file will be lost.So you have to make a copy of your files:)"}, {"id": 34833304, "score": 15, "vote": 0, "content": "<p>To convert from <code>.ui</code> to <code>.py</code> in Windows</p>\n<ol>\n<li>Go to the directory where your <code>ui</code> file is.</li>\n<li>Press shift right-click your mouse.</li>\n<li>Click <code>open command window here</code>.</li>\n<li>This will open the <code>cmd</code>, check what is the directory of your\n<code>(pyuic4.bat) file</code>. Usually, it is in:\n<code>C:\\Python34\\Lib\\site-packages\\PyQt4\\pyuic4.bat</code>.</li>\n<li>Write in the <code>cmd</code>:<br/>\n<code>C:\\Python34\\Lib\\site-packages\\PyQt4\\pyuic4.bat -x filename.ui -o filename.py</code>   (hit Enter)<br/>\nthis will generate a new file <code>.py</code> for your <code>.ui</code> file\nand in the same directory</li>\n</ol>\n<p>Note:\nThis command for Python 3.4 version and PyQt4 version.\nIf you are using other versions you should change the numbers (e.g PyQt5)</p>\n", "abstract": "To convert from .ui to .py in Windows Note:\nThis command for Python 3.4 version and PyQt4 version.\nIf you are using other versions you should change the numbers (e.g PyQt5)"}, {"id": 55551839, "score": 6, "vote": 0, "content": "<p>Better Late Than Never, create a batch file on windows (.bat) and paste the following into it , save &amp; run from the same directory as your files.</p>\n<pre><code class=\"python\">@echo off\ntitle .UI to .py files converter !\necho Generate Python files from .UI files!\npause\necho \"\"\necho \"\"\necho \"\"\necho \"\"\necho UI file Name\nset /p UiName=Enter .UI file Name: \necho \"\"\necho \"\"\necho \"\"\necho \"\"\necho PY file Name\nset /p PyName=Enter .PY file Name: \necho \"\"\necho \"\"\necho \"\"\necho Start Converting Files Please wait.\n\n\n\ncall python -m PyQt5.uic.pyuic -x \"%UiName%\" -o \"%PyName%\"\n\necho QRC file Name\nset /p QrName=Enter .qrc file Name: \necho \"\"\necho \"\"\necho \"\"\necho \"\"\necho PY file Name\nset /p PiName=Enter .PY file Name: \necho \"\"\necho \"\"\necho \"\"\necho Start Converting Files Please wait.\n\npyrcc5 -o \"%PiName%\" \"%QrName%\"\n\necho Job Completed.\npause\n</code></pre>\n", "abstract": "Better Late Than Never, create a batch file on windows (.bat) and paste the following into it , save & run from the same directory as your files."}]}, {"link": "https://stackoverflow.com/questions/25982798/how-to-display-function-arguments-in-spyder", "question": {"id": "25982798", "title": "How to display function arguments in Spyder?", "content": "<p>I'm using Spyder 2.2.5 with Python 2.7 and I want the editor to display the arguments of the function I'm calling after I type the first parenthesis. I know it's possible, because I can see it in the video-tutorials I'm using. I've tried (at least I think so..) all menu-items.\nGetting crazy here, please help!</p>\n", "abstract": "I'm using Spyder 2.2.5 with Python 2.7 and I want the editor to display the arguments of the function I'm calling after I type the first parenthesis. I know it's possible, because I can see it in the video-tutorials I'm using. I've tried (at least I think so..) all menu-items.\nGetting crazy here, please help!"}, "answers": [{"id": 34058966, "score": 19, "vote": 0, "content": "<p>You can activate the <a href=\"https://pythonhosted.org/spyder/inspector.html\" rel=\"noreferrer\">object inspector</a> to display the documention of the function itself by enabling automatic connections for your editor or console. It will then show you the function parameters as you press the left parenthesis.</p>\n<p>To enable it go to Tools &gt; Preferences &gt; Object Inspector . Under Help-&gt; Automatic connections check your desired programming environment and enable plug-in. </p>\n", "abstract": "You can activate the object inspector to display the documention of the function itself by enabling automatic connections for your editor or console. It will then show you the function parameters as you press the left parenthesis. To enable it go to Tools > Preferences > Object Inspector . Under Help-> Automatic connections check your desired programming environment and enable plug-in. "}, {"id": 49372487, "score": 18, "vote": 0, "content": "<p>I have a similar problem. The arguments pop-up shows up only until I start typing, so I have a problem if I forget what the latter arguments are. A workaround is to move the cursor on the function and press <code>Ctrl</code> + <code>i</code>. It shows the function documentation in help window, including its definition.</p>\n", "abstract": "I have a similar problem. The arguments pop-up shows up only until I start typing, so I have a problem if I forget what the latter arguments are. A workaround is to move the cursor on the function and press Ctrl + i. It shows the function documentation in help window, including its definition."}, {"id": 50948634, "score": 8, "vote": 0, "content": "<p><strong>For Spyder 3:</strong></p>\n<p><em>Tools &gt; Preferences &gt; Help &gt; Automatic Connections</em> and then tick all the workspaces you want it to show functions' arguments.</p>\n", "abstract": "For Spyder 3: Tools > Preferences > Help > Automatic Connections and then tick all the workspaces you want it to show functions' arguments."}, {"id": 53983031, "score": 0, "vote": 0, "content": "<p>Go to <em>View &gt; Window layouts &gt; Spyder Default Layout</em>. This resets the Spyder IDE to the defaults, and the object inspector will function again (worked for me).</p>\n", "abstract": "Go to View > Window layouts > Spyder Default Layout. This resets the Spyder IDE to the defaults, and the object inspector will function again (worked for me)."}, {"id": 71969462, "score": 0, "vote": 0, "content": "<p>Tools &gt; Reset Spyder to factory defaults</p>\n<p>it fixed my problem</p>\n", "abstract": "Tools > Reset Spyder to factory defaults it fixed my problem"}, {"id": 51189598, "score": -2, "vote": 0, "content": "<p>often would need to restart Spyder to have the inline help </p>\n", "abstract": "often would need to restart Spyder to have the inline help "}, {"id": 63547514, "score": -2, "vote": 0, "content": "<p>Install kite from tools menu, which will resolve your issue</p>\n", "abstract": "Install kite from tools menu, which will resolve your issue"}]}, {"link": "https://stackoverflow.com/questions/8912327/how-to-make-a-gui-in-python", "question": {"id": "8912327", "title": "How to make a gui in python", "content": "<p>I was wondering if any of you know where I could find a simple tutorial on the web maybe to make a very simplistic gui. I have no idea how to start out in code to make one so I need your help. What I want the gui to be used for is I have written a program that I want to be to use it on other computers that already don't have python on it. I have already made an executable but I would much rather use a gui just because of the more \"polished\" look it has.</p>\n", "abstract": "I was wondering if any of you know where I could find a simple tutorial on the web maybe to make a very simplistic gui. I have no idea how to start out in code to make one so I need your help. What I want the gui to be used for is I have written a program that I want to be to use it on other computers that already don't have python on it. I have already made an executable but I would much rather use a gui just because of the more \"polished\" look it has."}, "answers": [{"id": 8912396, "score": 12, "vote": 0, "content": "<p>Consider <a href=\"http://wxpython.org/what.php\">wxPython</a> (which is cross-platform). Here is <a href=\"http://wiki.wxpython.org/Getting%20Started\">a tutorial</a>.</p>\n", "abstract": "Consider wxPython (which is cross-platform). Here is a tutorial."}, {"id": 8912430, "score": 12, "vote": 0, "content": "<p>If you're looking to build a GUI interface to trace an IP address, I would recommend VB. </p>\n<p>But if you insist on sticking with Python, <a href=\"http://wiki.python.org/moin/TkInter\" rel=\"noreferrer\">TkInter</a> and <a href=\"http://wxpython.org/\" rel=\"noreferrer\">wxPython</a> are the best choices. </p>\n", "abstract": "If you're looking to build a GUI interface to trace an IP address, I would recommend VB.  But if you insist on sticking with Python, TkInter and wxPython are the best choices. "}, {"id": 8912472, "score": 6, "vote": 0, "content": "<p>Just look at the python GUI programming options at <a href=\"http://wiki.python.org/moin/GuiProgramming\" rel=\"noreferrer\">http://wiki.python.org/moin/GuiProgramming</a>.\nBut, Consider Wxpython for your GUI application as it is cross platform. And,from above link you could also get some IDE to work upon.</p>\n", "abstract": "Just look at the python GUI programming options at http://wiki.python.org/moin/GuiProgramming.\nBut, Consider Wxpython for your GUI application as it is cross platform. And,from above link you could also get some IDE to work upon."}, {"id": 8912426, "score": 4, "vote": 0, "content": "<p>Using <a href=\"http://qt.nokia.com/products/\" rel=\"nofollow\">Qt</a> in Python is a really pleasant experience: <a href=\"http://wiki.python.org/moin/PyQt\" rel=\"nofollow\">http://wiki.python.org/moin/PyQt</a></p>\n<p>For the quick tutorial: <a href=\"http://zetcode.com/tutorials/pyqt4/\" rel=\"nofollow\">http://zetcode.com/tutorials/pyqt4/</a></p>\n", "abstract": "Using Qt in Python is a really pleasant experience: http://wiki.python.org/moin/PyQt For the quick tutorial: http://zetcode.com/tutorials/pyqt4/"}, {"id": 9058054, "score": 4, "vote": 0, "content": "<p>Tkinter is the \"standard\" GUI for Python, meaning it should be available with every Python installation.</p>\n<p>In terms of learning it, and particularly learning how to use recent versions of Tkinter (which have improved a lot), I very highly recommend the TkDocs tutorial that I put together a while back - see <a href=\"http://www.tkdocs.com\" rel=\"nofollow\">http://www.tkdocs.com</a></p>\n<p>Loaded with examples, covers basic concepts and all of the core widgets.</p>\n", "abstract": "Tkinter is the \"standard\" GUI for Python, meaning it should be available with every Python installation. In terms of learning it, and particularly learning how to use recent versions of Tkinter (which have improved a lot), I very highly recommend the TkDocs tutorial that I put together a while back - see http://www.tkdocs.com Loaded with examples, covers basic concepts and all of the core widgets."}, {"id": 8912490, "score": 1, "vote": 0, "content": "<p>For a start I would recommend <a href=\"http://wxglade.sourceforge.net/\" rel=\"nofollow\">wxglade</a>. It is a rather easy to use tool that helps you build wxPython applications. wx is already cross platform and can be packaged with tools like <a href=\"http://www.py2exe.org/\" rel=\"nofollow\">py2exe</a> or <a href=\"http://svn.pythonmac.org/py2app/py2app/trunk/doc/index.html\" rel=\"nofollow\">py2app</a>.</p>\n", "abstract": "For a start I would recommend wxglade. It is a rather easy to use tool that helps you build wxPython applications. wx is already cross platform and can be packaged with tools like py2exe or py2app."}, {"id": 8912632, "score": 1, "vote": 0, "content": "<p><a href=\"http://www.ferg.org/easygui/tutorial.html\" rel=\"nofollow\">easygui</a> is a wrapper around <a href=\"http://wiki.python.org/moin/TkInter\" rel=\"nofollow\">Tkinter</a> to make things easier</p>\n", "abstract": "easygui is a wrapper around Tkinter to make things easier"}, {"id": 8913722, "score": 1, "vote": 0, "content": "<p>If you're more into gaming you can use PyGame for GUIs.  </p>\n", "abstract": "If you're more into gaming you can use PyGame for GUIs.  "}, {"id": 8912379, "score": 0, "vote": 0, "content": "<p>Docs on the python interface to tcl/tk:  <a href=\"http://docs.python.org/library/tkinter.html\" rel=\"nofollow\">http://docs.python.org/library/tkinter.html</a></p>\n<p>And an intro to using same: <a href=\"http://www.pythonware.com/library/tkinter/introduction/\" rel=\"nofollow\">http://www.pythonware.com/library/tkinter/introduction/</a></p>\n", "abstract": "Docs on the python interface to tcl/tk:  http://docs.python.org/library/tkinter.html And an intro to using same: http://www.pythonware.com/library/tkinter/introduction/"}, {"id": 8912460, "score": 0, "vote": 0, "content": "<p>While some suggestions have included tkinter and wxPython, the other part of the answer to your question is that you will also need to package it using something like py2app, pyinstaller, or py2exe (depending on the operating system). You mentioned the other machines do not have python, so this would be required in order to distribute the entire python environment with your app.</p>\n<p>Also have a look at PySide or PyQt. They have a ton of tutorials everywhere and heavy documentation from Qt.</p>\n", "abstract": "While some suggestions have included tkinter and wxPython, the other part of the answer to your question is that you will also need to package it using something like py2app, pyinstaller, or py2exe (depending on the operating system). You mentioned the other machines do not have python, so this would be required in order to distribute the entire python environment with your app. Also have a look at PySide or PyQt. They have a ton of tutorials everywhere and heavy documentation from Qt."}]}, {"link": "https://stackoverflow.com/questions/1269320/scale-an-image-in-gtk", "question": {"id": "1269320", "title": "Scale an image in GTK", "content": "<p>In GTK, how can I scale an image? Right now I load images with PIL and scale them beforehand, but is there a way to do it with GTK?</p>\n", "abstract": "In GTK, how can I scale an image? Right now I load images with PIL and scale them beforehand, but is there a way to do it with GTK?"}, "answers": [{"id": 1283486, "score": 26, "vote": 0, "content": "<p>Load the image from a file using gtk.gdk.Pixbuf for that:</p>\n<pre><code class=\"python\">import gtk\npixbuf = gtk.gdk.pixbuf_new_from_file('/path/to/the/image.png')\n</code></pre>\n<p>then scale it:</p>\n<pre><code class=\"python\">pixbuf = pixbuf.scale_simple(width, height, gtk.gdk.INTERP_BILINEAR)\n</code></pre>\n<p>Then, if you want use it in a gtk.Image, crate the widget and set the image from the pixbuf.</p>\n<pre><code class=\"python\">image = gtk.Image()\nimage.set_from_pixbuf(pixbuf)\n</code></pre>\n<p>Or maybe in a direct way:</p>\n<pre><code class=\"python\">image = gtk.image_new_from_pixbuf(pixbuf)\n</code></pre>\n", "abstract": "Load the image from a file using gtk.gdk.Pixbuf for that: then scale it: Then, if you want use it in a gtk.Image, crate the widget and set the image from the pixbuf. Or maybe in a direct way:"}, {"id": 1309462, "score": 10, "vote": 0, "content": "<p>It might be more effective to simply scale them before loading. I especially think so since I use these functions to load in 96x96 thumbnails from sometimes very large JPEGs, still very fast.</p>\n<pre><code class=\"python\">gtk.gdk.pixbuf_new_from_file_at_scale(..)\ngtk.gdk.pixbuf_new_from_file_at_size(..)\n</code></pre>\n", "abstract": "It might be more effective to simply scale them before loading. I especially think so since I use these functions to load in 96x96 thumbnails from sometimes very large JPEGs, still very fast."}, {"id": 19303924, "score": 2, "vote": 0, "content": "<p>Scale image from URL. ( <a href=\"http://www.pygtk.org/docs/pygtk/class-gdkpixbufloader.html#method-gdkpixbufloader--set-size\" rel=\"nofollow\">scale reference</a> )</p>\n<pre><code class=\"python\">import pygtk\npygtk.require('2.0')\nimport gtk\nimport urllib2\n\nclass MainWin:\n\n    def destroy(self, widget, data=None):\n        print \"destroy signal occurred\"\n        gtk.main_quit()\n\n    def __init__(self):\n        self.window = gtk.Window(gtk.WINDOW_TOPLEVEL)\n        self.window.connect(\"destroy\", self.destroy)\n        self.window.set_border_width(10)\n        self.image=gtk.Image()\n\n        self.response=urllib2.urlopen(\n            'http://192.168.1.11/video/1024x768.jpeg')\n\n        self.loader=gtk.gdk.PixbufLoader()         \n        self.loader.set_size(200, 100)   \n        #### works but throwing: glib.GError: Unrecognized image file format       \n        self.loader.write(self.response.read())\n        self.loader.close()\n        self.image.set_from_pixbuf(self.loader.get_pixbuf())\n\n        self.window.add(self.image)\n        self.image.show()\n\n\n        self.window.show()\n\n    def main(self):\n        gtk.main()\n\nif __name__ == \"__main__\":\n    MainWin().main()\n</code></pre>\n<p>*<strong>EDIT: (work out fix) *</strong></p>\n<pre><code class=\"python\">try:\n  self.loader=gtk.gdk.PixbufLoader()         \n  self.loader.set_size(200, 100)   \n\n            # ignore tihs: \n            #  glib.GError: Unrecognized image file format       \n\n  self.loader.write(self.response.read())\n  self.loader.close()\n  self.image.set_from_pixbuf(self.loader.get_pixbuf())\n\nexcept Exception, err:\n  print err\n  pass\n</code></pre>\n", "abstract": "Scale image from URL. ( scale reference ) *EDIT: (work out fix) *"}, {"id": 57678274, "score": 0, "vote": 0, "content": "<p>Just FYI, here is a solution which scales the image based on window size (Implying you are implementing this in a class which extends <code>GtkWindow</code>).</p>\n<pre><code class=\"python\">let [width, height] = this.get_size(); // Get size of GtkWindow\nthis._image = new GtkImage();          \nlet pixbuf = GdkPixbuf.Pixbuf.new_from_file_at_scale(filePath,width,height,true);\nthis._image.set_from_pixbuf(pixbuf);\n</code></pre>\n", "abstract": "Just FYI, here is a solution which scales the image based on window size (Implying you are implementing this in a class which extends GtkWindow)."}, {"id": 62408279, "score": 0, "vote": 0, "content": "<p>anyone doing this in C. This is how it's done</p>\n<p>//Assuming you already loaded the file and saved the filename\n//GTK_IMAGE(image) is the container used to display the image</p>\n<pre><code class=\"python\">GdkPixbuf *pb;\n\npb = gdk_pixbuf_new_from_file(file_name, NULL);\npb = gdk_pixbuf_scale_simple(pb,700,700,GDK_INTERP_BILINEAR);\n            gtk_image_set_from_pixbuf(GTK_IMAGE(image), pb);\n</code></pre>\n", "abstract": "anyone doing this in C. This is how it's done //Assuming you already loaded the file and saved the filename\n//GTK_IMAGE(image) is the container used to display the image"}, {"id": 64004356, "score": -1, "vote": 0, "content": "<p>actually when we use\ngdk_pixbuf_scale_simple(pb,700,700,GDK_INTERP_BILINEAR); this function causes memory leakage (If we monitor task manager the memory requirement goes on increasing till it kills the process) when used with a timer event. How to solve that</p>\n", "abstract": "actually when we use\ngdk_pixbuf_scale_simple(pb,700,700,GDK_INTERP_BILINEAR); this function causes memory leakage (If we monitor task manager the memory requirement goes on increasing till it kills the process) when used with a timer event. How to solve that"}]}, {"link": "https://stackoverflow.com/questions/6514680/gui-interface-for-sqlite-data-entry-in-python", "question": {"id": "6514680", "title": "GUI interface for sqlite data entry in Python", "content": "<p>I am making a simple sqlite database for storing some non-sensitive client information.  I am very familiar with python+sqlite and would prefer to stick with this combo on this project.  I would like to create an simple GUI interface for data entry and searching of the database... something very similar to what MS Access provides.  I want my wife to be able to enter/search data easily, so PHPmyadmin style things are out of the question.</p>\n<p>I understand I could just give in and get MS Access, but if reasonbly possible would rather just write the code myself so it will run on my computers (*nix) and is flexible (so I can later integrate it with a web application and our smart phones.)</p>\n<p>Can you developers recommend any interfaces/packages/etc (preferably pythonic) that can accomplish this with reasonable ease?</p>\n<p>Thanks!</p>\n", "abstract": "I am making a simple sqlite database for storing some non-sensitive client information.  I am very familiar with python+sqlite and would prefer to stick with this combo on this project.  I would like to create an simple GUI interface for data entry and searching of the database... something very similar to what MS Access provides.  I want my wife to be able to enter/search data easily, so PHPmyadmin style things are out of the question. I understand I could just give in and get MS Access, but if reasonbly possible would rather just write the code myself so it will run on my computers (*nix) and is flexible (so I can later integrate it with a web application and our smart phones.) Can you developers recommend any interfaces/packages/etc (preferably pythonic) that can accomplish this with reasonable ease? Thanks!"}, "answers": [{"id": 6522854, "score": 11, "vote": 0, "content": "<p>Since you're interested in future integration with a web application, you might consider using a Python web framework and running the app locally on your machine, using your web browser as the interface. In that case, one easy option would be <a href=\"http://www.web2py.com\">web2py</a>. Just <a href=\"http://www.web2py.com/examples/default/download\">download</a>, unzip, and run, and you can use the web-based IDE (<a href=\"http://www.web2py.com/demo_admin/default/site\">demo</a>) to create a simple CRUD app very quickly (if you really want to keep it simple, you can even use the \"New application wizard\" (<a href=\"http://www.web2py.com/demo_admin/wizard/index\">demo</a>) to build the app). It includes its own server, so you can run your app locally, just like a desktop app.</p>\n<p>You can use the web2py <a href=\"http://web2py.com/book/default/chapter/06\">DAL</a> (database abstraction layer) to define and create your SQLite database and tables (without writing any SQL). For example:</p>\n<pre><code class=\"python\">db = DAL('sqlite://storage.db')\n\ndb.define_table('customer',\n    Field('name', requires=IS_NOT_IN_DB(db, 'customer.name')),\n    Field('address'),\n    Field('email', requires=IS_EMAIL()))\n</code></pre>\n<p>The above code will create a SQLite database called storage.db and create a table called 'customer'. It also specifies form validators for the 'name' and 'email' fields, so whenever those fields are filled via a form, the entries will be validated ('name' cannot already be in the DB, and 'email' must be a valid email address format) -- if validation fails, the form will display appropriate error messages (which can be customized).</p>\n<p>The DAL will also handle schema <a href=\"http://web2py.com/book/default/chapter/06#Migrations\">migrations</a> automatically, so if you change your table definitions, the database schema will be updated (if necessary, you can turn off migrations completely or on a per table basis).</p>\n<p>Once you have your data models defined, you can use web2py's <a href=\"http://web2py.com/book/default/chapter/07#CRUD\">CRUD</a> system to handle all the data entry and searching. Just include these two lines (actually, they're already included in the 'welcome' scaffolding application):</p>\n<pre><code class=\"python\">from gluon.tools import Crud\ncrud = Crud(db)\n</code></pre>\n<p>And in a controller, define the following action:</p>\n<pre><code class=\"python\">def data():\n    return dict(form=crud())\n</code></pre>\n<p>That will expose a set of pre-defined URLs that will enable you to create, list, search, view, update, and delete records in any table.</p>\n<p>Of course, if you don't like some of the default behavior, there are lots of ways to customize the CRUD forms/displays, or you can use some of web2py's other <a href=\"http://web2py.com/book/default/chapter/07\">forms functionality</a> to build a completely custom interface. And web2py is a full-stack framework, so it will be easy to add functionality to your app as your needs expand (e.g., access control, notifications, etc.).</p>\n<p>Note, web2py requires no installation or configuration and has no dependencies, so it's very easy to distribute your app to other machines -- just zip up the entire web2py folder (which will include your app folder) and unzip it on another machine. It will run on *nix, Mac, and Windows (on Windows, you will either need to install Python or download the web2py Windows binary instead of the source version -- the Windows binary includes its own Python interpreter).</p>\n<p>If you have any questions, there's a very helpful and responsive <a href=\"https://groups.google.com/forum/?fromgroups#!forum/web2py\">mailing list</a>. You might also get some ideas from some existing <a href=\"http://web2py.com/appliances\">web2py applications</a>.</p>\n", "abstract": "Since you're interested in future integration with a web application, you might consider using a Python web framework and running the app locally on your machine, using your web browser as the interface. In that case, one easy option would be web2py. Just download, unzip, and run, and you can use the web-based IDE (demo) to create a simple CRUD app very quickly (if you really want to keep it simple, you can even use the \"New application wizard\" (demo) to build the app). It includes its own server, so you can run your app locally, just like a desktop app. You can use the web2py DAL (database abstraction layer) to define and create your SQLite database and tables (without writing any SQL). For example: The above code will create a SQLite database called storage.db and create a table called 'customer'. It also specifies form validators for the 'name' and 'email' fields, so whenever those fields are filled via a form, the entries will be validated ('name' cannot already be in the DB, and 'email' must be a valid email address format) -- if validation fails, the form will display appropriate error messages (which can be customized). The DAL will also handle schema migrations automatically, so if you change your table definitions, the database schema will be updated (if necessary, you can turn off migrations completely or on a per table basis). Once you have your data models defined, you can use web2py's CRUD system to handle all the data entry and searching. Just include these two lines (actually, they're already included in the 'welcome' scaffolding application): And in a controller, define the following action: That will expose a set of pre-defined URLs that will enable you to create, list, search, view, update, and delete records in any table. Of course, if you don't like some of the default behavior, there are lots of ways to customize the CRUD forms/displays, or you can use some of web2py's other forms functionality to build a completely custom interface. And web2py is a full-stack framework, so it will be easy to add functionality to your app as your needs expand (e.g., access control, notifications, etc.). Note, web2py requires no installation or configuration and has no dependencies, so it's very easy to distribute your app to other machines -- just zip up the entire web2py folder (which will include your app folder) and unzip it on another machine. It will run on *nix, Mac, and Windows (on Windows, you will either need to install Python or download the web2py Windows binary instead of the source version -- the Windows binary includes its own Python interpreter). If you have any questions, there's a very helpful and responsive mailing list. You might also get some ideas from some existing web2py applications."}, {"id": 6514748, "score": 2, "vote": 0, "content": "<p>I normally use GTK+ that has well documented <a href=\"http://www.pygtk.org/\" rel=\"nofollow\">Python bindings</a>.</p>\n<p>The biggest advantage is that you can use a fairly intuitive GUI editor (<a href=\"http://glade.gnome.org/\" rel=\"nofollow\">Glade</a>) and automagically link callbacks to events (to be honest most other major graphical toolkits have this possibility too, like for example QT, but my perception is that GTK+ enjoys wider adoption in the Python community). EDIT: additionally GTK is used by Gnome and many other desktop environments (KDE uses QT though).</p>\n<p>That said, if all you need is truly just data insertion from a trusted person, you could use something already done like <a href=\"https://addons.mozilla.org/sv-se/firefox/addon/sqlite-manager/\" rel=\"nofollow\">SQLite manager</a> (it's a FireFox plugin).</p>\n<hr/>\n<p>Radically alternative solution: use <a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">django</a> and you can <strong>literally</strong> pass from reading the tutorial to have your app up and running in a matter of hours, inclusive of user authentications, back-end administrative interface etc. (your project is exactly what I did with it to allow my wife to insert expenses in our family budget).</p>\n<p>Django is written in Python and you can use SQLite as a back-end.</p>\n", "abstract": "I normally use GTK+ that has well documented Python bindings. The biggest advantage is that you can use a fairly intuitive GUI editor (Glade) and automagically link callbacks to events (to be honest most other major graphical toolkits have this possibility too, like for example QT, but my perception is that GTK+ enjoys wider adoption in the Python community). EDIT: additionally GTK is used by Gnome and many other desktop environments (KDE uses QT though). That said, if all you need is truly just data insertion from a trusted person, you could use something already done like SQLite manager (it's a FireFox plugin). Radically alternative solution: use django and you can literally pass from reading the tutorial to have your app up and running in a matter of hours, inclusive of user authentications, back-end administrative interface etc. (your project is exactly what I did with it to allow my wife to insert expenses in our family budget). Django is written in Python and you can use SQLite as a back-end."}]}, {"link": "https://stackoverflow.com/questions/31350240/python-opencv-open-window-on-top-of-other-applications", "question": {"id": "31350240", "title": "Python OpenCV open window on top of other applications", "content": "<p>When executing an OpenCV python script containing: <code>cv2.imshow(img)</code> the resulting window opens behind my terminal window. This is a mild irritation - is there any way to get it to initially open in front / on top?</p>\n<p>A number of people have asked questions (<a href=\"https://stackoverflow.com/questions/5960968/opencv-window-always-on-top\">here</a> and <a href=\"https://stackoverflow.com/questions/8417531/opencv-how-to-force-the-image-window-to-appear-on-top-of-other-windows\">here</a>) about forcing persistent behaviour but this is, I think, simpler.</p>\n<p>Platform OS X and OpenCV 2.4.11</p>\n", "abstract": "When executing an OpenCV python script containing: cv2.imshow(img) the resulting window opens behind my terminal window. This is a mild irritation - is there any way to get it to initially open in front / on top? A number of people have asked questions (here and here) about forcing persistent behaviour but this is, I think, simpler. Platform OS X and OpenCV 2.4.11"}, "answers": [{"id": 44925186, "score": 3, "vote": 0, "content": "<p>One way to work around this would be to set all windows from OpenCV \"frontmost\" using AppleScript.</p>\n<pre><code class=\"python\">subprocess.call([\"/usr/bin/osascript\", \"-e\", 'tell app \"Finder\" to set frontmost of process \"Python\" to true'])\n</code></pre>\n<p>This way, all windows should be brought to the front.</p>\n", "abstract": "One way to work around this would be to set all windows from OpenCV \"frontmost\" using AppleScript. This way, all windows should be brought to the front."}, {"id": 44859469, "score": 2, "vote": 0, "content": "<p>I can do what I think you want by adding a single line to the following file in the OpenCV distribution:</p>\n<pre><code class=\"python\">modules/highgui/src/window_cocoa.mm\n</code></pre>\n<p>It is around line 568, and is the single line after the word <code>SETCHELL</code> in the code below:</p>\n<pre><code class=\"python\">    [window setFrameTopLeftPoint:initContentRect.origin];\n\n    [window setFirstContent:YES];\n\n    [window setContentView:[[CVView alloc] init]];\n\n    [window setHasShadow:YES];\n    [window setAcceptsMouseMovedEvents:YES];\n    [window useOptimizedDrawing:YES];\n    [window setTitle:windowName];\n    [window makeKeyAndOrderFront:nil];\n\n// SETCHELL - raise window to top of stacking order\n[window setLevel:CGWindowLevelForKey(kCGMaximumWindowLevelKey)];\n\n    [window setAutosize:(flags == CV_WINDOW_AUTOSIZE)];\n\n    [windows setValue:window forKey:windowName];\n\n    [localpool drain];\n    return [windows count]-1;\n}\n\nCV_IMPL int cvWaitKey (int maxWait)\n{\n</code></pre>\n", "abstract": "I can do what I think you want by adding a single line to the following file in the OpenCV distribution: It is around line 568, and is the single line after the word SETCHELL in the code below:"}, {"id": 44852940, "score": 1, "vote": 0, "content": "<p>Open a <code>namedWindow</code> before <code>imshow</code>, for instance:</p>\n<pre><code class=\"python\">cv2.namedWindow('ImageWindowName', cv2.WINDOW_NORMAL)\ncv2.imshow('ImageWindowName',img)\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n</code></pre>\n<p>Comment if this makes any different.</p>\n", "abstract": "Open a namedWindow before imshow, for instance: Comment if this makes any different."}]}, {"link": "https://stackoverflow.com/questions/747781/wxpython-calling-an-event-manually", "question": {"id": "747781", "title": "wxPython: Calling an event manually", "content": "<p>How can I call a specific event manually from my own code?</p>\n", "abstract": "How can I call a specific event manually from my own code?"}, "answers": [{"id": 841045, "score": 57, "vote": 0, "content": "<p>Old topic, but I think I've got this figured out after being confused about it for a long time, so if anyone else comes through here looking for the answer, this might help.</p>\n<p>To manually post an event, you can use</p>\n<pre><code class=\"python\">self.GetEventHandler().ProcessEvent(event)\n</code></pre>\n<p>(wxWidgets docs <a href=\"http://docs.wxwidgets.org/stable/wx_wxevthandler.html#wxevthandlerprocessevent\" rel=\"noreferrer\">here</a>, wxPython docs <a href=\"http://www.wxpython.org/docs/api/wx.EvtHandler-class.html\" rel=\"noreferrer\">here</a>)</p>\n<p>or</p>\n<pre><code class=\"python\">wx.PostEvent(self.GetEventHandler(), event)\n</code></pre>\n<p>(<a href=\"http://docs.wxwidgets.org/stable/wx_miscellany.html#wxpostevent\" rel=\"noreferrer\">wxWidgets docs</a>, <a href=\"http://www.wxpython.org/docs/api/wx-module.html#PostEvent\" rel=\"noreferrer\">wxPython docs</a>) </p>\n<p>where <code>event</code> is the event you want to post. Construct the event with e.g.</p>\n<pre><code class=\"python\">wx.PyCommandEvent(wx.EVT_BUTTON.typeId, self.GetId())\n</code></pre>\n<p>if you want to post a EVT_BUTTON event. Making it a <a href=\"http://www.wxpython.org/docs/api/wx.PyCommandEvent-class.html\" rel=\"noreferrer\">PyCommandEvent</a> means that it will propagate upwards; other event types don't propagate by default.</p>\n<p>You can also create custom events that can carry whatever data you want them to. Here's an example:</p>\n<pre><code class=\"python\">myEVT_CUSTOM = wx.NewEventType()\nEVT_CUSTOM = wx.PyEventBinder(myEVT_CUSTOM, 1)\n\nclass MyEvent(wx.PyCommandEvent):\n    def __init__(self, evtType, id):\n        wx.PyCommandEvent.__init__(self, evtType, id)\n        myVal = None\n\n    def SetMyVal(self, val):\n        self.myVal = val\n\n    def GetMyVal(self):\n        return self.myVal\n</code></pre>\n<p>(I think I found this code in a mailing list archive somewhere, but I can't seem to find it again. If this is your example, thanks! Please add a comment and take credit for it!)</p>\n<p>So now, to Post a custom event:</p>\n<pre><code class=\"python\">event = MyEvent(myEVT_CUSTOM, self.GetId())\nevent.SetMyVal('here is some custom data')\nself.GetEventHandler().ProcessEvent(event)\n</code></pre>\n<p>and you can bind it just like any other event</p>\n<pre><code class=\"python\">self.Bind(EVT_CUSTOM, self.on_event)\n</code></pre>\n<p>and get the custom data in the event handler</p>\n<pre><code class=\"python\">def on_event(self, e):\n    data = e.GetMyVal()\n    print 'custom data is: {0}'.format(data)\n</code></pre>\n<p>Or include the custom data in the event constructor and save a step:</p>\n<pre><code class=\"python\">class MyEvent(wx.PyCommandEvent):\n    def __init__(self, evtType, id, val = None):\n        wx.PyCommandEvent.__init__(self, evtType, id)\n        self.myVal = val\n</code></pre>\n<p>etc.</p>\n<p>Hope this is helpful to someone.</p>\n", "abstract": "Old topic, but I think I've got this figured out after being confused about it for a long time, so if anyone else comes through here looking for the answer, this might help. To manually post an event, you can use (wxWidgets docs here, wxPython docs here) or (wxWidgets docs, wxPython docs)  where event is the event you want to post. Construct the event with e.g. if you want to post a EVT_BUTTON event. Making it a PyCommandEvent means that it will propagate upwards; other event types don't propagate by default. You can also create custom events that can carry whatever data you want them to. Here's an example: (I think I found this code in a mailing list archive somewhere, but I can't seem to find it again. If this is your example, thanks! Please add a comment and take credit for it!) So now, to Post a custom event: and you can bind it just like any other event and get the custom data in the event handler Or include the custom data in the event constructor and save a step: etc. Hope this is helpful to someone."}, {"id": 748801, "score": 12, "vote": 0, "content": "<p>I think you want <a href=\"https://docs.wxpython.org/wx.functions.html#wx.PostEvent\" rel=\"nofollow noreferrer\">wx.PostEvent</a>.</p>\n<p>There's also some info about posting events from other thread for <a href=\"http://wiki.wxpython.org/LongRunningTasks\" rel=\"nofollow noreferrer\">long running tasks on the wxPython wiki</a>.</p>\n", "abstract": "I think you want wx.PostEvent. There's also some info about posting events from other thread for long running tasks on the wxPython wiki."}, {"id": 4189924, "score": 5, "vote": 0, "content": "<p>There's a simple, straightforward way to do it with recent versions of wxPython (see <a href=\"http://wiki.wxpython.org/CustomEventClasses\" rel=\"noreferrer\">http://wiki.wxpython.org/CustomEventClasses</a>):</p>\n<pre><code class=\"python\">   # create event class\n   import wx.lib.newevent\n   SomeNewEvent, EVT_SOME_NEW_EVENT = wx.lib.newevent.NewEvent()\n\n   # post it, with arbitrary data attached\n   wx.PostEvent(target, SomeNewEvent(attr1=foo, attr2=bar))\n\n   # bind it as usual\n   target.Bind(EVT_SOME_NEW_EVENT, target.handler)\n</code></pre>\n", "abstract": "There's a simple, straightforward way to do it with recent versions of wxPython (see http://wiki.wxpython.org/CustomEventClasses):"}, {"id": 51457348, "score": 3, "vote": 0, "content": "<p>While methods like <code>PostEvent</code> and <code>ProcessEvent</code>, mentioned in other answers, can sort-of do this, be aware that they have significant limitations:</p>\n<ul>\n<li>You're limited in what events you can easily create. For instance, there's no way to create a <code>wx.KeyEvent</code> with a particular key code, because the constructor doesn't take a key code and there's no setter. Maybe there are workarounds for this (like subclassing <code>KeyEvent</code>), but you're essentially having to hack around the limitations of the framework.</li>\n<li>Even for events that you <em>can</em> create, like a click event, the behavior you get from programmatically dispatching the event won't match the behaviour you'd get from actually performing the action as a user, because the <em>native</em> handling of the event won't fire. For instance, programmatically firing a click event on a text field won't give the text field focus.</li>\n</ul>\n<p>I'd recommend against using <code>PostEvent</code> or <code>ProcessEvent</code> in most circumstances. If you just to make your event handling function to run, then manually creating events is pointless; instead just call the function explicitly. If you want them because you're trying to write an automated UI test, then you probably aren't going to end up with something that satisfies you due to the limitations listed above; instead, I'd recommend writing something that actually simulates clicks and keypresses at the level of the OS/desktop manager using <a href=\"https://wxpython.org/Phoenix/docs/html/wx.UIActionSimulator.html\" rel=\"nofollow noreferrer\"><code>wx.UIActionSimulator</code></a>. It's kind of gross, and will take control of your system's mouse and keyboard which usually makes such tests inappropriate for a test suite that you run on a development machine... but at least it <em>works</em>, which is more than can be said for dispatching events with <code>PostEvent</code>.</p>\n", "abstract": "While methods like PostEvent and ProcessEvent, mentioned in other answers, can sort-of do this, be aware that they have significant limitations: I'd recommend against using PostEvent or ProcessEvent in most circumstances. If you just to make your event handling function to run, then manually creating events is pointless; instead just call the function explicitly. If you want them because you're trying to write an automated UI test, then you probably aren't going to end up with something that satisfies you due to the limitations listed above; instead, I'd recommend writing something that actually simulates clicks and keypresses at the level of the OS/desktop manager using wx.UIActionSimulator. It's kind of gross, and will take control of your system's mouse and keyboard which usually makes such tests inappropriate for a test suite that you run on a development machine... but at least it works, which is more than can be said for dispatching events with PostEvent."}, {"id": 49661779, "score": 0, "vote": 0, "content": "<p>I suppose it depends on what your event is tied to but I needed to do the same with a LabelFrame that displayed data when you selected an item in a List. This is the way I was able to do it:</p>\n<pre><code class=\"python\">'This is the line that binds my function \"get_selected_location()\"\nto the action of selecting an item in my List box.'\n\nself.list1_scoring.bind('&lt;&lt;ListboxSelect&gt;&gt;', self.get_selected_location)\n</code></pre>\n<p>So whenever you click on an item in my 'list1_scoring' box, get_selected_location() will run and details regarding the item selected will appear in another LabelFrame. I needed to call this event after an update process is completed to refresh my display window. So I added this line at the end of the function that runs the update.</p>\n<pre><code class=\"python\">self.get_selected_location('&lt;&lt;ListboxSelect&gt;&gt;')\n</code></pre>\n<p>This runs get_selected_location() again as if I had just clicked on my List again.</p>\n", "abstract": "I suppose it depends on what your event is tied to but I needed to do the same with a LabelFrame that displayed data when you selected an item in a List. This is the way I was able to do it: So whenever you click on an item in my 'list1_scoring' box, get_selected_location() will run and details regarding the item selected will appear in another LabelFrame. I needed to call this event after an update process is completed to refresh my display window. So I added this line at the end of the function that runs the update. This runs get_selected_location() again as if I had just clicked on my List again."}, {"id": 747805, "score": -1, "vote": 0, "content": "<p>You mean you want to have an event dispatch?</p>\n<blockquote>\n<p>::wxPostEvent void\n  wxPostEvent(wxEvtHandler *dest,\n  wxEvent&amp; event)</p>\n<p>In a GUI application, this function\n  posts event to the specified dest\n  object using\n  wxEvtHandler::AddPendingEvent.\n  Otherwise, it dispatches event\n  immediately using\n  wxEvtHandler::ProcessEvent. See the\n  respective documentation for details\n  (and caveats).</p>\n<p>Include files</p>\n<p><code>&lt;wx/app.h&gt;</code></p>\n</blockquote>\n<p><a href=\"http://www.wxpython.org/onlinedocs.php\" rel=\"nofollow noreferrer\">wxPython API docs</a></p>\n", "abstract": "You mean you want to have an event dispatch? ::wxPostEvent void\n  wxPostEvent(wxEvtHandler *dest,\n  wxEvent& event) In a GUI application, this function\n  posts event to the specified dest\n  object using\n  wxEvtHandler::AddPendingEvent.\n  Otherwise, it dispatches event\n  immediately using\n  wxEvtHandler::ProcessEvent. See the\n  respective documentation for details\n  (and caveats). Include files <wx/app.h> wxPython API docs"}]}, {"link": "https://stackoverflow.com/questions/20602727/pyinstaller-generate-exe-file-folder-in-onefile-mode", "question": {"id": "20602727", "title": "Pyinstaller: generate -exe file + folder (in --onefile mode)", "content": "<p>Now i'm working with Pyinstaller.\nI have an script which get images from a img folder..</p>\n<pre><code class=\"python\">/python\n|----/img\n|----|----icon1.ico\n|----|----icon2.ico\n|----maint.py\n</code></pre>\n<p>My script to generate .exe is</p>\n<pre><code class=\"python\">pyinstaller.py --windowed --noconsole --clean --onefile maint.py\n</code></pre>\n<p>the problem is that only generate the .exe file but the whole folder /img is omitted.</p>\n<p><strong>Question: which aditional syntax do I need to put in the previous line in order to get automatically the .exe file + /img folder?</strong></p>\n<p>I mean: that after execution of pyinstaller.py script, with all arguments, I must see in the /dist folder: the .exe file + the /img folder with all icons or bitmaps files I have for my application</p>\n<p>Thanks</p>\n", "abstract": "Now i'm working with Pyinstaller.\nI have an script which get images from a img folder.. My script to generate .exe is the problem is that only generate the .exe file but the whole folder /img is omitted. Question: which aditional syntax do I need to put in the previous line in order to get automatically the .exe file + /img folder? I mean: that after execution of pyinstaller.py script, with all arguments, I must see in the /dist folder: the .exe file + the /img folder with all icons or bitmaps files I have for my application Thanks"}, "answers": [{"id": 20677118, "score": 41, "vote": 0, "content": "<p>This is how I managed to solve the issue:</p>\n<p>I'm working with current version of PYInstaller + Python 2.67 with Sublime Text as Editor.</p>\n<ol>\n<li><p>In case your Py script requires some files, icons, images, you must include a function which retrieves these files from the project folder (in development) or form the temporary data folder (in case of deployment). This script MUST be in your code exactly in the part which you put the relatives paths in order to get the resources. Please follow exactly <a href=\"https://stackoverflow.com/a/13790741\">this guideline</a>.</p>\n</li>\n<li><p>After the previous code, you must execute for the first time the pyinstaller command -as I post in my question-.</p>\n</li>\n<li><p>Now, open your .spec file generated after execution of the PYInstaller (located in <code>PYinstaller/YourAppName/</code>) command and add, after <code>a.binaries</code> line, the next line into the <code>EXE()</code> function:</p>\n<pre><code class=\"python\">exe = EXE(pyz,\n          a.scripts,\n          a.binaries,\n          Tree('..\\\\python\\\\images', prefix='images\\\\'),\n....\n</code></pre>\n<p>Keep in mind that in <code>Tree(...)</code> function the first argument is the folder to put outside: <strong>which means that I want to include all the content of this folder</strong> (notice that I'm putting a relative path respect to the AppStart.py file) <strong>into the file's container of my .EXE file.</strong></p>\n</li>\n<li><p>After that modification re-execute the pyinstaller command, but in this case pointing to my <code>.SPEC</code> file:</p>\n<pre><code class=\"python\">pyinstaller.py --windowed --noconsole --clean --onefile AppStart\\AppStart.spec\n</code></pre>\n</li>\n</ol>\n<p>And finally my App can be executed as executable without need to copy and paste all external folders as someone mentioned. <strong>But as always I consider the good-practical way.</strong></p>\n<p>Thanks for your support.</p>\n", "abstract": "This is how I managed to solve the issue: I'm working with current version of PYInstaller + Python 2.67 with Sublime Text as Editor. In case your Py script requires some files, icons, images, you must include a function which retrieves these files from the project folder (in development) or form the temporary data folder (in case of deployment). This script MUST be in your code exactly in the part which you put the relatives paths in order to get the resources. Please follow exactly this guideline. After the previous code, you must execute for the first time the pyinstaller command -as I post in my question-. Now, open your .spec file generated after execution of the PYInstaller (located in PYinstaller/YourAppName/) command and add, after a.binaries line, the next line into the EXE() function: Keep in mind that in Tree(...) function the first argument is the folder to put outside: which means that I want to include all the content of this folder (notice that I'm putting a relative path respect to the AppStart.py file) into the file's container of my .EXE file. After that modification re-execute the pyinstaller command, but in this case pointing to my .SPEC file: And finally my App can be executed as executable without need to copy and paste all external folders as someone mentioned. But as always I consider the good-practical way. Thanks for your support."}, {"id": 67896173, "score": 2, "vote": 0, "content": "<p>You can also run pyinstaller within another python script then use <code>shutil.copytree()</code> to move the folders over after. Or use <code>shutil.copyfile()</code> for individual files.</p>\n<pre><code class=\"python\">import PyInstaller.__main__\nimport shutil\n\nPyInstaller.__main__.run([\n    'YourProgram.py',\n    '--icon=UI/Your_Icon.ico',\n    '--onefile',\n    '--noconsole',\n], )\n\nshutil.copytree('path/', 'dist/path')\n</code></pre>\n", "abstract": "You can also run pyinstaller within another python script then use shutil.copytree() to move the folders over after. Or use shutil.copyfile() for individual files."}, {"id": 59829933, "score": 1, "vote": 0, "content": "<p>You have to solve many issues to get this working. For example:</p>\n<ul>\n<li>Getting the right resource path</li>\n<li>Adding data</li>\n</ul>\n<p>The first issue is (as mentionned) solved by adjusting paths depending on execution mode.</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">def app_path(path):\n    frozen = 'not'\n    if getattr(sys, 'frozen', False):\n            # we are running in executable mode\n            frozen = 'ever so'\n            app_dir = sys._MEIPASS\n    else:\n            # we are running in a normal Python environment\n            app_dir = os.path.dirname(os.path.abspath(__file__))\n    return os.path.join(app_dir, path)\n</code></pre>\n<p>For the second issue instead of tree i use the wildcard operator (*) to add what i need.</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">added_files = [\n         ( './pics/*', 'pics' ),\n         ( './db/*', 'db' ),\n         ]\n</code></pre>\n<p>then in Analysis,</p>\n<pre><code class=\"python\">datas = added_files\n</code></pre>\n<p>A thorough answer is quite long. I've written <a href=\"https://www.pythonkitchen.com/packaging-an-sqlite-db-included-crud-pyqt5-app-using-pyinstaller/\" rel=\"nofollow noreferrer\">this article</a> to show in some minute details what i went through to solve the issue.</p>\n", "abstract": "You have to solve many issues to get this working. For example: The first issue is (as mentionned) solved by adjusting paths depending on execution mode. For the second issue instead of tree i use the wildcard operator (*) to add what i need. then in Analysis, A thorough answer is quite long. I've written this article to show in some minute details what i went through to solve the issue."}]}, {"link": "https://stackoverflow.com/questions/569650/pyqt-how-to-update-progress-without-freezing-the-gui", "question": {"id": "569650", "title": "PyQt: How to update progress without freezing the GUI?", "content": "<h2><strong>Questions:</strong></h2>\n<ol>\n<li>What is the best practice for\nkeeping track of a thread's\nprogress without locking the GUI\n(\"Not Responding\")?</li>\n<li>Generally, what are the best practices for\nthreading as it applies to GUI\ndevelopment?</li>\n</ol>\n<h2><strong>Question Background:</strong></h2>\n<ul>\n<li>I have a PyQt GUI for Windows.</li>\n<li>It is used to process sets of HTML\ndocuments.</li>\n<li>It takes anywhere from three seconds\nto three hours to process a set of\ndocuments.</li>\n<li>I want to be able to process\nmultiple sets at the same time.</li>\n<li>I don't want the GUI to lock.</li>\n<li>I'm looking at the threading module\nto achieve this.</li>\n<li>I am relatively new to threading.</li>\n<li>The GUI has one progress bar.</li>\n<li>I want it to display the progress of\nthe selected thread.</li>\n<li>Display results of the selected\nthread if it's finished.</li>\n<li>I'm using Python 2.5.</li>\n</ul>\n<p><strong>My Idea:</strong> Have the threads emit a QtSignal when the progress is updated that triggers some function that updates the progress bar.  Also signal when finished processing so results can be displayed.</p>\n<pre><code class=\"python\">#NOTE: this is example code for my idea, you do not have\n#      to read this to answer the question(s).\n\nimport threading\nfrom PyQt4 import QtCore, QtGui\nimport re\nimport copy\n\nclass ProcessingThread(threading.Thread, QtCore.QObject):\n\n    __pyqtSignals__ = ( \"progressUpdated(str)\",\n                        \"resultsReady(str)\")\n\n    def __init__(self, docs):\n        self.docs = docs\n        self.progress = 0   #int between 0 and 100\n        self.results = []\n        threading.Thread.__init__(self)\n\n    def getResults(self):\n        return copy.deepcopy(self.results)\n\n    def run(self):\n        num_docs = len(self.docs) - 1\n        for i, doc in enumerate(self.docs):\n            processed_doc = self.processDoc(doc)\n            self.results.append(processed_doc)\n            new_progress = int((float(i)/num_docs)*100)\n            \n            #emit signal only if progress has changed\n            if self.progress != new_progress:\n                self.emit(QtCore.SIGNAL(\"progressUpdated(str)\"), self.getName())\n            self.progress = new_progress\n            if self.progress == 100:\n                self.emit(QtCore.SIGNAL(\"resultsReady(str)\"), self.getName())\n    \n    def processDoc(self, doc):\n        ''' this is tivial for shortness sake '''\n        return re.findall('&lt;a [^&gt;]*&gt;.*?&lt;/a&gt;', doc)\n\n\nclass GuiApp(QtGui.QMainWindow):\n    \n    def __init__(self):\n        self.processing_threads = {}  #{'thread_name': Thread(processing_thread)}\n        self.progress_object = {}     #{'thread_name': int(thread_progress)}\n        self.results_object = {}      #{'thread_name': []}\n        self.selected_thread = ''     #'thread_name'\n        \n    def processDocs(self, docs):\n        #create new thread\n        p_thread = ProcessingThread(docs)\n        thread_name = \"example_thread_name\"\n        p_thread.setName(thread_name)\n        p_thread.start()\n        \n        #add thread to dict of threads\n        self.processing_threads[thread_name] = p_thread\n        \n        #init progress_object for this thread\n        self.progress_object[thread_name] = p_thread.progress  \n        \n        #connect thread signals to GuiApp functions\n        QtCore.QObject.connect(p_thread, QtCore.SIGNAL('progressUpdated(str)'), self.updateProgressObject(thread_name))\n        QtCore.QObject.connect(p_thread, QtCore.SIGNAL('resultsReady(str)'), self.updateResultsObject(thread_name))\n        \n    def updateProgressObject(self, thread_name):\n        #update progress_object for all threads\n        self.progress_object[thread_name] = self.processing_threads[thread_name].progress\n        \n        #update progress bar for selected thread\n        if self.selected_thread == thread_name:\n            self.setProgressBar(self.progress_object[self.selected_thread])\n        \n    def updateResultsObject(self, thread_name):\n        #update results_object for thread with results\n        self.results_object[thread_name] = self.processing_threads[thread_name].getResults()\n        \n        #update results widget for selected thread\n        try:\n            self.setResultsWidget(self.results_object[thread_name])\n        except KeyError:\n            self.setResultsWidget(None)\n</code></pre>\n<p>Any commentary on this approach (e.g. drawbacks, pitfalls, praises, etc.) will be appreciated.</p>\n<h2><strong>Resolution:</strong></h2>\n<p>I ended up using the QThread class and associated signals and slots to communicate between threads.  This is primarily because my program already uses Qt/PyQt4 for the GUI objects/widgets.  This solution also required fewer changes to my existing code to implement.</p>\n<p>Here is a link to an applicable Qt article that explains how Qt handles threads and signals, <a href=\"http://www.linuxjournal.com/article/9602\" rel=\"nofollow noreferrer\">http://www.linuxjournal.com/article/9602</a>. Excerpt below:</p>\n<blockquote>\n<p>Fortunately, Qt permits\nsignals and slots to be connected\nacross threads\u2014as long as the threads\nare running their own event loops.\nThis is a much cleaner method of\ncommunication compared to sending and\nreceiving events, because it avoids\nall the bookkeeping and intermediate\nQEvent-derived classes that become\nnecessary in any nontrivial\napplication. Communicating between\nthreads now becomes a matter of\nconnecting signals from one thread to\nthe slots in another, and the mutexing\nand thread-safety issues of exchanging\ndata between threads are handled by\nQt.</p>\n<p>Why is it necessary to run an event\nloop within each thread to which you\nwant to connect signals? The reason\nhas to do with the inter-thread\ncommunication mechanism used by Qt\nwhen connecting signals from one\nthread to the slot of another thread.\nWhen such a connection is made, it is\nreferred to as a queued connection.\nWhen signals are emitted through a\nqueued connection, the slot is invoked\nthe next time the destination object's\nevent loop is executed. If the slot\nhad instead been invoked directly by a\nsignal from another thread, that slot\nwould execute in the same context as\nthe calling thread. Normally, this is\nnot what you want (and especially not\nwhat you want if you are using a\ndatabase connection, as the database\nconnection can be used only by the\nthread that created it). The queued\nconnection properly dispatches the\nsignal to the thread object and\ninvokes its slot in its own context by\npiggy-backing on the event system.\nThis is precisely what we want for\ninter-thread communication in which\nsome of the threads are handling\ndatabase connections. The Qt\nsignal/slot mechanism is at root an\nimplementation of the inter-thread\nevent-passing scheme outlined above,\nbut with a much cleaner and\neasier-to-use interface.</p>\n</blockquote>\n<p><strong>NOTE:</strong> <em>eliben</em> also has a good answer, and if I weren't using PyQt4, which handles thread-safety and mutexing, his solution would have been my choice.</p>\n", "abstract": "My Idea: Have the threads emit a QtSignal when the progress is updated that triggers some function that updates the progress bar.  Also signal when finished processing so results can be displayed. Any commentary on this approach (e.g. drawbacks, pitfalls, praises, etc.) will be appreciated. I ended up using the QThread class and associated signals and slots to communicate between threads.  This is primarily because my program already uses Qt/PyQt4 for the GUI objects/widgets.  This solution also required fewer changes to my existing code to implement. Here is a link to an applicable Qt article that explains how Qt handles threads and signals, http://www.linuxjournal.com/article/9602. Excerpt below: Fortunately, Qt permits\nsignals and slots to be connected\nacross threads\u2014as long as the threads\nare running their own event loops.\nThis is a much cleaner method of\ncommunication compared to sending and\nreceiving events, because it avoids\nall the bookkeeping and intermediate\nQEvent-derived classes that become\nnecessary in any nontrivial\napplication. Communicating between\nthreads now becomes a matter of\nconnecting signals from one thread to\nthe slots in another, and the mutexing\nand thread-safety issues of exchanging\ndata between threads are handled by\nQt. Why is it necessary to run an event\nloop within each thread to which you\nwant to connect signals? The reason\nhas to do with the inter-thread\ncommunication mechanism used by Qt\nwhen connecting signals from one\nthread to the slot of another thread.\nWhen such a connection is made, it is\nreferred to as a queued connection.\nWhen signals are emitted through a\nqueued connection, the slot is invoked\nthe next time the destination object's\nevent loop is executed. If the slot\nhad instead been invoked directly by a\nsignal from another thread, that slot\nwould execute in the same context as\nthe calling thread. Normally, this is\nnot what you want (and especially not\nwhat you want if you are using a\ndatabase connection, as the database\nconnection can be used only by the\nthread that created it). The queued\nconnection properly dispatches the\nsignal to the thread object and\ninvokes its slot in its own context by\npiggy-backing on the event system.\nThis is precisely what we want for\ninter-thread communication in which\nsome of the threads are handling\ndatabase connections. The Qt\nsignal/slot mechanism is at root an\nimplementation of the inter-thread\nevent-passing scheme outlined above,\nbut with a much cleaner and\neasier-to-use interface. NOTE: eliben also has a good answer, and if I weren't using PyQt4, which handles thread-safety and mutexing, his solution would have been my choice."}, "answers": [{"id": 574130, "score": 10, "vote": 0, "content": "<p>If you want to use signals to indicate progress to the main thread then you should really be using PyQt's QThread class instead of the Thread class from Python's threading module.</p>\n<p>A simple example which uses QThread, signals and slots can be found on the PyQt Wiki:</p>\n<p><a href=\"https://wiki.python.org/moin/PyQt/Threading,_Signals_and_Slots\" rel=\"nofollow noreferrer\">https://wiki.python.org/moin/PyQt/Threading,_Signals_and_Slots</a></p>\n", "abstract": "If you want to use signals to indicate progress to the main thread then you should really be using PyQt's QThread class instead of the Thread class from Python's threading module. A simple example which uses QThread, signals and slots can be found on the PyQt Wiki: https://wiki.python.org/moin/PyQt/Threading,_Signals_and_Slots"}, {"id": 1020072, "score": 5, "vote": 0, "content": "<p>Native python queues won't work because you have to block on queue get(), which bungs up your UI.  </p>\n<p>Qt essentially implements a queuing system on the inside for cross thread communication.  Try this call from any thread to post a call to a slot.</p>\n<p>QtCore.QMetaObject.invokeMethod()</p>\n<p>It's clunky and is poorly documented, but it should do what you want even from from a non-Qt thread.</p>\n<p>You can also use event machinery for this.  See QApplication (or QCoreApplication) for a method named something like \"post\".</p>\n<p>Edit:  Here's a more complete example...</p>\n<p>I created my own class based on QWidget.  It has a slot that accepts a string; I define it like this:</p>\n<pre><code class=\"python\">@QtCore.pyqtSlot(str)\ndef add_text(self, text):\n   ...\n</code></pre>\n<p>Later, I create an instance of this widget in the main GUI thread.  From the main GUI thread or any other thread (knock on wood) I can call:</p>\n<pre><code class=\"python\">QtCore.QMetaObject.invokeMethod(mywidget, \"add_text\", QtCore.Q_ARG(str,\"hello world\"))\n</code></pre>\n<p>Clunky, but it gets you there.</p>\n<p>Dan.</p>\n", "abstract": "Native python queues won't work because you have to block on queue get(), which bungs up your UI.   Qt essentially implements a queuing system on the inside for cross thread communication.  Try this call from any thread to post a call to a slot. QtCore.QMetaObject.invokeMethod() It's clunky and is poorly documented, but it should do what you want even from from a non-Qt thread. You can also use event machinery for this.  See QApplication (or QCoreApplication) for a method named something like \"post\". Edit:  Here's a more complete example... I created my own class based on QWidget.  It has a slot that accepts a string; I define it like this: Later, I create an instance of this widget in the main GUI thread.  From the main GUI thread or any other thread (knock on wood) I can call: Clunky, but it gets you there. Dan."}, {"id": 572577, "score": 4, "vote": 0, "content": "<p>I recommend you to use Queue instead of signaling. Personally I find it a much more robust and understandable way of programming, because it's more synchronous.</p>\n<p>Threads should get \"jobs\" from a Queue, and put back results on another Queue. Yet a third Queue can be used by the threads for notifications and messages, like errors and \"progress reports\". Once you structure your code this way, it becomes much simpler to manage.</p>\n<p>This way, a single \"job Queue\" and \"result Queue\" can also be used by a group of worker threads, it routes all the information from the threads into the main GUI thread.</p>\n", "abstract": "I recommend you to use Queue instead of signaling. Personally I find it a much more robust and understandable way of programming, because it's more synchronous. Threads should get \"jobs\" from a Queue, and put back results on another Queue. Yet a third Queue can be used by the threads for notifications and messages, like errors and \"progress reports\". Once you structure your code this way, it becomes much simpler to manage. This way, a single \"job Queue\" and \"result Queue\" can also be used by a group of worker threads, it routes all the information from the threads into the main GUI thread."}, {"id": 68938869, "score": 2, "vote": 0, "content": "<p>Below is a basic PyQt5/PySide2 example that shows how to run a background task whilst updating a progress-bar. The task is moved to a worker-thread and custom signals are used to communicate with the main GUI-thread. The task can be stopped and re-started, and will automatically terminate when the window closes.</p>\n<pre><code class=\"python\"># from PySide2 import QtCore, QtWidgets\n#\n# class Worker(QtCore.QObject):\n#     progressChanged = QtCore.Signal(int)\n#     finished = QtCore.Signal()\n\nfrom PyQt5 import QtCore, QtWidgets\n\nclass Worker(QtCore.QObject):\n    progressChanged = QtCore.pyqtSignal(int)\n    finished = QtCore.pyqtSignal()\n\n    def __init__(self):\n        super().__init__()\n        self._stopped = True\n\n    def run(self):\n        count = 0\n        self._stopped = False\n        while count &lt; 100 and not self._stopped:\n            count += 5\n            QtCore.QThread.msleep(250)\n            self.progressChanged.emit(count)\n        self._stopped = True\n        self.finished.emit()\n\n    def stop(self):\n        self._stopped = True\n\nclass Window(QtWidgets.QWidget):\n    def __init__(self):\n        super().__init__()\n        self.button = QtWidgets.QPushButton('Start')\n        self.button.clicked.connect(self.handleButton)\n        self.progress = QtWidgets.QProgressBar()\n        layout = QtWidgets.QVBoxLayout(self)\n        layout.addWidget(self.progress)\n        layout.addWidget(self.button)\n        self.thread = QtCore.QThread(self)\n        self.worker = Worker()\n        self.worker.moveToThread(self.thread)\n        self.worker.finished.connect(self.handleFinished)\n        self.worker.progressChanged.connect(self.progress.setValue)\n        self.thread.started.connect(self.worker.run)\n\n    def handleButton(self):\n        if self.thread.isRunning():\n            self.worker.stop()\n        else:\n            self.button.setText('Stop')\n            self.thread.start()\n\n    def handleFinished(self):\n        self.button.setText('Start')\n        self.thread.quit()\n\n    def closeEvent(self, event):\n        self.worker.stop()\n        self.thread.quit()\n        self.thread.wait()\n\nif __name__ == '__main__':\n\n    import sys\n    app = QtWidgets.QApplication(sys.argv)\n    window = Window()\n    window.setWindowTitle('Threaded Progress')\n    window.setGeometry(600, 100, 250, 50)\n    window.show()\n    sys.exit(app.exec_())\n</code></pre>\n", "abstract": "Below is a basic PyQt5/PySide2 example that shows how to run a background task whilst updating a progress-bar. The task is moved to a worker-thread and custom signals are used to communicate with the main GUI-thread. The task can be stopped and re-started, and will automatically terminate when the window closes."}, {"id": 572456, "score": 1, "vote": 0, "content": "<p>If your method \"processDoc\" doesn't change any other data (just looks for some data and return it and don't change variables or properties of parent class) you may use Py_BEGIN_ALLOW_THREADS and Py_END_ALLOW_THREADS macroses ( <a href=\"http://www.python.org/doc/2.4/api/threads.html\" rel=\"nofollow noreferrer\">see here for details</a> ) in it. So the document will be processed in thread which will not lock the interpreter and UI will be updated.</p>\n", "abstract": "If your method \"processDoc\" doesn't change any other data (just looks for some data and return it and don't change variables or properties of parent class) you may use Py_BEGIN_ALLOW_THREADS and Py_END_ALLOW_THREADS macroses ( see here for details ) in it. So the document will be processed in thread which will not lock the interpreter and UI will be updated."}, {"id": 570770, "score": 0, "vote": 0, "content": "<p>You are always going to have this problem in Python.  Google GIL \"global interpretor lock\" for more background.  There are two generally recommended ways to get around the problem that you are experiencing: use <a href=\"http://twistedmatrix.com/trac/\" rel=\"nofollow noreferrer\">Twisted</a>, or use a module similar to the <a href=\"http://docs.python.org/library/multiprocessing.html\" rel=\"nofollow noreferrer\">multiprocessing</a> module introduced in 2.5.</p>\n<p>Twisted will require that you learn asynchronous programming techniques which may be confusing in the beginning but will be helpful if you ever need to write high throughput network apps and will be more beneficial to you in the long run.</p>\n<p>The multiprocessing module will fork a new process and uses IPC to make it behave as if you had true threading.  Only downside is that you would need python 2.5 installed which is fairly new and inst' included in most Linux distros or OSX by default.</p>\n", "abstract": "You are always going to have this problem in Python.  Google GIL \"global interpretor lock\" for more background.  There are two generally recommended ways to get around the problem that you are experiencing: use Twisted, or use a module similar to the multiprocessing module introduced in 2.5. Twisted will require that you learn asynchronous programming techniques which may be confusing in the beginning but will be helpful if you ever need to write high throughput network apps and will be more beneficial to you in the long run. The multiprocessing module will fork a new process and uses IPC to make it behave as if you had true threading.  Only downside is that you would need python 2.5 installed which is fairly new and inst' included in most Linux distros or OSX by default."}]}, {"link": "https://stackoverflow.com/questions/645354/implementing-a-node-based-graphical-interface", "question": {"id": "645354", "title": "Implementing a node-based graphical interface?", "content": "<p>I would like to implement a nodal-interface, basically a <a href=\"http://en.wikipedia.org/wiki/Directed_acyclic_graph\" rel=\"noreferrer\">DAG</a> where each node performs an operation on it's input connections, and outputs something (which you can connect to another node)</p>\n<p>Some example applications:</p>\n<ul>\n<li><a href=\"http://www.apple.com/shake/\" rel=\"noreferrer\">Apples \"Shake\"</a> - <a href=\"http://images.apple.com/es/shake/images/index_hero.jpg\" rel=\"noreferrer\">screenshot</a></li>\n<li><a href=\"http://www.thefoundry.co.uk/pkg_overview.aspx?ui=CBC2593A-2C9F-4EF9-84BE-C198B0171453\" rel=\"noreferrer\">The Foundrys \"Nuke\"</a> - <a href=\"http://upload.wikimedia.org/wikipedia/en/5/5a/Nuke_screenshot.png\" rel=\"noreferrer\">screenshot</a></li>\n<li><a href=\"http://www.mindnode.com/\" rel=\"noreferrer\">MindNode</a> -  <a href=\"http://www.mindnode.com/wordpress/wp-content/uploads/2007/12/mn-screen-2.png\" rel=\"noreferrer\">screenshot</a></li>\n<li><a href=\"http://vvvv.org/\" rel=\"noreferrer\">vvvv</a> - <a href=\"http://vvvv.org/tiki-index.php?page=screenshots\" rel=\"noreferrer\">screenshots</a></li>\n<li><a href=\"http://developer.apple.com/graphicsimaging/quartz/quartzcomposer.html\" rel=\"noreferrer\">Quartz Composer</a> - <a href=\"http://img24.imageshack.us/img24/8969/quartzcomposer.png\" rel=\"noreferrer\">screenshot</a></li>\n</ul>\n<hr/>\n<p>As a first goal, I would like to have an <em>graphical application</em> with only 2 nodes. A \"number\" which simply outputs a fixed number, and an \"Add\" node, which takes two inputs and outputs the sum of the two.</p>\n<p>As people have answered so-far, I have a rough idea of how to represent the data in code, for example in Python'y looking pseudo-code:</p>\n<pre><code class=\"python\">class Number:\n    def __init__(self, value):\n        self.value = value\n\n    def eval(self):\n        return self.value\n\nclass Add:\n    def __init__(self, input1, input2):\n        self.input1 = input1\n        self.input2 = input2\n\n    def eval(self):\n        return self.input1.eval() + self.input2.eval()\n\n\na = Number(20)\nb = Number(72)\n\nadder = Add(a, b)\nprint adder.eval()\n</code></pre>\n<p>How would I got about wrapping a custom GUI around this? Something like the following, but slightly less hand-drawn!</p>\n<p><img alt=\"nodal UI mockup\" src=\"https://i.stack.imgur.com/h0l6N.png\"/></p>\n<p>Where would I begin? I currently plan to write it in Objective-C/Cocoa, although I'm more than open to suggestions for other languages.</p>\n", "abstract": "I would like to implement a nodal-interface, basically a DAG where each node performs an operation on it's input connections, and outputs something (which you can connect to another node) Some example applications: As a first goal, I would like to have an graphical application with only 2 nodes. A \"number\" which simply outputs a fixed number, and an \"Add\" node, which takes two inputs and outputs the sum of the two. As people have answered so-far, I have a rough idea of how to represent the data in code, for example in Python'y looking pseudo-code: How would I got about wrapping a custom GUI around this? Something like the following, but slightly less hand-drawn!  Where would I begin? I currently plan to write it in Objective-C/Cocoa, although I'm more than open to suggestions for other languages."}, "answers": [{"id": 645455, "score": 3, "vote": 0, "content": "<p>I would start by modelling some basic interfaces (in the OOP sense, not the GUI sense). Seems to me you'll have a Node which will accept a collection of inputs and a single output. You didn't give any indication of how broad the data types are, but you'll want some suitable method of representing your inputs/outputs. For your first goal, this could be an integer.</p>\n<p>In some generic C style OOP language (hope it makes sense):</p>\n<pre><code class=\"python\">class Node&lt;T&gt; {\n    Node&lt;T&gt;[] inputs;\n    T eval();\n}\n\nclass AdderNode extends Node&lt;int&gt; {\n    int eval() {\n        int accum = 0;\n        for (inputs : i)\n            accum += i.eval();\n        return i;\n    }\n}\n\nclass ConstNode&lt;int I&gt; extends Node&lt;int&gt; {\n    int eval() { return I; }\n}\n\nAdderNode a;\na.inputs.add(ConstNode&lt;2&gt;());\na.inputs.add(ConstNode&lt;3&gt;());\na.eval();\n</code></pre>\n<p>You could expand on this by replacing int with some abstract class, generic, or interface. Actual implementation will vary based on the actual language, of course.</p>\n", "abstract": "I would start by modelling some basic interfaces (in the OOP sense, not the GUI sense). Seems to me you'll have a Node which will accept a collection of inputs and a single output. You didn't give any indication of how broad the data types are, but you'll want some suitable method of representing your inputs/outputs. For your first goal, this could be an integer. In some generic C style OOP language (hope it makes sense): You could expand on this by replacing int with some abstract class, generic, or interface. Actual implementation will vary based on the actual language, of course."}, {"id": 645531, "score": 2, "vote": 0, "content": "<p>I would start with modeling the interesting operations. Ultimately you will connect them to a UI, but that is the steering wheel and gas pedal, not the engine.</p>\n<p>What you are attempting to build has a lot in common with programming languages: variables, values, types, expressions, evaluation, etc. Many of the metaphors are applicable and might provide some guidance.</p>\n<p>If you are using .NET 3.5, you have the option of <a href=\"http://msdn.microsoft.com/en-us/library/bb397951.aspx\" rel=\"nofollow noreferrer\">Expression Trees</a>, which allow you to represent and compile code expressions at runtime.</p>\n<p>For example, to model your first goal:</p>\n<pre><code class=\"python\">using System.Linq.Expressions;\n\nConstantExpression theNumber2 = Expression.Constant(2);\nConstantExpression theNumber3 = Expression.Constant(3);\n\nBinaryExpression add2And3 = Expression.Add(theNumber2, theNumber3);\n</code></pre>\n<p>To invoke the expression, we need to wrap <code>add2And3</code> with a method. This is done with a lambda expression:</p>\n<pre><code class=\"python\">Expression&lt;Func&lt;int&gt;&gt; add2And3Lambda = Expression.Lambda&lt;Func&lt;int&gt;&gt;(add2And3);\n</code></pre>\n<p><code>Func&lt;int&gt;</code> represents a method which takes no parameters and returns an <code>int</code>. In C#, the code represented by <code>add2And3Lambda</code> would be:</p>\n<pre><code class=\"python\">() =&gt; 2 + 3\n</code></pre>\n<p>So what we have is an expression tree whose root is a method. Because a method is <em>callable</em>, we can compile the tree into an instance of the underlying delegate type:</p>\n<pre><code class=\"python\">Func&lt;int&gt; add2And3Func = add2And3Lambda.Compile();\n</code></pre>\n<p>Now we can invoke the code we built:</p>\n<pre><code class=\"python\">int theNumber5 = add2And3Func();\n</code></pre>\n<p>Every expression available to .NET languages is supported.</p>\n<p>Imagine every node in your graph has an <code>Expression</code> associated with it. That might give you an idea of the power of expression trees and how they could help you with this task.</p>\n", "abstract": "I would start with modeling the interesting operations. Ultimately you will connect them to a UI, but that is the steering wheel and gas pedal, not the engine. What you are attempting to build has a lot in common with programming languages: variables, values, types, expressions, evaluation, etc. Many of the metaphors are applicable and might provide some guidance. If you are using .NET 3.5, you have the option of Expression Trees, which allow you to represent and compile code expressions at runtime. For example, to model your first goal: To invoke the expression, we need to wrap add2And3 with a method. This is done with a lambda expression: Func<int> represents a method which takes no parameters and returns an int. In C#, the code represented by add2And3Lambda would be: So what we have is an expression tree whose root is a method. Because a method is callable, we can compile the tree into an instance of the underlying delegate type: Now we can invoke the code we built: Every expression available to .NET languages is supported. Imagine every node in your graph has an Expression associated with it. That might give you an idea of the power of expression trees and how they could help you with this task."}, {"id": 645687, "score": 1, "vote": 0, "content": "<p>All that node systems have in common that they describe a functional programming language. A function takes multiple parameters and returns a single result, no matter for what purpose it was designed. Some examples:</p>\n<ul>\n<li><p>Graphics: Blur(Image, Kernel, Radius) -&gt; Image</p></li>\n<li><p>Math: Add(Number, Number) -&gt; Number</p></li>\n<li><p>Relational: Filter(Table, Predicate) -&gt; Table</p></li>\n</ul>\n<p>Basically that comes down to a function signature like <code>Func&lt;object[], object&gt;</code> (C#).</p>\n<p>You will face the question of how to make your node system persistent. Do you want to make the result of a node usable as parameter by only one other node (tree) or by multiple nodes (graph)?</p>\n<p>Example of a tree, directly have the parameters a child nodes:</p>\n<pre><code class=\"python\">Add(\n  Multiply(\n    Constant(5),\n    Constant(4)\n  ),\n  Multiply(\n    Constant(5),\n    Constant(3)\n  )\n)\n</code></pre>\n<p>Example of a graph, store all nodes in a list and only use references:</p>\n<pre><code class=\"python\">A := Constant(5)\nB := Constant(4)\nC := Constant(3)\n\nD := Func(Multiply, A, B)\nE := Func(Multiply, A, C)\n\nF := Func(Add, D, E)\n</code></pre>\n", "abstract": "All that node systems have in common that they describe a functional programming language. A function takes multiple parameters and returns a single result, no matter for what purpose it was designed. Some examples: Graphics: Blur(Image, Kernel, Radius) -> Image Math: Add(Number, Number) -> Number Relational: Filter(Table, Predicate) -> Table Basically that comes down to a function signature like Func<object[], object> (C#). You will face the question of how to make your node system persistent. Do you want to make the result of a node usable as parameter by only one other node (tree) or by multiple nodes (graph)? Example of a tree, directly have the parameters a child nodes: Example of a graph, store all nodes in a list and only use references:"}, {"id": 902153, "score": 1, "vote": 0, "content": "<p>I found some useful information on implementing such an interface in Cocoa:</p>\n<ul>\n<li><a href=\"http://cocoadevcentral.com/d/intro_to_quartz/\" rel=\"nofollow noreferrer\">Intro to Quartz</a> and <a href=\"http://cocoadevcentral.com/d/intro_to_quartz_two/\" rel=\"nofollow noreferrer\">Intro to Quartz II</a> - describes basic drawing in an NSView</li>\n<li><a href=\"http://www.cocoadev.com/index.pl?FlowChartView\" rel=\"nofollow noreferrer\">FlowChartView</a> on Cocoadev - pretty much what I was looking for, an implementation of the Quartz Composer interface.</li>\n</ul>\n", "abstract": "I found some useful information on implementing such an interface in Cocoa:"}, {"id": 47000375, "score": 1, "vote": 0, "content": "<p>I stumbled upon this thread while researching for a similar solution.\nRecently I found a nice project on github <a href=\"https://github.com/nodebox/nodebox\" rel=\"nofollow noreferrer\">https://github.com/nodebox/nodebox</a>\nwhich seems to be exactly what you are looking for. At least one could extract and adopt the editor components from the project.</p>\n<p>Regards,\nStephan</p>\n", "abstract": "I stumbled upon this thread while researching for a similar solution.\nRecently I found a nice project on github https://github.com/nodebox/nodebox\nwhich seems to be exactly what you are looking for. At least one could extract and adopt the editor components from the project. Regards,\nStephan"}, {"id": 860469, "score": 0, "vote": 0, "content": "<p>Maybe <a href=\"http://wiki.tcl.tk/8537\" rel=\"nofollow noreferrer\">bwise</a> has something of interest? </p>\n<p>On the bottom half of <a href=\"http://wiki.tcl.tk/9219\" rel=\"nofollow noreferrer\">this page</a> shows an example of using bwise to create a multiplication block that takes two numbers as an input.</p>\n", "abstract": "Maybe bwise has something of interest?  On the bottom half of this page shows an example of using bwise to create a multiplication block that takes two numbers as an input."}, {"id": 42753245, "score": 0, "vote": 0, "content": "<p>I implemented a Execution Graph like you describe in this project:\n<a href=\"http://gabyx.github.io/GRSFramework/\" rel=\"nofollow noreferrer\">GRSFramework</a></p>\n<p>The source code can be found <a href=\"https://github.com/gabyx/GRSFramework/tree/master/common/include/GRSF/logic\" rel=\"nofollow noreferrer\">here</a>.</p>\n<p>Currently I am working on releasing a better, cleaned version of this system in the project <a href=\"https://github.com/gabyx/ExecutionGraph\" rel=\"nofollow noreferrer\">ExecutionGraph</a>.<br/>\nIt might be of interest for you as well.</p>\n<p>Then there is also the TensorFlow library from Google which has a similar system implemented <a href=\"https://www.tensorflow.org/\" rel=\"nofollow noreferrer\">TensorFlow</a></p>\n", "abstract": "I implemented a Execution Graph like you describe in this project:\nGRSFramework The source code can be found here. Currently I am working on releasing a better, cleaned version of this system in the project ExecutionGraph.\nIt might be of interest for you as well. Then there is also the TensorFlow library from Google which has a similar system implemented TensorFlow"}]}, {"link": "https://stackoverflow.com/questions/29567051/python-error-idles-subprocess-didnt-make-connection-either-idle-cant-start", "question": {"id": "29567051", "title": "Python error - IDLE&#39;s subprocess didn&#39;t make connection. Either IDLE can&#39;t start or personal firewall software is blocking connection", "content": "<p>I am new to programming and i decided to learn Python first, so;</p>\n<p>I installed Python, latest version 3.4. and I am trying to open Python IDLE(GUI) mode, so when I open I get message \"IDLE's subprocess didn't make connection. Either IDLE can't start or personal firewall software is blocking connection.\". </p>\n<p>My firewall is not problem beacuse I put Python throught it. I also tried to reinstall it and it didnt made diffirence. So please if somenone can help! </p>\n<p>Thank you on your time :D</p>\n", "abstract": "I am new to programming and i decided to learn Python first, so; I installed Python, latest version 3.4. and I am trying to open Python IDLE(GUI) mode, so when I open I get message \"IDLE's subprocess didn't make connection. Either IDLE can't start or personal firewall software is blocking connection.\".  My firewall is not problem beacuse I put Python throught it. I also tried to reinstall it and it didnt made diffirence. So please if somenone can help!  Thank you on your time :D"}, "answers": [{"id": 32142364, "score": 30, "vote": 0, "content": "<p>Delete all newely created .py files in the directory with Python. for example random.py, end.py - that was my problem that caused the same notification window. Reason in filename conflicts.</p>\n", "abstract": "Delete all newely created .py files in the directory with Python. for example random.py, end.py - that was my problem that caused the same notification window. Reason in filename conflicts."}, {"id": 29568409, "score": 5, "vote": 0, "content": "<p>It may be a common problem that happens when you have in you current directory a file with same name on one from Python (references : <a href=\"https://stackoverflow.com/questions/15888186\">Can't run Python via IDLE from Explorer [2013] - IDLE's subprocess didn't make connection</a>)</p>\n<p>It seems it can also happen if you have incorrect environment variables such as <code>HOMEPATH</code> <code>USERPROFILE</code> (references : <a href=\"https://bugs.python.org/issue14576\" rel=\"nofollow noreferrer\">Issue 14576: IDLE: inconsistent use of HOMEDRIVE, HOMEPATH, and USERPROFILE on Windows</a>)</p>\n<p>I've found another related question : <a href=\"https://stackoverflow.com/questions/874757\">Python IDLE subprocess error?</a></p>\n<p>My advice if the answer is not there : google may be your friend ! The 3 clues above come from there :-)</p>\n", "abstract": "It may be a common problem that happens when you have in you current directory a file with same name on one from Python (references : Can't run Python via IDLE from Explorer [2013] - IDLE's subprocess didn't make connection) It seems it can also happen if you have incorrect environment variables such as HOMEPATH USERPROFILE (references : Issue 14576: IDLE: inconsistent use of HOMEDRIVE, HOMEPATH, and USERPROFILE on Windows) I've found another related question : Python IDLE subprocess error? My advice if the answer is not there : google may be your friend ! The 3 clues above come from there :-)"}, {"id": 41013680, "score": 4, "vote": 0, "content": "<p>The fix is <a href=\"https://stackoverflow.com/questions/15888186/cant-run-python-via-idle-from-explorer-2013-idles-subprocess-didnt-make-c\">here</a> . </p>\n<p>Open task manager, kill pythonw.exe, if you find 2 instances or more. Should work after that.</p>\n", "abstract": "The fix is here .  Open task manager, kill pythonw.exe, if you find 2 instances or more. Should work after that."}, {"id": 33713257, "score": 3, "vote": 0, "content": "<p>I fixed it, I needed to run IDLE with admin privileges. (I am using Windows 7 x64). Hope this helps. </p>\n", "abstract": "I fixed it, I needed to run IDLE with admin privileges. (I am using Windows 7 x64). Hope this helps. "}, {"id": 36233988, "score": 3, "vote": 0, "content": "<p>Simple...rename your .py file with some name different from any keyword name like 'random.py' which already exists in python package.</p>\n<p>Eg. I named one file as \"random.py\". The same error popped up. I renamed it to \"random_demo.py\". It worked.\nThe different naming discards the problem of ambiguity between an already existing file and a newly created file with same name.</p>\n", "abstract": "Simple...rename your .py file with some name different from any keyword name like 'random.py' which already exists in python package. Eg. I named one file as \"random.py\". The same error popped up. I renamed it to \"random_demo.py\". It worked.\nThe different naming discards the problem of ambiguity between an already existing file and a newly created file with same name."}, {"id": 53289181, "score": 2, "vote": 0, "content": "<p>For me: The drive pointed to by HOMEDRIVE was not writeable. I checked this by running idle the hard way, explicitly using python.exe rather than pythonw.exe:</p>\n<pre><code class=\"python\">C:\\coding\\xyz&gt;\"C:\\Python27\\Lib\\idlelib\\..\\..\\python.exe\"  \n\"C:\\Python27\\Lib\\idlelib\\idle.pyw\"\n\n Warning: unable to create user config directory\nP:\\.idlerc\n Check path and permissions.\n Exiting!\n</code></pre>\n", "abstract": "For me: The drive pointed to by HOMEDRIVE was not writeable. I checked this by running idle the hard way, explicitly using python.exe rather than pythonw.exe:"}, {"id": 32435420, "score": 0, "vote": 0, "content": "<p>I had a similar problem with a file called \"test.py\" and Python 2.7.9 - renaming the file to something else solved my issue. After checking, I noticed that there is a file with the same name under the Python27\\Lib folder. </p>\n<p>Seems to be a bug in IDLE.</p>\n", "abstract": "I had a similar problem with a file called \"test.py\" and Python 2.7.9 - renaming the file to something else solved my issue. After checking, I noticed that there is a file with the same name under the Python27\\Lib folder.  Seems to be a bug in IDLE."}, {"id": 33092815, "score": 0, "vote": 0, "content": "<p>Just had the same issue.  So uninstalled and reinstalled which fixed it and took 10 minutes.  The key with Windows machines is delete the old directory (C:\\Python27\\ because windows does seem to actually delete things) and when reinstalling specify a new directory (C:\\Python279\\ or whatever you choose to call it).</p>\n<p>I am using Win 10 with Python 2.7.9.</p>\n", "abstract": "Just had the same issue.  So uninstalled and reinstalled which fixed it and took 10 minutes.  The key with Windows machines is delete the old directory (C:\\Python27\\ because windows does seem to actually delete things) and when reinstalling specify a new directory (C:\\Python279\\ or whatever you choose to call it). I am using Win 10 with Python 2.7.9."}, {"id": 36227282, "score": 0, "vote": 0, "content": "<p>Go to C:/Users/[your user]/AppData/Local/Programs/Python/Python35-32 and delete or rename every *.py file in this directory which is named after a certain method, function, module or library. Then run IDLE. Should work.</p>\n<p>Hope I could help</p>\n", "abstract": "Go to C:/Users/[your user]/AppData/Local/Programs/Python/Python35-32 and delete or rename every *.py file in this directory which is named after a certain method, function, module or library. Then run IDLE. Should work. Hope I could help"}, {"id": 56134431, "score": 0, "vote": 0, "content": "<p>My problem was that the .py file wasn't on my local machine. It was on a shared directory.</p>\n<p>After moving the file to my local machine, I quit getting the error.</p>\n", "abstract": "My problem was that the .py file wasn't on my local machine. It was on a shared directory. After moving the file to my local machine, I quit getting the error."}, {"id": 56508508, "score": 0, "vote": 0, "content": "<p>Just to note my particular issue, this happens for me when my RAM gets full and my CPU gets busy.</p>\n<p>The problem is because of a network socket timeout on the IPC pipes between the RPC subprocess.<br/>\nIt's a poor design (insecure and prone to failure) that's commonly used for IPC instead of process pipes.</p>\n<p>The fix is to clear out some RAM and CPU usage and wait a minute before trying again.<br/>\nAnd for developers, the fix is to stop using sockets for IPC and use proper process pipes.</p>\n<p>Yes, it's the same exact socket timeout issue you experience with your browser, though on modern browsers, the page just stops loading instead of displaying a timeout error screen.<br/>\n(note this assumes the case of a good WAN connection, with a local timeout)</p>\n", "abstract": "Just to note my particular issue, this happens for me when my RAM gets full and my CPU gets busy. The problem is because of a network socket timeout on the IPC pipes between the RPC subprocess.\nIt's a poor design (insecure and prone to failure) that's commonly used for IPC instead of process pipes. The fix is to clear out some RAM and CPU usage and wait a minute before trying again.\nAnd for developers, the fix is to stop using sockets for IPC and use proper process pipes. Yes, it's the same exact socket timeout issue you experience with your browser, though on modern browsers, the page just stops loading instead of displaying a timeout error screen.\n(note this assumes the case of a good WAN connection, with a local timeout)"}, {"id": 67039753, "score": 0, "vote": 0, "content": "<p>This is a fresh install. It works with firewall disabled. As this was a fresh install any answer that deals with AppData does not apply. Nor does any answer dealing with deleting *.py files.</p>\n<p>If you are using a third party firewall - uninstall it and use Windows firewall. The main offender here is Avast/AVG. If you really want to you can set such software to \"ask\" you for rule creation, AVG ignores these rules in this case and blocks what it thinks is an external \"Tcp/Udp\" (sic) public connection.</p>\n<p>Using Process Explorer from SysInternals reveals the succesful connection between the two processes. AVG cannot seem to deal with \"phone home\" situation originating on the same host. The problem should be more widespread as many debuggers operate in the same way, so there may be some contribution to this problem by the IDLE developers.</p>\n<p>Change your firewall provider.</p>\n", "abstract": "This is a fresh install. It works with firewall disabled. As this was a fresh install any answer that deals with AppData does not apply. Nor does any answer dealing with deleting *.py files. If you are using a third party firewall - uninstall it and use Windows firewall. The main offender here is Avast/AVG. If you really want to you can set such software to \"ask\" you for rule creation, AVG ignores these rules in this case and blocks what it thinks is an external \"Tcp/Udp\" (sic) public connection. Using Process Explorer from SysInternals reveals the succesful connection between the two processes. AVG cannot seem to deal with \"phone home\" situation originating on the same host. The problem should be more widespread as many debuggers operate in the same way, so there may be some contribution to this problem by the IDLE developers. Change your firewall provider."}]}, {"link": "https://stackoverflow.com/questions/30034114/how-to-reset-spyder-ide-python-2-7-graphic-user-interface", "question": {"id": "30034114", "title": "How to reset Spyder IDE (Python 2.7) graphic user interface?", "content": "<p>I am trying to reset the interface I have tried to misaligned. \n<img alt=\"Misaligned Spyder interface\" src=\"https://i.stack.imgur.com/Knmnr.png\"/></p>\n<p>I couldn't find it in settings. I have also tried uninstalling and reinstalling it. No luck.</p>\n<p>Can you help me to reset it?</p>\n<p>Thanks. </p>\n", "abstract": "I am trying to reset the interface I have tried to misaligned. \n I couldn't find it in settings. I have also tried uninstalling and reinstalling it. No luck. Can you help me to reset it? Thanks. "}, "answers": [{"id": 30051640, "score": 23, "vote": 0, "content": "<p>(Spyder-dev here)</p>\n<p>We will include a way to reset spyder configuration from within the user interface in the upcoming version (3.0.0).</p>\n<hr/>\n<p>In the meantime you can reset by opening a terminal window (cmd in windows.. shell in Mac/Linux) and typing</p>\n<p><code>spyder --reset</code></p>\n<p>If that still does not work you can erase the folder <code>.spyder</code> in your user folder</p>\n<p>Windows\n<code>X:\\Users\\username\\.spyder2\\</code> (or <code>X:\\Users\\username\\.spyder\\</code>)</p>\n<p>Linux\n<code>\\home\\username\\.spyder2\\</code> (or <code>\\home\\username\\.spyder\\</code>)</p>\n", "abstract": "(Spyder-dev here) We will include a way to reset spyder configuration from within the user interface in the upcoming version (3.0.0). In the meantime you can reset by opening a terminal window (cmd in windows.. shell in Mac/Linux) and typing spyder --reset If that still does not work you can erase the folder .spyder in your user folder Windows\nX:\\Users\\username\\.spyder2\\ (or X:\\Users\\username\\.spyder\\) Linux\n\\home\\username\\.spyder2\\ (or \\home\\username\\.spyder\\)"}, {"id": 43828157, "score": 17, "vote": 0, "content": "<p>I'm using <strong>Spyder 3.1.2</strong></p>\n<p>Just go to <kbd>View</kbd> \u2192 <kbd>Window Layouts</kbd> \u2192 <kbd>Reset to Spyder default</kbd>.</p>\n<p><a href=\"https://i.stack.imgur.com/s1Yjl.png\" rel=\"noreferrer\"><img alt=\"\" src=\"https://i.stack.imgur.com/s1Yjl.png\"/></a></p>\n", "abstract": "I'm using Spyder 3.1.2 Just go to View \u2192 Window Layouts \u2192 Reset to Spyder default. "}, {"id": 30037815, "score": 2, "vote": 0, "content": "<p>For anyone, who has problem restoring the defaults settings, \nOpen Terminal and type:</p>\n<pre><code class=\"python\">rm -r ~/.spyder\n</code></pre>\n", "abstract": "For anyone, who has problem restoring the defaults settings, \nOpen Terminal and type:"}, {"id": 39780033, "score": 1, "vote": 0, "content": "<p>I am using Spyder 2.3.9.\nI was able to reset the windows using View-&gt;Reset Window Layout.</p>\n<p>The original post could be on older version, where this option did not exist!</p>\n", "abstract": "I am using Spyder 2.3.9.\nI was able to reset the windows using View->Reset Window Layout. The original post could be on older version, where this option did not exist!"}, {"id": 46109449, "score": 0, "vote": 0, "content": "<p>Tools &gt;&gt; Reset Spyder to Factory Defaults. Tested on Spyder 3.1.4</p>\n", "abstract": "Tools >> Reset Spyder to Factory Defaults. Tested on Spyder 3.1.4"}, {"id": 48766693, "score": 0, "vote": 0, "content": "<p>I found a way arround this problem( works for me )\nI had the issue that there were 2 seperated windows(I tried to reset the view but it didnt work)  and I couldn\u00b4t move one of them. \nMy way arround it was to drag the non movable window a bit bigger(I tried to change its size) then that window became movable for me and I could drag it into the other to get the default view again.\nMaybe it works for somebody aswell, just wanted to share.\n(3.2.4)</p>\n", "abstract": "I found a way arround this problem( works for me )\nI had the issue that there were 2 seperated windows(I tried to reset the view but it didnt work)  and I couldn\u00b4t move one of them. \nMy way arround it was to drag the non movable window a bit bigger(I tried to change its size) then that window became movable for me and I could drag it into the other to get the default view again.\nMaybe it works for somebody aswell, just wanted to share.\n(3.2.4)"}, {"id": 49957340, "score": 0, "vote": 0, "content": "<p>You only need update your Spyder version using this command on Anaconda Prompt</p>\n<pre><code class=\"python\">pip install -U spyder\n</code></pre>\n<p>It's has fixed on my IDE.</p>\n<p>If you can't fix delete your Spyder folder (.spyder-py3) in your directory like : C:\\Users*Your-User*</p>\n", "abstract": "You only need update your Spyder version using this command on Anaconda Prompt It's has fixed on my IDE. If you can't fix delete your Spyder folder (.spyder-py3) in your directory like : C:\\Users*Your-User*"}, {"id": 50962141, "score": 0, "vote": 0, "content": "<p>Do following steps\nView-&gt;Reset Window Layout.\n<em>Also do not forget to restart the application.</em> It was not worked for me without restart.\nI hope it should work for you.</p>\n<p>If still this not work you can do Tools-&gt;Reset Spyder for factory default. </p>\n", "abstract": "Do following steps\nView->Reset Window Layout.\nAlso do not forget to restart the application. It was not worked for me without restart.\nI hope it should work for you. If still this not work you can do Tools->Reset Spyder for factory default. "}, {"id": 59014566, "score": 0, "vote": 0, "content": "<p>I'm using Anaconda Navigator and Spyder 3.3.2. Open Anaconda Prompt, then type:</p>\n<pre><code class=\"python\">spyder --reset\n</code></pre>\n<p>To open Anaconda Prompt in Windows: Click Start, search or select Anaconda Prompt from the menu.</p>\n", "abstract": "I'm using Anaconda Navigator and Spyder 3.3.2. Open Anaconda Prompt, then type: To open Anaconda Prompt in Windows: Click Start, search or select Anaconda Prompt from the menu."}]}, {"link": "https://stackoverflow.com/questions/15995783/how-to-delete-all-children-elements", "question": {"id": "15995783", "title": "How to delete all children elements?", "content": "<p>I am writing a GUI-based program using Python's <code>tkinter</code> library. I am facing a problem: I need to delete <strong>all</strong> children elements (without deleting a parent element, which in my case is <code>colorsFrame</code>). </p>\n<p>My code:</p>\n<pre><code class=\"python\">infoFrame = Frame(toolsFrame, height = 50, bd = 5, bg = 'white')\ncolorsFrame = Frame(toolsFrame)\n\n# adding some elements\n\ninfoFrame.pack(side = 'top', fill = 'both')\ncolorsFrame.pack(side = 'top', fill = 'both')\n\n# set the clear button\nButton(buttonsFrame, text = \"Clear area\",\n               command = self.clearArea).place(x = 280, y = 10, height = 30)\n</code></pre>\n<p>How do I achieve this?</p>\n", "abstract": "I am writing a GUI-based program using Python's tkinter library. I am facing a problem: I need to delete all children elements (without deleting a parent element, which in my case is colorsFrame).  My code: How do I achieve this?"}, "answers": [{"id": 15995920, "score": 41, "vote": 0, "content": "<p>You can use <code>winfo_children</code> to get a list of all children of a particular widget, which you can then iterate over:</p>\n<pre><code class=\"python\">for child in infoFrame.winfo_children():\n    child.destroy()\n</code></pre>\n", "abstract": "You can use winfo_children to get a list of all children of a particular widget, which you can then iterate over:"}]}, {"link": "https://stackoverflow.com/questions/18394597/is-there-a-way-to-create-transparent-windows-with-tkinter", "question": {"id": "18394597", "title": "Is there a way to create transparent windows with Tkinter?", "content": "<p>I'm trying, ultimately, to create \"oddly-shaped windows\" with Python using the Tkinter module. But for now I will settle for being able to make the background transparent while keeping child widgets fully-visible.</p>\n<p>I'm aware this is done with wxPython and some other modules, but I'm inquiring as to the limits of Tkinter.</p>\n<p>Can Tkinter create a clear Canvas or Frame? Can it pack UI elements without a canvas or frame? Can individual UI elements be transparent?</p>\n<p>Can it pass mouse-click locations back to the system for processing any windows below it in the Z stack?</p>\n", "abstract": "I'm trying, ultimately, to create \"oddly-shaped windows\" with Python using the Tkinter module. But for now I will settle for being able to make the background transparent while keeping child widgets fully-visible. I'm aware this is done with wxPython and some other modules, but I'm inquiring as to the limits of Tkinter. Can Tkinter create a clear Canvas or Frame? Can it pack UI elements without a canvas or frame? Can individual UI elements be transparent? Can it pass mouse-click locations back to the system for processing any windows below it in the Z stack?"}, "answers": [{"id": 18430628, "score": 31, "vote": 0, "content": "<p>The option <code>root.attributes('-alpha', 0.1)</code> can be used to make a transparent window</p>\n<pre><code class=\"python\">from Tkinter import *\nroot = Tk()\nroot.attributes('-alpha', 0.3)\nroot.mainloop()\n</code></pre>\n<p>However in this case even the widgets on the root will inherit the transparency.</p>\n<p><strong>Update for Linux (Tested on Ubuntu)</strong></p>\n<p>The above code does not work on Linux machines. Here's an update that works on Linux.</p>\n<pre><code class=\"python\">from tkinter import Tk # or(from Tkinter import Tk) on Python 2.x\nroot = Tk()\nroot.wait_visibility(root)\nroot.wm_attributes('-alpha',0.3)\nroot.mainloop()\n</code></pre>\n<p>Not sure if this works on Windows.</p>\n", "abstract": "The option root.attributes('-alpha', 0.1) can be used to make a transparent window However in this case even the widgets on the root will inherit the transparency. Update for Linux (Tested on Ubuntu) The above code does not work on Linux machines. Here's an update that works on Linux. Not sure if this works on Windows."}, {"id": 58381574, "score": 5, "vote": 0, "content": "<h1>Summary as of late 2019:</h1>\n<p>As of TCL/TK version 8.6, the <code>alpha</code>, <code>fullscreen</code> and <code>topmost</code> window attributes work on ALL platforms (Windows, Mac and Linux):</p>\n<p><a href=\"https://www.tcl.tk/man/tcl8.6/TkCmd/wm.htm#M9\" rel=\"noreferrer\">https://www.tcl.tk/man/tcl8.6/TkCmd/wm.htm#M9</a></p>\n<p>Previous versions of the manual noted that there <strong>PREVIOUSLY WERE</strong> platform differences (only some platforms supported those 3 attributes). But as long as you use the latest TCL/TK, you're guaranteed that all of those attributes will work on ALL platforms!</p>\n<p>There are still platform quirks on LINUX, since each window attribute feature relies on the operating system's underlying window manager (on Mac and Windows they're always capable, but on Linux there are tons of different window managers/compositors, and NOT all support transparent windows, etc). It says that in case transparency is not supported, the <code>alpha</code> property will stay at <code>1.0</code> if you try to read it again later. However the page also notes that on Linux (X11), the attributes are updated asynchronously which means that you can't trust the value you read (if you change alpha and then immediately try to read it, you'll still read the old value, so you can't use that method to check if alpha was successfully changed on Linux). </p>\n<p>As for the other answers saying that you first need to use <code>root.wait_visibility(root)</code> on Linux to make sure the window is visible on screen before setting the <code>alpha</code> attribute... I don't know, since I don't have a Linux machine to check. But I heavily doubt that it's needed anymore, since the official manual says that alpha is supported and says nothing about that command being necessary. Either way, it doesn't hurt to add the <code>wait_visibility</code> trick too... It is simply a command that runs a very brief event loop that waits until the actual window has appeared on the user's screen. So it's probably still a good idea to add that command before all of your attribute-setting. Especially since it's <em>proven</em> to help the alpha work on Linux on <em>old</em> TCL/TK versions! <em>PS: You don't need the <code>(root)</code> argument, and should type <code>root.wait_visibility()</code> instead, which means \"wait for <code>self</code> (root in this case since we called the command on the root object)\".</em></p>\n<h2>Update:</h2>\n<p>Daniel in the comments below has let me know that <code>root.wait_visibility()</code> is still necessary on Ubuntu 19.10. Although he didn't specify his Python, TCL/TK or TkInter versions so maybe they're outdated on his system. Either way, sounds like it's a safer bet to always include that command for backwards compatibility!</p>\n", "abstract": "As of TCL/TK version 8.6, the alpha, fullscreen and topmost window attributes work on ALL platforms (Windows, Mac and Linux): https://www.tcl.tk/man/tcl8.6/TkCmd/wm.htm#M9 Previous versions of the manual noted that there PREVIOUSLY WERE platform differences (only some platforms supported those 3 attributes). But as long as you use the latest TCL/TK, you're guaranteed that all of those attributes will work on ALL platforms! There are still platform quirks on LINUX, since each window attribute feature relies on the operating system's underlying window manager (on Mac and Windows they're always capable, but on Linux there are tons of different window managers/compositors, and NOT all support transparent windows, etc). It says that in case transparency is not supported, the alpha property will stay at 1.0 if you try to read it again later. However the page also notes that on Linux (X11), the attributes are updated asynchronously which means that you can't trust the value you read (if you change alpha and then immediately try to read it, you'll still read the old value, so you can't use that method to check if alpha was successfully changed on Linux).  As for the other answers saying that you first need to use root.wait_visibility(root) on Linux to make sure the window is visible on screen before setting the alpha attribute... I don't know, since I don't have a Linux machine to check. But I heavily doubt that it's needed anymore, since the official manual says that alpha is supported and says nothing about that command being necessary. Either way, it doesn't hurt to add the wait_visibility trick too... It is simply a command that runs a very brief event loop that waits until the actual window has appeared on the user's screen. So it's probably still a good idea to add that command before all of your attribute-setting. Especially since it's proven to help the alpha work on Linux on old TCL/TK versions! PS: You don't need the (root) argument, and should type root.wait_visibility() instead, which means \"wait for self (root in this case since we called the command on the root object)\". Daniel in the comments below has let me know that root.wait_visibility() is still necessary on Ubuntu 19.10. Although he didn't specify his Python, TCL/TK or TkInter versions so maybe they're outdated on his system. Either way, sounds like it's a safer bet to always include that command for backwards compatibility!"}]}, {"link": "https://stackoverflow.com/questions/3691944/how-should-i-do-rapid-gui-development-for-r-and-octave-methods-possibly-with-py", "question": {"id": "3691944", "title": "How should I do rapid GUI development for R and Octave methods (possibly with Python)?", "content": "<p>We are a medium-sized academic research lab whose main outputs are new statistical methods for analyzing large datasets.  We generally develop in R and MATLAB/Octave.</p>\n<p>We would like to expand the reach of our work by building simple, wizard-style user interfaces to access our methods, either web-apps like <a href=\"http://rna.tbi.univie.ac.at/cgi-bin/RNAfold.cgi\" rel=\"nofollow noreferrer\">RNAfold</a> or stand-alone applications to analyze private data.</p>\n<p>Ideally, we would like the interfaces to do some data checking, to only use FOSS, to run in Mac and Windows environments, and to be able to generate simple charts and graphs that can be output as figures suitable for publication.  Also, we like Python because it\u2019s a popular language in the lab and in our research community. </p>\n<p>However, we want to be able to develop and release quickly and cheaply.  We are lucky to be able to fund one developer in the lab and s/he has to support multiple projects.</p>\n<p>There are a lot of groups with the same needs and constraints as us, so it would be useful to be able to develop a consistent long-term strategy for this type of challenge.</p>\n<p><strong>Edit</strong>\nI asked for comments on four possible approaches, included below with summary of comments:</p>\n<ol>\n<li>Calling the R and Octave methods from Python.<br/>\nAnswers:\n\n<ul>\n<li>R / Python integration\n\n<ul>\n<li><a href=\"http://rpy.sourceforge.net/\" rel=\"nofollow noreferrer\">Rpy</a>  (from <a href=\"https://stackoverflow.com/users/151744/chrisc\">ChrisC</a>)</li>\n<li><a href=\"http://www.ralph-heinkel.com/pyRserve/index.html\" rel=\"nofollow noreferrer\">pyRserve</a> (from <a href=\"https://stackoverflow.com/users/319487/radek\">radek</a>) </li>\n<li><a href=\"http://sourceforge.net/projects/rinpy/files/\" rel=\"nofollow noreferrer\">PypeR</a>  (from <a href=\"https://stackoverflow.com/users/319487/radek\">radek</a>, see answer for paper link)</li>\n</ul></li>\n<li>Using a Python client to call in to an Octave server (from <a href=\"https://stackoverflow.com/users/151744/chrisc\">ChrisC</a>)</li>\n</ul></li>\n<li>Re-implementing our methods in Python.  In general, this is not easy because our methods rely on other methods also implemented in R and Octave.\nAnswers:\n\n<ul>\n<li>There was no comment on this approach, it's probably a bad idea.</li>\n</ul></li>\n<li>Using a different framework to build user-interfaces.<br/>\nAnswers:\n\n<ul>\n<li>How about building GUIs and web-apps directly in R? (from <a href=\"https://stackoverflow.com/users/16632/hadley\">hadley</a>, see answer for tool refs)</li>\n</ul></li>\n<li>Other ideas that we haven\u2019t considered, e.g., integrating with workflow management systems like <a href=\"http://www.taverna.org.uk/\" rel=\"nofollow noreferrer\">Taverna</a>.<br/>\nAnswers:\n\n<ul>\n<li>Try a visual programming interface like <a href=\"http://www.red-r.org/\" rel=\"nofollow noreferrer\">RedR</a> (from <a href=\"https://stackoverflow.com/users/152159/chrisamiller\">chrisamiller</a>)</li>\n</ul></li>\n</ol>\n<p><strong>My preferred answer</strong></p>\n<p>I'm first going to look into the approach suggested by <a href=\"https://stackoverflow.com/users/211116/spacedman\">Spacedman</a>: using  <a href=\"http://doc.trolltech.com/4.3/qt4-designer.html\" rel=\"nofollow noreferrer\">QtDesigner</a> to build the UI for <a href=\"http://wiki.python.org/moin/PyQt4\" rel=\"nofollow noreferrer\">PyQt4</a> and calling R with <a href=\"http://rpy.sourceforge.net/\" rel=\"nofollow noreferrer\">RPy</a>.  We get a lot of students without a programming background who want to volunteer in the lab, and QtDesigner looks like something that we could train them to use effectively.</p>\n<p>I would like develop GUIs directly in R as recommended by <a href=\"https://stackoverflow.com/users/16632/hadley\">hadley</a> but <a href=\"http://sourceforge.net/projects/rqt/\" rel=\"nofollow noreferrer\">RQt</a>, which I presume that I need to use QtDesigner, does not appear to be in active development (last update was summer of 2009).</p>\n<p>Also, it looks like we may have to start implementing our methods exclusively in R, and translating over from MATLAB/Octave to R.  In my field, this is probably not a bad idea anyways.</p>\n<p><strong>Appendix:</strong> </p>\n<ol>\n<li>Python libraries to simplify user interface construction:  \n\n<ul>\n<li><a href=\"http://www.wxpython.org/\" rel=\"nofollow noreferrer\">wxPython</a> (<a href=\"https://stackoverflow.com/users/151744/chrisc\">ChrisC</a>)  </li>\n<li><a href=\"http://wiki.python.org/moin/PyQt4\" rel=\"nofollow noreferrer\">PyQt4</a> (from <a href=\"https://stackoverflow.com/users/211116/spacedman\">Spacedman</a>)</li>\n</ul></li>\n<li>Other projects that integrate Python, R, and Octave:\n\n<ul>\n<li><a href=\"http://www.sagemath.org/\" rel=\"nofollow noreferrer\">SAGE</a> (<a href=\"https://stackoverflow.com/users/143305/dirk-eddelbuettel\">Dirk Eddelbuettel</a>)</li>\n<li><a href=\"http://www.shogun-toolbox.org/\" rel=\"nofollow noreferrer\">Shogun</a> (<a href=\"https://stackoverflow.com/users/143305/dirk-eddelbuettel\">Dirk Eddelbuettel</a>)</li>\n</ul></li>\n<li>GUIs to make GUIs:\n\n<ul>\n<li><a href=\"http://doc.trolltech.com/4.3/qt4-designer.html\" rel=\"nofollow noreferrer\">QtDesigner</a> with <a href=\"http://wiki.python.org/moin/PyQt4\" rel=\"nofollow noreferrer\">PyQt4</a> (from <a href=\"https://stackoverflow.com/users/211116/spacedman\">Spacedman</a>).  Note <a href=\"http://qt.nokia.com/\" rel=\"nofollow noreferrer\">Qt4</a> is both commercial and available under a LGPL.</li>\n</ul></li>\n</ol>\n", "abstract": "We are a medium-sized academic research lab whose main outputs are new statistical methods for analyzing large datasets.  We generally develop in R and MATLAB/Octave. We would like to expand the reach of our work by building simple, wizard-style user interfaces to access our methods, either web-apps like RNAfold or stand-alone applications to analyze private data. Ideally, we would like the interfaces to do some data checking, to only use FOSS, to run in Mac and Windows environments, and to be able to generate simple charts and graphs that can be output as figures suitable for publication.  Also, we like Python because it\u2019s a popular language in the lab and in our research community.  However, we want to be able to develop and release quickly and cheaply.  We are lucky to be able to fund one developer in the lab and s/he has to support multiple projects. There are a lot of groups with the same needs and constraints as us, so it would be useful to be able to develop a consistent long-term strategy for this type of challenge. Edit\nI asked for comments on four possible approaches, included below with summary of comments: My preferred answer I'm first going to look into the approach suggested by Spacedman: using  QtDesigner to build the UI for PyQt4 and calling R with RPy.  We get a lot of students without a programming background who want to volunteer in the lab, and QtDesigner looks like something that we could train them to use effectively. I would like develop GUIs directly in R as recommended by hadley but RQt, which I presume that I need to use QtDesigner, does not appear to be in active development (last update was summer of 2009). Also, it looks like we may have to start implementing our methods exclusively in R, and translating over from MATLAB/Octave to R.  In my field, this is probably not a bad idea anyways. Appendix: "}, "answers": [{"id": 3692702, "score": 9, "vote": 0, "content": "<p>Why not continue to develop directly in R?  There are a number of packages that allow you to develop GUIs (gWidgets RGtk, tcl/tk, RQt, Rwxwidgets, rjava) or <a href=\"https://stackoverflow.com/questions/1397097/r-web-application-introduction\">web applications</a>.</p>\n", "abstract": "Why not continue to develop directly in R?  There are a number of packages that allow you to develop GUIs (gWidgets RGtk, tcl/tk, RQt, Rwxwidgets, rjava) or web applications."}, {"id": 3694299, "score": 8, "vote": 0, "content": "<p>I'd go with Python and PyQt4 for the UI, and use Rpy to interface to R.</p>\n<p>There's the QtDesigner for interface designing and you can generate python from that. QtAssistant gives you a fully hyperlinked documentation set for Qt which is the best I've ever used. </p>\n<p>Well worth it!</p>\n", "abstract": "I'd go with Python and PyQt4 for the UI, and use Rpy to interface to R. There's the QtDesigner for interface designing and you can generate python from that. QtAssistant gives you a fully hyperlinked documentation set for Qt which is the best I've ever used.  Well worth it!"}, {"id": 3692072, "score": 5, "vote": 0, "content": "<p>That's a tall order -- multi-platform, multi-backend (R and Ocatve), as well and cheap, fast and easy to use!</p>\n<p>From the top of my head, look at these</p>\n<ul>\n<li><p><a href=\"http://www.sagemath.org/\" rel=\"noreferrer\">Sage</a>:  they have what they call <em>notebooks</em> which are interactive web pages and showed a nice demo at useR! 2010; I think Octave is covered too</p></li>\n<li><p><a href=\"http://www.shogun-toolbox.org\" rel=\"noreferrer\">Shogun</a>: which also integrates to Python, R and Octave and may have some tools for you to leverage.</p></li>\n</ul>\n", "abstract": "That's a tall order -- multi-platform, multi-backend (R and Ocatve), as well and cheap, fast and easy to use! From the top of my head, look at these Sage:  they have what they call notebooks which are interactive web pages and showed a nice demo at useR! 2010; I think Octave is covered too Shogun: which also integrates to Python, R and Octave and may have some tools for you to leverage."}, {"id": 13725744, "score": 4, "vote": 0, "content": "<p>I've been looking for something similar - simple rapid GUI in R. It seems there's a new alternative from RStudio guys.</p>\n<p><a href=\"http://www.rstudio.com/shiny/\" rel=\"nofollow\">Shiny</a> should be sufficient for small web interfaces without much coding. Seems like a viable option if you need a simple input/output style of UI.</p>\n", "abstract": "I've been looking for something similar - simple rapid GUI in R. It seems there's a new alternative from RStudio guys. Shiny should be sufficient for small web interfaces without much coding. Seems like a viable option if you need a simple input/output style of UI."}, {"id": 3692149, "score": 2, "vote": 0, "content": "<p>I haven't tried directly connecting Octave with Python beyond setting up Octave apps as a server and having a Python client call in, but I've had some luck integrating R with Python courtesy <a href=\"http://rpy.sourceforge.net/\" rel=\"nofollow noreferrer\">RPy</a>.  In some of our applications we build e.g. a <a href=\"http://www.wxpython.org\" rel=\"nofollow noreferrer\">wxPython</a> + <a href=\"http://matplotlib.sourceforge.net/\" rel=\"nofollow noreferrer\">matplotlib</a> Python frontend, and call the R scripts directly through RPy.</p>\n", "abstract": "I haven't tried directly connecting Octave with Python beyond setting up Octave apps as a server and having a Python client call in, but I've had some luck integrating R with Python courtesy RPy.  In some of our applications we build e.g. a wxPython + matplotlib Python frontend, and call the R scripts directly through RPy."}, {"id": 3692474, "score": 2, "vote": 0, "content": "<p>For R and Python integration you might also want to have a look at</p>\n<ul>\n<li><a href=\"http://www.ralph-heinkel.com/pyRserve/index.html\" rel=\"nofollow noreferrer\">pyRserve</a></li>\n<li><a href=\"http://sourceforge.net/projects/rinpy/files/\" rel=\"nofollow noreferrer\">PypeR</a> [more in the <a href=\"http://www.jstatsoft.org/v35/c02/paper\" rel=\"nofollow noreferrer\">paper</a>]</li>\n</ul>\n", "abstract": "For R and Python integration you might also want to have a look at"}, {"id": 3700707, "score": 1, "vote": 0, "content": "<p>You might try looking at <a href=\"http://www.red-r.org/\" rel=\"nofollow noreferrer\">RedR</a>, which lets you wrap R packages in a Python GUI.</p>\n", "abstract": "You might try looking at RedR, which lets you wrap R packages in a Python GUI."}]}, {"link": "https://stackoverflow.com/questions/707491/questions-re-current-state-of-gui-programming-with-python", "question": {"id": "707491", "title": "questions re: current state of GUI programming with Python", "content": "<p>I recently did some work modifying a Python gui app that was using wxPython widgets.  I've experimented with Python in fits and starts over last six or seven years, but this was the first time I did any work with a gui.  I was pretty disappointed at what seems to be the current state of gui programming with Python.  I like the Python language itself a lot, it's a fun change from the Delphi/ObjectPascal programming I'm used to, definitely a big productivity increase for general purpose programming tasks.   I'd like to move to Python for everything.</p>\n<p>But wxPython is a huge step backwards from something like Delphi's VCL or .NET's WinForms.  While Python itself offers nice productivity gains from generally programming a higher level of abstraction, wxPython is used at a way lower level of abstraction than the VCL.  For example, I wasted a lot fo time trying to get a wxPython list object to behave the way I wanted it to.  Just to add sortable columns involved several code-intensive steps, one to create and maintain a shadow-data-structure that provided the actual sort order, another to make it possible to show graphic-sort-direction-triangles in the column header, and there were a couple more I don't remember.  All of these error prone steps could be accomplished simply by setting a property value using my Delphi grid component.</p>\n<p>My conclusion: while Python provides big productivity gains by raising level of abstraction for a lot of general purpose coding, wxPython is several levels of abstraction <em>lower</em> than the gui tools available for Delphi.   Net result:  gui programming with Delphi is way faster than gui programming with Python, and the resulting ui with Delphi is still more polished and full-featured.  It doesn't seem to me like it's exaggerating to say that Delphi gui programming was more advanced back in 1995 than python gui programming with wxPython is in 2009.</p>\n<p>I did some investigating of other python gui frameworks and it didn't look like any were substantially better than wxPython.  I also did some minimal investigation of gui formbuilders for wxPython, which would have made things a little bit better.  But by most reports those solutions are buggy and even a great formbuilder wouldn't address my main complaints about wxPython, which are simply that it has fewer features and generally requires you to do gui programming at a much lower level of abstraction than I'm used to with Delphi's VCL.  Some quick investigating into suggested python gui-dev solutions ( <a href=\"http://wiki.python.org/moin/GuiProgramming\" rel=\"noreferrer\">http://wiki.python.org/moin/GuiProgramming</a> ) is honestly somewhat depressing for someone used to Delphi or .NET.</p>\n<p>Finally, I've got a couple of questions.</p>\n<p>First, am I missing something?  Is there some gui-development solution for Python that can compare with VCL or WinForms programming?   I don't necessarily care if it doesn't quite measure up to Delphi's VCL.  I'm just looking for something that's in the same league.</p>\n<p>Second, could IronPython be the direction to go?  I've mostly tried to avoid drinking the .NET koolaid, but maybe IronPython gives me a reason to finally give in.  Even then, does IronPython fully integrate with WinForms, or would I need to have the forms themselves be backed by c# or vb.net?  It looks to me like that definitely is the case with SharpDevelop and MonoDevelop (i.e, IronPython can't be used to do design-time gui building).  Does VS.NET fully integrate IronPython with gui-building?</p>\n<p>It really seems to me like Python could \"take over the world\" in a way similar to the way that Visual Basic did back in the early 1990's, if some wonderful new gui-building solution came out for Python.    Only this time with Python we'd have a whole new paradigm of fast, cross platform, and  <em>open source</em> gui programming.  Wouldn't corporations eat that up?  Yeah, I know, web apps are the main focus of things these days, so a great Python-gui solution wouldn't create same revolution that VB once did.  But I don't see gui programming disappearing and I'd like a nice modern, open source, high level solution.</p>\n", "abstract": "I recently did some work modifying a Python gui app that was using wxPython widgets.  I've experimented with Python in fits and starts over last six or seven years, but this was the first time I did any work with a gui.  I was pretty disappointed at what seems to be the current state of gui programming with Python.  I like the Python language itself a lot, it's a fun change from the Delphi/ObjectPascal programming I'm used to, definitely a big productivity increase for general purpose programming tasks.   I'd like to move to Python for everything. But wxPython is a huge step backwards from something like Delphi's VCL or .NET's WinForms.  While Python itself offers nice productivity gains from generally programming a higher level of abstraction, wxPython is used at a way lower level of abstraction than the VCL.  For example, I wasted a lot fo time trying to get a wxPython list object to behave the way I wanted it to.  Just to add sortable columns involved several code-intensive steps, one to create and maintain a shadow-data-structure that provided the actual sort order, another to make it possible to show graphic-sort-direction-triangles in the column header, and there were a couple more I don't remember.  All of these error prone steps could be accomplished simply by setting a property value using my Delphi grid component. My conclusion: while Python provides big productivity gains by raising level of abstraction for a lot of general purpose coding, wxPython is several levels of abstraction lower than the gui tools available for Delphi.   Net result:  gui programming with Delphi is way faster than gui programming with Python, and the resulting ui with Delphi is still more polished and full-featured.  It doesn't seem to me like it's exaggerating to say that Delphi gui programming was more advanced back in 1995 than python gui programming with wxPython is in 2009. I did some investigating of other python gui frameworks and it didn't look like any were substantially better than wxPython.  I also did some minimal investigation of gui formbuilders for wxPython, which would have made things a little bit better.  But by most reports those solutions are buggy and even a great formbuilder wouldn't address my main complaints about wxPython, which are simply that it has fewer features and generally requires you to do gui programming at a much lower level of abstraction than I'm used to with Delphi's VCL.  Some quick investigating into suggested python gui-dev solutions ( http://wiki.python.org/moin/GuiProgramming ) is honestly somewhat depressing for someone used to Delphi or .NET. Finally, I've got a couple of questions. First, am I missing something?  Is there some gui-development solution for Python that can compare with VCL or WinForms programming?   I don't necessarily care if it doesn't quite measure up to Delphi's VCL.  I'm just looking for something that's in the same league. Second, could IronPython be the direction to go?  I've mostly tried to avoid drinking the .NET koolaid, but maybe IronPython gives me a reason to finally give in.  Even then, does IronPython fully integrate with WinForms, or would I need to have the forms themselves be backed by c# or vb.net?  It looks to me like that definitely is the case with SharpDevelop and MonoDevelop (i.e, IronPython can't be used to do design-time gui building).  Does VS.NET fully integrate IronPython with gui-building? It really seems to me like Python could \"take over the world\" in a way similar to the way that Visual Basic did back in the early 1990's, if some wonderful new gui-building solution came out for Python.    Only this time with Python we'd have a whole new paradigm of fast, cross platform, and  open source gui programming.  Wouldn't corporations eat that up?  Yeah, I know, web apps are the main focus of things these days, so a great Python-gui solution wouldn't create same revolution that VB once did.  But I don't see gui programming disappearing and I'd like a nice modern, open source, high level solution."}, "answers": [{"id": 707543, "score": 11, "vote": 0, "content": "<p>seems your complains are about wxPython, not about Python itself.  try pyQt (or is it qtPython?)</p>\n<p>but, both wxPython and pyQt are just Python bindings to a C / C++ (respectively) library, it's just as (conceptually) low level as the originals.</p>\n<p>but, Qt is far superior to wx</p>\n", "abstract": "seems your complains are about wxPython, not about Python itself.  try pyQt (or is it qtPython?) but, both wxPython and pyQt are just Python bindings to a C / C++ (respectively) library, it's just as (conceptually) low level as the originals. but, Qt is far superior to wx"}, {"id": 707850, "score": 4, "vote": 0, "content": "<p>PyQt is a binding to Qt SDK from Nokia, and PyQt itself is delivered by a company called <a href=\"http://www.riverbankcomputing.co.uk/news\" rel=\"noreferrer\">RiverBank</a>.</p>\n<p>If licence is not important for you you can use PyQt under GPL or you 'll pay some money for commercial licence.</p>\n<p>PyQt is binding Qt 4.4 right now.</p>\n<p>Qt is not just GUI, it's a complete C/C++ SDK that help with networking, xml, media, db and other stuff, and PyQt transfer all this to python.</p>\n<p>With PyQt you'll use Qt Designer  and you 'll transfer the .ui file to .py file by a simple command line. </p>\n<p>You 'll find many resources on the web about PyQt and good support from different communities, and even published books on PyQt.</p>\n<p>Many suggestions consider that RiverBank has no choice but to release the next version which 'll depend on Qt 4.5 under LGPL, we are waiting :).</p>\n<p>Another solution is Jython with Java Swing, very easy and elegant to write (specially under JDK 6), but not enough resources on internet. </p>\n", "abstract": "PyQt is a binding to Qt SDK from Nokia, and PyQt itself is delivered by a company called RiverBank. If licence is not important for you you can use PyQt under GPL or you 'll pay some money for commercial licence. PyQt is binding Qt 4.4 right now. Qt is not just GUI, it's a complete C/C++ SDK that help with networking, xml, media, db and other stuff, and PyQt transfer all this to python. With PyQt you'll use Qt Designer  and you 'll transfer the .ui file to .py file by a simple command line.  You 'll find many resources on the web about PyQt and good support from different communities, and even published books on PyQt. Many suggestions consider that RiverBank has no choice but to release the next version which 'll depend on Qt 4.5 under LGPL, we are waiting :). Another solution is Jython with Java Swing, very easy and elegant to write (specially under JDK 6), but not enough resources on internet. "}, {"id": 707555, "score": 3, "vote": 0, "content": "<p>You may want to look at Jython (Python on the Java VM).  It is very similar to Iron Python, and you can fore go the .Net koolaid.</p>\n", "abstract": "You may want to look at Jython (Python on the Java VM).  It is very similar to Iron Python, and you can fore go the .Net koolaid."}, {"id": 714201, "score": 3, "vote": 0, "content": "<p><a href=\"http://dabodev.com/\" rel=\"nofollow noreferrer\">dabo</a> puts wxPython programming at a higher level like what you're looking for.</p>\n", "abstract": "dabo puts wxPython programming at a higher level like what you're looking for."}, {"id": 707590, "score": 2, "vote": 0, "content": "<p>You're probably going to have to use the .net or java pythons, but check this out first and see if it meets your requirements:</p>\n<p><a href=\"http://www.async.com.br/projects/kiwi/\" rel=\"nofollow noreferrer\">Kiwi</a></p>\n", "abstract": "You're probably going to have to use the .net or java pythons, but check this out first and see if it meets your requirements: Kiwi"}, {"id": 711396, "score": 2, "vote": 0, "content": "<p>Short answer: Don't try Tkinter - it's got all the problems described above.</p>\n<p>Long answer: Tkinter is not useful for large programs. Handling the various pieces with it somehow invariably degenerates to juggling (which never happens otherwise) and the resulting output doesn't look native or particularly polished.</p>\n", "abstract": "Short answer: Don't try Tkinter - it's got all the problems described above. Long answer: Tkinter is not useful for large programs. Handling the various pieces with it somehow invariably degenerates to juggling (which never happens otherwise) and the resulting output doesn't look native or particularly polished."}, {"id": 707718, "score": 0, "vote": 0, "content": "<p>You are right, wxPython can definetely be improved. But i think Robin Dunn has done a great job so far, and still is. </p>\n<p>Especially the wxPython community is open to improvements, like recent inclusion of the widgets by <a href=\"http://xoomer.virgilio.it/infinity77/main/freeware.html\" rel=\"nofollow noreferrer\">Andrea</a>, so like many community projects pick the one you like most, and improve it while using it.</p>\n", "abstract": "You are right, wxPython can definetely be improved. But i think Robin Dunn has done a great job so far, and still is.  Especially the wxPython community is open to improvements, like recent inclusion of the widgets by Andrea, so like many community projects pick the one you like most, and improve it while using it."}, {"id": 708022, "score": 0, "vote": 0, "content": "<p>We've been quite happy using Python.Net to build our UIs in WinForms and using CPython for Presenter, Model.  IronPython is also a good tool if you want to do python on Windows.</p>\n", "abstract": "We've been quite happy using Python.Net to build our UIs in WinForms and using CPython for Presenter, Model.  IronPython is also a good tool if you want to do python on Windows."}, {"id": 710915, "score": 0, "vote": 0, "content": "<p>There is <a href=\"http://wiki.wxpython.org/Wax\" rel=\"nofollow noreferrer\">Wax</a>, whose purpose was to create a more pythonic interface to wxWidgets, but it seems its development has stalled.</p>\n", "abstract": "There is Wax, whose purpose was to create a more pythonic interface to wxWidgets, but it seems its development has stalled."}]}, {"link": "https://stackoverflow.com/questions/42887362/why-is-the-tkinter-render-quality-much-worse-on-windows", "question": {"id": "42887362", "title": "Why is the Tkinter render quality much worse on windows?", "content": "<p>I have developed a python app with Tkinter on a Mac. It involves forms, and canvas drawings. On the Mac, it looks great. However on my Dell laptop (4K display, and more powerful than my Mac), the Tkinter ui appears very pixelated and certain elements are located slightly differently. What is this problem known as and what can I do to render Tkinter better on Dell Windows 10 or other platforms in general?\nHere is a screen shot of the same part of the UI (showing form and canvas drawing)...</p>\n<p><strong>Windows(bad)</strong>\n<a href=\"https://i.stack.imgur.com/qjmIK.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/qjmIK.png\"/></a></p>\n<p><strong>Mac(normal)</strong></p>\n<p><a href=\"https://i.stack.imgur.com/RqrbN.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/RqrbN.png\"/></a></p>\n", "abstract": "I have developed a python app with Tkinter on a Mac. It involves forms, and canvas drawings. On the Mac, it looks great. However on my Dell laptop (4K display, and more powerful than my Mac), the Tkinter ui appears very pixelated and certain elements are located slightly differently. What is this problem known as and what can I do to render Tkinter better on Dell Windows 10 or other platforms in general?\nHere is a screen shot of the same part of the UI (showing form and canvas drawing)... Windows(bad)\n Mac(normal) "}, "answers": [{"id": 44834474, "score": 2, "vote": 0, "content": "<p>Antialiasing is only enabled for Tkinter canvas object in OSX . You can get the <code>aggDraw</code> lib: <a href=\"http://effbot.org/zone/tkinter-aggdraw.htm\" rel=\"nofollow noreferrer\">http://effbot.org/zone/tkinter-aggdraw.htm</a> as a workaround, but otherwise you will get jagged lines when trying to draw on a canvas. Fonts however should be anti-aliased on all major platforms.</p>\n", "abstract": "Antialiasing is only enabled for Tkinter canvas object in OSX . You can get the aggDraw lib: http://effbot.org/zone/tkinter-aggdraw.htm as a workaround, but otherwise you will get jagged lines when trying to draw on a canvas. Fonts however should be anti-aliased on all major platforms."}, {"id": 44811454, "score": 0, "vote": 0, "content": "<p><a href=\"https://i.stack.imgur.com/bVCwz.png\" rel=\"nofollow noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/bVCwz.png\"/></a></p>\n<p>The differences in the display of the same application are due to differences in render engines used by each Operating system.</p>\n<p>This is coverd in a Pakt pub ebook called Tkinter GUI Application Development Blueprints  </p>\n<p>passage regarding this topic available <a href=\"https://books.google.com/books?id=W_qoCwAAQBAJ&amp;pg=PA36&amp;lpg=PA36&amp;dq=tkinter+windows+vs+mac+render&amp;source=bl&amp;ots=JOksLPdZil&amp;sig=33MS8pZs8DYFZK8aI9eovgSWpwM&amp;hl=en&amp;sa=X&amp;ved=0ahUKEwjg_MPTpOHUAhXH8j4KHXryBVIQ6AEIRjAF#v=onepage&amp;q=tkinter%20windows%20vs%20mac%20render&amp;f=false\" rel=\"nofollow noreferrer\">here</a>.</p>\n<p>It may be a pain to do but it looks like the most common fix for this is to detect your enviroment and write independent styles using the <strong><em>external option database</em></strong>\nmore info is available in the documentation <a href=\"https://docs.python.org/2/library/tkinter.html#setting-options\" rel=\"nofollow noreferrer\">here</a>.</p>\n", "abstract": " The differences in the display of the same application are due to differences in render engines used by each Operating system. This is coverd in a Pakt pub ebook called Tkinter GUI Application Development Blueprints   passage regarding this topic available here. It may be a pain to do but it looks like the most common fix for this is to detect your enviroment and write independent styles using the external option database\nmore info is available in the documentation here."}, {"id": 72080424, "score": 0, "vote": 0, "content": "<p>Setting your DPI awareness to 1 should resolve your issue</p>\n<pre><code class=\"python\">from ctypes import windll\nwindll.shcore.SetProcessDpiAwareness(1)\n</code></pre>\n", "abstract": "Setting your DPI awareness to 1 should resolve your issue"}, {"id": 44754244, "score": -2, "vote": 0, "content": "<p>Consider the resolution of the MAC as 1366x768 (expected),Suppose you are making your application windows size as 683x384 which is equal to (1366/2 x 768/2).</p>\n<p>When the application will be run on a 4k Display it will display the dimensions as 683x384 for the main window but its dimensions on the 4k will be 4k/2.</p>\n<p>So what you can do it write a general program with variable dimensions of the screens ,So that it  will adjust its window size according to the screen size.</p>\n<p>For more details refer to the <a href=\"https://www.tutorialspoint.com/python3/python_gui_programming.htm\" rel=\"nofollow noreferrer\">https://www.tutorialspoint.com/python3/python_gui_programming.htm</a></p>\n<p>Hope this will help.</p>\n", "abstract": "Consider the resolution of the MAC as 1366x768 (expected),Suppose you are making your application windows size as 683x384 which is equal to (1366/2 x 768/2). When the application will be run on a 4k Display it will display the dimensions as 683x384 for the main window but its dimensions on the 4k will be 4k/2. So what you can do it write a general program with variable dimensions of the screens ,So that it  will adjust its window size according to the screen size. For more details refer to the https://www.tutorialspoint.com/python3/python_gui_programming.htm Hope this will help."}]}, {"link": "https://stackoverflow.com/questions/9319878/good-pyqt-tutorial-needed", "question": {"id": "9319878", "title": "Good PyQt tutorial needed", "content": "<p>I'm starting getting into <code>PyQt</code>. Therefore I would need some good tutorials. I searched a bit but didn't find any good. Most tutorials only post \"full\" applications but don't go into detail.</p>\n<p>Can you advise me some?</p>\n<p>Currently im programming in <code>Notepad++</code>. Are there better lightweight editors or simple IDEs for python in combination with PyQt?</p>\n", "abstract": "I'm starting getting into PyQt. Therefore I would need some good tutorials. I searched a bit but didn't find any good. Most tutorials only post \"full\" applications but don't go into detail. Can you advise me some? Currently im programming in Notepad++. Are there better lightweight editors or simple IDEs for python in combination with PyQt?"}, "answers": [{"id": 9320167, "score": 28, "vote": 0, "content": "<p>You should probably ask two different questions here, one regarding the PyQt tutorial and one about a better editor. Also both could be more precise (PyQt version, editor expectations and so on)</p>\n<p>However here's where you could start:</p>\n<p>PyQt4:</p>\n<ol>\n<li>read about Qt at nokia.com and bookmark the documentation: <a href=\"https://doc.qt.io/archives/qt-4.8/gettingstartedqt.html\" rel=\"nofollow noreferrer\">https://doc.qt.io/archives/qt-4.8/gettingstartedqt.html</a></li>\n<li>bookmark the PyQt documentation: <a href=\"http://pyqt.sourceforge.net/Docs/PyQt4/\" rel=\"nofollow noreferrer\">http://pyqt.sourceforge.net/Docs/PyQt4/</a></li>\n<li>think about getting this book: <a href=\"http://www.qtrac.eu/pyqtbook.html\" rel=\"nofollow noreferrer\">http://www.qtrac.eu/pyqtbook.html</a></li>\n<li>do this tutorial: <a href=\"http://wiki.python.org/moin/JonathanGardnerPyQtTutorial\" rel=\"nofollow noreferrer\">http://wiki.python.org/moin/JonathanGardnerPyQtTutorial</a></li>\n<li>define a simple project you want to start with and do it with all the resources you have now</li>\n</ol>\n<p>Editor:</p>\n<ol>\n<li>think about getting this book: <a href=\"http://pragprog.com/the-pragmatic-programmer\" rel=\"nofollow noreferrer\">http://pragprog.com/the-pragmatic-programmer</a></li>\n<li>install emacs, vim and eclipse+pydev</li>\n<li>spend some time (&gt;3h) for learning and trying those environments</li>\n<li>decide what works best for you / or could work best for you (it takes a bit longer than 3h to get up to speed in emacs or vi)</li>\n<li>improve your environment every day</li>\n</ol>\n<p>I hope this helps to get you started. It is just a proposal,.. there are many ways to Rome...</p>\n", "abstract": "You should probably ask two different questions here, one regarding the PyQt tutorial and one about a better editor. Also both could be more precise (PyQt version, editor expectations and so on) However here's where you could start: PyQt4: Editor: I hope this helps to get you started. It is just a proposal,.. there are many ways to Rome..."}, {"id": 9319926, "score": 7, "vote": 0, "content": "<p><a href=\"http://zetcode.com/gui/pyqt4/\" rel=\"nofollow\"><strong>\"The PyQt4 tutorial\"</strong></a> by Jan Bodnar (<a href=\"http://zetcode.com/\" rel=\"nofollow\">ZetCode</a>)</p>\n", "abstract": "\"The PyQt4 tutorial\" by Jan Bodnar (ZetCode)"}, {"id": 9319936, "score": 3, "vote": 0, "content": "<p>This <a href=\"http://zetcode.com/gui/pyqt4/\" rel=\"nofollow\">tutorial</a> helped me very well.</p>\n<blockquote>\n<p>Currently I'm programming in Notepad++. Are there better lightweight\n  editors or simple IDEs for Python in combination with PyQt?</p>\n</blockquote>\n<p><a href=\"http://qt.nokia.com/products/developer-tools/\" rel=\"nofollow\">Qt creator</a> works fine with Python, you can also draw the interface with drag and drop..</p>\n", "abstract": "This tutorial helped me very well. Currently I'm programming in Notepad++. Are there better lightweight\n  editors or simple IDEs for Python in combination with PyQt? Qt creator works fine with Python, you can also draw the interface with drag and drop.."}, {"id": 9319937, "score": 2, "vote": 0, "content": "<p>As novalis mentions, the nokia api docs on Qt are great, but you were looking for tutorials on PyQt specifically.</p>\n<p>There's a quick list <a href=\"http://wiki.python.org/moin/PyQt\" rel=\"nofollow\">at the python.org page</a> which includes a few tutorial links.</p>\n<p>The <a href=\"http://zetcode.com/gui/pyqt4/\" rel=\"nofollow\">zetcode tutorial</a> also has some followers, but be a bit careful with the rather manual process of gui creation.</p>\n", "abstract": "As novalis mentions, the nokia api docs on Qt are great, but you were looking for tutorials on PyQt specifically. There's a quick list at the python.org page which includes a few tutorial links. The zetcode tutorial also has some followers, but be a bit careful with the rather manual process of gui creation."}, {"id": 9319895, "score": 1, "vote": 0, "content": "<p>The C++ docs for QT are actually a pretty good reference for PyQT.  Last time I used PyQT (&gt; 5 years ago), they were actually the best available reference.</p>\n", "abstract": "The C++ docs for QT are actually a pretty good reference for PyQT.  Last time I used PyQT (> 5 years ago), they were actually the best available reference."}]}, {"link": "https://stackoverflow.com/questions/15886455/simple-graphics-for-python", "question": {"id": "15886455", "title": "simple graphics for python", "content": "<p>I am making a simulation in python that needs visualization. I am looking for the most simple graphics library python has. Is there anything that can let me do something along the lines of:</p>\n<pre><code class=\"python\">setWindow(10,10)\nsetCube(0,0,1,1,1)#windowX, windowY, width, length, hight,\nupdateList = simUpdate\nfor update in updateList:\n    removeShape(0,0)\n    setCube(0,0,1,1,1)\n</code></pre>\n<p>Is there anything that simple? 3d is not a must but it would be nice.\nI'm working in python 3.3 and pygames hasn't been updated for that on a mac as far as I can tell. I've been working with tkinter but would like something a little easier.</p>\n", "abstract": "I am making a simulation in python that needs visualization. I am looking for the most simple graphics library python has. Is there anything that can let me do something along the lines of: Is there anything that simple? 3d is not a must but it would be nice.\nI'm working in python 3.3 and pygames hasn't been updated for that on a mac as far as I can tell. I've been working with tkinter but would like something a little easier."}, "answers": [{"id": 15886685, "score": 27, "vote": 0, "content": "<p>For simple graphics, you can use <a href=\"http://mcsp.wartburg.edu/zelle/python/graphics.py\" rel=\"noreferrer\"><code>graphics.py</code></a>.</p>\n<p>It's not included with Python, so you should save it as a Python file (preferably named <code>graphics.py</code>) where Python can see it --- on your <code>sys.path</code>.</p>\n<p><strong><em>Note:</em></strong> it is also available using <code>pip install graphics.py</code> <a href=\"https://pypi.org/project/graphics.py/\" rel=\"noreferrer\">see link</a></p>\n<p>It's very easy to learn and has various shapes already built-in. There are no native 3D graphics (none are in there) but it's easy to do so: for a cube, draw one square and another one to the side, and connect one corner of a square to the corresponding corner in the other square.</p>\n<p>Example using <code>graphics.py</code> to create a square:</p>\n<pre><code class=\"python\">from graphics import *\nwin = GraphWin(width = 200, height = 200) # create a window\nwin.setCoords(0, 0, 10, 10) # set the coordinates of the window; bottom left is (0, 0) and top right is (10, 10)\nmySquare = Rectangle(Point(1, 1), Point(9, 9)) # create a rectangle from (1, 1) to (9, 9)\nmySquare.draw(win) # draw it to the window\nwin.getMouse() # pause before closing\n</code></pre>\n", "abstract": "For simple graphics, you can use graphics.py. It's not included with Python, so you should save it as a Python file (preferably named graphics.py) where Python can see it --- on your sys.path. Note: it is also available using pip install graphics.py see link It's very easy to learn and has various shapes already built-in. There are no native 3D graphics (none are in there) but it's easy to do so: for a cube, draw one square and another one to the side, and connect one corner of a square to the corresponding corner in the other square. Example using graphics.py to create a square:"}, {"id": 15886855, "score": 6, "vote": 0, "content": "<p><code>pygame</code> <em>does</em> <a href=\"http://www.pygame.org/wiki/FrequentlyAskedQuestions#Does%20Pygame%20work%20with%20Python%203?\" rel=\"noreferrer\">work with 3.x</a>, and with Mac OS X. There are no binary installers for any recent Mac version, but that's not much of a loss, because the binary installers were never very good. You will basically have to follow the Unix install directions, and figure out for yourself how to install all the prereqs (if you use <a href=\"http://mxcl.github.io/homebrew/\" rel=\"noreferrer\">Homebrew</a> it's just <code>brew install sdl sdl_ttf \u2026 jpeg libpng</code>), then figure out how to tell the setup how to find all those prereqs. You may want to look at (or maybe even use) <a href=\"https://github.com/samueljohn/homebrew-python/blob/master/pygame.rb\" rel=\"noreferrer\">this recipe</a>, adapted to your own particular Python installation.</p>\n<p>As far as I know, the other major alternatives for 3D graphics are <a href=\"http://pyopengl.sourceforge.net/\" rel=\"noreferrer\"><code>PyOpenGL</code></a> and <a href=\"http://www.pyglet.org/\" rel=\"noreferrer\"><code>pyglet</code></a>. The former is a pretty direct wrapper around OpenGL, which is great if you think in GL terms. The latter is a higher-level library, somewhat similar to <code>pygame</code> but built directly on native OpenGL and native windows on each platform, instead of on SDL.</p>\n<p>You also might want to look at <a href=\"http://www.vrplumber.com/py3d.py\" rel=\"noreferrer\">Python 3D Software Collection</a>, which is maintained by the main author of <code>PyOpenGL</code>. I have no idea how up-to-date it is, but he's still linking to it from the <code>PyOpenGL</code> site and docs.</p>\n<p>If you're looking for something mathematically-oriented, you may want to look at <a href=\"http://matplotlib.org\" rel=\"noreferrer\"><code>matplotlib</code></a>, <a href=\"http://matplotlib.org/mpl_toolkits/mplot3d/index.html\" rel=\"noreferrer\"><code>mplot3d</code></a> and friends. If you're ultimately trying to graph complex geometric shapes and transform/intersect/etc. them, this is your friend. If you're trying to build a simple game or quasi-CAD program, it's not.</p>\n", "abstract": "pygame does work with 3.x, and with Mac OS X. There are no binary installers for any recent Mac version, but that's not much of a loss, because the binary installers were never very good. You will basically have to follow the Unix install directions, and figure out for yourself how to install all the prereqs (if you use Homebrew it's just brew install sdl sdl_ttf \u2026 jpeg libpng), then figure out how to tell the setup how to find all those prereqs. You may want to look at (or maybe even use) this recipe, adapted to your own particular Python installation. As far as I know, the other major alternatives for 3D graphics are PyOpenGL and pyglet. The former is a pretty direct wrapper around OpenGL, which is great if you think in GL terms. The latter is a higher-level library, somewhat similar to pygame but built directly on native OpenGL and native windows on each platform, instead of on SDL. You also might want to look at Python 3D Software Collection, which is maintained by the main author of PyOpenGL. I have no idea how up-to-date it is, but he's still linking to it from the PyOpenGL site and docs. If you're looking for something mathematically-oriented, you may want to look at matplotlib, mplot3d and friends. If you're ultimately trying to graph complex geometric shapes and transform/intersect/etc. them, this is your friend. If you're trying to build a simple game or quasi-CAD program, it's not."}, {"id": 15892107, "score": 4, "vote": 0, "content": "<p>Visual Python, from <a href=\"http://www.vpython.org\" rel=\"nofollow\">www.vpython.org</a></p>\n<p>Designed for people who aren't OpenGL hackers. It has a retained scene graph model rather than immediate, some built in controls, and there are quite a lot of scientific / engineering simulation examples floating around the Internet.</p>\n", "abstract": "Visual Python, from www.vpython.org Designed for people who aren't OpenGL hackers. It has a retained scene graph model rather than immediate, some built in controls, and there are quite a lot of scientific / engineering simulation examples floating around the Internet."}]}, {"link": "https://stackoverflow.com/questions/18522171/tkinter-window-says-not-responding-but-code-is-running", "question": {"id": "18522171", "title": "Tkinter window says (not responding) but code is running", "content": "<p>I have a program that runs a long process after you click an action button.  As the process is running the root window will say that it is not responding even though I know the program is running in the background.  This program is going to be released to a few people that I work with and I want to make sure they don't freak out and close the window when they see this.  The solution I have is sitting a root.update in the loop of the process that is running but I am not sure this was the best fix.</p>\n<p>Using the python 3.3 </p>\n<p>Here is a sample of the code so you get an idea of what I am doing, this is called from the main loop:</p>\n<pre><code class=\"python\">def combine(boxes_to, boxes_from, frame):\n        to_value,to_pos = gui.checkBoxes(boxes_to)\n        from_value,from_pos = gui.checkBoxes(boxes_from)\n        frame.destroy()\n\n        running = Label(root,text=\"Running please do not close..\",font = (16))\n        running.pack()\n        root.update()\n        map_to = open(\"map_to\",'r')\n        for line in map_to:\n            root.update()\n            process(line)\n\n\n        running.destroy()\n        map_to.close()\n        finish = Button(root, text=\"Done\",command=gui.stop)\n        finish.pack()\n</code></pre>\n", "abstract": "I have a program that runs a long process after you click an action button.  As the process is running the root window will say that it is not responding even though I know the program is running in the background.  This program is going to be released to a few people that I work with and I want to make sure they don't freak out and close the window when they see this.  The solution I have is sitting a root.update in the loop of the process that is running but I am not sure this was the best fix. Using the python 3.3  Here is a sample of the code so you get an idea of what I am doing, this is called from the main loop:"}, "answers": [{"id": 18522321, "score": 17, "vote": 0, "content": "<p>While you can call root.update() in your loop, this will still produce some (potentially) undesirable side-effects.</p>\n<ol>\n<li>The program may act laggy, meaning it takes a long time to respond to user input.</li>\n<li>You will only be able to run this one action.  Any other action has to wait for this to finish.</li>\n</ol>\n<p>As an alternative I would suggest that you implement simple multi-threading.  <a href=\"https://code.google.com/p/pyloadtools/wiki/CodeTutorialMultiThreading\" rel=\"noreferrer\">Python multithreading</a> is pretty simple, and will prevent both of these drawbacks.  You will be able to execute your long running code, while still providing a clean and responsive UI.</p>\n<p>If your application is trivially parallelizable, you could use multiple threads to decrease running time.  Ex. Thread 1 handles entries 1-100, while thread 2 handles entries 101-200.</p>\n", "abstract": "While you can call root.update() in your loop, this will still produce some (potentially) undesirable side-effects. As an alternative I would suggest that you implement simple multi-threading.  Python multithreading is pretty simple, and will prevent both of these drawbacks.  You will be able to execute your long running code, while still providing a clean and responsive UI. If your application is trivially parallelizable, you could use multiple threads to decrease running time.  Ex. Thread 1 handles entries 1-100, while thread 2 handles entries 101-200."}, {"id": 68897016, "score": 11, "vote": 0, "content": "<p>The best you can do here is to use multithreading in Python. Here's how to do this:</p>\n<p>Let's say you have a function named <code>combine()</code> due to which the window is freezing, which is being used as a command for a button named 'btn' as shown here:</p>\n<pre><code class=\"python\">btn = Button(root, text=\"Click Me\", command=combine)\n</code></pre>\n<p>Now, when <code>btn</code> is pressed you might be getting the 'not responding' problem. To fix this, edit the code as shown below:</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">import threading\nbtn = Button(root, text=\"Click Me\", command=threading.Thread(target=combine).start)\n</code></pre>\n<p>Here <code>threading.Thread</code> creates a separate thread in which the <code>combine()</code> method is executed, so the GUI can continue to keep responding while the command is being executed.</p>\n", "abstract": "The best you can do here is to use multithreading in Python. Here's how to do this: Let's say you have a function named combine() due to which the window is freezing, which is being used as a command for a button named 'btn' as shown here: Now, when btn is pressed you might be getting the 'not responding' problem. To fix this, edit the code as shown below: Here threading.Thread creates a separate thread in which the combine() method is executed, so the GUI can continue to keep responding while the command is being executed."}]}, {"link": "https://stackoverflow.com/questions/270648/tkinter-invoke-event-in-main-loop", "question": {"id": "270648", "title": "Tkinter: invoke event in main loop", "content": "<p>How do you invoke a tkinter <code>event</code> from a separate object?  </p>\n<p>I'm looking for something like wxWidgets <code>wx.CallAfter</code>.  For example, If I create an object, and pass to it my <code>Tk</code> root instance, and then try to call a method of that root window from my object, my app locks up.</p>\n<p>The best I can come up with is to use the the <code>after</code> method and check the status from my separate object, but that seems wasteful.</p>\n", "abstract": "How do you invoke a tkinter event from a separate object?   I'm looking for something like wxWidgets wx.CallAfter.  For example, If I create an object, and pass to it my Tk root instance, and then try to call a method of that root window from my object, my app locks up. The best I can come up with is to use the the after method and check the status from my separate object, but that seems wasteful."}, "answers": [{"id": 276069, "score": 37, "vote": 0, "content": "<p>To answer your specific question of \"How do you invoke a TkInter event from a separate object\", use the <code>event_generate</code> command. It allows you to inject events into the event queue of the root window. Combined with Tk's powerful virtual event mechanism it becomes a handy message passing mechanism. </p>\n<p>For example:</p>\n<pre><code class=\"python\">from tkinter import *\n\ndef doFoo(*args):\n    print(\"Hello, world\")\n\nroot = Tk()\nroot.bind(\"&lt;&lt;Foo&gt;&gt;\", doFoo)\n\n# some time later, inject the \"&lt;&lt;Foo&gt;&gt;\" virtual event at the\n# tail of the event queue\nroot.event_generate(\"&lt;&lt;Foo&gt;&gt;\", when=\"tail\")\n</code></pre>\n<p>Note that the <code>event_generate</code> call will return immediately. It's not clear if that's what you want or not. Generally speaking you don't want an event based program to block waiting for a response to a specific event because it will <em>freeze the GUI</em>. </p>\n<p>I'm not sure if this solves your problem though; without seeing your code I'm not sure what your real problem is. I can, for example, access methods of root in the constructor of an object where the root is passed in without the app locking up. This tells me there's something else going on in your code.</p>\n<p>Here's an example of successfully accessing methods on a root window from some other object:</p>\n<pre><code class=\"python\">from tkinter import *\n\nclass myClass:\n    def __init__(self, root):\n        print(\"root background is %s\" % root.cget(\"background\"))\n\nroot = Tk()\nnewObj = myClass(root)\n</code></pre>\n", "abstract": "To answer your specific question of \"How do you invoke a TkInter event from a separate object\", use the event_generate command. It allows you to inject events into the event queue of the root window. Combined with Tk's powerful virtual event mechanism it becomes a handy message passing mechanism.  For example: Note that the event_generate call will return immediately. It's not clear if that's what you want or not. Generally speaking you don't want an event based program to block waiting for a response to a specific event because it will freeze the GUI.  I'm not sure if this solves your problem though; without seeing your code I'm not sure what your real problem is. I can, for example, access methods of root in the constructor of an object where the root is passed in without the app locking up. This tells me there's something else going on in your code. Here's an example of successfully accessing methods on a root window from some other object:"}, {"id": 36778730, "score": 6, "vote": 0, "content": "<p>Here below just some doc and link to better understand Bryan's answer above.</p>\n<p>function description from <a href=\"https://web.archive.org/web/20190527174904/http://infohost.nmt.edu:80/tcc/help/pubs/tkinter/web/universal.html\" rel=\"nofollow noreferrer\">New Mexico Tech</a> :</p>\n<p><code>w.event_generate(sequence, **kw)</code></p>\n<blockquote>\n<p>This method causes an event to trigger without any external stimulus. The handling of the event is the same as if it had been triggered by an external stimulus. The sequence argument describes the event to be triggered. You can set values for selected fields in the Event object by providing keyword=value arguments, where the keyword specifies the name of a field in the Event object.</p>\n</blockquote>\n<p>list and description of tcl/tk event attributes <a href=\"https://www.tcl.tk/man/tcl/TkCmd/event.htm\" rel=\"nofollow noreferrer\">here</a></p>\n", "abstract": "Here below just some doc and link to better understand Bryan's answer above. function description from New Mexico Tech : w.event_generate(sequence, **kw) This method causes an event to trigger without any external stimulus. The handling of the event is the same as if it had been triggered by an external stimulus. The sequence argument describes the event to be triggered. You can set values for selected fields in the Event object by providing keyword=value arguments, where the keyword specifies the name of a field in the Event object. list and description of tcl/tk event attributes here"}]}, {"link": "https://stackoverflow.com/questions/68327/change-command-method-for-tkinter-button-in-python", "question": {"id": "68327", "title": "Change command Method for Tkinter Button in Python", "content": "<p>I create a new Button object but did not specify the <code>command</code> option upon creation. Is there a way in Tkinter to change the command (onclick) function after the object has been created?</p>\n", "abstract": "I create a new Button object but did not specify the command option upon creation. Is there a way in Tkinter to change the command (onclick) function after the object has been created?"}, "answers": [{"id": 68524, "score": 37, "vote": 0, "content": "<p>Though <a href=\"https://stackoverflow.com/questions/68327/change-command-method-for-tkinter-button-in-python#68455\">Eli Courtwright's</a> program will work fine\u00b9, what you really seem to want though is just a way to reconfigure after instantiation any attribute which you could have set when you instantiated\u00b2.  How you do so is by way of the configure() method.</p>\n<pre><code class=\"python\">from Tkinter import Tk, Button\n\ndef goodbye_world():\n    print \"Goodbye World!\\nWait, I changed my mind!\"\n    button.configure(text = \"Hello World!\", command=hello_world)\n\ndef hello_world():\n    print \"Hello World!\\nWait, I changed my mind!\"\n    button.configure(text = \"Goodbye World!\", command=goodbye_world)\n\nroot = Tk()\nbutton = Button(root, text=\"Hello World!\", command=hello_world)\nbutton.pack()\n\nroot.mainloop()\n</code></pre>\n<p>\u00b9 \"fine\" if you use only the mouse; if you care about tabbing and using [Space] or [Enter] on buttons, then you will have to implement (duplicating existing code) keypress events too. Setting the <code>command</code> option through <code>.configure</code> is much easier.</p>\n<p>\u00b2 the only attribute that can't change after instantiation is <code>name</code>.</p>\n", "abstract": "Though Eli Courtwright's program will work fine\u00b9, what you really seem to want though is just a way to reconfigure after instantiation any attribute which you could have set when you instantiated\u00b2.  How you do so is by way of the configure() method. \u00b9 \"fine\" if you use only the mouse; if you care about tabbing and using [Space] or [Enter] on buttons, then you will have to implement (duplicating existing code) keypress events too. Setting the command option through .configure is much easier. \u00b2 the only attribute that can't change after instantiation is name."}, {"id": 68455, "score": 2, "vote": 0, "content": "<p>Sure; just use the <code>bind</code> method to specify the callback after the button has been created.  I've just written and tested the example below.  You can find a nice tutorial on doing this at <a href=\"http://www.pythonware.com/library/tkinter/introduction/events-and-bindings.htm\" rel=\"nofollow noreferrer\">http://www.pythonware.com/library/tkinter/introduction/events-and-bindings.htm</a></p>\n<pre><code class=\"python\">from Tkinter import Tk, Button\n\nroot = Tk()\nbutton = Button(root, text=\"Click Me!\")\nbutton.pack()\n\ndef callback(event):\n    print \"Hello World!\"\n\nbutton.bind(\"&lt;Button-1&gt;\", callback)\nroot.mainloop()\n</code></pre>\n", "abstract": "Sure; just use the bind method to specify the callback after the button has been created.  I've just written and tested the example below.  You can find a nice tutorial on doing this at http://www.pythonware.com/library/tkinter/introduction/events-and-bindings.htm"}]}, {"link": "https://stackoverflow.com/questions/2361328/is-tkinter-worth-learning", "question": {"id": "2361328", "title": "Is Tkinter worth learning?", "content": "<p>I generally make my desktop interfaces with <a href=\"http://www.pyside.org/\" rel=\"nofollow noreferrer\">Qt</a>, but some recent TK screenshots convince me Tk isn't just ugly motif any more.\nAdditionally <a href=\"http://docs.python.org/library/tkinter.html\" rel=\"nofollow noreferrer\">Tkinter</a> comes bundled with Python, which makes distribution easier. </p>\n<p>So is it worth learning or should I stick with Qt?</p>\n<p><a href=\"https://i.stack.imgur.com/yN8ez.gif\" rel=\"nofollow noreferrer\"><img alt=\"example tk interface\" src=\"https://i.stack.imgur.com/yN8ez.gif\"/></a><br/>\n<sub>(source: <a href=\"http://www.kb-creative.net/screenshots/ipats-multifile.gif\" rel=\"nofollow noreferrer\">kb-creative.net</a>)</sub> </p>\n", "abstract": "I generally make my desktop interfaces with Qt, but some recent TK screenshots convince me Tk isn't just ugly motif any more.\nAdditionally Tkinter comes bundled with Python, which makes distribution easier.  So is it worth learning or should I stick with Qt? \n(source: kb-creative.net) "}, "answers": [{"id": 2361397, "score": 24, "vote": 0, "content": "<p>The answer to your question is a resounding <strong>yes</strong>.</p>\n<p>Qt is good, I have nothing against it. But Tk is better and far easier to use and quite <a href=\"http://wiki.python.org/moin/TkInter\" rel=\"noreferrer\">well documented</a> - not just on the Python webspace, but there are also many third-party tutorials out there. <a href=\"http://www.pythonware.com/library/tkinter/introduction/\" rel=\"noreferrer\">This</a> particular one is where I learned it from and it has been quite infallible in serving me. </p>\n", "abstract": "The answer to your question is a resounding yes. Qt is good, I have nothing against it. But Tk is better and far easier to use and quite well documented - not just on the Python webspace, but there are also many third-party tutorials out there. This particular one is where I learned it from and it has been quite infallible in serving me. "}, {"id": 2361336, "score": 4, "vote": 0, "content": "<p>As a step up to other GUI toolkits, sure. If you know other toolkits then you already understand TkInter and can leave it until you actually need it.</p>\n", "abstract": "As a step up to other GUI toolkits, sure. If you know other toolkits then you already understand TkInter and can leave it until you actually need it."}, {"id": 2361461, "score": 4, "vote": 0, "content": "<p>You might want to take a look at <a href=\"http://www.wxpython.org/quotes.php\" rel=\"nofollow noreferrer\">this(wxPython)</a>.</p>\n<blockquote>\n<p>wxPython is the best and most mature cross-platform GUI toolkit, given a number of constraints. The only reason wxPython isn't the standard Python GUI toolkit is that Tkinter was there first.\n  -- Guido van Rossum</p>\n</blockquote>\n", "abstract": "You might want to take a look at this(wxPython). wxPython is the best and most mature cross-platform GUI toolkit, given a number of constraints. The only reason wxPython isn't the standard Python GUI toolkit is that Tkinter was there first.\n  -- Guido van Rossum"}, {"id": 2362243, "score": 2, "vote": 0, "content": "<p>Why not go for <a href=\"http://www.riverbankcomputing.co.uk/software/pyqt/intro\" rel=\"nofollow noreferrer\">PyQT</a>? You apparently are already familiar with Qt, so it should be relatively easy to learn. In my opinion it looks better than Tkinter, and it sure is better documented.</p>\n", "abstract": "Why not go for PyQT? You apparently are already familiar with Qt, so it should be relatively easy to learn. In my opinion it looks better than Tkinter, and it sure is better documented."}, {"id": 2362287, "score": 0, "vote": 0, "content": "<p>I used Qt with C++, but decided to have a go with Tkinter with Python. I had a bit of trouble installing the latest version of Tcl/Tk, but got there eventually. I did it all with the help of <a href=\"http://www.tkdocs.com/tutorial/\" rel=\"nofollow noreferrer\">this tkdocs.com tutorial</a>, which is great.</p>\n", "abstract": "I used Qt with C++, but decided to have a go with Tkinter with Python. I had a bit of trouble installing the latest version of Tcl/Tk, but got there eventually. I did it all with the help of this tkdocs.com tutorial, which is great."}]}, {"link": "https://stackoverflow.com/questions/35922/are-there-any-nice-to-program-gui-toolkits-for-python", "question": {"id": "35922", "title": "Are there any &quot;nice to program&quot; GUI toolkits for Python?", "content": "<p>I've played around with GTK, TK, wxPython, Cocoa, curses and others. They are are fairly horrible to use.. GTK/TK/wx/curses all seem to basically be direct-ports of the appropriate C libraries, and Cocoa basically mandates using both PyObjC and Interface Builder, both of which I dislike..</p>\n<p>The Shoes GUI library for Ruby is great.. It's very sensibly designed, and very \"rubyish\", and borrows some nice-to-use things from web development (like using hex colours codes, or <code>:color =&gt; rgb(128,0,0)</code>)</p>\n<p>As the title says: are there any nice, \"Pythonic\" GUI toolkits?</p>\n", "abstract": "I've played around with GTK, TK, wxPython, Cocoa, curses and others. They are are fairly horrible to use.. GTK/TK/wx/curses all seem to basically be direct-ports of the appropriate C libraries, and Cocoa basically mandates using both PyObjC and Interface Builder, both of which I dislike.. The Shoes GUI library for Ruby is great.. It's very sensibly designed, and very \"rubyish\", and borrows some nice-to-use things from web development (like using hex colours codes, or :color => rgb(128,0,0)) As the title says: are there any nice, \"Pythonic\" GUI toolkits?"}, "answers": [{"id": 35935, "score": 14, "vote": 0, "content": "<p>Have you looked at <a href=\"http://qt.io\" rel=\"nofollow noreferrer\">Qt</a>/<a href=\"http://www.riverbankcomputing.co.uk/software/pyqt/intro\" rel=\"nofollow noreferrer\">PyQt</a>? Although PyQt <em>is</em> a direct port from the C++ library, I find it much more pythonic and nice to program with compared to the others you listed. It also has very good documentation.</p>\n<p><a href=\"http://dabodev.com/\" rel=\"nofollow noreferrer\">Dabo</a> has a nice ui library implemented on top of wxPython. It's a framework intended mostly for database-centric applications, but the ui library can be used separately. </p>\n<p>There are/were several other attempts to create a very pythonic gui as a layer on top of PyGtk or wxPython, such as <a href=\"http://wiki.wxpython.org/Wax\" rel=\"nofollow noreferrer\">wax</a> and <a href=\"http://www.cosc.canterbury.ac.nz/greg.ewing/python_gui/\" rel=\"nofollow noreferrer\">PyGui</a>, which seem to be \"stuck\" at various degrees of being complete.</p>\n<p>Also, an exhaustive list of Python GUI toolkits can be found <a href=\"http://wiki.python.org/moin/GuiProgramming\" rel=\"nofollow noreferrer\">here</a>.</p>\n", "abstract": "Have you looked at Qt/PyQt? Although PyQt is a direct port from the C++ library, I find it much more pythonic and nice to program with compared to the others you listed. It also has very good documentation. Dabo has a nice ui library implemented on top of wxPython. It's a framework intended mostly for database-centric applications, but the ui library can be used separately.  There are/were several other attempts to create a very pythonic gui as a layer on top of PyGtk or wxPython, such as wax and PyGui, which seem to be \"stuck\" at various degrees of being complete. Also, an exhaustive list of Python GUI toolkits can be found here."}, {"id": 106696, "score": 14, "vote": 0, "content": "<p>Please check out Dabo, our framework for desktop applications. <a href=\"http://dabodev.com\" rel=\"noreferrer\">http://dabodev.com</a></p>\n<p>We have wrapped the wxPython toolkit for the UI classes, and replaced their ugly C++ style functions with simple properties. You mentioned assigning color: in Dabo, you would do it very simply, using your choice of:</p>\n<pre><code class=\"python\">obj.BackColor = \"red\"\nobj.BackColor = (255, 0, 0)\nobj.BackColor = \"FF0000\"\nobj.BackColor = \"#FF0000\"\n</code></pre>\n<p>Dabo understands all of these, and handles the differences for you automatically.</p>\n<p>I am one of the authors of Dabo, and would be happy to answer any other questions that you may have.</p>\n<p>--- Ed Leafe</p>\n", "abstract": "Please check out Dabo, our framework for desktop applications. http://dabodev.com We have wrapped the wxPython toolkit for the UI classes, and replaced their ugly C++ style functions with simple properties. You mentioned assigning color: in Dabo, you would do it very simply, using your choice of: Dabo understands all of these, and handles the differences for you automatically. I am one of the authors of Dabo, and would be happy to answer any other questions that you may have. --- Ed Leafe"}, {"id": 35938, "score": 2, "vote": 0, "content": "<p>Seconding <a href=\"http://www.riverbankcomputing.co.uk/software/pyqt/intro\" rel=\"nofollow noreferrer\">PyQt</a>. Coupled with the book <a href=\"http://www.qtrac.eu/pyqtbook.html\" rel=\"nofollow noreferrer\">Rapid GUI Programming with Python and Qt</a>, it's really easy to learn.</p>\n", "abstract": "Seconding PyQt. Coupled with the book Rapid GUI Programming with Python and Qt, it's really easy to learn."}, {"id": 35926, "score": 1, "vote": 0, "content": "<p>I've used <a href=\"http://glade.gnome.org/\" rel=\"nofollow noreferrer\">Glade</a> with some success, though I didn't manage to wrap my head around creating anything really complex.  It has a nice GUI builder and stores the forms as xml files that are loaded dynamically.  Kind of like XAML afiak.</p>\n", "abstract": "I've used Glade with some success, though I didn't manage to wrap my head around creating anything really complex.  It has a nice GUI builder and stores the forms as xml files that are loaded dynamically.  Kind of like XAML afiak."}, {"id": 36761, "score": 1, "vote": 0, "content": "<p>I use pyGtk. I think wxPython is nice but it's too limited, and PyQt is, well, Qt. =)</p>\n", "abstract": "I use pyGtk. I think wxPython is nice but it's too limited, and PyQt is, well, Qt. =)"}]}, {"link": "https://stackoverflow.com/questions/24644339/python-tkinter-resize-widgets-evenly-in-a-window", "question": {"id": "24644339", "title": "Python Tkinter - resize widgets evenly in a window", "content": "<p>I have a small test Python app as I am learning both Python and Tkinter and I am trying to figure out how to evenly resize a grid of labels in a window.  I would like to make a large grid of different colored squares so I'm using labels with a background color set to make the squares.  I would like to resize the squares automatically when the user expands the window out and then have them resize and scale down to all be the same size as the window is decreased in size.</p>\n<p>Something like this:</p>\n<p><img alt='Default \"square\" size. Opens up at this size by default.' src=\"https://i.stack.imgur.com/m10lA.jpg\"/></p>\n<p>That resizes and scales evenly like this:</p>\n<p><img alt=\"Size when the window is expanded in size.\" src=\"https://i.stack.imgur.com/eSYrE.jpg\"/></p>\n<p>In other words: each label should all scale uniformly as the window scales.  I'm not even sure if I'm using the correct terms with \"window\" and \"widget\".  But I'm placing labels on a gui.</p>\n<p>Test code I'm using to try to get this to work:</p>\n<pre><code class=\"python\">    import Tkinter\n\nclass simpleapp_tk(Tkinter.Tk):\n    def __init__(self,parent):\n        Tkinter.Tk.__init__(self,parent)\n        self.parent = parent\n        self.initialize()\n\n    def initialize(self):\n        self.grid()\n\n        label = Tkinter.Label(self,anchor=\"center\",bg=\"green\")\n        label.grid(column=0,row=0,sticky='EW')\n\n        label2 = Tkinter.Label(self,anchor=\"center\",bg=\"black\")\n        label2.grid(column=1,row=0,sticky='EW')\n\n        label3 = Tkinter.Label(self,anchor=\"center\",bg=\"red\")\n        label3.grid(column=2,row=0,sticky='EW')\n\n        label4 = Tkinter.Label(self,anchor=\"center\",bg=\"purple\")\n        label4.grid(column=0,row=1,sticky='EW')\n\n        label5 = Tkinter.Label(self,anchor=\"center\",bg=\"blue\")\n        label5.grid(column=1,row=1,sticky='EW')\n\n        label6 = Tkinter.Label(self,anchor=\"center\",bg=\"yellow\")\n        label6.grid(column=2,row=1,sticky='EW')\n\n\n        self.grid_columnconfigure(0,weight=0)\n\nif __name__ == \"__main__\":\n    app = simpleapp_tk(None)\n    app.title(\"Test App\")\n    app.mainloop()\n</code></pre>\n", "abstract": "I have a small test Python app as I am learning both Python and Tkinter and I am trying to figure out how to evenly resize a grid of labels in a window.  I would like to make a large grid of different colored squares so I'm using labels with a background color set to make the squares.  I would like to resize the squares automatically when the user expands the window out and then have them resize and scale down to all be the same size as the window is decreased in size. Something like this:  That resizes and scales evenly like this:  In other words: each label should all scale uniformly as the window scales.  I'm not even sure if I'm using the correct terms with \"window\" and \"widget\".  But I'm placing labels on a gui. Test code I'm using to try to get this to work:"}, "answers": [{"id": 24654428, "score": 19, "vote": 0, "content": "<p>Give all rows and columns the same non-zero weight. </p>\n<p>For example:</p>\n<pre><code class=\"python\">self.grid_columnconfigure(0,weight=1)\nself.grid_columnconfigure(1,weight=1)\nself.grid_columnconfigure(2,weight=1)\nself.grid_rowconfigure(0,weight=1)\nself.grid_rowconfigure(1,weight=1)\n</code></pre>\n", "abstract": "Give all rows and columns the same non-zero weight.  For example:"}, {"id": 30908374, "score": 11, "vote": 0, "content": "<p>Completing the <a href=\"https://stackoverflow.com/a/24654428/4919040\">answer</a> provided by <a href=\"https://stackoverflow.com/users/7432/bryan-oakley\">Bryan Oakley</a>, the code for solving it in python 3 is the following.</p>\n<p>Note that one option to manage the proportion for which the window resizes is setting the weight parameters for functions <code>grid_columnconfigure(1,weight=1)</code> and <code>grid_rowconfigure(1,weight=1)</code> to different values.</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">import tkinter\n\nclass simpleapp_tk(tkinter.Tk):\n    def __init__(self,parent):\n        tkinter.Tk.__init__(self,parent)\n        self.parent = parent\n        self.initialize()\n\n    def initialize(self):\n        self.grid()\n\n        label = tkinter.Label(self,anchor=\"center\",bg=\"green\")\n        label.grid(column=0,row=0,sticky='NSEW')\n\n        label2 = tkinter.Label(self,anchor=\"center\",bg=\"black\")\n        label2.grid(column=1,row=0,sticky='NSEW')\n\n        label3 = tkinter.Label(self,anchor=\"center\",bg=\"red\")\n        label3.grid(column=2,row=0,sticky='NSEW')\n\n        label4 = tkinter.Label(self,anchor=\"center\",bg=\"purple\")\n        label4.grid(column=0,row=1,sticky='NSEW')\n\n        label5 = tkinter.Label(self,anchor=\"center\",bg=\"blue\")\n        label5.grid(column=1,row=1,sticky='NSEW')\n\n        label6 = tkinter.Label(self,anchor=\"center\",bg=\"yellow\")\n        label6.grid(column=2,row=1,sticky='NSEW')\n\n\n        self.grid_columnconfigure(0,weight=1)\n        self.grid_columnconfigure(1,weight=1)\n        self.grid_columnconfigure(2,weight=1)\n        self.grid_rowconfigure(0,weight=1)\n        self.grid_rowconfigure(1,weight=1)\n\n\nif __name__ == \"__main__\":\n    app = simpleapp_tk(None)\n    app.title(\"Test App\")\n    app.mainloop()\n</code></pre>\n", "abstract": "Completing the answer provided by Bryan Oakley, the code for solving it in python 3 is the following. Note that one option to manage the proportion for which the window resizes is setting the weight parameters for functions grid_columnconfigure(1,weight=1) and grid_rowconfigure(1,weight=1) to different values."}]}, {"link": "https://stackoverflow.com/questions/14892713/how-do-you-load-ui-files-onto-python-classes-with-pyside", "question": {"id": "14892713", "title": "How do you load .ui files onto python classes with PySide?", "content": "<p>I've used PyQt for quite a while, and the entire time I've used it, there has been a pretty consistent programming pattern.</p>\n<ol>\n<li>Use Qt Designer to create a .ui file.</li>\n<li>Create a python class of the same type as the widget you created in the .ui file.</li>\n<li>When initializing the python class, use uic to dynamically load the .ui file onto the class.</li>\n</ol>\n<p>Is there any way to do something similar in PySide?  I've read through the documentation and examples and the closest thing I could find was a calculator example that pre-rendered the .ui file out to python code, which is the super old way of doing it in PyQt (why bake it to python when you can just parse the ui?)</p>\n", "abstract": "I've used PyQt for quite a while, and the entire time I've used it, there has been a pretty consistent programming pattern. Is there any way to do something similar in PySide?  I've read through the documentation and examples and the closest thing I could find was a calculator example that pre-rendered the .ui file out to python code, which is the super old way of doing it in PyQt (why bake it to python when you can just parse the ui?)"}, "answers": [{"id": 14894550, "score": 28, "vote": 0, "content": "<p>I'm doing exactly that with PySide. :)</p>\n<p>You use this <a href=\"https://gist.github.com/cpbotha/1b42a20c8f3eb9bb7cb8\" rel=\"noreferrer\">https://gist.github.com/cpbotha/1b42a20c8f3eb9bb7cb8</a> (original by Sebastian Wiesner was at <a href=\"https://github.com/lunaryorn/snippets/blob/master/qt4/designer/pyside_dynamic.py\" rel=\"noreferrer\">https://github.com/lunaryorn/snippets/blob/master/qt4/designer/pyside_dynamic.py</a> but has disappeared) - which overrides PySide.QtUiTools.QUiLoader and supplies a new <code>loadUi()</code> method so that you can do this:</p>\n<pre><code class=\"python\">class MyMainWindow(QMainWindow):\n    def __init__(self, parent=None):\n        QMainWindow.__init__(self, parent)\n        loadUi('mainwindow.ui', self)\n</code></pre>\n<p>When you instantiate MyMainWindow, it will have the UI that you designed with the Qt Designer.</p>\n<p>If you also need to use custom widgets (\"Promote To\" in Qt Designer), see this answer: <a href=\"https://stackoverflow.com/a/14877624/532513\">https://stackoverflow.com/a/14877624/532513</a></p>\n", "abstract": "I'm doing exactly that with PySide. :) You use this https://gist.github.com/cpbotha/1b42a20c8f3eb9bb7cb8 (original by Sebastian Wiesner was at https://github.com/lunaryorn/snippets/blob/master/qt4/designer/pyside_dynamic.py but has disappeared) - which overrides PySide.QtUiTools.QUiLoader and supplies a new loadUi() method so that you can do this: When you instantiate MyMainWindow, it will have the UI that you designed with the Qt Designer. If you also need to use custom widgets (\"Promote To\" in Qt Designer), see this answer: https://stackoverflow.com/a/14877624/532513"}]}, {"link": "https://stackoverflow.com/questions/61506470/is-it-possible-to-have-a-red-squiggly-line-appear-under-words-in-a-tkinter-text", "question": {"id": "61506470", "title": "Is it possible to have a red squiggly line appear under words in a Tkinter text widget without using canvas? (Like for misspelled words)", "content": "<p>As per the question title: Is it possible to have a red squiggly line appear under words in a Tkinter text widget without using a canvas widget? (The same squiggle as when you misspell a word)</p>\n<p>I'm going for something like this:</p>\n<p><a href=\"https://i.stack.imgur.com/4Dd6r.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/4Dd6r.png\"/></a></p>\n<p>If so where would I start?</p>\n", "abstract": "As per the question title: Is it possible to have a red squiggly line appear under words in a Tkinter text widget without using a canvas widget? (The same squiggle as when you misspell a word) I'm going for something like this:  If so where would I start?"}, "answers": [{"id": 61604625, "score": 18, "vote": 0, "content": "<p>This is just an example of using user-defined XBM as the <code>bgstipple</code> of part of the text inside a <code>Text</code> widget to simulate the squiggly line effect:</p>\n<ul>\n<li>create a XBM image, for example <code>squiggly.xbm</code>, like below:</li>\n</ul>\n<p><a href=\"https://i.stack.imgur.com/FSkk1.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/FSkk1.png\"/></a></p>\n<p>A XBM with 10x20 pixels</p>\n<ul>\n<li>then you can config a tag in <code>Text</code> widget using the above XBM image file as <code>bgstipple</code> in red color:</li>\n</ul>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\"># config a tag with squiggly.xbm as bgstipple in red color\ntextbox.tag_config(\"squiggly\", bgstipple=\"@squiggly.xbm\", background='red')\n</code></pre>\n<ul>\n<li>and apply the tag to the portion of text inside <code>Text</code> widget:</li>\n</ul>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">textbox.insert(\"end\", \"hello\", \"squiggly\") # add squiggly line\n</code></pre>\n<p>Below is a sample code:</p>\n<pre><code class=\"python\">import tkinter as tk\n\nroot = tk.Tk()\n\ntextbox = tk.Text(root, width=30, height=10, font=('Courier New',12), spacing1=1)\ntextbox.pack()\n\n# config a tag with squiggly.xbm as bgstipple in red color\ntextbox.tag_config(\"squiggly\", bgstipple=\"@squiggly.xbm\", background='red')\ntextbox.insert(\"end\", \"hello\", \"squiggly\") # add squiggly line\ntextbox.insert(\"end\", \" world! \")\ntextbox.insert(\"end\", \"Python\", \"squiggly\") # add squiggly line\ntextbox.insert(\"end\", \"\\nthis is second line\")\n\nroot.mainloop()\n</code></pre>\n<p>And the output:</p>\n<p><a href=\"https://i.stack.imgur.com/xjv18.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/xjv18.png\"/></a><a href=\"https://i.stack.imgur.com/LuWmQ.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/LuWmQ.png\"/></a></p>\n<p><em>Note that the height of the XBM image need to match the font size and spacing between lines.</em></p>\n", "abstract": "This is just an example of using user-defined XBM as the bgstipple of part of the text inside a Text widget to simulate the squiggly line effect:  A XBM with 10x20 pixels Below is a sample code: And the output:  Note that the height of the XBM image need to match the font size and spacing between lines."}, {"id": 61555087, "score": 8, "vote": 0, "content": "<p>I customized a frame,its layout(just an idea,it needs improvement):</p>\n<p><a href=\"https://i.stack.imgur.com/YJdSz.png\" rel=\"noreferrer\"><img alt=\"\" src=\"https://i.stack.imgur.com/YJdSz.png\"/></a></p>\n<p>When user input \"Enter\",it will generate a new entry and a new label(squiggly line widget).</p>\n<p>If user type \"Backspace\" and this entry is null,it will delete both this entry and label(squiggly line widget).</p>\n<p>When user type \"Up\" arrow,it will make previous entry widget focused.</p>\n<p>....</p>\n<p>Code:</p>\n<pre><code class=\"python\">import tkinter\n\nclass CustomText(tkinter.Frame):\n    def __init__(self,master):\n        super(CustomText,self).__init__()\n        self.last_line = 0\n        self.index_line = 0\n        self.master = master\n        self['background'] = 'white'\n        self.check_func = self.master.register(self.check)\n\n        first_line = tkinter.Entry(self,font=(\"\",16),relief=\"flat\",validate=\"key\",validatecommand=(self.check_func,'%W','%P'))\n        first_line.pack(fill=\"x\")\n        first_underline = tkinter.Label(self,background=\"white\",fg=\"red\",font=(\"\",4))\n        first_underline.pack(anchor=\"nw\")\n        self.widget_dict = {\n            first_line:first_underline # a dict which save the squiggly line widget(as a value) and entry widget(as a key)\n        }\n        # bind event:\n        first_line.bind(\"&lt;Return&gt;\",self.create_new_line)\n        first_line.bind(\"&lt;Up&gt;\",self.to_previous_line)\n        first_line.bind(\"&lt;Down&gt;\",self.to_next_line)\n        first_line.bind(\"&lt;FocusIn&gt;\",self.focused)\n\n    def focused(self,event): # when one entry widget is focused,change the index_line number\n        self.index_line = list(self.widget_dict.keys()).index(event.widget)\n\n    def create_new_line(self,event): # when user input enter,generate an entry and a label\n        self.index_line += 1\n        self.last_line += 1\n\n        new_line = tkinter.Entry(self,font=(\"\",14),relief=\"flat\",validate=\"key\",validatecommand=(self.check_func,'%W','%P'))\n        new_line.pack(fill='x')\n        new_underline = tkinter.Label(self, background=\"white\", fg=\"red\", font=(\"\", 4))\n        new_underline.pack(anchor=\"nw\")\n\n        # also bind an event\n        new_line.bind(\"&lt;Return&gt;\", self.create_new_line)\n        new_line.bind(\"&lt;Up&gt;\",self.to_previous_line)\n        new_line.bind(\"&lt;Down&gt;\",self.to_next_line)\n        new_line.bind(\"&lt;FocusIn&gt;\",self.focused)\n\n        # the difference between the first line:when user delete all the words in this widget and he input \"backspace\" again, it will delete the entry and label widget,\n        new_line.bind(\"&lt;BackSpace&gt;\",self.delete_this_line)\n\n        new_line.focus_set()\n        self.widget_dict[new_line] = new_underline\n\n    def to_next_line(self,event): # when user type \"Down\",go to the previous line\n        if self.index_line != self.last_line:\n            self.index_line += 1\n            to_widget = tuple(self.widget_dict.keys())[self.index_line]\n            to_widget.focus_set()\n            if event: # to the same index of next entry widget.\n                to_widget.icursor(event.widget.index(\"insert\"))\n\n    def to_previous_line(self,event): # when user type \"Up\",go to the previous line\n        if self.index_line:\n            self.index_line -= 1 # the number of index minus 1\n            to_widget = tuple(self.widget_dict.keys())[self.index_line]\n            to_widget.focus_set()\n            if event: \n                to_widget.icursor(event.widget.index(\"insert\"))\n\n    def delete_this_line(self,event):\n        if not event.widget.get():\n            self.last_line -= 1\n            self.widget_dict[event.widget].destroy() # delete it in visual\n            del self.widget_dict[event.widget] # delete reference in the self.widget_dict\n            event.widget.destroy()\n            del event.widget\n            self.to_previous_line(None)\n\n\n    def check(self,widget_str,input_str): # this is an error-check function\n        widget = self.nametowidget(widget_str) # convert the widgetname to a widget object\n\n        # an example\n        error_str = \"abc\"\n        if input_str == error_str: # now is to check the grammar\n            underline_widget = self.widget_dict[widget]\n            underline_widget['text'] = \"\u301c\"*len(error_str)*2 # add a squiggly line visually\n        return True\n\nroot = tkinter.Tk()\nt = CustomText(root)\nt.pack()\n\nroot.mainloop()\n</code></pre>\n<p>Example image(show the squiggly line when user input \"abc\"):</p>\n<p><a href=\"https://i.stack.imgur.com/fxYqL.png\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/fxYqL.png\"/></a></p>\n<hr/>\n<p>What needs to be improved:</p>\n<ol>\n<li>the line-height of label(squiggly line) should be smaller.(To make the squiggly line and entry widget closer)</li>\n<li>Actually,the label(squiggly line) could be image.(In my example,one character == two \"~\" characters)</li>\n<li>the function of checking.</li>\n<li>you could add two scrollbars.</li>\n</ol>\n", "abstract": "I customized a frame,its layout(just an idea,it needs improvement):  When user input \"Enter\",it will generate a new entry and a new label(squiggly line widget). If user type \"Backspace\" and this entry is null,it will delete both this entry and label(squiggly line widget). When user type \"Up\" arrow,it will make previous entry widget focused. .... Code: Example image(show the squiggly line when user input \"abc\"):  What needs to be improved:"}]}, {"link": "https://stackoverflow.com/questions/812911/how-to-debug-wxpython-applications", "question": {"id": "812911", "title": "How to debug wxpython applications?", "content": "<p>I'm trying wxpython for the first time. I've wrote a GUI for a python program and when I run it, it produces some error in the GUI, but the GUI disappears very quickly, quickly enough for me to be unable to read the error info.</p>\n<p>Is there any log that I can check for the error message? (I'm running Mac OS X) or any other way?</p>\n<p>Thanks in advance for any help.</p>\n<p>Update: Here's the code that's giving me the problem...</p>\n<pre><code class=\"python\">#!/usr/bin/python\n\nimport wx\n\nclass MyApp (wx.Frame):\n    def __init__(self, parent, id, title):\n        wx.Frame.__init__(self, parent, id, title, size=(390, 350))\n    menubar = wx.MenuBar()\n    help = wx.Menu()\n    help.Append(ID_ABOUT, '&amp;About')\n    self.Bind(wx.EVT_MENU, self.OnAboutBox, id=wx.ID_ABOUT)\n    menubar.Append(help, '&amp;Help')\n    self.SetMenuBar(menubar)\n\n    self.Centre()\n    self.Show(True)\n\n    panel = wx.Panel(self, -1)\n\n    font = wx.SystemSettings_GetFont(wx.SYS_SYSTEM_FONT)\n    font.SetPointSize(9)\n\n    vbox = wx.BoxSizer(wx.VERTICAL)\n\n    hbox1 = wx.BoxSizer(wx.HORIZONTAL)\n    st1 = wx.StaticText(panel, -1, 'Class Name')\n    st1.SetFont(font)\n    hbox1.Add(st1, 0, wx.RIGHT, 8)\n    tc = wx.TextCtrl(panel, -1)\n    hbox1.Add(tc, 1)\n    vbox.Add(hbox1, 0, wx.EXPAND | wx.LEFT | wx.RIGHT | wx.TOP, 10)\n\n    vbox.Add((-1, 10))\n\n    hbox2 = wx.BoxSizer(wx.HORIZONTAL)\n    st2 = wx.StaticText(panel, -1, 'Matching Classes')\n    st2.SetFont(font)\n    hbox2.Add(st2, 0)\n    vbox.Add(hbox2, 0, wx.LEFT | wx.TOP, 10)\n\n    vbox.Add((-1, 10))\n\n    hbox3 = wx.BoxSizer(wx.HORIZONTAL)\n    tc2 = wx.TextCtrl(panel, -1, style=wx.TE_MULTILINE)\n    hbox3.Add(tc2, 1, wx.EXPAND)\n    vbox.Add(hbox3, 1, wx.LEFT | wx.RIGHT | wx.EXPAND, 10)\n\n    vbox.Add((-1, 25))\n\n    hbox4 = wx.BoxSizer(wx.HORIZONTAL)\n    cb1 = wx.CheckBox(panel, -1, 'Case Sensitive')\n    cb1.SetFont(font)\n    hbox4.Add(cb1)\n    cb2 = wx.CheckBox(panel, -1, 'Nested Classes')\n    cb2.SetFont(font)\n    hbox4.Add(cb2, 0, wx.LEFT, 10)\n    cb3 = wx.CheckBox(panel, -1, 'Non-Project classes')\n    cb3.SetFont(font)\n    hbox4.Add(cb3, 0, wx.LEFT, 10)\n    vbox.Add(hbox4, 0, wx.LEFT, 10)\n\n    vbox.Add((-1, 25))\n\n    hbox5 = wx.BoxSizer(wx.HORIZONTAL)\n    btn1 = wx.Button(panel, -1, 'Ok', size=(70, 30))\n    hbox5.Add(btn1, 0)\n    btn2 = wx.Button(panel, -1, 'Close', size=(70, 30))\n    hbox5.Add(btn2, 0, wx.LEFT | wx.BOTTOM , 5)\n    vbox.Add(hbox5, 0, wx.ALIGN_RIGHT | wx.RIGHT, 10)\n\n    panel.SetSizer(vbox)\n    self.Centre()\n    self.Show(True)\n\n    def OnAboutBox(self, event):\n        description = \"\"\" describe my app here \"\"\"\n\n        licence = \"\"\" blablabla \"\"\"\n\n\n        info = wx.AboutDialogInfo()\n\n        info.SetIcon(wx.Icon('icons/icon.png', wx.BITMAP_TYPE_PNG))\n        info.SetName('')\n        info.SetVersion('1.0')\n        info.SetDescription(description)\n        info.SetCopyright('')\n        info.SetWebSite('')\n        info.SetLicence(licence)\n        info.AddDeveloper('')\n        info.AddDocWriter('')\n        info.AddArtist('')\n        info.AddTranslator('')\n\n        wx.AboutBox(info) \n\napp = wx.App()\nMyApp (None, -1, 'Go To Class')\napp.MainLoop()\n</code></pre>\n", "abstract": "I'm trying wxpython for the first time. I've wrote a GUI for a python program and when I run it, it produces some error in the GUI, but the GUI disappears very quickly, quickly enough for me to be unable to read the error info. Is there any log that I can check for the error message? (I'm running Mac OS X) or any other way? Thanks in advance for any help. Update: Here's the code that's giving me the problem..."}, "answers": [{"id": 814418, "score": 13, "vote": 0, "content": "<p>not sure about the mac version, but wxPython has a built in way to redirect errors to a window (which will unfortunately close when your application crashes, but it's useful for catching errors that silently fail) or to a log file (only updated after your application closes):</p>\n<pre><code class=\"python\">app = wx.App(redirect=True) \napp = wx.App(redirect=True,filename=\"mylogfile.txt\")\n</code></pre>\n<p>these will work regardless of how you start your application. See <a href=\"http://xoomer.virgilio.it/infinity77/wxPython/Widgets/wx.App.html#methods\" rel=\"noreferrer\">here</a> for more</p>\n", "abstract": "not sure about the mac version, but wxPython has a built in way to redirect errors to a window (which will unfortunately close when your application crashes, but it's useful for catching errors that silently fail) or to a log file (only updated after your application closes): these will work regardless of how you start your application. See here for more"}, {"id": 813102, "score": 8, "vote": 0, "content": "<p>Here's a way to have the error be reported in the GUI instead of the console, via a MessageDialog.  You can use the show_error() method anywhere an exception is caught, here I just have it being caught at the top-most level.  You can change it so that the app continues running after the error occurs, if the error can be handled.</p>\n<pre><code class=\"python\">import wx\nimport sys\nimport traceback\n\ndef show_error():\n    message = ''.join(traceback.format_exception(*sys.exc_info()))\n    dialog = wx.MessageDialog(None, message, 'Error!', wx.OK|wx.ICON_ERROR)\n    dialog.ShowModal()\n\nclass Frame(wx.Frame):\n    def __init__(self):\n        super(Frame, self).__init__(None, -1, 'My Frame')\n    def cause_error(self):\n        raise Exception, 'This is a test.'\n\ndef main():\n    app = wx.PySimpleApp()\n    try:\n        frame = Frame()\n        frame.Show()\n        frame.cause_error()\n        app.MainLoop()\n    except:\n        show_error()\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n", "abstract": "Here's a way to have the error be reported in the GUI instead of the console, via a MessageDialog.  You can use the show_error() method anywhere an exception is caught, here I just have it being caught at the top-most level.  You can change it so that the app continues running after the error occurs, if the error can be handled."}, {"id": 813156, "score": 2, "vote": 0, "content": "<p>Launch from a Python IDE with a debugger.</p>\n<p>Running in <a href=\"http://www.wingware.com/products\" rel=\"nofollow noreferrer\">WingIDE</a> immediatelly pinpoints the two problems:</p>\n<ul>\n<li><code>ID_ABOUT</code> should be <code>wx.ID_ABOUT</code> (line #4 of <code>__init__</code>).</li>\n<li><code>OnAboutBox</code> (the entire method) is indented one step too much. As written, it's a local function inside <code>__init__</code>. Move the whole method one step to the left to make it a method of <code>MyApp</code>.</li>\n</ul>\n", "abstract": "Launch from a Python IDE with a debugger. Running in WingIDE immediatelly pinpoints the two problems:"}, {"id": 812928, "score": 1, "vote": 0, "content": "<p>Start the application from the command line (I believe its called 'Terminal' in OS X) as noted below instead of double clicking on the python file.  This way when the application crashes you'll see the stack trace.  </p>\n<blockquote>\n<p>python NameOfScript.py</p>\n</blockquote>\n<p>Alternatively, you can redirect output to a log file:</p>\n<pre><code class=\"python\">f=open('app.log','w')\nimport sys\nsys.stdout=f\nsys.stderr=f\n</code></pre>\n", "abstract": "Start the application from the command line (I believe its called 'Terminal' in OS X) as noted below instead of double clicking on the python file.  This way when the application crashes you'll see the stack trace.   python NameOfScript.py Alternatively, you can redirect output to a log file:"}, {"id": 813011, "score": 0, "vote": 0, "content": "<p>Add print statements to your program, so you can tell how it's starting up and where it ends up dying (by running from the terminal as you already said you do).</p>\n", "abstract": "Add print statements to your program, so you can tell how it's starting up and where it ends up dying (by running from the terminal as you already said you do)."}, {"id": 813041, "score": 0, "vote": 0, "content": "<p>You could also run your project from a Python IDE, such as <a href=\"http://eric-ide.python-projects.org/\" rel=\"nofollow noreferrer\">Eric IDE</a>. You get the added bonus of being able to trace, watch variables and tons of other cool stuff! :-)</p>\n", "abstract": "You could also run your project from a Python IDE, such as Eric IDE. You get the added bonus of being able to trace, watch variables and tons of other cool stuff! :-)"}, {"id": 14693654, "score": 0, "vote": 0, "content": "<p>If you are using Spyder, hit F6, check \"interact with the python interpreter after execution\".\nThe window will not close, and you can see the error message.</p>\n", "abstract": "If you are using Spyder, hit F6, check \"interact with the python interpreter after execution\".\nThe window will not close, and you can see the error message."}]}, {"link": "https://stackoverflow.com/questions/56041708/send-keystrokes-to-non-active-gui-application-without-occupying-the-keyboard", "question": {"id": "56041708", "title": "Send keystrokes to non-active GUI application without occupying the keyboard", "content": "<p>As the title explain, i'm trying to use the terminal to send commands as keystrokes to a GUI application that's minimized. </p>\n<p>There is a lot of similar questions here on Stack with some great answers, but i'm having, mainly, three problems with the solutions i saw: Most of the solutions need the automated application to be the active one. Or, i can't normally use my keyboard while the script/process is running. Or worse, the solution works only on Windows OS.</p>\n<p>I need what this person asked 2 months ago: <a href=\"https://stackoverflow.com/questions/54882751/send-keystrokes-to-a-specific-window-in-background-but-do-something-else-in-t\">Send keystrokes to a specific window (in background), but do something else in the meantime</a>\nBut i want it on Linux. \nI'm using Kubuntu 18.10, if that helps.</p>\n<p>xdotool was close, but i couldn't quite get it to send the commands to a specific window or PID. It also uses \"my keyboard\", so i can't, for example, write an essay/code/browse online while xdotool is running. Pexpect also have this last problem.</p>\n<p>AutoHotKey looks like it would work, but it's only for Windows and i'm trying to not use Wine. Same with pywin32.  </p>\n<p>keyboard (<a href=\"https://github.com/boppreh/keyboard\" rel=\"noreferrer\">https://github.com/boppreh/keyboard</a>) seems nice, but it can't send a command to a specific application. Same with PyAutoGUI.</p>\n<p>I selected the Python tag because most of the solutions i saw use Python, but i'm open to any language.</p>\n", "abstract": "As the title explain, i'm trying to use the terminal to send commands as keystrokes to a GUI application that's minimized.  There is a lot of similar questions here on Stack with some great answers, but i'm having, mainly, three problems with the solutions i saw: Most of the solutions need the automated application to be the active one. Or, i can't normally use my keyboard while the script/process is running. Or worse, the solution works only on Windows OS. I need what this person asked 2 months ago: Send keystrokes to a specific window (in background), but do something else in the meantime\nBut i want it on Linux. \nI'm using Kubuntu 18.10, if that helps. xdotool was close, but i couldn't quite get it to send the commands to a specific window or PID. It also uses \"my keyboard\", so i can't, for example, write an essay/code/browse online while xdotool is running. Pexpect also have this last problem. AutoHotKey looks like it would work, but it's only for Windows and i'm trying to not use Wine. Same with pywin32.   keyboard (https://github.com/boppreh/keyboard) seems nice, but it can't send a command to a specific application. Same with PyAutoGUI. I selected the Python tag because most of the solutions i saw use Python, but i'm open to any language."}, "answers": [{"id": 56240192, "score": 5, "vote": 0, "content": "<p>Use a nested X server to input keystrokes without changing focus or keyboard grab.\nProof of concept:</p>\n<pre><code class=\"python\">Xephyr -resizeable :13\nexport DISPLAY=:13\nxterm\nxdotool type rhabarber\n</code></pre>\n<p>The <code>Xephyr</code> nested X server is started and will listen on local X socket 13 (whereas :0 typically identifies the currently running X server, but when multiple sessions are ran concurrently, it could be higher).\nThen we set DISPLAY environment variable to :13, so any X application we start will connect to Xephyr; <code>xterm</code> is our target application here. Using <code>xdotool</code> or any other tool we can send keystrokes.</p>\n<p>As the target X server is identified through <code>$DISPLAY</code>, applications can be started or input events triggered from elsewhere as well. If needed, you might also run a lightweight window manager within Xephyr, e.g. to 'maximize' the application so that it fills the whole Xephyr window.</p>\n", "abstract": "Use a nested X server to input keystrokes without changing focus or keyboard grab.\nProof of concept: The Xephyr nested X server is started and will listen on local X socket 13 (whereas :0 typically identifies the currently running X server, but when multiple sessions are ran concurrently, it could be higher).\nThen we set DISPLAY environment variable to :13, so any X application we start will connect to Xephyr; xterm is our target application here. Using xdotool or any other tool we can send keystrokes. As the target X server is identified through $DISPLAY, applications can be started or input events triggered from elsewhere as well. If needed, you might also run a lightweight window manager within Xephyr, e.g. to 'maximize' the application so that it fills the whole Xephyr window."}]}, {"link": "https://stackoverflow.com/questions/52607405/pygame-multithread-client-socket-gui-blocking", "question": {"id": "52607405", "title": "pygame multithread client socket GUI Blocking", "content": "<p>I wanna write a <a href=\"https://en.wikipedia.org/wiki/Gomoku\" rel=\"noreferrer\">gomoku game</a> with server and client, the terminal version works good, but pygame version just blocked and can't rend anything</p>\n<p>Here is the game execute function</p>\n<ul>\n<li><p>First it start a socket connection</p>\n</li>\n<li><p><code>self._running = True</code> in <code>init</code>, package get from server is like <code>{\"grid\":GRID(strings with 0 and 1), \"x\":X, \"y\":Y, \"player\":LAST_PLAYER, \"next_player\":CURRENT_PLAYER, \"gameover\":IS_GAMEOVER}</code></p>\n</li>\n<li><p>In the the loop:</p>\n<ul>\n<li>parse the package</li>\n<li>check if gameover, if so show information about gameover and close the socket</li>\n<li>if current player is me, call <code>on_event</code> and let user move( <strong>I suspect this step is wrong, so the parse package step blocked the main thread? But how should I fix this</strong> ) and then send the new move package to server</li>\n<li>if current player is not me, then send a special package to server I am waiting(I know this is a bit stupid)</li>\n</ul>\n</li>\n</ul>\n<p>This is the loop like</p>\n<pre><code class=\"python\">        while self._running:\n            data = self.client_thread.reply_q.get(True)\n            \n            if data:\n                self.last_player = data[\"player\"]\n                self.grid = self.grid_str_2_matrix(data[\"grid\"])\n                self.lastPosition = [data[\"x\"], data[\"y\"]]\n                self.gomoku_board_init()\n                \n                if data[\"gameover\"] == -1:\n                    if data[\"next_player\"] != self.player:\n                        self.client_thread.cmd_q.put(ClientCommand(ClientCommand.SEND, {\"wait\": True}))\n                        print(\"waiting\")\n                    else:\n                        for event in pygame.event.get():\n                            self.on_event(event)\n\n                        print(\"new move\")\n                else:\n                    print(\"game over\")\n                    self._running = False\n                    if data[\"gameover\"] == 0:\n                        self.winner = 0\n                    else:\n                        self.winner = data[\"player\"]\n                    self.client_thread.cmd_q.put(ClientCommand(ClientCommand.CLOSE))\n                    break\n            self.on_render()\n        self.on_cleanup()\n</code></pre>\n<p>and the <code>on_event</code> function be called in the middle to accepet user's next move</p>\n<pre><code class=\"python\">if data[\"gameover\"] == -1:\n    if data[\"next_player\"] != self.player:\n        ...\n    else:    \n        for event in pygame.event.get():\n            self.on_event(event)\n</code></pre>\n<p>code as this</p>\n<pre><code class=\"python\">def on_event(self, event):\n    print(event.type == pygame.MOUSEBUTTONUP)\n    \n\n    if event.type == pygame.MOUSEBUTTONUP:\n        pos = pygame.mouse.get_pos()\n        r = (pos[0] - PADDING + WIDTH // 2) // (WIDTH + MARGIN)\n        c = (pos[1] - PADDING + WIDTH // 2) // (WIDTH + MARGIN)\n        print(r, c)\n        if 0 &lt;= r &lt; self.board_row and 0 &lt;= c &lt; self.board_column and self.grid[r][c] == 0:\n            self.grid[r][c] = self.player\n            data = {\"grid\":self.grid, \"x\":r, \"y\":c, \"player\":self.player}\n            self.client_thread.cmd_q.put(ClientCommand(ClientCommand.SEND, data))\n</code></pre>\n<h3>What I've tried:</h3>\n<ul>\n<li><p>I added a print in <code>on_event</code> <code>print(event.type == pygame.MOUSEBUTTONUP)</code> and of course <code>MOUSEBUTTONUP</code> never happened(But I wonder why?)</p>\n</li>\n<li><p>So I decide just skip this using random input</p>\n</li>\n</ul>\n<p>code as follows</p>\n<pre><code class=\"python\">#for event in pygame.event.get():\n#    self.on_event(event)\nx, y = self.random_position()\nself.grid[x][y] = self.player\ndata = {\"grid\":self.grid, \"x\":x, \"y\":y, \"player\":self.player}\nself.client_thread.cmd_q.put(ClientCommand(ClientCommand.SEND, data))\n</code></pre>\n<p>The result is package goes all right <strong>BUT</strong> GUI still blocking and even I add <code>sleep</code> in the while loop, it rended only when <code>gameover</code></p>\n<p>I am new in python multithread and also pygame with socket, I wrote a just pygame part it works good, so does terminal+socket.</p>\n", "abstract": "I wanna write a gomoku game with server and client, the terminal version works good, but pygame version just blocked and can't rend anything Here is the game execute function First it start a socket connection self._running = True in init, package get from server is like {\"grid\":GRID(strings with 0 and 1), \"x\":X, \"y\":Y, \"player\":LAST_PLAYER, \"next_player\":CURRENT_PLAYER, \"gameover\":IS_GAMEOVER} In the the loop: This is the loop like and the on_event function be called in the middle to accepet user's next move code as this I added a print in on_event print(event.type == pygame.MOUSEBUTTONUP) and of course MOUSEBUTTONUP never happened(But I wonder why?) So I decide just skip this using random input code as follows The result is package goes all right BUT GUI still blocking and even I add sleep in the while loop, it rended only when gameover I am new in python multithread and also pygame with socket, I wrote a just pygame part it works good, so does terminal+socket."}, "answers": [{"id": 72402799, "score": 0, "vote": 0, "content": "<p>Usually those kind of issues in Pygame and other GUI frameworks come from the special role the <strong>main thread</strong> has. Quoting from <a href=\"https://www.pygame.org/docs/ref/event.html?highlight=thread\" rel=\"nofollow noreferrer\">pygame's docs</a>:</p>\n<blockquote>\n<p>Pygame handles all its event messaging through an event queue. The routines in this module help you manage that event queue. The input queue is heavily dependent on the pygame.displaypygame module to control the display window and screen module. If the display has not been initialized and a video mode not set, the event queue may not work properly. <strong>The event subsystem should be called from the main thread.</strong> If you want to post events into the queue from other threads, please use the pygame.fasteventpygame module for interacting with events and queues module.</p>\n</blockquote>\n", "abstract": "Usually those kind of issues in Pygame and other GUI frameworks come from the special role the main thread has. Quoting from pygame's docs: Pygame handles all its event messaging through an event queue. The routines in this module help you manage that event queue. The input queue is heavily dependent on the pygame.displaypygame module to control the display window and screen module. If the display has not been initialized and a video mode not set, the event queue may not work properly. The event subsystem should be called from the main thread. If you want to post events into the queue from other threads, please use the pygame.fasteventpygame module for interacting with events and queues module."}, {"id": 73678474, "score": 0, "vote": 0, "content": "<p>You are reading from a reply queue with a param <code>block=True</code>. Which means that it is blocking whole while loop. And that <code>on_render</code> call is blocked as well by <code>reply_q.get(True)</code>. So if you are not constantly feeding <code>reply_q</code> with messages then your screen is not going to be re-rendered. By the way, your events processing code is also gonna be blocked.</p>\n<p><a href=\"https://docs.python.org/3/library/queue.html#queue.Queue.get\" rel=\"nofollow noreferrer\">docs.python#Queue.get</a></p>\n", "abstract": "You are reading from a reply queue with a param block=True. Which means that it is blocking whole while loop. And that on_render call is blocked as well by reply_q.get(True). So if you are not constantly feeding reply_q with messages then your screen is not going to be re-rendered. By the way, your events processing code is also gonna be blocked. docs.python#Queue.get"}]}, {"link": "https://stackoverflow.com/questions/1400858/how-to-create-qstring-in-pyqt4", "question": {"id": "1400858", "title": "How to create QString in PyQt4?", "content": "<pre><code class=\"python\">&gt;&gt;&gt; from PyQt4 import QtCore\n&gt;&gt;&gt; str = QtCore.QString('Hello')\nAttributeError: 'module' object has no attribute 'QString'\n\n&gt;&gt;&gt; QtCore.QString._init_(self)\nAttributeError: 'module' object has no attribute 'QString' \n</code></pre>\n<p>Yes, I've read <a href=\"http://pyqt.sourceforge.net/Docs/PyQt4/qstring.html\" rel=\"noreferrer\">QString Class Reference</a> </p>\n<p>Why can't I import <code>QString</code> from <code>QtCore</code>, as specified in the docs ? </p>\n", "abstract": "Yes, I've read QString Class Reference  Why can't I import QString from QtCore, as specified in the docs ? "}, "answers": [{"id": 2595514, "score": 19, "vote": 0, "content": "<p>In Python 3, QString is automatically mapped to the native Python string by default:</p>\n<blockquote>\n<p>The QString class is implemented as a mapped type that is automatically converted to and from a Python string. In addition a None is converted to a null QString. However, a null QString is converted to an empty Python string (and not None). (This is because Qt often returns a null QString when it should probably return an empty QString.)</p>\n<p>The QChar and QStringRef classes are implemented as mapped types that are automatically converted to and from Python strings.</p>\n<p>The QStringList class is implemented as a mapped type that is automatically converted to and from Python lists of strings.</p>\n<p>The QLatin1Char, QLatin1String and QStringMatcher classes are not implemented.</p>\n</blockquote>\n<p><a href=\"http://pyqt.sourceforge.net/Docs/PyQt4/qstring.html\" rel=\"noreferrer\">http://pyqt.sourceforge.net/Docs/PyQt4/qstring.html</a></p>\n", "abstract": "In Python 3, QString is automatically mapped to the native Python string by default: The QString class is implemented as a mapped type that is automatically converted to and from a Python string. In addition a None is converted to a null QString. However, a null QString is converted to an empty Python string (and not None). (This is because Qt often returns a null QString when it should probably return an empty QString.) The QChar and QStringRef classes are implemented as mapped types that are automatically converted to and from Python strings. The QStringList class is implemented as a mapped type that is automatically converted to and from Python lists of strings. The QLatin1Char, QLatin1String and QStringMatcher classes are not implemented. http://pyqt.sourceforge.net/Docs/PyQt4/qstring.html"}, {"id": 3982776, "score": 18, "vote": 0, "content": "<p>From PyQt4 4.6+ in Python3 QString doesn't exist and you are supposed to use ordinary Python3 unicode objects (string literals). To do this so that your code will work in both Python 2.x AND Python 3.x you can do following:</p>\n<pre><code class=\"python\">try:\n    from PyQt4.QtCore import QString\nexcept ImportError:\n    # we are using Python3 so QString is not defined\n    QString = type(\"\")\n</code></pre>\n<p>Depending on your use case you might get away with this simple hack.</p>\n", "abstract": "From PyQt4 4.6+ in Python3 QString doesn't exist and you are supposed to use ordinary Python3 unicode objects (string literals). To do this so that your code will work in both Python 2.x AND Python 3.x you can do following: Depending on your use case you might get away with this simple hack."}, {"id": 1400885, "score": 9, "vote": 0, "content": "<pre><code class=\"python\">In [1]: from PyQt4 import QtCore\nIn [2]: s = QtCore.QString('foo')\nIn [3]: s\nOut[3]: PyQt4.QtCore.QString(u'foo')\n</code></pre>\n", "abstract": ""}, {"id": 1485652, "score": 2, "vote": 0, "content": "<p>It depends on your import statement.</p>\n<p>If you write</p>\n<pre><code class=\"python\">from PyQt4 import QtGui, QtCore\n</code></pre>\n<p>you must call QString with</p>\n<pre><code class=\"python\">yourstr = QtCore.QString('foo')\n</code></pre>\n<p>I think you've written this :</p>\n<pre><code class=\"python\">from PyQt4.QtGui import *\nfrom PyQt4.QtCore import *\n</code></pre>\n<p>It's not really recommended, but you should call String with :</p>\n<pre><code class=\"python\">yourstr = QString('foo')\n</code></pre>\n", "abstract": "It depends on your import statement. If you write you must call QString with I think you've written this : It's not really recommended, but you should call String with :"}]}, {"link": "https://stackoverflow.com/questions/20243637/pyqt4-center-window-on-active-screen", "question": {"id": "20243637", "title": "PyQt4 center window on active screen", "content": "<p>How I can center window on active screen but not on general screen? This code moves window to center on general screen, not active screen:</p>\n<pre><code class=\"python\">import sys\nfrom PyQt4 import QtGui\n\nclass MainWindow(QtGui.QWidget):\n\n    def __init__(self):\n        super(MainWindow, self).__init__()\n\n        self.initUI()\n\n    def initUI(self):\n\n        self.resize(640, 480)\n        self.setWindowTitle('Backlight management')\n        self.center()\n\n        self.show()\n\n    def center(self):\n        frameGm = self.frameGeometry()\n        centerPoint = QtGui.QDesktopWidget().availableGeometry().center()\n        frameGm.moveCenter(centerPoint)\n        self.move(frameGm.topLeft())\n\ndef main():\n    app = QtGui.QApplication(sys.argv)\n    mainWindow = MainWindow()\n    sys.exit(app.exec_())\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n<p>If I removes <b>self.center()</b> from <b>initUI()</b> then window opened on 0x0 on active screen. I need to open window on active screen and move this window on center of this screen. Thansk!</p>\n", "abstract": "How I can center window on active screen but not on general screen? This code moves window to center on general screen, not active screen: If I removes self.center() from initUI() then window opened on 0x0 on active screen. I need to open window on active screen and move this window on center of this screen. Thansk!"}, "answers": [{"id": 20244839, "score": 31, "vote": 0, "content": "<p>Modify your <code>center</code> method to be as follows:</p>\n<pre><code class=\"python\">def center(self):\n    frameGm = self.frameGeometry()\n    screen = QtGui.QApplication.desktop().screenNumber(QtGui.QApplication.desktop().cursor().pos())\n    centerPoint = QtGui.QApplication.desktop().screenGeometry(screen).center()\n    frameGm.moveCenter(centerPoint)\n    self.move(frameGm.topLeft())\n</code></pre>\n<p>This function is based on where the mouse point is located. It uses the <a href=\"http://pyqt.sourceforge.net/Docs/PyQt4/qdesktopwidget.html#screenNumber-2\">screenNumber</a> function to determine which screen the mouse is current active on. It then finds the <a href=\"http://pyqt.sourceforge.net/Docs/PyQt4/qdesktopwidget.html#screenGeometry\">screenGeometry</a> of that monitor and the center point of that screen. Using this method, you should be able to place the window in the center of a screen even if monitor resolutions are different.</p>\n", "abstract": "Modify your center method to be as follows: This function is based on where the mouse point is located. It uses the screenNumber function to determine which screen the mouse is current active on. It then finds the screenGeometry of that monitor and the center point of that screen. Using this method, you should be able to place the window in the center of a screen even if monitor resolutions are different."}, {"id": 55172738, "score": 8, "vote": 0, "content": "<p>One correction for PyQt5 users:</p>\n<pre><code class=\"python\">import PyQt5\n\ndef center(self):\n    frameGm = self.frameGeometry()\n    screen = PyQt5.QtWidgets.QApplication.desktop().screenNumber(PyQt5.QtWidgets.QApplication.desktop().cursor().pos())\n    centerPoint = PyQt5.QtWidgets.QApplication.desktop().screenGeometry(screen).center()\n    frameGm.moveCenter(centerPoint)\n    self.move(frameGm.topLeft())\n</code></pre>\n", "abstract": "One correction for PyQt5 users:"}, {"id": 65911188, "score": 2, "vote": 0, "content": "<p>Yet another (late) answer:</p>\n<pre><code class=\"python\">from PyQt5.QtWidgets import QDesktopWidget\n\ndef center(self):\n    qr = self.frameGeometry()\n    cp = QDesktopWidget().availableGeometry().center()\n    qr.moveCenter(cp)\n    self.move(qr.topLeft())\n</code></pre>\n", "abstract": "Yet another (late) answer:"}, {"id": 62282997, "score": 1, "vote": 0, "content": "<p>The other answers worked with a few deprecated warnings when using PySide2. So here is my version of the same function:</p>\n<pre><code class=\"python\">def center(self):\n    screen = QtGui.QGuiApplication.screenAt(QtGui.QCursor().pos())\n    fg = self.frameGeometry()\n    fg.moveCenter(screen.geometry().center())\n    self.move(fg.topLeft())\n</code></pre>\n", "abstract": "The other answers worked with a few deprecated warnings when using PySide2. So here is my version of the same function:"}, {"id": 68402005, "score": 1, "vote": 0, "content": "<p>This is the update that works with <strong>pyside6</strong>:</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">def center(self):\n    frame_geo = self.frameGeometry()\n    screen = self.window().windowHandle().screen()\n    center_loc = screen.geometry().center()\n    frame_geo.moveCenter(center_loc)\n    self.move(frame_geo.topLeft())\n</code></pre>\n<p>It will move the window to the center of the screen where it is located.</p>\n", "abstract": "This is the update that works with pyside6: It will move the window to the center of the screen where it is located."}, {"id": 64781674, "score": 0, "vote": 0, "content": "<pre><code class=\"python\">self.move(QDesktopWidget().availableGeometry().center().x() - self.frameGeometry().center().x() * 0.5, QDesktopWidget().availableGeometry().center().y() - self.frameGeometry().center().y() * 0.5)\n</code></pre>\n", "abstract": ""}, {"id": 65790625, "score": 0, "vote": 0, "content": "<p>None of the above worked for me, so I had to come up with my own solution.</p>\n<p>This works with PyQt5 and for multiple monitors.</p>\n<p>For different window dimensions just play with the multipliers:</p>\n<pre><code class=\"python\">from PyQt5 import QtWidgets\n\nmain_window = QtWidgets.QMainWindow()\nmultiplier_x = 2\nmultiplier_y = 2\ncursor_pos = QtWidgets.QApplication.desktop().cursor().pos()\nscreen = QtWidgets.QApplication.desktop().screenNumber(cursor_pos)\npos_x = QtWidgets.QDesktopWidget().screenGeometry(screen).center().x()\npos_x -= main_window.frameGeometry().center().x() * multiplier_x\npos_y = QtWidgets.QDesktopWidget().screenGeometry(screen).center().y()\npos_y -= main_window.frameGeometry().center().y() * multiplier_y\nmain_window.move(pos_x, pos_y)\n</code></pre>\n", "abstract": "None of the above worked for me, so I had to come up with my own solution. This works with PyQt5 and for multiple monitors. For different window dimensions just play with the multipliers:"}, {"id": 71384969, "score": 0, "vote": 0, "content": "<pre><code class=\"python\">frameGeometry = self.frameGeometry()\nwindowFrameGeometry = self.window.frameGeometry()\nx = int(frameGeometry.center().x()-windowFrameGeometry.center().x())\ny = int(frameGeometry.center().y()-windowFrameGeometry.center().y())\nself.window.move(x,y)\n</code></pre>\n", "abstract": ""}]}, {"link": "https://stackoverflow.com/questions/3743572/python-best-gui-library-for-the-job", "question": {"id": "3743572", "title": "Python - Best GUI library for the job?", "content": "<p>I've been using WxPython and I've tried Tk, but it seems that, while both are good and I'll likely use them for other projects, neither of those appear to be capable of accomplishing the things that I want for my current project (which is fine, they're good at what they do).</p>\n<p>Basically what I'm looking for is something that will allow me to make rich graphical GUIs. My specific goal is a window that will draw bitmap buttons, resize the parent window automatically to fit them, and possibly animate the resize with a slide effect and have the buttons fade in. Also being able to have my own window border style instead of the inbuilt one is important to me.</p>\n<p>This particular project will be Windows only, so non-portable libraries are fine in this case, though portable ones would be great too.</p>\n<p>If I missed how this can be done in either WxPython or Tk, I'm all ears.</p>\n", "abstract": "I've been using WxPython and I've tried Tk, but it seems that, while both are good and I'll likely use them for other projects, neither of those appear to be capable of accomplishing the things that I want for my current project (which is fine, they're good at what they do). Basically what I'm looking for is something that will allow me to make rich graphical GUIs. My specific goal is a window that will draw bitmap buttons, resize the parent window automatically to fit them, and possibly animate the resize with a slide effect and have the buttons fade in. Also being able to have my own window border style instead of the inbuilt one is important to me. This particular project will be Windows only, so non-portable libraries are fine in this case, though portable ones would be great too. If I missed how this can be done in either WxPython or Tk, I'm all ears."}, "answers": [{"id": 3743578, "score": 7, "vote": 0, "content": "<p>How about PyQt?</p>\n<p><a href=\"http://www.riverbankcomputing.co.uk/software/pyqt/intro\" rel=\"noreferrer\">http://www.riverbankcomputing.co.uk/software/pyqt/intro</a></p>\n", "abstract": "How about PyQt? http://www.riverbankcomputing.co.uk/software/pyqt/intro"}, {"id": 3743626, "score": 7, "vote": 0, "content": "<p>PySide: <a href=\"http://www.pyside.org/\" rel=\"noreferrer\">http://www.pyside.org/</a></p>\n<blockquote>\n<p>The PySide project provides\n  LGPL-licensed Python bindings for the\n  Qt cross-platform application and UI\n  framework. PySide Qt bindings allow\n  both free open source and proprietary\n  software development and ultimately\n  aim to support all of the platforms as\n  Qt itself.</p>\n</blockquote>\n<p>The Windows version of PySide is quite new and may be considered as a beta version. PySide is API compatible with PyQt.</p>\n", "abstract": "PySide: http://www.pyside.org/ The PySide project provides\n  LGPL-licensed Python bindings for the\n  Qt cross-platform application and UI\n  framework. PySide Qt bindings allow\n  both free open source and proprietary\n  software development and ultimately\n  aim to support all of the platforms as\n  Qt itself. The Windows version of PySide is quite new and may be considered as a beta version. PySide is API compatible with PyQt."}, {"id": 36510548, "score": 3, "vote": 0, "content": "<p>Just sharing my opinion: <a href=\"https://kivy.org/#home\" rel=\"nofollow\">Kivy</a>.</p>\n<p>Innovative open-source library. Supports both 2.x and 3.x versions of Python.</p>\n<blockquote>\n<p>Kivy - Open source Python library for rapid development of applications\n  that make use of innovative user interfaces, such as multi-touch apps.</p>\n</blockquote>\n<p>Kivy is based on OpenGL ES 2 and includes native multi-touch for each platform and Android/iOS. It\u2019s an event-driven framework based around a main loop, and is thus also suitable for game development.</p>\n", "abstract": "Just sharing my opinion: Kivy. Innovative open-source library. Supports both 2.x and 3.x versions of Python. Kivy - Open source Python library for rapid development of applications\n  that make use of innovative user interfaces, such as multi-touch apps. Kivy is based on OpenGL ES 2 and includes native multi-touch for each platform and Android/iOS. It\u2019s an event-driven framework based around a main loop, and is thus also suitable for game development."}, {"id": 12945917, "score": 2, "vote": 0, "content": "<p>Try <a href=\"http://www.pyglet.org/\" rel=\"nofollow\">Pyglet</a>. Its a library for python that makes using OpenGL very easy. You can draw pretty good 2d interfaces using Quads. </p>\n", "abstract": "Try Pyglet. Its a library for python that makes using OpenGL very easy. You can draw pretty good 2d interfaces using Quads. "}, {"id": 3743584, "score": 1, "vote": 0, "content": "<p>I can't tell you what is best because that is subjective but I can give you another option: <a href=\"http://www.pygtk.org/\" rel=\"nofollow noreferrer\">PyGTK</a></p>\n<blockquote>\n<p>PyGTK lets you to <strong>easily create programs with a graphical user interface</strong> using the Python programming language. The underlying GTK+ library provides all kind of visual elements and utilities for it and, if needed, you can develop full featured applications for the GNOME Desktop.</p>\n<p>PyGTK applications are truly <strong>multiplatform</strong> and they're able to run, unmodified, on Linux, Windows, MacOS X and other platforms.</p>\n</blockquote>\n", "abstract": "I can't tell you what is best because that is subjective but I can give you another option: PyGTK PyGTK lets you to easily create programs with a graphical user interface using the Python programming language. The underlying GTK+ library provides all kind of visual elements and utilities for it and, if needed, you can develop full featured applications for the GNOME Desktop. PyGTK applications are truly multiplatform and they're able to run, unmodified, on Linux, Windows, MacOS X and other platforms."}]}, {"link": "https://stackoverflow.com/questions/7869589/which-python-user-interface-library-can-i-use-for-2d-games", "question": {"id": "7869589", "title": "Which Python user interface library can I use for 2D games?", "content": "<p>I want to create a 2D game on Python with heavy user interface: windows, buttons, text input, etc. So far I've been using PyGame for a few simple games.</p>\n<p>The game is a 2D MUD, with the standard rendering loop to draw stuff on the screen. I need the user interface to interact with the game entities like sales, blacksmith, etc.</p>\n<p>I am looking for something like a mix of Pygame and wxPython/pyQT/pyGTK.</p>\n<p>Which libraries can I use?</p>\n", "abstract": "I want to create a 2D game on Python with heavy user interface: windows, buttons, text input, etc. So far I've been using PyGame for a few simple games. The game is a 2D MUD, with the standard rendering loop to draw stuff on the screen. I need the user interface to interact with the game entities like sales, blacksmith, etc. I am looking for something like a mix of Pygame and wxPython/pyQT/pyGTK. Which libraries can I use?"}, "answers": [{"id": 7874365, "score": 6, "vote": 0, "content": "<p>I would take <a href=\"http://www.riverbankcomputing.co.uk/news\">PyQT</a> with <a href=\"http://www.rkblog.rk.edu.pl/w/p/qgraphicsview-and-qgraphicsscene/\">QGraphicsView or QGraphicsScene</a>.\nSadly there isn\u00b4t a <a href=\"http://clanlib.org/wiki/Main_Page\">Clanlib</a> python binding like for <a href=\"http://sourceforge.net/projects/clanperl/\">perl</a> and <a href=\"http://clanruby.sourceforge.net/\">ruby</a>. That would be, probably, the ideal choice.</p>\n", "abstract": "I would take PyQT with QGraphicsView or QGraphicsScene.\nSadly there isn\u00b4t a Clanlib python binding like for perl and ruby. That would be, probably, the ideal choice."}, {"id": 7878099, "score": 6, "vote": 0, "content": "<p>You can use the popular <a href=\"http://www.pyglet.org\" rel=\"noreferrer\">Pyglet</a> game library along with <a href=\"http://www.wxpython.org\" rel=\"noreferrer\">wxPython</a>, the cross platform GUI library. An example of how to do this:</p>\n<p><a href=\"http://pyglet.googlecode.com/svn/trunk/experimental/wxtest.py\" rel=\"noreferrer\">http://pyglet.googlecode.com/svn/trunk/experimental/wxtest.py</a></p>\n<p>Additionally, if you want to use pure Pyglet, you can use <a href=\"http://code.google.com/p/kytten/\" rel=\"noreferrer\">Kytten</a>, a pure Python GUI library built on the top of Pyglet.</p>\n", "abstract": "You can use the popular Pyglet game library along with wxPython, the cross platform GUI library. An example of how to do this: http://pyglet.googlecode.com/svn/trunk/experimental/wxtest.py Additionally, if you want to use pure Pyglet, you can use Kytten, a pure Python GUI library built on the top of Pyglet."}, {"id": 7869764, "score": 1, "vote": 0, "content": "<p>Not sure if it fits your use, but <a href=\"http://pygame.org/project/108/\" rel=\"nofollow\">PGU</a> is fit for pygame because it lets you use your own render loop, and tie into it.</p>\n", "abstract": "Not sure if it fits your use, but PGU is fit for pygame because it lets you use your own render loop, and tie into it."}, {"id": 7870594, "score": 1, "vote": 0, "content": "<p><a href=\"http://code.google.com/p/librpg/\" rel=\"nofollow\">http://code.google.com/p/librpg/</a> maybe what you need</p>\n", "abstract": "http://code.google.com/p/librpg/ maybe what you need"}, {"id": 7870721, "score": 1, "vote": 0, "content": "<p>tkinter is one choice. It has a canvas widget that is very easy to use -- you can draw objects (lines, circles, etc) as well as embed images (for tiles, for example). And of course it comes with a standard collection of widgets (buttons, comboboxes, listboxes, menus, etc) that can either be embedded in a canvas or used in the more traditional sense. </p>\n", "abstract": "tkinter is one choice. It has a canvas widget that is very easy to use -- you can draw objects (lines, circles, etc) as well as embed images (for tiles, for example). And of course it comes with a standard collection of widgets (buttons, comboboxes, listboxes, menus, etc) that can either be embedded in a canvas or used in the more traditional sense. "}, {"id": 7954122, "score": 0, "vote": 0, "content": "<p>Take a look at <a href=\"http://librocket.com/\" rel=\"nofollow\">librocket</a>. It supports python scripting as well..</p>\n", "abstract": "Take a look at librocket. It supports python scripting as well.."}]}, {"link": "https://stackoverflow.com/questions/4055267/tkinter-mouse-drag-a-window-without-borders-eg-overridedirect1", "question": {"id": "4055267", "title": "Tkinter: Mouse drag a window without borders, eg. overridedirect(1)", "content": "<p>Any suggestions on how one might create event bindings that would allow a user to mouse drag a window without borders, eg. a window created with <code>overridedirect(1)</code>?</p>\n<p>Use case: We would like to create a floating toolbar/palette window (without borders) that our users can drag around on their desktop.</p>\n<p>Here's where I'm at in my thinking (pseudo code):</p>\n<ol>\n<li><p><code>window.bind( '&lt;Button-1&gt;', onMouseDown )</code> to capture the initial position of the mouse.</p></li>\n<li><p><code>window.bind( '&lt;Motion-1&gt;', onMouseMove )</code> to track position of mouse once it starts to move.</p></li>\n<li><p>Calculate how much mouse has moved and calculate <code>newX</code>, <code>newY</code> positions.</p></li>\n<li><p>Use <code>window.geometry( '+%d+%d' % ( newX, newY ) )</code> to move window.</p></li>\n</ol>\n<p>Does Tkinter expose enough functionality to allow me to implement the task at hand? Or are there easier/higher-level ways to achieve what I want to do?</p>\n", "abstract": "Any suggestions on how one might create event bindings that would allow a user to mouse drag a window without borders, eg. a window created with overridedirect(1)? Use case: We would like to create a floating toolbar/palette window (without borders) that our users can drag around on their desktop. Here's where I'm at in my thinking (pseudo code): window.bind( '<Button-1>', onMouseDown ) to capture the initial position of the mouse. window.bind( '<Motion-1>', onMouseMove ) to track position of mouse once it starts to move. Calculate how much mouse has moved and calculate newX, newY positions. Use window.geometry( '+%d+%d' % ( newX, newY ) ) to move window. Does Tkinter expose enough functionality to allow me to implement the task at hand? Or are there easier/higher-level ways to achieve what I want to do?"}, "answers": [{"id": 4055612, "score": 26, "vote": 0, "content": "<p>Yes, Tkinter exposes enough functionality to do this, and no, there are no easier/higher-level ways to achive what you want to do. You pretty much have the right idea.</p>\n<p>Here's one example, though it's not the only way:</p>\n<pre><code class=\"python\">import tkinter as tk\n\nclass App(tk.Tk):\n    def __init__(self):\n        tk.Tk.__init__(self)\n        self.floater = FloatingWindow(self)\n\nclass FloatingWindow(tk.Toplevel):\n    def __init__(self, *args, **kwargs):\n        tk.Toplevel.__init__(self, *args, **kwargs)\n        self.overrideredirect(True)\n\n        self.label = tk.Label(self, text=\"Click on the grip to move\")\n        self.grip = tk.Label(self, bitmap=\"gray25\")\n        self.grip.pack(side=\"left\", fill=\"y\")\n        self.label.pack(side=\"right\", fill=\"both\", expand=True)\n\n        self.grip.bind(\"&lt;ButtonPress-1&gt;\", self.start_move)\n        self.grip.bind(\"&lt;ButtonRelease-1&gt;\", self.stop_move)\n        self.grip.bind(\"&lt;B1-Motion&gt;\", self.do_move)\n\n    def start_move(self, event):\n        self.x = event.x\n        self.y = event.y\n\n    def stop_move(self, event):\n        self.x = None\n        self.y = None\n\n    def do_move(self, event):\n        deltax = event.x - self.x\n        deltay = event.y - self.y\n        x = self.winfo_x() + deltax\n        y = self.winfo_y() + deltay\n        self.geometry(f\"+{x}+{y}\")\n\napp=App()\napp.mainloop()\n</code></pre>\n", "abstract": "Yes, Tkinter exposes enough functionality to do this, and no, there are no easier/higher-level ways to achive what you want to do. You pretty much have the right idea. Here's one example, though it's not the only way:"}, {"id": 60714152, "score": 9, "vote": 0, "content": "<p>Here is my solution:</p>\n<pre><code class=\"python\">from tkinter import *\nfrom webbrowser import *\n\n\nlastClickX = 0\nlastClickY = 0\n\n\ndef SaveLastClickPos(event):\n    global lastClickX, lastClickY\n    lastClickX = event.x\n    lastClickY = event.y\n\n\ndef Dragging(event):\n    x, y = event.x - lastClickX + window.winfo_x(), event.y - lastClickY + window.winfo_y()\n    window.geometry(\"+%s+%s\" % (x , y))\n\n\nwindow = Tk()\nwindow.overrideredirect(True)\nwindow.attributes('-topmost', True)\nwindow.geometry(\"400x400+500+300\")\nwindow.bind('&lt;Button-1&gt;', SaveLastClickPos)\nwindow.bind('&lt;B1-Motion&gt;', Dragging)\nwindow.mainloop()\n</code></pre>\n", "abstract": "Here is my solution:"}, {"id": 57935285, "score": 2, "vote": 0, "content": "<p>The idea of Lo\u00efc Faure-Lacroix is useful, the following is my own simple code snippets on Python3.7.3, hope it will help:</p>\n<pre><code class=\"python\">from tkinter import *\n\n\ndef move_window(event):\n    root.geometry(f'+{event.x_root}+{event.y_root}')\n\n\nroot = Tk()\nroot.bind(\"&lt;B1-Motion&gt;\", move_window)\nroot.mainloop()\n</code></pre>\n<p>But the position of the mouse is always in the upper left corner of the window. How can I keep it unchanged? Looking forward to a better answer!</p>\n<hr/>\n<p>Thanks to Bryan Oakley, because at the beginning I couldn't run your code on my computer, I didn't pay attention to it. Just now after the modification, it was very good to run, and the above situation would not happen (the mouse is always in the upper left corner), The updated code recently as follows:</p>\n<pre><code class=\"python\">def widget_drag_free_bind(widget):\n    \"\"\"Bind any widget or Tk master object with free drag\"\"\"\n    if isinstance(widget, Tk):\n        master = widget  # root window\n    else:\n        master = widget.master\n\n    x, y = 0, 0\n    def mouse_motion(event):\n        global x, y\n        # Positive offset represent the mouse is moving to the lower right corner, negative moving to the upper left corner\n        offset_x, offset_y = event.x - x, event.y - y  \n        new_x = master.winfo_x() + offset_x\n        new_y = master.winfo_y() + offset_y\n        new_geometry = f\"+{new_x}+{new_y}\"\n        master.geometry(new_geometry)\n\n    def mouse_press(event):\n        global x, y\n        count = time.time()\n        x, y = event.x, event.y\n\n    widget.bind(\"&lt;B1-Motion&gt;\", mouse_motion)  # Hold the left mouse button and drag events\n    widget.bind(\"&lt;Button-1&gt;\", mouse_press)  # The left mouse button press event, long calculate by only once\n</code></pre>\n", "abstract": "The idea of Lo\u00efc Faure-Lacroix is useful, the following is my own simple code snippets on Python3.7.3, hope it will help: But the position of the mouse is always in the upper left corner of the window. How can I keep it unchanged? Looking forward to a better answer! Thanks to Bryan Oakley, because at the beginning I couldn't run your code on my computer, I didn't pay attention to it. Just now after the modification, it was very good to run, and the above situation would not happen (the mouse is always in the upper left corner), The updated code recently as follows:"}, {"id": 41426823, "score": 1, "vote": 0, "content": "<p>Try this, and it surely works;</p>\n<ol>\n<li><p>Create an event function to move window:</p>\n<p>def movewindow(event):\n        root.geometry('+{0}+{1}'.format(event.x_root, event.y_root))</p></li>\n<li><p>Bind window:</p>\n<p>root.bind('', movewindow)</p></li>\n</ol>\n<p>Now you can touch the the window and drag</p>\n", "abstract": "Try this, and it surely works; Create an event function to move window: def movewindow(event):\n        root.geometry('+{0}+{1}'.format(event.x_root, event.y_root)) Bind window: root.bind('', movewindow) Now you can touch the the window and drag"}, {"id": 56423312, "score": 0, "vote": 0, "content": "<p>This code is the same as Bryan's solution but it does not use overridedirect.</p>\n<p>It was tested with: python 3.7, Debian GNU/Linux 10 (buster), Gnome 3.30</p>\n<pre><code class=\"python\">import tkinter as tk\n\n\nclass App(tk.Tk):\n    def __init__(self):\n        tk.Tk.__init__(self)\n        self.floater = FloatingWindow(self)\n\n\nclass FloatingWindow(tk.Toplevel):\n    def __init__(self, *args, **kwargs):\n        tk.Toplevel.__init__(self, *args, **kwargs)\n\n        #self.overrideredirect(True)\n        self.resizable(0, 0)  # Window not resizable\n        self.wm_attributes('-type', 'splash')  # Hide title bar (Linux)\n\n        self.label = tk.Label(self, text=\"Click on the grip to move\")\n        self.grip = tk.Label(self, bitmap=\"gray25\")\n        self.grip.pack(side=\"left\", fill=\"y\")\n        self.label.pack(side=\"right\", fill=\"both\", expand=True)\n\n        self.grip.bind(\"&lt;ButtonPress-1&gt;\", self.StartMove)\n        self.grip.bind(\"&lt;ButtonRelease-1&gt;\", self.StopMove)\n        self.grip.bind(\"&lt;B1-Motion&gt;\", self.OnMotion)\n\n    def StartMove(self, event):\n        self.x = event.x\n        self.y = event.y\n\n    def StopMove(self, event):\n        self.x = None\n        self.y = None\n\n    def OnMotion(self, event):\n        deltax = event.x - self.x\n        deltay = event.y - self.y\n        x = self.winfo_x() + deltax\n        y = self.winfo_y() + deltay\n        self.geometry(\"+%s+%s\" % (x, y))\n\n\napp = App()\napp.mainloop()\n</code></pre>\n", "abstract": "This code is the same as Bryan's solution but it does not use overridedirect. It was tested with: python 3.7, Debian GNU/Linux 10 (buster), Gnome 3.30"}]}, {"link": "https://stackoverflow.com/questions/29774938/tkinter-messagebox-showinfo-doesnt-always-work", "question": {"id": "29774938", "title": "tkinter.messagebox.showinfo doesn&#39;t always work", "content": "<p>I have just started working with Python's <code>tkinter</code> GUI tool. In my code I create an simple GUI with one button and I want to show the user a <code>messagebox</code> if they click on the button.</p>\n<p>Currently, I use the <code>tkinter.messagebox.showinfo</code> method for it. I code on a Windows 7 computer using IDLE. If I run the code from IDLE everything works fine, but if I try to run it standalone in the Python 3 interpreter it doesn't work any more. Instead it logs this error to the console:</p>\n<pre><code class=\"python\">AttributeError:'module' object has no attribute 'messagebox'\n</code></pre>\n<p>Do you have any tips for me? My code is:</p>\n<pre><code class=\"python\">import tkinter\n\nclass simpleapp_tk(tkinter.Tk):\n    def __init__(self,parent):\n        tkinter.Tk.__init__(self,parent)\n        self.parent = parent\n        self.temp = False\n        self.initialize()\n\n    def initialize(self):\n        self.geometry()\n        self.geometry(\"500x250\")\n        self.bt = tkinter.Button(self,text=\"Bla\",command=self.click)\n        self.bt.place(x=5,y=5)\n    def click(self):\n        tkinter.messagebox.showinfo(\"blab\",\"bla\")\n\nif __name__ == \"__main__\":\n    app = simpleapp_tk(None)\n    app.title('my application')\n    app.mainloop()\n</code></pre>\n", "abstract": "I have just started working with Python's tkinter GUI tool. In my code I create an simple GUI with one button and I want to show the user a messagebox if they click on the button. Currently, I use the tkinter.messagebox.showinfo method for it. I code on a Windows 7 computer using IDLE. If I run the code from IDLE everything works fine, but if I try to run it standalone in the Python 3 interpreter it doesn't work any more. Instead it logs this error to the console: Do you have any tips for me? My code is:"}, "answers": [{"id": 29780454, "score": 41, "vote": 0, "content": "<p><code>messagebox</code>, along with some other modules like <code>filedialog</code>, does not automatically get imported when you <code>import tkinter</code>. Import it explicitly, using <code>as</code> and/or <code>from</code> as desired.</p>\n<pre><code class=\"python\">&gt;&gt;&gt; import tkinter\n&gt;&gt;&gt; tkinter.messagebox.showinfo(message='hi')\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nAttributeError: 'module' object has no attribute 'messagebox'\n&gt;&gt;&gt; import tkinter.messagebox\n&gt;&gt;&gt; tkinter.messagebox.showinfo(message='hi')\n'ok'\n&gt;&gt;&gt; from tkinter import messagebox\n&gt;&gt;&gt; messagebox.showinfo(message='hi')\n'ok'\n</code></pre>\n", "abstract": "messagebox, along with some other modules like filedialog, does not automatically get imported when you import tkinter. Import it explicitly, using as and/or from as desired."}, {"id": 29775261, "score": -7, "vote": 0, "content": "<p>This is case sensitive - <code>tkinter</code> should be <code>Tkinter</code> wherever it is used. I did this and was able to run your example.</p>\n", "abstract": "This is case sensitive - tkinter should be Tkinter wherever it is used. I did this and was able to run your example."}]}, {"link": "https://stackoverflow.com/questions/237155/multiple-mouse-pointers", "question": {"id": "237155", "title": "Multiple mouse pointers?", "content": "<p>Is there a way to accept input from more than one mouse separately? I'm interested in making a multi-user application and I thought it would be great if I could have 2 or more users holding wireless mice each interacting with the app individually with a separate mouse arrow.</p>\n<p>Is this something I should try to farm out to some other application/driver/os_magic? or is there a library I can use to accomplish this? Language isn't a <em>HUGE</em> deal, but C, C++, and Python are preferrable.</p>\n<p>Thanks :)</p>\n<p>edit:</p>\n<p>Found this multi-pointer toolkit for linux (it's actually a multi-pointer x server):\n<a href=\"http://wearables.unisa.edu.au/mpx/\" rel=\"noreferrer\">http://wearables.unisa.edu.au/mpx/</a></p>\n", "abstract": "Is there a way to accept input from more than one mouse separately? I'm interested in making a multi-user application and I thought it would be great if I could have 2 or more users holding wireless mice each interacting with the app individually with a separate mouse arrow. Is this something I should try to farm out to some other application/driver/os_magic? or is there a library I can use to accomplish this? Language isn't a HUGE deal, but C, C++, and Python are preferrable. Thanks :) edit: Found this multi-pointer toolkit for linux (it's actually a multi-pointer x server):\nhttp://wearables.unisa.edu.au/mpx/"}, "answers": [{"id": 262789, "score": 8, "vote": 0, "content": "<p>You could try the <a href=\"http://www.microsoft.com/downloads/details.aspx?familyid=F851122A-4925-4788-BC39-409644CE0F9B&amp;displaylang=en\" rel=\"nofollow noreferrer\">Microsoft Windows MultiPoint Software Development Kit 1.1</a></p>\n<p>or the new\n<a href=\"http://www.microsoft.com/downloads/details.aspx?FamilyID=0eb18c26-5e02-4c90-ae46-06662818f817&amp;displaylang=en\" rel=\"nofollow noreferrer\">Microsoft Windows MultiPoint Software Development Kit 1.5</a></p>\n<p>and the main <a href=\"http://www.microsoft.com/multipoint/mouse-sdk/\" rel=\"nofollow noreferrer\">Microsoft Multipoint</a> site</p>\n", "abstract": "You could try the Microsoft Windows MultiPoint Software Development Kit 1.1 or the new\nMicrosoft Windows MultiPoint Software Development Kit 1.5 and the main Microsoft Multipoint site"}, {"id": 237170, "score": 5, "vote": 0, "content": "<p>Yes.  I know of at least one program that does this, <a href=\"http://www.cs.umd.edu/hcil/kiddesign/introduction.shtml\" rel=\"nofollow noreferrer\">KidPad</a>.  I think it's written in Java and was developed by <a href=\"http://www.cs.uiowa.edu/~hourcade/\" rel=\"nofollow noreferrer\">Juan Pablo Hourcade</a>, now at the University of Iowa.  You'd have to ask him how it was implemented.</p>\n", "abstract": "Yes.  I know of at least one program that does this, KidPad.  I think it's written in Java and was developed by Juan Pablo Hourcade, now at the University of Iowa.  You'd have to ask him how it was implemented."}, {"id": 467732, "score": 2, "vote": 0, "content": "<p><a href=\"http://code.google.com/p/pymultimouse/\" rel=\"nofollow noreferrer\">http://code.google.com/p/pymultimouse/</a> is a library using windows raw input, it worked in a test with 2 mice. </p>\n", "abstract": "http://code.google.com/p/pymultimouse/ is a library using windows raw input, it worked in a test with 2 mice. "}, {"id": 237190, "score": 1, "vote": 0, "content": "<p>You could use DirectInput with C/C++ (there's probably also bindings in other languages).  You use <a href=\"http://msdn.microsoft.com/en-us/library/bb205950(VS.85).aspx\" rel=\"nofollow noreferrer\"><code>IDirectInput8::EnumDevices()</code></a> (using DX8; same function, different interface in other versions of DirectX) to get a list of all attached devices.  Then, you create the devices and poll them <a href=\"http://msdn.microsoft.com/en-us/library/bb205975(VS.85).aspx\" rel=\"nofollow noreferrer\"><code>IDirectInputDevice8::Poll()</code></a>.  This should almost definitely work with any number of mice, keyboards, and other input devices.  MSDN has really good documentation on this.</p>\n", "abstract": "You could use DirectInput with C/C++ (there's probably also bindings in other languages).  You use IDirectInput8::EnumDevices() (using DX8; same function, different interface in other versions of DirectX) to get a list of all attached devices.  Then, you create the devices and poll them IDirectInputDevice8::Poll().  This should almost definitely work with any number of mice, keyboards, and other input devices.  MSDN has really good documentation on this."}, {"id": 237410, "score": 1, "vote": 0, "content": "<p>I have this vague feeling that BeOS used to let one pair a mouse and keyboard and have separate active windows and inputs.  Wow... that was a long time ago.  I thought that it would be very interesting for \"paired\" programming.</p>\n", "abstract": "I have this vague feeling that BeOS used to let one pair a mouse and keyboard and have separate active windows and inputs.  Wow... that was a long time ago.  I thought that it would be very interesting for \"paired\" programming."}, {"id": 280552, "score": 1, "vote": 0, "content": "<p>See my answer here (avoid the JNI stuff): <a href=\"https://stackoverflow.com/questions/262125/java-multiple-mouse-inputs#263886\">How can I handle multiple mouse inputs in Java?</a></p>\n", "abstract": "See my answer here (avoid the JNI stuff): How can I handle multiple mouse inputs in Java?"}]}, {"link": "https://stackoverflow.com/questions/52581576/could-not-import-d-flask-app", "question": {"id": "52581576", "title": "Could not import &quot;D&quot;: FLASK_APP", "content": "<pre><code class=\"python\">from flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n    return 'Hello, World!'\n</code></pre>\n<p>I am new to Flask. I wrote this basic code and save it in hello.py in my D:\\Cat_vs_Dog\\scripts folder.</p>\n<p>Then in command prompt, I wrote the following commands.</p>\n<pre><code class=\"python\">C:\\Users\\Ketan Ingale&gt;set FLASK_APP=D:\\Cat_vs_Dog\\scripts\\hello.py\n\nC:\\Users\\Ketan Ingale&gt;flask run\n * Serving Flask app \"D:\\Cat_vs_Dog\\scripts\\hello.py\"\n * Environment: production\n   WARNING: Do not use the development server in a production environment.\n   Use a production WSGI server instead.\n * Debug mode: off\nUsage: flask run [OPTIONS]\n\nError: Could not import \"D\".\n</code></pre>\n<p>I am getting this error. What should I do...?</p>\n", "abstract": "I am new to Flask. I wrote this basic code and save it in hello.py in my D:\\Cat_vs_Dog\\scripts folder. Then in command prompt, I wrote the following commands. I am getting this error. What should I do...?"}, "answers": [{"id": 52581926, "score": 24, "vote": 0, "content": "<p>Remove the directory and just use the name of the file and retry.</p>\n<p>You might need to <code>CD</code> to the directory with your file in it also.</p>\n", "abstract": "Remove the directory and just use the name of the file and retry. You might need to CD to the directory with your file in it also."}, {"id": 63594826, "score": 9, "vote": 0, "content": "<pre><code class=\"python\">from flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef hello_world():\n    return 'Hello, World!'\napp.run()\n\n</code></pre>\n<br/>\nWe can simply use app.run() to solve this kind of problem.\n", "abstract": ""}, {"id": 62862462, "score": 1, "vote": 0, "content": "<p>use virtual environment.\nFollow these steps:</p>\n<ol>\n<li>use open in terminal of your compiler</li>\n</ol>\n<p>then type</p>\n<ol start=\"2\">\n<li><code>pip install virtualenv</code></li>\n<li><code>virtualenv env</code></li>\n<li><code>env\\scripts\\activate.bat</code></li>\n<li><code>pip install flask flask-sqlalchemy</code></li>\n<li><code>python hello.py</code></li>\n</ol>\n<p>Then your web server will be given.\ncopy paste in google chrome.</p>\n", "abstract": "use virtual environment.\nFollow these steps: then type Then your web server will be given.\ncopy paste in google chrome."}, {"id": 64086361, "score": 1, "vote": 0, "content": "<p>when you came into the directory using command prompt where you installed virtual environment setup in windows.</p>\n<p>Then don't use 'cd' to change the directory to switch into 'virtual environment' folder</p>\n<p>Example:</p>\n<p>use \"env\\Scripts\\activate\" instead \"cd env\\Scripts\\activate\".</p>\n<p>I hope it will help to others</p>\n", "abstract": "when you came into the directory using command prompt where you installed virtual environment setup in windows. Then don't use 'cd' to change the directory to switch into 'virtual environment' folder Example: use \"env\\Scripts\\activate\" instead \"cd env\\Scripts\\activate\". I hope it will help to others"}, {"id": 60555448, "score": 0, "vote": 0, "content": "<p>I recommend that you deploy a virtual environment on one disk and work with the application right there! and your file.py should be in this folder called \"venv\".\n<a href=\"https://flask.palletsprojects.com/en/1.1.x/installation/#install-virtualenv\" rel=\"nofollow noreferrer\">https://flask.palletsprojects.com/en/1.1.x/installation/#install-virtualenv</a></p>\n", "abstract": "I recommend that you deploy a virtual environment on one disk and work with the application right there! and your file.py should be in this folder called \"venv\".\nhttps://flask.palletsprojects.com/en/1.1.x/installation/#install-virtualenv"}, {"id": 73232232, "score": 0, "vote": 0, "content": "<p>I advise you to keep the file in the same path/location where you are running the terminal</p>\n", "abstract": "I advise you to keep the file in the same path/location where you are running the terminal"}, {"id": 71998386, "score": -1, "vote": 0, "content": "<p>If it shows an import error, it most likely means you didn't set the environment variable for FLASK_APP properly.</p>\n<p>If you're on windows, use <code>$env:FLASK_APP=\"nameofyourapp.py\"</code></p>\n<p>On Mac and Linux bash:\n<code>set FLASK_APP=nameofyourapp.py</code></p>\n<p>If it still shows the error, make sure you're in the powershell terminal not the Python one.</p>\n", "abstract": "If it shows an import error, it most likely means you didn't set the environment variable for FLASK_APP properly. If you're on windows, use $env:FLASK_APP=\"nameofyourapp.py\" On Mac and Linux bash:\nset FLASK_APP=nameofyourapp.py If it still shows the error, make sure you're in the powershell terminal not the Python one."}]}, {"link": "https://stackoverflow.com/questions/44707794/pyqt-combo-box-change-value-of-a-label", "question": {"id": "44707794", "title": "PyQt combo box change value of a label", "content": "<p>I'm using PyQt5 to make a UI to a project. </p>\n<p>I want to change the value of a label when the user changes the value of a combo box.</p>\n<p>Can anyone help me to find out wich method to use to 'trigger' the function that changes the value of the label ?</p>\n", "abstract": "I'm using PyQt5 to make a UI to a project.  I want to change the value of a label when the user changes the value of a combo box. Can anyone help me to find out wich method to use to 'trigger' the function that changes the value of the label ?"}, "answers": [{"id": 44708046, "score": 34, "vote": 0, "content": "<p>If you mean the signal of combo box, when it's value changed, you can use</p>\n<pre><code class=\"python\">QComboBox.currentTextChanged\n</code></pre>\n<p>or </p>\n<pre><code class=\"python\">QComboBox.currentIndexChanged\n</code></pre>\n<p>Everytime a combobox is changed by user, these signals will be triggered.</p>\n<p>Suppose <code>cb_1</code> is your combobox\na simple function in you parent/widget class like </p>\n<pre><code class=\"python\">def on_combobox_changed(self, value):\n    print(\"combobox changed\", value)\n    # do your code\n</code></pre>\n<p>just </p>\n<pre><code class=\"python\">cb_1.currentTextChanged.connect(self.on_combobox_changed)\n</code></pre>\n<p>try to change the combobox and see what will happen</p>\n", "abstract": "If you mean the signal of combo box, when it's value changed, you can use or  Everytime a combobox is changed by user, these signals will be triggered. Suppose cb_1 is your combobox\na simple function in you parent/widget class like  just  try to change the combobox and see what will happen"}]}, {"link": "https://stackoverflow.com/questions/19477636/does-tkinter-have-a-refresh-method", "question": {"id": "19477636", "title": "Does Tkinter have a refresh method?", "content": "<p>I am using Tkinter.</p>\n<pre><code class=\"python\">import Tkinter as tk\n\nclass App(tk.Frame):\n  def __init__(self, *args, **kwargs):\n    tk.Frame.__init__(self, *args, **kwargs)\n     ....\nroot = tk.Tk()\nroot.title(\"title\")\n\napp = App(root)\nroot.mainloop() \n</code></pre>\n<p>Does it has a refresh? Because I want to refresh my frame.\nIs <code>root.refresh()</code> is possible?</p>\n", "abstract": "I am using Tkinter. Does it has a refresh? Because I want to refresh my frame.\nIs root.refresh() is possible?"}, "answers": [{"id": 19477781, "score": 29, "vote": 0, "content": "<p>There is a <a href=\"http://epydoc.sourceforge.net/stdlib/Tkinter.Misc-class.html#update\">Tk.update()</a> and a <a href=\"http://epydoc.sourceforge.net/stdlib/Tkinter.Misc-class.html#update_idletasks\">Tk.update_idletasks()</a>. Both will force the UI to be refreshed, but depending on what you're actually trying to do it might not be what you're looking for. </p>\n", "abstract": "There is a Tk.update() and a Tk.update_idletasks(). Both will force the UI to be refreshed, but depending on what you're actually trying to do it might not be what you're looking for. "}, {"id": 62112438, "score": 4, "vote": 0, "content": "<p>It's very simple :) Create a function to refresh as given below and call it using a widget.</p>\n<pre><code class=\"python\">def refresh(self):\n    self.destroy()\n    self.__init__()\n</code></pre>\n<p>It worked for me. All you have to do is destroy your main frame <code>tk.Frame</code>and call the constructor again <code>self.__init__()</code>.</p>\n", "abstract": "It's very simple :) Create a function to refresh as given below and call it using a widget. It worked for me. All you have to do is destroy your main frame tk.Frameand call the constructor again self.__init__()."}]}, {"link": "https://stackoverflow.com/questions/2649882/can-a-native-looking-gui-be-made-with-python", "question": {"id": "2649882", "title": "Can a native-looking GUI be made with Python", "content": "<p>I haven't gotten far enough into Python to make GUIs yet, so I thought I'd ask here. Can a python app be made with the windows default style GUI, or will it have its own style? The only screenshots I've seen of a python app running with a GUI had this ugly win95 look to it.</p>\n", "abstract": "I haven't gotten far enough into Python to make GUIs yet, so I thought I'd ask here. Can a python app be made with the windows default style GUI, or will it have its own style? The only screenshots I've seen of a python app running with a GUI had this ugly win95 look to it."}, "answers": [{"id": 2649905, "score": 10, "vote": 0, "content": "<p>The \"ugly\" Windows 95 look is determined by the version of the Common Dialog library.</p>\n<p>Supplying a manifest file with the executable (probably your Python implementation) makes Windows use of visual styles, instead of the \"ugly\" look.</p>\n<p>Read more here: <a href=\"http://msdn.microsoft.com/en-us/library/ms997646.aspx\" rel=\"noreferrer\">http://msdn.microsoft.com/en-us/library/ms997646.aspx</a></p>\n", "abstract": "The \"ugly\" Windows 95 look is determined by the version of the Common Dialog library. Supplying a manifest file with the executable (probably your Python implementation) makes Windows use of visual styles, instead of the \"ugly\" look. Read more here: http://msdn.microsoft.com/en-us/library/ms997646.aspx"}, {"id": 2650115, "score": 8, "vote": 0, "content": "<p>You (and the rest of the world, really ;)) should take a look at <a href=\"http://www.cosc.canterbury.ac.nz/greg.ewing/python_gui/\" rel=\"noreferrer\">PyGUI</a>, by Greg Ewing. In his own words, it's \"a project to develop a cross-platform pythonic GUI API.\" Not only that, it attempts to generate native-looking GUIs on each of the three major platforms.</p>\n<p>When I'd last checked it, more than a year ago, it seemed dead, but now I see there was a new release on February 2010, which is great news. </p>\n", "abstract": "You (and the rest of the world, really ;)) should take a look at PyGUI, by Greg Ewing. In his own words, it's \"a project to develop a cross-platform pythonic GUI API.\" Not only that, it attempts to generate native-looking GUIs on each of the three major platforms. When I'd last checked it, more than a year ago, it seemed dead, but now I see there was a new release on February 2010, which is great news. "}, {"id": 2649904, "score": 6, "vote": 0, "content": "<p>There are Python bindings for every major toolkit: GTK+, Qt, Tk, win32/MFC (not fun to use directly), wx (which in turn uses various other toolkits), Windows.Forms (through IronPython)...so in short, yes, probably.</p>\n<p>If you define exactly what \"native\" should look like on what platform, someone can probably tell you exactly what you want. My favourite GUI toolkit is GTK (using <a href=\"http://www.pygtk.org/\" rel=\"noreferrer\">PyGTK</a>) which is native on Gnome and looks pretty good to me on Windows.</p>\n", "abstract": "There are Python bindings for every major toolkit: GTK+, Qt, Tk, win32/MFC (not fun to use directly), wx (which in turn uses various other toolkits), Windows.Forms (through IronPython)...so in short, yes, probably. If you define exactly what \"native\" should look like on what platform, someone can probably tell you exactly what you want. My favourite GUI toolkit is GTK (using PyGTK) which is native on Gnome and looks pretty good to me on Windows."}, {"id": 2649940, "score": 3, "vote": 0, "content": "<p>There are loads of <a href=\"http://wiki.python.org/moin/GuiProgramming\" rel=\"nofollow noreferrer\">Python GUI libraries</a>, among which, some support Windows. The mentionables here are <a href=\"http://www.wxpython.org/\" rel=\"nofollow noreferrer\">WxPython</a>, which despite their Win95-type screenshots <a href=\"http://juicereceiver.sourceforge.net/screenshots/index.php\" rel=\"nofollow noreferrer\">can support</a> <a href=\"http://www.wxwidgets.org/images/screens/caedium-windows.png\" rel=\"nofollow noreferrer\">native Windows widges</a>. Additionally, as Mike Graham mentioned, there is support for the great GTK+ through <a href=\"http://www.pygtk.org/\" rel=\"nofollow noreferrer\">PyWin</a>, whose Windows support has really come a long way their <a href=\"http://www.gtk.org/images/screenshots/screenshot-gimp-windows.jpg\" rel=\"nofollow noreferrer\">Window's screenshots</a> can indicate the extent to which it is well-integrated with the native widget look-and-feel. <a href=\"http://wiki.python.org/moin/PyQt\" rel=\"nofollow noreferrer\">PyQt</a> uses the QT Toolkit, which also has good windows support, and, of course, there is always the option of <a href=\"http://sourceforge.net/projects/pywin32/\" rel=\"nofollow noreferrer\">using the Win32 wrappers</a> to access the Windows GUI APIs directly (though, the APIs are quite ugly, which is not the wrappers so much as it is the Win32 APIs; this is probably only worth pursuing if you are already familiar with the Windows APIs).</p>\n<p>Two more options, somewhat more out of the box, would include leaving CPython behind and leveraging <a href=\"http://ironpython.net/\" rel=\"nofollow noreferrer\">IronPython</a> (which runs on the .NET runtime and hence has access to Windows.Forms, or, to be really obtuse <a href=\"http://www.mono-project.com/GtkSharp\" rel=\"nofollow noreferrer\">Gtk#</a> via Mono) and <a href=\"http://www.jython.org/\" rel=\"nofollow noreferrer\">Jython</a> (which runs on the JVM and can leverage either the quite messy <a href=\"http://java.sun.com/docs/books/tutorial/uiswing/\" rel=\"nofollow noreferrer\">Swing</a>, which has some native Windows widget support or <a href=\"http://www.eclipse.org/swt/\" rel=\"nofollow noreferrer\">SWT</a>, which supports native windows widgets).</p>\n<p>So, all in all, there are lots of options on Python to leverage the native Windowslibrary. </p>\n", "abstract": "There are loads of Python GUI libraries, among which, some support Windows. The mentionables here are WxPython, which despite their Win95-type screenshots can support native Windows widges. Additionally, as Mike Graham mentioned, there is support for the great GTK+ through PyWin, whose Windows support has really come a long way their Window's screenshots can indicate the extent to which it is well-integrated with the native widget look-and-feel. PyQt uses the QT Toolkit, which also has good windows support, and, of course, there is always the option of using the Win32 wrappers to access the Windows GUI APIs directly (though, the APIs are quite ugly, which is not the wrappers so much as it is the Win32 APIs; this is probably only worth pursuing if you are already familiar with the Windows APIs). Two more options, somewhat more out of the box, would include leaving CPython behind and leveraging IronPython (which runs on the .NET runtime and hence has access to Windows.Forms, or, to be really obtuse Gtk# via Mono) and Jython (which runs on the JVM and can leverage either the quite messy Swing, which has some native Windows widget support or SWT, which supports native windows widgets). So, all in all, there are lots of options on Python to leverage the native Windowslibrary. "}, {"id": 2649957, "score": 3, "vote": 0, "content": "<p>Yes, you can use PyQt, or PySide (another Qt binding), or wxPython. They all support native look &amp; feel.</p>\n<p>There's also PyGTK, but gtk apps don't to look so native ..</p>\n<p>I personally prefer Qt, so I'd suggest PyQt. If you have issues with the GPL, then you can use PySide (LGPL).</p>\n", "abstract": "Yes, you can use PyQt, or PySide (another Qt binding), or wxPython. They all support native look & feel. There's also PyGTK, but gtk apps don't to look so native .. I personally prefer Qt, so I'd suggest PyQt. If you have issues with the GPL, then you can use PySide (LGPL)."}]}, {"link": "https://stackoverflow.com/questions/3570254/in-wxpython-how-do-you-bind-a-evt-key-down-event-to-the-whole-window", "question": {"id": "3570254", "title": "In wxPython how do you bind a EVT_KEY_DOWN event to the whole window?", "content": "<p>I can bind an event to a textctrl box np.  The problem is I have to be clicked inside of the textctrl box to \"catch\" this event.  I am hoping to be able to catch anytime someone presses the Arrow keys while the main window has focus.  </p>\n<p><strong>NOT WORKING:</strong><br/></p>\n<pre><code class=\"python\"> wx.EVT_KEY_DOWN(self, self.OnKeyDown)\n</code></pre>\n<p><strong>WORKING:</strong><br/></p>\n<pre><code class=\"python\">self.NudgeTxt = wx.TextCtrl(self.panel, size=(40,20), value=str(5))\nwx.EVT_KEY_DOWN(self.NudgeTxt, self.OnKeyDown)\n</code></pre>\n<p>I am pretty sure I am missing something easy.  However am a bit stuck. </p>\n", "abstract": "I can bind an event to a textctrl box np.  The problem is I have to be clicked inside of the textctrl box to \"catch\" this event.  I am hoping to be able to catch anytime someone presses the Arrow keys while the main window has focus.   NOT WORKING: WORKING: I am pretty sure I am missing something easy.  However am a bit stuck. "}, "answers": [{"id": 3570391, "score": 21, "vote": 0, "content": "<p>Instead try binding to <code>wx.EVT_CHAR_HOOK</code></p>\n<p>e.g..</p>\n<pre><code class=\"python\">self.Bind(wx.EVT_CHAR_HOOK, self.onKey)\n\n  ...\n\ndef onKey(self, evt):\n    if evt.GetKeyCode() == wx.WXK_DOWN:\n        print \"Down key pressed\"\n    else:\n        evt.Skip()\n</code></pre>\n", "abstract": "Instead try binding to wx.EVT_CHAR_HOOK e.g.."}, {"id": 3570422, "score": 4, "vote": 0, "content": "<p>You could use EVT_CHAR_HOOK,</p>\n<pre><code class=\"python\">    self.Bind(wx.EVT_CHAR_HOOK, self.hotkey)\n\n\ndef hotkey(self, event):\n    code = event.GetKeyCode()\n    if code == wx.WXK_LEFT:  # or whatever...\n        ...\n</code></pre>\n<p>or use an accelerator table</p>\n<pre><code class=\"python\">    ac = [(wx.ACCEL_NORMAL, wx.WXK_LEFT, widget.GetId())]\n    tbl = wx.AcceleratorTable(ac)\n    self.SetAcceleratorTable(tbl)\n</code></pre>\n<p>you'll need to use a button or widgets' ID in the accelerator table, and pressing the button will trigger the widgets' event handler. </p>\n<p>If you have no widgets that you'd like their events to be triggered, and would rather some kind of \"invisible\" widget that has event bindings, then you can do this:</p>\n<pre><code class=\"python\">    ac = []\n    keys = [wx.WXK_LEFT, wx.WXK_RIGHT, wx.WXK_UP, wx.WXK_DOWN]\n    for key in keys:\n        _id = wx.NewId()\n        ac.append((wx.ACCEL_NORMAL, key, _id))\n        self.Bind(wx.EVT_MENU, self.your_function_to_call, id=_id)\n\n    tbl = wx.AcceleratorTable(ac)\n    self.SetAcceleratorTable(tbl)\n</code></pre>\n<p>I iterate over the interested keys to bind to, and create new widgets IDs for them. I then use these IDs to bind menu items to (which accelerator keys trigger) and use these IDs in the accelerator table's list of tuples.</p>\n", "abstract": "You could use EVT_CHAR_HOOK, or use an accelerator table you'll need to use a button or widgets' ID in the accelerator table, and pressing the button will trigger the widgets' event handler.  If you have no widgets that you'd like their events to be triggered, and would rather some kind of \"invisible\" widget that has event bindings, then you can do this: I iterate over the interested keys to bind to, and create new widgets IDs for them. I then use these IDs to bind menu items to (which accelerator keys trigger) and use these IDs in the accelerator table's list of tuples."}]}, {"link": "https://stackoverflow.com/questions/13141259/expandable-and-contracting-frame-in-tkinter", "question": {"id": "13141259", "title": "Expandable and contracting frame in Tkinter", "content": "<p>Does anyone know if there is already a widget/class to handle expanding/contracting a frame based on a toggled button (checkbutton) in tkinter/ttk?</p>\n<p>This question stems from my attempt to clean up a cluttered gui that has lots of options categorized by specific actions. I would like something along the lines of:</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/w53jm.jpg\"/><br/>\n<em>example found on google</em></p>\n<p>However instead of just text, allow for buttons, entries, any of tkinter's widgets. If this doesn't already exist, would it be possible/useful to create a class that inherits the tkinter Frame:</p>\n<pre><code class=\"python\">import tkinter as tk\nimport ttk\n\nclass toggledFrame(tk.Frame):\n    def __init__(self):\n        self.show=tk.IntVar()\n        self.show.set(0)\n        self.toggleButton=tk.Checkbutton(self, command=self.toggle, variable=self.show)\n        self.toggleButton.pack()\n        self.subFrame=tk.Frame(self)\n\n    def toggle(self):\n        if bool(self.show.get()):\n            self.subFrame.pack()\n        else:\n            self.subFrame.forget()\n</code></pre>\n<p><em>Note: this code is untested, just presenting concept</em></p>\n", "abstract": "Does anyone know if there is already a widget/class to handle expanding/contracting a frame based on a toggled button (checkbutton) in tkinter/ttk? This question stems from my attempt to clean up a cluttered gui that has lots of options categorized by specific actions. I would like something along the lines of: \nexample found on google However instead of just text, allow for buttons, entries, any of tkinter's widgets. If this doesn't already exist, would it be possible/useful to create a class that inherits the tkinter Frame: Note: this code is untested, just presenting concept"}, "answers": [{"id": 13169685, "score": 22, "vote": 0, "content": "<p>I am actually surprised at how close I was to getting functioning code. I decided to work on it some more and have develop a simple little class to perform exactly what I wanted (comments and suggestions on the code are welcome):</p>\n<pre><code class=\"python\">import tkinter as tk\nfrom tkinter import ttk \n\n\nclass ToggledFrame(tk.Frame):\n\n    def __init__(self, parent, text=\"\", *args, **options):\n        tk.Frame.__init__(self, parent, *args, **options)\n\n        self.show = tk.IntVar()\n        self.show.set(0)\n\n        self.title_frame = ttk.Frame(self)\n        self.title_frame.pack(fill=\"x\", expand=1)\n\n        ttk.Label(self.title_frame, text=text).pack(side=\"left\", fill=\"x\", expand=1)\n\n        self.toggle_button = ttk.Checkbutton(self.title_frame, width=2, text='+', command=self.toggle,\n                                            variable=self.show, style='Toolbutton')\n        self.toggle_button.pack(side=\"left\")\n\n        self.sub_frame = tk.Frame(self, relief=\"sunken\", borderwidth=1)\n\n    def toggle(self):\n        if bool(self.show.get()):\n            self.sub_frame.pack(fill=\"x\", expand=1)\n            self.toggle_button.configure(text='-')\n        else:\n            self.sub_frame.forget()\n            self.toggle_button.configure(text='+')\n\n\nif __name__ == \"__main__\":\n    root = tk.Tk()\n\n    t = ToggledFrame(root, text='Rotate', relief=\"raised\", borderwidth=1)\n    t.pack(fill=\"x\", expand=1, pady=2, padx=2, anchor=\"n\")\n\n    ttk.Label(t.sub_frame, text='Rotation [deg]:').pack(side=\"left\", fill=\"x\", expand=1)\n    ttk.Entry(t.sub_frame).pack(side=\"left\")\n\n    t2 = ToggledFrame(root, text='Resize', relief=\"raised\", borderwidth=1)\n    t2.pack(fill=\"x\", expand=1, pady=2, padx=2, anchor=\"n\")\n\n    for i in range(10):\n        ttk.Label(t2.sub_frame, text='Test' + str(i)).pack()\n\n    t3 = ToggledFrame(root, text='Fooo', relief=\"raised\", borderwidth=1)\n    t3.pack(fill=\"x\", expand=1, pady=2, padx=2, anchor=\"n\")\n\n    for i in range(10):\n        ttk.Label(t3.sub_frame, text='Bar' + str(i)).pack()\n\n    root.mainloop()\n</code></pre>\n<p>This code produces:<br/>\n<img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/IwGAH.png\"/></p>\n", "abstract": "I am actually surprised at how close I was to getting functioning code. I decided to work on it some more and have develop a simple little class to perform exactly what I wanted (comments and suggestions on the code are welcome): This code produces:\n"}, {"id": 13143030, "score": 0, "vote": 0, "content": "<p>To my knowledge, Tkinter/ttk does no provide such widgets. You might mimic your example (expand/collapse <strong>label</strong> list) with a <a href=\"http://docs.python.org/dev/library/tkinter.ttk.html#tkinter.ttk.Treeview\" rel=\"nofollow\"><code>tkinter.ttk.Treeview</code></a>. </p>\n<p>It is perfectly acceptable<a href=\"http://mail.python.org/pipermail/tkinter-discuss/2008-August/001602.html\" rel=\"nofollow\"><sup>1</sup></a> to develop your own widgets, and your code seems a right start.</p>\n", "abstract": "To my knowledge, Tkinter/ttk does no provide such widgets. You might mimic your example (expand/collapse label list) with a tkinter.ttk.Treeview.  It is perfectly acceptable1 to develop your own widgets, and your code seems a right start."}]}, {"link": "https://stackoverflow.com/questions/50438182/user-input-in-dialog-box", "question": {"id": "50438182", "title": "User input in dialog box", "content": "<p>Is there any library available in python for the graphical user entry input. I know about <code>tk</code> but I believe it takes some line of codes to do that. I am looking for the shortest solution.</p>\n<pre><code class=\"python\">a = input('Enter your string here:') \n</code></pre>\n<p>In place of this, I want to get a dialogue box so that user can input there.</p>\n<p>This did not serve the purpose. This only shows the dialogue box and you can't provide an input entry.</p>\n<pre><code class=\"python\">import ctypes  # An included library with Python install.   \nctypes.windll.user32.MessageBoxW(0, \"Your text\", \"Your title\", 1)\n</code></pre>\n", "abstract": "Is there any library available in python for the graphical user entry input. I know about tk but I believe it takes some line of codes to do that. I am looking for the shortest solution. In place of this, I want to get a dialogue box so that user can input there. This did not serve the purpose. This only shows the dialogue box and you can't provide an input entry."}, "answers": [{"id": 50438335, "score": 10, "vote": 0, "content": "<p>You have two choices for a solution. There are two packages you can pip to get, one is easygui, the other is easygui_qt. easygui is based on tcl, and easygui_qt is based on the qt Window manager and is a little more difficult to set up, but just as simple to use, with a few more options. </p>\n<p>All they require to use is to import the package, <code>import easygui</code>, and after that, to get a user response you would use one line...</p>\n<pre><code class=\"python\">myvar = easygui.enterbox(\"What, is your favorite color?\")\n</code></pre>\n<p>Google \"python easygui\" for more detailed info.<br/>\nYou can get easygui from <a href=\"https://pypi.org/search/?q=easygui\" rel=\"noreferrer\">pypi</a>.</p>\n", "abstract": "You have two choices for a solution. There are two packages you can pip to get, one is easygui, the other is easygui_qt. easygui is based on tcl, and easygui_qt is based on the qt Window manager and is a little more difficult to set up, but just as simple to use, with a few more options.  All they require to use is to import the package, import easygui, and after that, to get a user response you would use one line... Google \"python easygui\" for more detailed info.\nYou can get easygui from pypi."}, {"id": 50438744, "score": 7, "vote": 0, "content": "<p>I think this is the shortest you'll get without anything external:</p>\n<hr/>\n<p>To start:</p>\n<pre><code class=\"python\">from tkinter import *\nroot=Tk()\n</code></pre>\n<hr/>\n<p>Instead of <code>a=input('enter something')</code>:</p>\n<pre><code class=\"python\">a=StringVar()\nLabel(root, text='enter something').pack()\nEntry(root, textvariable=a).pack()\nButton(root, text='Ok', command=lambda:DoSomethingWithInput(a.get)).pack()\n</code></pre>\n<p>With a function <code>DoSomethingWithInput(a)</code></p>\n<hr/>\n<p>Instead of <code>print('some text')</code>:</p>\n<pre><code class=\"python\">Label(root, text='some text').pack()\nButton(root, text='Ok', command=DoSomething).pack()\n</code></pre>\n<p>With <code>DoSomething()</code> as what you do next.</p>\n", "abstract": "I think this is the shortest you'll get without anything external: To start: Instead of a=input('enter something'): With a function DoSomethingWithInput(a) Instead of print('some text'): With DoSomething() as what you do next."}, {"id": 50438570, "score": 3, "vote": 0, "content": "<p>Here is a module I created a while ago to manage basic printing and input with GUI. It uses tkinter:</p>\n<pre><code class=\"python\">from tkinter import *\n\n\ndef donothing(var=''):\n    pass\n\n\nclass Interface(Tk):\n    def __init__(self, name='Interface', size=None):\n        super(interface, self).__init__()\n        if size:\n            self.geometry(size)\n        self.title(name)\n        self.frame = Frame(self)\n        self.frame.pack()\n\n    def gui_print(self, text='This is some text', command=donothing):\n        self.frame.destroy()\n        self.frame = Frame(self)\n        self.frame.pack()\n        Label(self.frame, text=text).pack()\n        Button(self.frame, text='Ok', command=command).pack()\n\n    def gui_input(self, text='Enter something', command=donothing):\n        self.frame.destroy()\n        self.frame = Frame(self)\n        self.frame.pack()        \n        Label(self.frame, text=text).pack()\n        entry = StringVar(self)\n        Entry(self.frame, textvariable=entry).pack()\n        Button(self.frame, text='Ok', command=lambda: command(entry.get())).pack()\n\n    def end(self):\n        self.destroy()\n\n    def start(self):\n        mainloop()\n\n\n# -- Testing Stuff --\n\ndef foo(value):\n    global main\n    main.gui_print(f'Your name is {value}.', main.end)\n\n\ndef bar():\n    global main\n    main.gui_input('What is your name?', foo)\n\n\nif __name__ == '__main__':\n    main = interface('Window')\n    bar()\n    main.start()\n</code></pre>\n<p>It includes an example of how to use it.</p>\n", "abstract": "Here is a module I created a while ago to manage basic printing and input with GUI. It uses tkinter: It includes an example of how to use it."}, {"id": 67861990, "score": 1, "vote": 0, "content": "<p>Use turtle. <code>turtle.textinput(\"title\", \"prompt\")</code></p>\n<p>Here is an example:</p>\n<pre class=\"lang-py prettyprint-override\"><code class=\"python\">from turtle import textinput\n\nname = textinput(\"Name\", \"Please enter your name:\")\n\nprint(\"Hello\", name + \"!\")\n</code></pre>\n", "abstract": "Use turtle. turtle.textinput(\"title\", \"prompt\") Here is an example:"}]}, {"link": "https://stackoverflow.com/questions/19825650/python-pyqt4-how-to-detect-the-mouse-click-position-anywhere-in-the-window", "question": {"id": "19825650", "title": "Python - PyQT4 how to detect the mouse click position anywhere in the window?", "content": "<p>I have 1024x768 resolution window, when there is a click or mouse over, i want to find the x, y values. How can i do that?</p>\n<pre><code class=\"python\">import sys\nfrom PyQt4 import QtGui, QtCore\n\n\nclass Example(QtGui.QWidget):\n\n    def __init__(self):\n        super(Example, self).__init__()\n\n        self.initUI()\n\n    def initUI(self):               \n\n        qbtn = QtGui.QPushButton('Quit', self)\n        #qbtn.clicked.connect(QtCore.QCoreApplication.instance().quit)\n        qbtn.clicked.connect(self.test)\n        qbtn.resize(qbtn.sizeHint())\n        qbtn.move(50, 50)       \n\n        self.setGeometry(0, 0, 1024, 768)\n        self.setWindowTitle('Quit button')    \n        self.setWindowFlags(self.windowFlags() | QtCore.Qt.FramelessWindowHint)\n        self.show()\n\n    def test(self):\n      print \"show the position of mouse cursor in screen resolution: x is ?? , y is ??\"\n\ndef main():\n\n    app = QtGui.QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n", "abstract": "I have 1024x768 resolution window, when there is a click or mouse over, i want to find the x, y values. How can i do that?"}, "answers": [{"id": 19826293, "score": 19, "vote": 0, "content": "<pre><code class=\"python\">import sys\nfrom PyQt5 import QtWidgets, QtGui, QtCore\n\nclass Example(QtWidgets.QMainWindow):\n    def __init__(self):\n        super(Example, self).__init__()\n        self.initUI()\n    def mousePressEvent(self, QMouseEvent):\n        print(QMouseEvent.pos())\n    def mouseReleaseEvent(self, QMouseEvent):\n        cursor = QtGui.QCursor()\n        print(cursor.pos())\n    def initUI(self):\n        qbtn = QtWidgets.QPushButton('Quit', self)\n        qbtn.resize(qbtn.sizeHint())\n        qbtn.move(50, 50)\n        self.setGeometry(0, 0, 1024, 768)\n        self.setWindowTitle('Quit button')\n        self.setWindowFlags(self.windowFlags() | QtCore.Qt.FramelessWindowHint)\n        self.show()\ndef main():\n    app = QtWidgets.QApplication(sys.argv)\n    ex = Example()\n    sys.exit(app.exec_())\nif __name__ == '__main__':\n    main()\n</code></pre>\n<p><strong>Output:</strong></p>\n<pre><code class=\"python\">PyQt4.QtCore.QPoint(242, 285)\nPyQt4.QtCore.QPoint(1741, 423)\nPyQt4.QtCore.QPoint(439, 372)\n</code></pre>\n", "abstract": "Output:"}, {"id": 44380910, "score": 1, "vote": 0, "content": "<p>The other way to get (x,y) coordinates:</p>\n<pre><code class=\"python\">def mouseReleaseEvent(self, QMouseEvent):\n    print('(', QMouseEvent.x(), ', ', QMouseEvent.y(), ')')\n</code></pre>\n", "abstract": "The other way to get (x,y) coordinates:"}]}, {"link": "https://stackoverflow.com/questions/15023333/simple-tool-library-to-visualize-huge-python-dict", "question": {"id": "15023333", "title": "Simple tool/library to visualize huge python dict", "content": "<p>I have a huge dict structure like this one:</p>\n<pre><code class=\"python\">my_data = {\n    'key1': {\n        '_': 'value1': 'aaa'\n    },\n    'key2': {\n        '_': 'value2': 'bbb',\n        'key2.1': {\n            '_': 'ccc',\n            'key2.1.1': {\n                '_': 'ddd'\n            }\n        }\n        'key2.2': {\n            '_': 'eee',\n            'key2.2.1': {\n                '_': 'fff'\n            }\n            'key2.2.2': {\n                '_': 'ggg'\n            }               \n        }\n    }\n}\n</code></pre>\n<p>and so on.</p>\n<p>I want to display it to user in a kind of tree representation, using GTK, TK or anything to be able to browse it collapse and expand branches and probably search keys and values.</p>\n<p>May be I do not need to develop such a tool by hands and there is already something that can visualize this kind of data out of the box?</p>\n", "abstract": "I have a huge dict structure like this one: and so on. I want to display it to user in a kind of tree representation, using GTK, TK or anything to be able to browse it collapse and expand branches and probably search keys and values. May be I do not need to develop such a tool by hands and there is already something that can visualize this kind of data out of the box?"}, "answers": [{"id": 15024168, "score": 11, "vote": 0, "content": "<p>I do not know of a ready-to-use tool, but you could use <a href=\"https://pypi.org/project/traitsui/\" rel=\"nofollow noreferrer\">Traits UI</a> to swiftly develop your own</p>\n<pre><code class=\"python\">from enthought.traits.api \\\n    import HasTraits, Instance\n\nfrom enthought.traits.ui.api \\\n    import View, VGroup, Item, ValueEditor\n\nclass DictEditor(HasTraits):\n    Object = Instance( object )\n\n    def __init__(self, obj, **traits):\n        super(DictEditor, self).__init__(**traits)\n        self.Object = obj\n\n    def trait_view(self, name=None, view_elements=None):\n        return View(\n          VGroup(\n            Item( 'Object',\n                  label      = 'Debug',\n                  id         = 'debug',\n                  editor     = ValueEditor(),\n                  style      = 'custom',\n                  dock       = 'horizontal',\n                  show_label = False\n            ),\n          ),\n          title     = 'Dictionary Editor',\n          width     = 800,\n          height    = 600,\n          resizable = True,\n        )\n\n\ndef build_sample_data():\n    my_data = dict(zip(range(10),range(10,20)))\n    my_data[11] = dict(zip(range(10),range(10,20)))\n    my_data[11][11] = dict(zip(range(10),range(10,20)))\n    return my_data\n\n# Test\nif __name__ == '__main__':\n    my_data = build_sample_data()\n    b = DictEditor(my_data)\n    b.configure_traits()\n</code></pre>\n<p>That's it. You will have a GUI like:</p>\n<p>Traits UI uses the Model-View-Controller approach to create GUI without having the need to programatically create every widget. Here, I use the predefined ValueEditor to display arbitrary types. You can now extend it to support searching, filtering etc...<img alt=\"screenshot\" src=\"https://i.stack.imgur.com/pXyoj.png\"/></p>\n<p><strong>EDIT</strong></p>\n<p>Simple extension to support filtering:</p>\n<pre><code class=\"python\"># -*- coding: utf-8 -*-\n\"\"\"\nCreated on Fri Feb 22 12:52:28 2013\n\n@author: kranzth\n\"\"\"\nfrom enthought.traits.api \\\n    import HasTraits, Instance, Str, on_trait_change\n\nfrom enthought.traits.ui.api \\\n    import View, VGroup, Item, ValueEditor, TextEditor\n\nfrom copy import deepcopy\n\nclass DictEditor(HasTraits):\n    SearchTerm = Str()\n    Object = Instance( object )\n\n    def __init__(self, obj, **traits):\n        super(DictEditor, self).__init__(**traits)\n        self._original_object = obj\n        self.Object = self._filter(obj)\n\n    def trait_view(self, name=None, view_elements=None):\n        return View(\n          VGroup(\n            Item( 'SearchTerm',\n                  label      = 'Search:',\n                  id         = 'search',\n                  editor     = TextEditor(),\n                  #style      = 'custom',\n                  dock       = 'horizontal',\n                  show_label = True\n            ),\n            Item( 'Object',\n                  label      = 'Debug',\n                  id         = 'debug',\n                  editor     = ValueEditor(),\n                  style      = 'custom',\n                  dock       = 'horizontal',\n                  show_label = False\n            ),\n          ),\n          title     = 'Dictionary Editor',\n          width     = 800,\n          height    = 600,\n          resizable = True,\n        )\n\n    @on_trait_change(\"SearchTerm\")\n    def search(self):\n        self.Object = self._filter(self._original_object, self.SearchTerm)\n\n    def _filter(self, object_, search_term=None):\n        def has_matching_leaf(obj):\n            if isinstance(obj, list):\n                return any(\n                        map(has_matching_leaf, obj))\n            if isinstance(obj, dict):\n                return any(\n                        map(has_matching_leaf, obj.values()))\n            else:\n                try:\n                    if not str(obj) == search_term:\n                        return False\n                    return True\n                except ValueError:\n                    False\n\n        obj = deepcopy(object_)\n        if search_term is None:\n            return obj\n\n        if isinstance(obj, dict):\n            for k in obj.keys():\n                if not has_matching_leaf(obj[k]):\n                    del obj[k]\n\n            for k in obj.keys():\n                if isinstance(obj, dict):\n                    obj[k] = self._filter(obj[k], search_term)\n                elif isinstance(obj, list):\n                    filter(has_matching_leaf,obj[k])\n\n        return obj\n\n\n\ndef build_sample_data():\n    def make_one_level_dict():\n        return dict(zip(range(100),\n                        range(100,150) + map(str,range(150,200))))\n\n    my_data = make_one_level_dict()\n    my_data[11] = make_one_level_dict()\n    my_data[11][11] = make_one_level_dict()\n    return my_data\n\n# Test\nif __name__ == '__main__':\n    my_data = build_sample_data()\n    b = DictEditor(my_data)\n    b.configure_traits()\n</code></pre>\n<p>will give you a textbox with \"filter-as-you-type\". The search isn't completely correct for all cases, but you can figure out the idea.</p>\n<p>Please note that in this sample the data in the dict are partly integers and partly strings, and both types will be found.</p>\n<p><img alt=\"screenshot\" src=\"https://i.stack.imgur.com/j3cti.png\"/></p>\n", "abstract": "I do not know of a ready-to-use tool, but you could use Traits UI to swiftly develop your own That's it. You will have a GUI like: Traits UI uses the Model-View-Controller approach to create GUI without having the need to programatically create every widget. Here, I use the predefined ValueEditor to display arbitrary types. You can now extend it to support searching, filtering etc... EDIT Simple extension to support filtering: will give you a textbox with \"filter-as-you-type\". The search isn't completely correct for all cases, but you can figure out the idea. Please note that in this sample the data in the dict are partly integers and partly strings, and both types will be found. "}, {"id": 15115038, "score": 9, "vote": 0, "content": "<p>I'm finally ended up with converting my data into <code>json</code> as @PavelAnossov suggested and using <a href=\"https://github.com/mbostock/d3/wiki/Tree-Layout\" rel=\"noreferrer\">d3 Tree Layout</a>.</p>\n<p><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/56pT3.png\"/></p>\n", "abstract": "I'm finally ended up with converting my data into json as @PavelAnossov suggested and using d3 Tree Layout. "}, {"id": 35066994, "score": 9, "vote": 0, "content": "<p>There are some great answers already in here, but I believe this one qualifies as \"simple\" (it uses only python bult-in libraries tkinter and uuid).</p>\n<p>It is based on John Gaines Jr.'s answer in <a href=\"https://stackoverflow.com/questions/8574070/python-display-a-dict-of-dicts-using-a-ui-tree-for-the-keys-and-any-other-widg\">another question</a>, modified by Will Ware to support lists, modified by me to also support tuples (runs on python 3).</p>\n<p>I've also reorganized it so that you can call the viewer with something as simple as <code>tk_tree_view(data)</code>, passing in a dictionary (as in the example at the end).</p>\n<pre><code class=\"python\">import uuid\nimport tkinter as tk\nfrom tkinter import ttk\n\n\ndef j_tree(tree, parent, dic):\n    for key in sorted(dic.keys()):\n        uid = uuid.uuid4()\n        if isinstance(dic[key], dict):\n            tree.insert(parent, 'end', uid, text=key)\n            j_tree(tree, uid, dic[key])\n        elif isinstance(dic[key], tuple):\n            tree.insert(parent, 'end', uid, text=str(key) + '()')\n            j_tree(tree, uid,\n                   dict([(i, x) for i, x in enumerate(dic[key])]))\n        elif isinstance(dic[key], list):\n            tree.insert(parent, 'end', uid, text=str(key) + '[]')\n            j_tree(tree, uid,\n                   dict([(i, x) for i, x in enumerate(dic[key])]))\n        else:\n            value = dic[key]\n            if isinstance(value, str):\n                value = value.replace(' ', '_')\n            tree.insert(parent, 'end', uid, text=key, value=value)\n\n\ndef tk_tree_view(data):\n    # Setup the root UI\n    root = tk.Tk()\n    root.title(\"tk_tree_view\")\n    root.columnconfigure(0, weight=1)\n    root.rowconfigure(0, weight=1)\n\n    # Setup the Frames\n    tree_frame = ttk.Frame(root, padding=\"3\")\n    tree_frame.grid(row=0, column=0, sticky=tk.NSEW)\n\n    # Setup the Tree\n    tree = ttk.Treeview(tree_frame, columns=('Values'))\n    tree.column('Values', width=100, anchor='center')\n    tree.heading('Values', text='Values')\n    j_tree(tree, '', data)\n    tree.pack(fill=tk.BOTH, expand=1)\n\n    # Limit windows minimum dimensions\n    root.update_idletasks()\n    root.minsize(root.winfo_reqwidth(), root.winfo_reqheight())\n    root.mainloop()\n\n\nif __name__ == \"__main__\":\n    # Setup some test data\n    data = {\n        \"firstName\": \"John\",\n        \"lastName\": \"Smith\",\n        \"gender\": \"male\",\n        \"age\": 32,\n        \"address\": {\n            \"streetAddress\": \"21 2nd Street\",\n            \"city\": \"New York\",\n            \"state\": \"NY\",\n            \"postalCode\": \"10021\"},\n        \"phoneNumbers\": [\n            {\"type\": \"home\", \"number\": \"212 555-1234\"},\n            {\"type\": \"fax\",\n             \"number\": \"646 555-4567\",\n             \"alphabet\": [\n                 \"abc\",\n                 \"def\",\n                 \"ghi\"]\n             }\n        ]}\n\n    # call it with\n    tk_tree_view(data)\n</code></pre>\n<p>It looks like this:</p>\n<p><a href=\"https://i.stack.imgur.com/AwOH9.jpg\" rel=\"noreferrer\"><img alt=\"enter image description here\" src=\"https://i.stack.imgur.com/AwOH9.jpg\"/></a></p>\n", "abstract": "There are some great answers already in here, but I believe this one qualifies as \"simple\" (it uses only python bult-in libraries tkinter and uuid). It is based on John Gaines Jr.'s answer in another question, modified by Will Ware to support lists, modified by me to also support tuples (runs on python 3). I've also reorganized it so that you can call the viewer with something as simple as tk_tree_view(data), passing in a dictionary (as in the example at the end). It looks like this: "}, {"id": 31658086, "score": 3, "vote": 0, "content": "<p>Just complement @Thorsten's answer. The package <code>traits</code> has been refactored since a long time ago. The correct way to run Thorsten's code is:</p>\n<ol>\n<li>install traits module: <code>sudo apt-get install python-traitsui</code></li>\n<li><p>change the module import lines in his code to:</p>\n<pre><code class=\"python\">from traits.api \\\nimport HasTraits, Instance, Str, on_trait_change\n\nfrom traitsui.api \\\nimport View, VGroup, Item, ValueEditor, TextEditor\n</code></pre></li>\n</ol>\n", "abstract": "Just complement @Thorsten's answer. The package traits has been refactored since a long time ago. The correct way to run Thorsten's code is: change the module import lines in his code to:"}, {"id": 30906274, "score": 2, "vote": 0, "content": "<p>If you're using an IDE set a breakpoint after the dictionary is initialized and has the data you want to explore then run in debug mode.  There should be a \"Variables\" view in debug mode where you can expand and collapse the dictionary as you mentioned.</p>\n", "abstract": "If you're using an IDE set a breakpoint after the dictionary is initialized and has the data you want to explore then run in debug mode.  There should be a \"Variables\" view in debug mode where you can expand and collapse the dictionary as you mentioned."}, {"id": 33483545, "score": 2, "vote": 0, "content": "<p>This simple function prints a dictionary in table form. It can also deal with nested dictionaries. </p>\n<pre><code class=\"python\">def visualise_dict(d,lvl=0):\n\n    # go through the dictionary alphabetically \n    for k in sorted(d):\n\n        # print the table header if we're at the beginning\n        if lvl == 0 and k == sorted(d)[0]:\n            print('{:&lt;25} {:&lt;15} {:&lt;10}'.format('KEY','LEVEL','TYPE'))\n            print('-'*79)\n\n        indent = '  '*lvl # indent the table to visualise hierarchy\n        t = str(type(d[k]))\n\n        # print details of each entry\n        print(\"{:&lt;25} {:&lt;15} {:&lt;10}\".format(indent+str(k),lvl,t))\n\n        # if the entry is a dictionary\n        if type(d[k])==dict:\n            # visualise THAT dictionary with +1 indent\n            visualise_dict(d[k],lvl+1)\n</code></pre>\n<p>With a sample dictionary: </p>\n<pre><code class=\"python\">d = {}\nd.update({1:{},2:{}})\nd[1]['foo'] = {}\nd[1]['foo']['bar'] = 1\nd[2]['bar'] = 5.2\n\nvisualise_dict(d)\n</code></pre>\n<p>returns </p>\n<pre><code class=\"python\">In [1]: visualise_dict(d)\nKEY                       LEVEL           TYPE      \n-------------------------------------------------------------------------------\n1                         0               &lt;class 'dict'&gt;\n  foo                     1               &lt;class 'dict'&gt;\n    bar                   2               &lt;class 'int'&gt;\n2                         0               &lt;class 'dict'&gt;\n  bar                     1               &lt;class 'float'&gt;\n</code></pre>\n", "abstract": "This simple function prints a dictionary in table form. It can also deal with nested dictionaries.  With a sample dictionary:  returns "}, {"id": 33509729, "score": 1, "vote": 0, "content": "<p>If you use a browser with the JSONViewer extension this might work for you:</p>\n<pre><code class=\"python\">import json\nimport tempfile\nimport os\nimport subprocess\ndef view_obj(obj):\n  (f, filepath)= tempfile.mkstemp()\n  os.close(f)\n  with open(filepath, 'w') as f:\n    json.dump(obj, f)\n    subprocess.call([\"google-chrome\", filepath])\n\nview_obj({'key':'value'})  # Opens Chrome and renders JSON nicely\n</code></pre>\n", "abstract": "If you use a browser with the JSONViewer extension this might work for you:"}, {"id": 56412233, "score": 1, "vote": 0, "content": "<p>I modified Lucas's answer above so that it will accept dictionaries with mixed key types (like integers AND strings).  The way I did it was with json encoding and decoding so all the keys are strings.    </p>\n<pre><code class=\"python\">import uuid\nimport json\nimport tkinter as tk\nfrom tkinter import ttk\n\n\ndef j_tree(tree, parent, dic):\n    for key in sorted(dic.keys()):\n        uid = uuid.uuid4()\n        if isinstance(dic[key], dict):\n            tree.insert(parent, 'end', uid, text=key)\n            j_tree(tree, uid, dic[key])\n        elif isinstance(dic[key], tuple):\n            tree.insert(parent, 'end', uid, text=str(key) + '()')\n            j_tree(tree, uid,\n                   dict([(i, x) for i, x in enumerate(dic[key])]))\n        elif isinstance(dic[key], list):\n            tree.insert(parent, 'end', uid, text=str(key) + '[]')\n            j_tree(tree, uid,\n                   dict([(i, x) for i, x in enumerate(dic[key])]))\n        else:\n            value = dic[key]\n            if isinstance(value, str):\n                value = value.replace(' ', '_')\n            tree.insert(parent, 'end', uid, text=key, value=value)\n\n\ndef tk_tree_view(data):\n    # Setup the root UI\n    data = json.dumps(data)\n    data = json.loads(data) \n    root = tk.Tk()\n    root.title(\"tk_tree_view\")\n    root.columnconfigure(0, weight=1)\n    root.rowconfigure(0, weight=1)\n\n    # Setup the Frames\n    tree_frame = ttk.Frame(root, padding=\"3\")\n    tree_frame.grid(row=0, column=0, sticky=tk.NSEW)\n\n    # Setup the Tree\n    tree = ttk.Treeview(tree_frame, columns=('Values'))\n    tree.column('Values', width=100, anchor='center')\n    tree.heading('Values', text='Values')\n    j_tree(tree, '', data)\n    tree.pack(fill=tk.BOTH, expand=1)\n\n    # Limit windows minimum dimensions\n    root.update_idletasks()\n    root.minsize(root.winfo_reqwidth(), root.winfo_reqheight())\n    root.mainloop()\n\n\nif __name__ == \"__main__\":\n    # Setup some test data\n    data = {\n        \"firstName\": \"John\",\n        \"lastName\": \"Smith\",\n        \"gender\": \"male\",\n        \"age\": 32,\n        \"address\": {\n            \"streetAddress\": \"21 2nd Street\",\n            \"city\": \"New York\",\n            \"state\": \"NY\",\n            \"postalCode\": \"10021\"},\n        \"phoneNumbers\": [\n            {\"type\": \"home\", \"number\": \"212 555-1234\"},\n            {\"type\": \"fax\",\n             \"number\": \"646 555-4567\",\n             \"alphabet\": [\n                 \"abc\",\n                 \"def\",\n                 \"ghi\"]\n             }\n        ]}\n</code></pre>\n<p>I find I can paste this code into ipython.<br/>\nThen define data as my dictionary </p>\n<pre><code class=\"python\">data = [paste the big dict here]\n</code></pre>\n<p>and then call it with </p>\n<pre><code class=\"python\">tk_tree_view(data)\n</code></pre>\n<p>This kind of example really shows off the simplicity of tk.  </p>\n", "abstract": "I modified Lucas's answer above so that it will accept dictionaries with mixed key types (like integers AND strings).  The way I did it was with json encoding and decoding so all the keys are strings.     I find I can paste this code into ipython.\nThen define data as my dictionary  and then call it with  This kind of example really shows off the simplicity of tk.  "}]}, {"link": "https://stackoverflow.com/questions/8364061/how-do-you-set-the-column-width-on-a-qtreeview", "question": {"id": "8364061", "title": "How do you set the column width on a QTreeView?", "content": "<p>Bear with me, I'm still new to QT and am having trouble wrapping my brain around how it does things.</p>\n<p>I've created and populated a QTreeView with two columns:</p>\n<pre><code class=\"python\">class AppForm(QMainWindow):\n    def __init__(self, parent = None):\n        super(AppForm, self).__init__(parent)\n        self.model = QStandardItemModel()\n        self.view = QTreeView()\n        self.view.setColumnWidth(0, 800)\n        self.view.setEditTriggers(QAbstractItemView.NoEditTriggers)\n        self.view.setModel(self.model)\n        self.setCentralWidget(self.view)\n</code></pre>\n<p>Everything's working great, except the columns are extremely narrow. I hoped that setColumnWidth(0, 800) would widen the first column, but it doesn't seem to be having any effect. What's the proper method for setting column widths?</p>\n", "abstract": "Bear with me, I'm still new to QT and am having trouble wrapping my brain around how it does things. I've created and populated a QTreeView with two columns: Everything's working great, except the columns are extremely narrow. I hoped that setColumnWidth(0, 800) would widen the first column, but it doesn't seem to be having any effect. What's the proper method for setting column widths?"}, "answers": [{"id": 8364589, "score": 22, "vote": 0, "content": "<p>When you call <code>setColumnWidth</code>, Qt will do the equivalent of:</p>\n<pre><code class=\"python\">self.view.header().resizeSection(column, width)\n</code></pre>\n<p>Then, when you call <code>setModel</code>, Qt will (amongst other things) do the equivalent of:</p>\n<pre><code class=\"python\">self.view.header().setModel(model)\n</code></pre>\n<p>So the column width <em>does</em> get set - just not on the model the tree view ends up with.</p>\n<p><code>tl;dr</code>: set the column width <em>after</em> you set the model.</p>\n<p><strong>EDIT</strong></p>\n<p>Here's a simple demo script based on your example:</p>\n<pre><code class=\"python\">from PyQt4 import QtGui, QtCore\n\nclass Window(QtGui.QMainWindow):\n    def __init__(self):\n        QtGui.QMainWindow.__init__(self)\n        self.model = QtGui.QStandardItemModel()\n        self.view = QtGui.QTreeView()\n        self.view.setEditTriggers(QtGui.QAbstractItemView.NoEditTriggers)\n        self.view.setModel(self.model)\n        self.setCentralWidget(self.view)\n        parent = self.model.invisibleRootItem()\n        for item in 'One Two Three Four'.split():\n            parent.appendRow([\n                QtGui.QStandardItem(item),\n                QtGui.QStandardItem(),\n                QtGui.QStandardItem(),\n                ])\n        self.view.setColumnWidth(0, 800)\n\nif __name__ == '__main__':\n\n    import sys\n    app = QtGui.QApplication(sys.argv)\n    window = Window()\n    window.show()\n    sys.exit(app.exec_())\n</code></pre>\n", "abstract": "When you call setColumnWidth, Qt will do the equivalent of: Then, when you call setModel, Qt will (amongst other things) do the equivalent of: So the column width does get set - just not on the model the tree view ends up with. tl;dr: set the column width after you set the model. EDIT Here's a simple demo script based on your example:"}, {"id": 10959549, "score": 12, "vote": 0, "content": "<pre><code class=\"python\">self.view.resizeColumnToContents(0)\n</code></pre>\n<p><a href=\"http://doc.qt.io/qt-5/qtreeview.html#resizeColumnToContents\" rel=\"nofollow noreferrer\">This</a> makes sure that given column's width and height are set to match with content.</p>\n", "abstract": "This makes sure that given column's width and height are set to match with content."}]}, {"link": "https://stackoverflow.com/questions/362426/implementing-a-command-action-parameter-style-command-line-interfaces", "question": {"id": "362426", "title": "Implementing a &quot;[command] [action] [parameter]&quot; style command-line interfaces?", "content": "<p>What is the \"cleanest\" way to implement an command-line UI, similar to git's, for example:</p>\n<pre><code class=\"python\">git push origin/master\ngit remote add origin git://example.com master\n</code></pre>\n<p>Ideally also allowing the more flexible parsing, for example,</p>\n<pre><code class=\"python\">jump_to_folder app theappname v2\njump_to_folder app theappname source\njump_to_folder app theappname source v2\njump_to_folder app theappname build v1\njump_to_folder app theappname build 1\njump_to_folder app theappname v2 build\n</code></pre>\n<p><code>jump_to_folder</code> is the scripts name, <code>app</code> is the command, <code>theappname</code> is a \"fixed-location\" parameter, \"build\" and \"v2\" etc are arguments (For example, possible arguments would be any number/any number prefixed with a v, or build/source/tmp/config)</p>\n<p>I could just manually parse the arguments with a series of <code>if</code>/<code>else</code>/<code>elifs</code>, but there must be a more elegant way to do this?</p>\n<p>As an entirely theoretically example, I could describe the UI schema..</p>\n<pre><code class=\"python\">app:\n    fixed: application_name\n\n    optional params:\n        arg subsection:\n            \"build\"\n            \"source\"\n            \"tmp\"\n            \"config\"\n\n        arg version:\n            integer\n            \"v\" + integer\n</code></pre>\n<p>Then parse the supplied arguments though the above schema, and get a dictionary:</p>\n<pre><code class=\"python\">&gt;&gt;&gt; print schema.parse([\"app\", \"theappname\", \"v1\", \"source\"])\n{\n    \"application_name\": \"theappname\",\n    \"params\":{\n        \"subsection\": \"source\",\n        \"version\":\"v1\"\n    }\n}\n</code></pre>\n<p>Does such a system exist? If not, how would I go about implementing something along these lines?</p>\n", "abstract": "What is the \"cleanest\" way to implement an command-line UI, similar to git's, for example: Ideally also allowing the more flexible parsing, for example, jump_to_folder is the scripts name, app is the command, theappname is a \"fixed-location\" parameter, \"build\" and \"v2\" etc are arguments (For example, possible arguments would be any number/any number prefixed with a v, or build/source/tmp/config) I could just manually parse the arguments with a series of if/else/elifs, but there must be a more elegant way to do this? As an entirely theoretically example, I could describe the UI schema.. Then parse the supplied arguments though the above schema, and get a dictionary: Does such a system exist? If not, how would I go about implementing something along these lines?"}, "answers": [{"id": 10913734, "score": 17, "vote": 0, "content": "<p><a href=\"http://docs.python.org/library/argparse.html#sub-commands\" rel=\"noreferrer\">argparse</a> is perfect for this, specifically <a href=\"http://docs.python.org/library/argparse.html#sub-commands\" rel=\"noreferrer\">\"sub-commands\"</a> and positional args</p>\n<pre><code class=\"python\">import argparse\n\n\ndef main():\n    arger = argparse.ArgumentParser()\n\n    # Arguments for top-level, e.g \"subcmds.py -v\"\n    arger.add_argument(\"-v\", \"--verbose\", action=\"count\", default=0)\n\n    subparsers = arger.add_subparsers(dest=\"command\")\n\n    # Make parser for \"subcmds.py info ...\"\n    info_parser = subparsers.add_parser(\"info\")\n    info_parser.add_argument(\"-m\", \"--moo\", dest=\"moo\")\n\n    # Make parser for \"subcmds.py create ...\"\n    create_parser = subparsers.add_parser(\"create\")\n    create_parser.add_argument(\"name\")\n    create_parser.add_argument(\"additional\", nargs=\"*\")\n\n    # Parse\n    opts = arger.parse_args()\n\n    # Print option object for debug\n    print opts\n\n    if opts.command == \"info\":\n        print \"Info command\"\n        print \"--moo was %s\" % opts.moo\n\n    elif opts.command == \"create\":\n        print \"Creating %s\" % opts.name\n        print \"Additional: %s\" % opts.additional\n\n    else:\n        # argparse will error on unexpected commands, but\n        # in case we mistype one of the elif statements...\n        raise ValueError(\"Unhandled command %s\" % opts.command)\n\n\nif __name__ == '__main__':\n    main()\n</code></pre>\n<p>This can be used like so:</p>\n<pre><code class=\"python\">$ python subcmds.py create myapp v1 blah\nNamespace(additional=['v1', 'blah'], command='create', name='myapp', verbose=0)\nCreating myapp\nAdditional: ['v1', 'blah']\n$ python subcmds.py info --moo\nusage: subcmds.py info [-h] [-m MOO]\nsubcmds.py info: error: argument -m/--moo: expected one argument\n$ python subcmds.py info --moo 1\nNamespace(command='info', moo='1', verbose=0)\nInfo command\n--moo was 1\n</code></pre>\n", "abstract": "argparse is perfect for this, specifically \"sub-commands\" and positional args This can be used like so:"}, {"id": 362700, "score": 9, "vote": 0, "content": "<p>The <code>cmd</code> module would probably work well for this.</p>\n<p>Example:</p>\n<pre><code class=\"python\">import cmd\n\nclass Calc(cmd.Cmd):\n    def do_add(self, arg):\n        print sum(map(int, arg.split()))\n\nif __name__ == '__main__':\n    Calc().cmdloop()\n</code></pre>\n<p>Run it:</p>\n<pre><code class=\"python\">$python calc.py\n(Cmd) add 4 5\n9\n(Cmd) help\n\nUndocumented commands:\n======================\nadd  help\n\n(Cmd)\n</code></pre>\n<p>See the <a href=\"http://docs.python.org/library/cmd.html\" rel=\"noreferrer\">Python docs</a> or <a href=\"http://blog.doughellmann.com/2008/05/pymotw-cmd.html\" rel=\"noreferrer\">PyMOTW site</a> for more info.</p>\n", "abstract": "The cmd module would probably work well for this. Example: Run it: See the Python docs or PyMOTW site for more info."}, {"id": 362475, "score": 2, "vote": 0, "content": "<p>Straight from one of my scripts:</p>\n<pre><code class=\"python\">import sys\n\ndef prog1_func1_act1(): print \"pfa1\"\ndef prog2_func2_act2(): print \"pfa2\"\n\ncommands = {\n    \"prog1 func1 act1\": prog1_func1_act1,\n    \"prog2 func2 act2\": prog2_func2_act2\n}\n\ntry:\n    commands[\" \".join(sys.argv[1:])]()\nexcept KeyError:\n    print \"Usage: \", commands.keys()\n</code></pre>\n<p>It's a pretty quick and dirty solution, but works great for my usage. If I were to clean it up a bit, I would probably add <a href=\"http://argparse.python-hosting.com/\" rel=\"nofollow noreferrer\">argparse</a> to the mix for parsing positional and keyword arguments.</p>\n", "abstract": "Straight from one of my scripts: It's a pretty quick and dirty solution, but works great for my usage. If I were to clean it up a bit, I would probably add argparse to the mix for parsing positional and keyword arguments."}, {"id": 362476, "score": 1, "vote": 0, "content": "<p>Python has a module for parsing command line options, <a href=\"http://docs.python.org/library/optparse.html\" rel=\"nofollow noreferrer\">optparse</a>.</p>\n", "abstract": "Python has a module for parsing command line options, optparse."}, {"id": 10888310, "score": 1, "vote": 0, "content": "<p>You might want to take a look at <a href=\"http://readthedocs.org/docs/cliff/en/latest/\" rel=\"nofollow\">cliff \u2013 Command Line Interface Formulation Framework</a></p>\n", "abstract": "You might want to take a look at cliff \u2013 Command Line Interface Formulation Framework"}, {"id": 362936, "score": 0, "vote": 0, "content": "<p>Here's my suggestion.</p>\n<ol>\n<li><p>Change your grammar slightly.</p></li>\n<li><p>Use optparse.</p></li>\n</ol>\n<p>Ideally also allowing the more flexible parsing, for example,</p>\n<pre><code class=\"python\">jump_to_folder -n theappname -v2 cmd \njump_to_folder -n theappname cmd source \njump_to_folder -n theappname -v2 cmd source \njump_to_folder -n theappname -v1 cmd build \njump_to_folder -n theappname -1 cmd build \njump_to_folder -n theappname -v2 cmd build\n</code></pre>\n<p>Then you have 1 or 2 args: the command is always the first arg.  It's optional argument is always the second arg.</p>\n<p>Everything else is options, in no particular order.</p>\n", "abstract": "Here's my suggestion. Change your grammar slightly. Use optparse. Ideally also allowing the more flexible parsing, for example, Then you have 1 or 2 args: the command is always the first arg.  It's optional argument is always the second arg. Everything else is options, in no particular order."}]}, {"link": "https://stackoverflow.com/questions/18867494/differences-between-class-and-def", "question": {"id": "18867494", "title": "Differences between `class` and `def`", "content": "<p>What is the main difference between <code>class</code> and <code>def</code> in python? Can a class in python interact with django UI (buttons)?</p>\n", "abstract": "What is the main difference between class and def in python? Can a class in python interact with django UI (buttons)?"}, "answers": [{"id": 18867678, "score": 20, "vote": 0, "content": "<p><code>class</code> is used to define a class (a template from which you can instantiate objects).</p>\n<p><code>def</code> is used to define a function or a method. A method is like a function that belongs to a class.</p>\n<pre><code class=\"python\"># function\ndef double(x):\n    return x * 2\n\n# class\nclass MyClass(object):\n    # method\n    def myMethod(self):\n        print (\"Hello, World\")\n\nmyObject = MyClass()\nmyObject.myMethod()  # will print \"Hello, World\"\n\nprint(double(5))  # will print 10\n</code></pre>\n<p>No idea about the Django part of your question sorry. Perhaps it should be a separate question?</p>\n", "abstract": "class is used to define a class (a template from which you can instantiate objects). def is used to define a function or a method. A method is like a function that belongs to a class. No idea about the Django part of your question sorry. Perhaps it should be a separate question?"}, {"id": 18867565, "score": 6, "vote": 0, "content": "<p><code>class</code> defines a class.</p>\n<p><code>def</code> defines a function.</p>\n<pre><code class=\"python\">class Foo:\n    def Bar(self):\n        pass\n\ndef Baz():\n   pass\n\nf = Foo() # Making an instance of a class.\nf.Bar() # Calling a method (function) of that class.\nBaz() # calling a free function\n</code></pre>\n", "abstract": "class defines a class. def defines a function."}]}, {"link": "https://stackoverflow.com/questions/138045/is-there-something-like-pythons-getattr-in-c", "question": {"id": "138045", "title": "Is there something like Python&#39;s getattr() in C#?", "content": "<p>Is there something like <a href=\"http://effbot.org/zone/python-getattr.htm\" rel=\"noreferrer\">Python's getattr()</a> in C#? I would like to create a window by reading a list which contains the names of controls to put on the window.</p>\n", "abstract": "Is there something like Python's getattr() in C#? I would like to create a window by reading a list which contains the names of controls to put on the window."}, "answers": [{"id": 138079, "score": 13, "vote": 0, "content": "<p>There is also <a href=\"http://msdn.microsoft.com/en-us/library/66btctbe.aspx\" rel=\"noreferrer\">Type.InvokeMember</a>.</p>\n<pre><code class=\"python\">public static class ReflectionExt\n{\n    public static object GetAttr(this object obj, string name)\n    {\n        Type type = obj.GetType();\n        BindingFlags flags = BindingFlags.Instance | \n                                 BindingFlags.Public | \n                                 BindingFlags.GetProperty;\n\n        return type.InvokeMember(name, flags, Type.DefaultBinder, obj, null);\n    }\n}\n</code></pre>\n<p>Which could be used like:</p>\n<pre><code class=\"python\">object value = ReflectionExt.GetAttr(obj, \"PropertyName\");\n</code></pre>\n<p>or (as an extension method):</p>\n<pre><code class=\"python\">object value = obj.GetAttr(\"PropertyName\");\n</code></pre>\n", "abstract": "There is also Type.InvokeMember. Which could be used like: or (as an extension method):"}, {"id": 138053, "score": 5, "vote": 0, "content": "<p>Use reflection for this.</p>\n<p><a href=\"http://msdn.microsoft.com/en-us/library/system.type.getproperty.aspx\" rel=\"noreferrer\"><code>Type.GetProperty()</code></a> and <a href=\"http://msdn.microsoft.com/en-us/library/system.type.getproperty.aspx\" rel=\"noreferrer\"><code>Type.GetProperties()</code></a> each return <a href=\"http://msdn.microsoft.com/en-us/library/system.reflection.propertyinfo.aspx\" rel=\"noreferrer\"><code>PropertyInfo</code></a> instances, which can be used to read a property value on an object.</p>\n<pre><code class=\"python\">var result = typeof(DateTime).GetProperty(\"Year\").GetValue(dt, null)\n</code></pre>\n<p><a href=\"http://msdn.microsoft.com/en-us/library/system.type.getmethod.aspx\" rel=\"noreferrer\"><code>Type.GetMethod()</code></a> and <a href=\"http://msdn.microsoft.com/en-us/library/system.type.getmethods.aspx\" rel=\"noreferrer\"><code>Type.GetMethods()</code></a> each return <a href=\"http://msdn.microsoft.com/en-us/library/system.reflection.methodinfo.aspx\" rel=\"noreferrer\"><code>MethodInfo</code></a> instances, which can be used to execute a method on an object.</p>\n<pre><code class=\"python\">var result = typeof(DateTime).GetMethod(\"ToLongDateString\").Invoke(dt, null);\n</code></pre>\n<p>If you don't necessarily know the type (which would be a little wierd if you new the property name), than you could do something like this as well.</p>\n<pre><code class=\"python\">var result = dt.GetType().GetProperty(\"Year\").Invoke(dt, null);\n</code></pre>\n", "abstract": "Use reflection for this. Type.GetProperty() and Type.GetProperties() each return PropertyInfo instances, which can be used to read a property value on an object. Type.GetMethod() and Type.GetMethods() each return MethodInfo instances, which can be used to execute a method on an object. If you don't necessarily know the type (which would be a little wierd if you new the property name), than you could do something like this as well."}, {"id": 138054, "score": 1, "vote": 0, "content": "<p>Yes, you can do this...</p>\n<pre><code class=\"python\">typeof(YourObjectType).GetProperty(\"PropertyName\").GetValue(instanceObjectToGetPropFrom, null);\n</code></pre>\n", "abstract": "Yes, you can do this..."}, {"id": 138063, "score": 0, "vote": 0, "content": "<p>There's the System.Reflection.PropertyInfo class that can be created using object.GetType().GetProperties(). That can be used to probe an object's properties using strings. (Similar methods exist for object methods, fields, etc.)</p>\n<p>I don't think that will help you accomplish your goals though. You should probably just create and manipulate the objects directly. Controls have a Name property that you can set, for example.</p>\n", "abstract": "There's the System.Reflection.PropertyInfo class that can be created using object.GetType().GetProperties(). That can be used to probe an object's properties using strings. (Similar methods exist for object methods, fields, etc.) I don't think that will help you accomplish your goals though. You should probably just create and manipulate the objects directly. Controls have a Name property that you can set, for example."}]}]